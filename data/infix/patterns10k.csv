 (max(min(min(((min(max(min(v1*8, 2004), 5), (v2 + v3) + 255) - max(max(min(v4/8, 249), 0)*8, 4))/252) + -1, (((v2 + v3) - max(max(min(v4/8, 249), 0)*8, 4)) + -248)/252), (0 + ((v5 + 251)/252)) - 1) + 1, min(max(((v3 - max(max(min(v4/8, 249), 0)*8, 4)) + 255)/252, 0), ((v5 + 251)/252) + 0)) <= min(max(((v3 - max(max(min(v4/8, 249), 0)*8, 4)) + 255)/252, 0), ((v5 + 251)/252) + 0));0;2945;;;;;
 ((((v0 - v1) + 20)/9) != 0);0;445;;;;;
 ((v0*2) == (((v0*2) + ((((min((min(min((v1*2) + 1, v2)/2, v1)*2) + 1, v2)/2) - v1)*4) + 8)) - 1));0;241;;;;;
 (min(max(max(max(min(v0, 2002), 3) + -3, v1), v2 + v1), (max(min(v0, 2002), 3) + v3) + 3) == min(max(max(max(min(v0, 2002), 3) + -3, v1), v2 + v1), (max(min(v0, 2002), 3) + v3) + 3));1;96;;;;;
 ((((max(v0, 0) - v1)/3) + 3) != 0);0;479;;;;;
 (((((((v0 + v1) + 39)/32) - ((v1 + -8)/32))/36) + 1) == ((((((v0 + v1) + 39)/32) - ((v1 + -8)/32))/36) + 1));1;76;;;;8051;
 (min(v0*8, (((v1/8) + (v2*63))*8) + 485) == min(v0*8, (((v1/8) + (v2*63))*8) + 485));1;52;;;;1047998;1.047998
 ((((v0*8) + (v1*33)) - min((v2*8) - (v3*65), (min(v1*33, 32) + (v0*8)) + 23)) == (((v0*8) + (v1*33)) - min((v2*8) - (v3*65), (min(v1*33, 32) + (v0*8)) + 23)));1;95;;;;;
 (min(max(min((v0/8) + v1, 249), 0), max(min(v0/8, 256), 7) + 114) == min(max(min((v0/8) + v1, 249), 0), max(min(v0/8, 256), 7) + 114));1;63;;;;;
 ((max(min((v0 + v1)/8, 249), 0) + (v2*4)) == (max(min((v0 + v1)/8, 249), 0) + (v2*4)));1;49;;;;;
 (min(((v0 + v1) + 7)/8, ((v1/8) + (v2*32)) + 31) == min(((v0 + v1) + 7)/8, ((v1/8) + (v2*32)) + 31));1;63;;;;;
 ((-15 - max(v0, -13)) >= (((-15 - max(v0, -13)) + (max(v0, -13) + 17)) - 1));0;69;;;;;
 (0 == ((0 + ((min((max(((v0 + v1) + 23)/8, 249) - (v2*8)) - min(v1/8, 4), 3)*2) + 10)) - 1));0;193;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*2) - ((v2*2) + ((v3*17) + ((v4*9) + v5)))) == (((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*2) - ((v2*2) + ((v3*17) + ((v4*9) + v5)))));1;105;;;;;
 ((((v0*4) - (((v1 + v2) + -1)/8)) + v3) == (((v0*4) - (((v1 + v2) + -1)/8)) + v3));1;59;;;;;
 (((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3)) == ((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3)));1;80;;;;;
 (((v0*56) + (((v1 + v2)/250)*64)) == ((v0*56) + (((v1 + v2)/250)*64)));1;43;;;;;
 (max(((112 - v0)/4) + ((((v1 + v2) + 251)/63)*8), (((((v1 + v2) + 251)/63)*8) - (v0/4)) + 28) == max(((112 - v0)/4) + ((((v1 + v2) + 251)/63)*8), (((((v1 + v2) + 251)/63)*8) - (v0/4)) + 28));1;99;;;;;
 (((((((uint1)1 && ((((((min(v0, 4) + v1) + 0)*4) + 0) + -15) <= (((((min(v0, 4) + v1) + 0)*4) + 0) + -15))) && ((((((min(v0, 4) + v1) + (v2 + 3))*4) + 3) + -15) >= (((((min(v0, 4) + v1) + (((v2 + 4) + 0) - 1))*4) + ((4 + 0) - 1)) + -15))) && (v3 <= (0 + v3))) && ((v3 + 6) >= (((7 + 0) - 1) + v3))) && (((v4*2) + v5) <= ((v4*2) + v5))) && (((v4*2) + v5) >= ((v4*2) + v5)));1;282;;;;;
 ((((v0*64) + 427)/276) != 0);0;460;;;;;
 ((max(v0, 0) - ((v1*4) + v2)) == (max(v0, 0) - ((v1*4) + v2)));1;39;;;;;
 (max(min(min(((min((v3*8) + 2, v4 + v5)/4) - (((v6*12) + v1)*2)) + 7, 7 - (max(v1 - v2, -8)*2)), (0 + ((min(v2 - v1, 8)*2) + 9)) - 1) + 1, min(max(((v5/4) - (((v6*12) + v1)*2)) + 8, 0), ((min(v2 - v1, 8)*2) + 9) + 0)) <= min(max(((v5/4) - (((v6*12) + v1)*2)) + 8, 0), ((min(v2 - v1, 8)*2) + 9) + 0));0;3286;;;;;
 (min(((v0 + v1) + 68)/8, ((v0 + v1)/8) + (v2*8)) == min(((v0 + v1) + 68)/8, ((v0 + v1)/8) + (v2*8)));1;93;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((((v1 - v0)/4)*4) + v0) + 3) >= (((((v1 - v0)/4)*4) + v0) + ((4 + 0) - 1)))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3));1;159;;;;;
 ((((((max(min((v0 + v1)/63, 31), 0)*2) + v2)*4) - (v2*4)) - (max(min((v0 + v1)/63, 31), 0)*8)) == (((((max(min((v0 + v1)/63, 31), 0)*2) + v2)*4) - (v2*4)) - (max(min((v0 + v1)/63, 31), 0)*8)));1;144;;;;;
 ((((((((v0 + v1) + 39)/8) - (v1/8))*8) + 753)/697) == (((((((v0 + v1) + 39)/8) - (v1/8))*8) + 753)/697));1;37;;;;;
 ((((v0 - v1) + 81)/68) != 0);0;453;;;;;
 ((min(((v0/32) + v1)*16, ((((v2 + v0) + 31)/32)*16) + 67) + (v3*8)) == (min(((v0/32) + v1)*16, ((((v2 + v0) + 31)/32)*16) + 67) + (v3*8)));1;83;;;;;
 (min((((v0 + v1) + 63)/32)*4, (v2*4) + 35) == min((((v0 + v1) + 63)/32)*4, (v2*4) + 35));1;64;;;;;
 ((min((v0 - v1)*16, 72) + -72) == 1);0;45;;;;;
 (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 124) == min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 124));1;128;;;;;
 (min(min(v0*32, 56) + v1, max(min(v2, 990), -9) + 310) == min(min(v0*32, 56) + v1, max(min(v2, 990), -9) + 310));1;68;;;;;
 (min(max(min(((v0 + v1) + 129)/2, 999), 0), v2 + 15) == min(max(min(((v0 + v1) + 129)/2, 999), 0), v2 + 15));1;94;;;;;
 (min((v0*60) + (((v1*4) + v2)*32), (v3*8) + 140) == min((v0*60) + (((v1*4) + v2)*32), (v3*8) + 140));1;77;;;;;
 (min((max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*17)) - max(min(v1/8, 249), 0), min(v3, 6) + 7) == min((max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*17)) - max(min(v1/8, 249), 0), min(v3, 6) + 7));1;108;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 85)/84) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 85)/84));1;265;;;;;
 ((min((v0/16)*8, 4) + (v1*340)) == (min((v0/16)*8, 4) + (v1*340)));1;79;;;;;
 (min((v0/63)*8, ((((v1 + v0) + 314)/63)*8) + 29) == min((v0/63)*8, ((((v1 + v0) + 314)/63)*8) + 29));1;72;;;;;
 ((((min((((v0 + v1) + 64)/65) - (v2*4), ((v1/65) + (v3*8)) + 3) + (v3*-8))*-2) + (((v1/65)*2) + v4)) == (((min((((v0 + v1) + 64)/65) - (v2*4), ((v1/65) + (v3*8)) + 3) + (v3*-8))*-2) + (((v1/65)*2) + v4)));1;127;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 0)) + 63)/64) == (((max(v0 + v1, 2000) - min(v1, 0)) + 63)/64));1;79;;;;;
 (min((v0*4) + v1, v2 + 23) == min((v0*4) + v1, v2 + 23));1;55;;;;;
 (min(((((v0 + v1) + 1999)/2000) - (v1/2000))*256, (v2*256) + 399) == min(((((v0 + v1) + 1999)/2000) - (v1/2000))*256, (v2*256) + 399));1;82;;;;;
 ((((((v0 + v1) + 93)/2)*2) + -19) == (((((((v0 + v1) + 93)/2)*2) + -19) + (((((v0 + v1) + 1) % 2)*2) + 70)) - 1));0;185;;;;;
 ((((v0*-12)/4)*4) == (v0*-12));1;121;;;;;
 (max(min((v0 + 1009)/1004, v1), (v0 + 6)/1004) == max(min((v0 + 1009)/1004, v1), (v0 + 6)/1004));1;50;;;;;
 ((((((v0 + v1) + 351)/32) - (v2*37)) - ((v1/32) + v3)) == (((((v0 + v1) + 351)/32) - (v2*37)) - ((v1/32) + v3)));1;39;;;;;
 (((v0*44) + (min(v1*128, 124) + (v2 + v3))) == ((v0*44) + (min(v1*128, 124) + (v2 + v3))));1;48;;;;;
 (((max(min((v2*-500) + (v1 - min(v1, 4)), 496), -4)/4)*4) == max(min((v2*-500) + (v1 - min(v1, 4)), 496), -4));0;969;;;;;
 (min((v0*4) + ((v1*16) + v2), v3 + 8) == min((v0*4) + ((v1*16) + v2), v3 + 8));1;75;;;;;
 (min((v0 + v1)*4, (((v2*125) + v1)*4) + 503) == min((v0 + v1)*4, (((v2*125) + v1)*4) + 503));1;62;;;;;
 (min(((v0*256) + v1) + 245, v2) == min(((v0*256) + v1) + 245, v2));1;43;;;;;
 (((v0*16) + -558) >= ((((v0*16) + -558) + 438) - 1));0;40;;;;;
 ((((max(min((((v0 + v1) + 127)/32)*4, 246), -3) - max(min((v1/32)*4, 281), 32)) + 67)/32) == (((max(min((((v0 + v1) + 127)/32)*4, 246), -3) - max(min((v1/32)*4, 281), 32)) + 67)/32));1;248;;;;;
 (((min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, 7914)/4) - ((v2*4) + v3)) == ((min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, 7914)/4) - ((v2*4) + v3)));1;102;;;;;
 (min((v0*8) + v1, ((((v2 + v3) + 249)/250)*32) + 46) == min((v0*8) + v1, ((((v2 + v3) + 249)/250)*32) + 46));1;82;;;;;
 (((v0*2) + ((v1*87) + v2)) == ((v0*2) + ((v1*87) + v2)));1;49;;;;;
 (0 >= ((0 + ((((v0 + v1) % 8) + 220)/32)) - 1));0;40;;;;;
 (0 == ((0 + (18 - max(v0*4, 14))) - 1));0;49;;;;;
 (min(min(10 - (max((v0/63) + ((v1*2) - (((v2 + v0) + -1)/63)), -1)*8), 252 - (v3*8)), (min(((((v2 + v0) + -1)/63) - (v1*2)) - (v0/63), 1)*8) + 12) == min(min(10 - (max((v0/63) + ((v1*2) - (((v2 + v0) + -1)/63)), -1)*8), 252 - (v3*8)), (min(((((v2 + v0) + -1)/63) - (v1*2)) - (v0/63), 1)*8) + 12));1;170;;;;;
 (min(1939 - ((v0*126) + v1), min(v2, 115) + 10) == min(1939 - ((v0*126) + v1), min(v2, 115) + 10));1;559;;;;;
 ((max(min(min(v0*63, 62) + (v1 + v2), 1999), 0) + (v3*4)) == (max(min(min(v0*63, 62) + (v1 + v2), 1999), 0) + (v3*4)));1;99;;;;;
 (max(((max(v0, 0) - v1) + 1)/32, 0) >= ((max(((max(v0, 0) - v1) + 1)/32, 0) + ((max((max(v0, 0) - v1)/32, -1) - max(((max(v0, 0) - v1) + 1)/32, 0)) + 1)) - 1));0;2828;;;;;
 (((min((((v0 + v1) + 447)/32)*4, (((v1/32) + (v2*48))*4) + 115)*2) - (min(((v1/32) + (v2*48))*32, (min((((v0 + v1) + 447)/32)*4, (((v1/32) + (v2*48))*4) + -77)*8) + 609)/4)) == ((min((((v0 + v1) + 447)/32)*4, (((v1/32) + (v2*48))*4) + 115)*2) - (min(((v1/32) + (v2*48))*32, (min((((v0 + v1) + 447)/32)*4, (((v1/32) + (v2*48))*4) + -77)*8) + 609)/4)));1;168;;;;;
 ((min(min((v0*4) + v1, min(v1, v2) + 8) + 4, (((min(v0*4, (((v3*-12) + v4) - v1) + 8) + 7)/4)*4) + v1) - (v0*4)) == (min(min((v0*4) + v1, min(v1, v2) + 8) + 4, (((min(v0*4, (((v3*-12) + v4) - v1) + 8) + 7)/4)*4) + v1) - (v0*4)));1;118;;;;;
 ((v0 + -5) >= (((v0 + -5) + 15) - 1));0;33;;;;;
 (((((min((v0*-1011) + (v1 - v2), 1000) + 16)/64)*64) + (v0*1011)) == ((((min((v0*-1011) + (v1 - v2), 1000) + 16)/64)*64) + (v0*1011)));1;72;;;;;
 (((v0*16) + ((((v1 + v2)/8)*2) + ((v3*8) + v4))) == ((v0*16) + ((((v1 + v2)/8)*2) + ((v3*8) + v4))));1;65;;;;;
 (max(-1012 - (v0*8), (v0*8) + 7) >= 0);0;315;;;;;
 (min(max(min(v0 + v1, 2002), 3) + (v2*4), max(min(v0 + v1, 1745), -254) + 254) == min(max(min(v0 + v1, 2002), 3) + (v2*4), max(min(v0 + v1, 1745), -254) + 254));1;87;;;;;
 ((min(((v0*8) - (v1*1236)) - (v2*8), 1224) + (v3*-8)) == (min(((v0*8) - (v1*1236)) - (v2*8), 1224) + (v3*-8)));1;71;;;;;
 ((((((v0 + 2)/8) - (((max(min(v1, 2002), 3) + -3)/16)*2)) + 66)/64) == (((((v0 + 2)/8) - (((max(min(v1, 2002), 3) + -3)/16)*2)) + 66)/64));1;97;;;;;
 ((((max((((max(((min(((v6 % (((v7*32) + 98)/33))*33) + ((v4/2000)*32), ((((v5 + v4) + 1999)/2000)*32) + 33) + ((v6 % (((v7*32) + 98)/33))*-33)) + (32 - ((v4/2000)*32)))/11, 0)*11) + ((v6 % (((v7*32) + 98)/33))*33))*64) + (((v4/2000)*32)*64), (min(((max(((min(((v6 % (((v7*32) + 98)/33))*33) + ((v4/2000)*32), ((((v5 + v4) + 1999)/2000)*32) + 33) + ((v6 % (((v7*32) + 98)/33))*-33)) + (32 - ((v4/2000)*32)))/11, 0)*88) + ((v6 % (((v7*32) + 98)/33))*264)) + (((v4/2000)*32)*8), (min(((v6 % (((v7*32) + 98)/33))*33) + ((v4/2000)*32), ((((v5 + v4) + 1999)/2000)*32) + 33)*8) + 322)*8) + 33)*-1)/4)*4) == (max((((max(((min(((v6 % (((v7*32) + 98)/33))*33) + ((v4/2000)*32), ((((v5 + v4) + 1999)/2000)*32) + 33) + ((v6 % (((v7*32) + 98)/33))*-33)) + (32 - ((v4/2000)*32)))/11, 0)*11) + ((v6 % (((v7*32) + 98)/33))*33))*64) + (((v4/2000)*32)*64), (min(((max(((min(((v6 % (((v7*32) + 98)/33))*33) + ((v4/2000)*32), ((((v5 + v4) + 1999)/2000)*32) + 33) + ((v6 % (((v7*32) + 98)/33))*-33)) + (32 - ((v4/2000)*32)))/11, 0)*88) + ((v6 % (((v7*32) + 98)/33))*264)) + (((v4/2000)*32)*8), (min(((v6 % (((v7*32) + 98)/33))*33) + ((v4/2000)*32), ((((v5 + v4) + 1999)/2000)*32) + 33)*8) + 322)*8) + 33)*-1));0;4762;;;;;
 ((max(min(v0/8, 256), 7) + (v1*128)) == (max(min(v0/8, 256), 7) + (v1*128)));1;20;;;;;
 (((v0*-64) + ((((v1 + v2) + 7)/8) - v3)) == ((v0*-64) + ((((v1 + v2) + 7)/8) - v3)));1;559;;;;;
 (((min(max(min(v0, 999), 0) - (v1*32), (max(min(v2/2, 999), 0) + (v3*16)) + 15) + (v3*-16)) - (max(min(v2/2, 999), 0) + (v4*2))) == ((min(max(min(v0, 999), 0) - (v1*32), (max(min(v2/2, 999), 0) + (v3*16)) + 15) + (v3*-16)) - (max(min(v2/2, 999), 0) + (v4*2))));1;130;;;;;
 ((((max(min(((v0 + v1) + 31)/8, 249), 0) - max(min(v1/8, 250), 1)) + 126)/125) == (((max(min(((v0 + v1) + 31)/8, 249), 0) - max(min(v1/8, 250), 1)) + 126)/125));1;320;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 93)/86) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 93)/86));1;93;;;;;
 (max(min(max(((v0 - (v1*8)) + 31)/32, 0), ((max(v2, 0) - v1)/4) + 1), min(min((((v3 + v0) - (v1*8)) + -1)/32, ((max(v2, 0) - v1) + -3)/4), (max(v2, 0) - v1)/4) + 1) == max(min(max(((v0 - (v1*8)) + 31)/32, 0), ((max(v2, 0) - v1)/4) + 1), min(min((((v3 + v0) - (v1*8)) + -1)/32, ((max(v2, 0) - v1) + -3)/4), (max(v2, 0) - v1)/4) + 1));1;178;;;;;
 ((v0 - ((v1*4) + ((v2*60) + v3))) == (v0 - ((v1*4) + ((v2*60) + v3))));1;40;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 105)/63) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 105)/63));1;220;;;;;
 ((((((v0 + v1) + -1)/8) - (v2*125)) - (v1/8)) == (((((v0 + v1) + -1)/8) - (v2*125)) - (v1/8)));1;137;;;;;
 (min(((max(min(v0/63, 31), 0)*16) + v1)*4, (max(min(((v2 + v0) + -1)/63, 31), 0)*64) + 158) == min(((max(min(v0/63, 31), 0)*16) + v1)*4, (max(min(((v2 + v0) + -1)/63, 31), 0)*64) + 158));1;117;;;;;
 (((((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37))*4) + 579)/250) == ((((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37))*4) + 579)/250));1;228;;;;;
 (((v0*17) + ((v1/63)*8)) == ((v0*17) + ((v1/63)*8)));1;76;;;;;
 (((((((uint1)1 && ((((v0*8) + v1) + 0) <= (((v0*8) + v1) + 0))) && ((((v0*8) + v1) + 7) >= (((v0*8) + v1) + ((8 + 0) - 1)))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (((7 + 0) - 1) >= ((7 + 0) - 1)));1;141;;;;;
 (0 == ((0 + (34 - max(v0*4, 30))) - 1));0;51;;;;;
 (((max(v0 + v1, 1995) - min(v1, 3)) + 509) >= 0);1;40;;;;;
 ((((v0 + v1)/2) + (v2*24)) == (((v0 + v1)/2) + (v2*24)));1;61;;;;;
 ((((min((v0/65)*64, 4) + -6)/32) - min((min((v0/65)*64, 4) + 346)/32, ((max(min((v0/65)*64, 4) + v1, 1975) + 40)/32) - (v2*12))) == (((min((v0/65)*64, 4) + -6)/32) - min((min((v0/65)*64, 4) + 346)/32, ((max(min((v0/65)*64, 4) + v1, 1975) + 40)/32) - (v2*12))));1;124;;;;;
 (((((((v0 + v1) + 87)/8) - (v1/8)) + 44)/34) == ((((((v0 + v1) + 87)/8) - (v1/8)) + 44)/34));1;69;;;;;
 ((max(min(v0/8, 249), 0) + (v1*12)) == (max(min(v0/8, 249), 0) + (v1*12)));1;42;;;;;
 (min(((v0*-32) + v1) + 18, v2) == min(((v0*-32) + v1) + 18, v2));1;31;;;;;
 (((max(min((v0/63)*8, 285), 36)*8) + (v1*42)) == ((max(min((v0/63)*8, 285), 36)*8) + (v1*42)));1;62;;;;;
 (((v0*1004) + (max(min((v1/63)*8, 285), 36)*8)) == ((v0*1004) + (max(min((v1/63)*8, 285), 36)*8)));1;108;;;;;
 (max(2100 - max(((v0*2) + v1)*4, 2097), 97 - max(min(((v0*2) + v1)*4, 98), 94)) == max(2100 - max(((v0*2) + v1)*4, 2097), 97 - max(min(((v0*2) + v1)*4, 98), 94)));1;114;;;;;
 (((min((min((v3*504) + (((v2/2) + (max(v4/504, -1)*504)) + 754), ((v1 + v2) + 501)/2)*-1) + (((v1 + v2) + 485)/2), 496)/8)*8) == min((min((v3*504) + (((v2/2) + (max(v4/504, -1)*504)) + 754), ((v1 + v2) + 501)/2)*-1) + (((v1 + v2) + 485)/2), 496));0;1938;;;;;
 (min(max(min(v0 + v1, 1872), -127) + 127, v2) == min(max(min(v0 + v1, 1872), -127) + 127, v2));1;60;;;;;
 (min(((((v0 + v1) + 314)/63) - (v1/63))*2, (v2*2) + 1) == min(((((v0 + v1) + 314)/63) - (v1/63))*2, (v2*2) + 1));1;100;;;;;
 (((v0 - (((v1 + v2) + 15)/4)) + v3) == ((v0 - (((v1 + v2) + 15)/4)) + v3));1;58;;;;;
 (min(((v0 + v1) + 15)/8, v2 + 11) == min(((v0 + v1) + 15)/8, v2 + 11));1;51;;;;;
 (min(v0*125, v1 + -125) == min(v0*125, v1 + -125));1;2031;;;;;
 (((max(v0, 249)*8) - ((v1*267) + v2)) == ((max(v0, 249)*8) - ((v1*267) + v2)));1;41;;;;;
 ((((min(v0/8, 0)/16)*16) + -10) == (((((min(v0/8, 0)/16)*16) + -10) + ((v1*16) + 39)) - 1));0;142;;;;;
 (max((v0 + 5)/253, 0) >= ((max((v0 + 5)/253, 0) + max(((v0 + 257)/253) - max((v0 + 5)/253, 0), 0)) - 1));0;683;;;;;
 ((min((((v0/63)*2) + v1)*4, ((((v2 + v0) + 62)/63)*8) + 4) - (((((v0/63)*2) + v3) + v1)*4)) == (min((((v0/63)*2) + v1)*4, ((((v2 + v0) + 62)/63)*8) + 4) - (((((v0/63)*2) + v3) + v1)*4)));1;109;;;;;
 (min((v0*8) + 12, v1) == min((v0*8) + 12, v1));1;55;;;;;
 (0 == ((0 + ((((v0 + v1) % 2) + 251)/4)) - 1));0;61;;;;;
 (min((v0*128) + ((v1/2) + (((min(((((v2 + v1) + 5)/2) - (v0*128)) - (v1/2), (v3*504) + 119) + 95)/72)*72)), v4 + 24) == min((v0*128) + ((v1/2) + (((min(((((v2 + v1) + 5)/2) - (v0*128)) - (v1/2), (v3*504) + 119) + 95)/72)*72)), v4 + 24));1;165;;;;;
 (((((v0 + v1) + 3)/4) - ((v2*63) + v3)) == ((((v0 + v1) + 3)/4) - ((v2*63) + v3)));1;44;;;;;
 (min(max(min(v0, 1999), 0), max(min(v0, 1984), -15) + 15) == min(max(min(v0, 1999), 0), max(min(v0, 1984), -15) + 15));1;85;;;;;
 (((min(max(min((v3*64) + ((v2/8) + 63), min(((v1 + v2) + 7)/8, 249)), 0) - max(min((v3*64) + (v2/8), 249), 0), 30)/3)*3) == min(max(min((v3*64) + ((v2/8) + 63), min(((v1 + v2) + 7)/8, 249)), 0) - max(min((v3*64) + (v2/8), 249), 0), 30));0;2321;;;;;
 (((((((v0 + v1) + 5)/2) - (v1/2)) + 65)/63) == ((((((v0 + v1) + 5)/2) - (v1/2)) + 65)/63));1;85;;;;;
 ((max(min((v0/500)*8, 36), 5) + ((v1/5)*11)) == (max(min((v0/500)*8, 36), 5) + ((v1/5)*11)));1;93;;;;;
 (((v0 + 6)/252) == ((((v0 + 6)/252) + ((((v0 + 6) % 252) + 255)/252)) - 1));0;779;;;;;
 (((v0*132) + ((v1/63)*8)) == ((v0*132) + ((v1/63)*8)));1;28;;;;;
 ((((v0 - v1)/4) + 10) != 0);0;391;;;;;
 (min(((v0*116) + v1) + 104, v2) == min(((v0*116) + v1) + 104, v2));1;46;;;;;
 (((v0*8) + (((min(((v1 + v2) + -1)/65, min((v3*2) + ((v2/65) + (v0*4)), ((v2/65) + (min(min((v0*4) + 3, v4)/4, v0)*4)) + 2) + 1) + (v3*-2))*-2) + (((v2/65)*2) + v5))) == ((v0*8) + (((min(((v1 + v2) + -1)/65, min((v3*2) + ((v2/65) + (v0*4)), ((v2/65) + (min(min((v0*4) + 3, v4)/4, v0)*4)) + 2) + 1) + (v3*-2))*-2) + (((v2/65)*2) + v5))));1;157;;;;;
 ((max(min(((v0 + v1) + -1)/8, ((v1/8) + (v2*4)) + 3), 0) - min((v1/8) + (v2*4), 249)) == (max(min(((v0 + v1) + -1)/8, ((v1/8) + (v2*4)) + 3), 0) - min((v1/8) + (v2*4), 249)));1;88;;;;;
 (min(((v0*-32) + v1) + 18, v2) == min(((v0*-32) + v1) + 18, v2));1;46;;;;;
 (max(min((v0 + 69)/64, v1), (v0 + 1)/64) == max(min((v0 + 69)/64, v1), (v0 + 1)/64));1;51;;;;;
 ((((min((v2*1088) + (min(v1, 0)*8), (min((v2*136) + min(v1, 0), v3 + 12)*8) + 4)*-1)/4)*4) == (min((v2*1088) + (min(v1, 0)*8), (min((v2*136) + min(v1, 0), v3 + 12)*8) + 4)*-1));0;1736;;;;;
 (((((v0*4) + v1)*2) + -2) >= ((((((v0*4) + v1)*2) + -2) + 2) - 1));0;71;;;;;
 (((max(v0, 233)*2) + -705) == ((((max(v0, 233)*2) + -705) + (708 - (max(v0, 233)*2))) - 1));0;106;;;;;
 (((v0 + 11)/3) != 0);0;378;;;;;
 (min((v0*8) + 441, v1) == min((v0*8) + 441, v1));1;41;;;;;
 (((((v0 - v1)*4) + 762)/707) != 0);0;551;;;;;
 (min((v0*668) + v1, min(v2 + v1, 2668) + -668) == min((v0*668) + v1, min(v2 + v1, 2668) + -668));1;43;;;;;
 (((v0/2) + (((min((v1*128) + 127, v2) + -2)/4)*4)) == ((v0/2) + (((min((v1*128) + 127, v2) + -2)/4)*4)));1;88;;;;;
 (min(500 - (((v0*16) + v1)*4), v2 - (((v3*125) + ((v0*16) + v1))*4)) == min(500 - (((v0*16) + v1)*4), v2 - (((v3*125) + ((v0*16) + v1))*4)));1;93;;;;;
 ((((((((v0 + v1) + 15)/16) - ((v1 + -2)/16))*2) + 69)/65) == (((((((v0 + v1) + 15)/16) - ((v1 + -2)/16))*2) + 69)/65));1;68;;;;;
 (min((v0*156) + (min(v1*8, 148) + ((v2/250)*32)), ((((v3 + v2) + 249)/250)*32) + 46) == min((v0*156) + (min(v1*8, 148) + ((v2/250)*32)), ((((v3 + v2) + 249)/250)*32) + 46));1;93;;;;;
 (min(max(v0 + v1, -8) + 17, v2) == min(max(v0 + v1, -8) + 17, v2));1;77;;;;;
 (((v0 + 253)/251) == ((v0 + 253)/251));1;43;;;;;
 ((((((max(min(v0 + v1, 1996), -3) + 11)/4) - ((max(min(v1, 2000), 1) + -5)/4))/63) + 1) == (((((max(min(v0 + v1, 1996), -3) + 11)/4) - ((max(min(v1, 2000), 1) + -5)/4))/63) + 1));1;142;;;;;
 ((((v0 + -102)/4) + (v1*4)) == (((v0 + -102)/4) + (v1*4)));1;65;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*16) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*16) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*16) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*16) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*16) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*16) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*16) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*16) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))]))));1;203;;;;;
 (min(((v0 + v1) + -1021)/2, v2 + -7) == min(((v0 + v1) + -1021)/2, v2 + -7));1;37;;;;;
 (min(((v0 + v1) + 127)/32, ((v1/32) + (v2*16)) + 8) == min(((v0 + v1) + 127)/32, ((v1/32) + (v2*16)) + 8));1;55;;;;;
 (((max(v0, 0) - v1) + 7) != 0);0;421;;;;;
 (min(max(((v0 - v1) + 33)/2, 0), (min((((((v2 + v3) + 43)/4)*4) - (v4*130)) - ((v3/4)*4), 94)/2) + 18) == min(max(((v0 - v1) + 33)/2, 0), (min((((((v2 + v3) + 43)/4)*4) - (v4*130)) - ((v3/4)*4), 94)/2) + 18));1;110;;;;;
 (((v0*4) + ((v1/32) + (v2*4))) == ((v0*4) + ((v1/32) + (v2*4))));1;53;;;;;
 ((((v0 - (v1*16)) - (v2*8)) - max(min((v3 + v4)/2, 968), -31)) == (((v0 - (v1*16)) - (v2*8)) - max(min((v3 + v4)/2, 968), -31)));1;95;;;;;
 (min((v0*2) + v1, v2 + 4) == min((v0*2) + v1, v2 + 4));1;50;;;;;
 (max((v0*8) + v1, (max(min(v2/2, 1006), 7)*8) + 5) == max((v0*8) + v1, (max(min(v2/2, 1006), 7)*8) + 5));1;60;;;;;
 ((((110 - min(((v0/63) + (v1*11))*64, (min(((v0/63) + (v1*11))*8, ((((v2 + v0) + -1)/63)*8) + 12)*8) + 11))/4) + (min((((v2 + v0) + -1)/63)*8, (((v0/63) + (v1*11))*8) + 76)*2)) == (((110 - min(((v0/63) + (v1*11))*64, (min(((v0/63) + (v1*11))*8, ((((v2 + v0) + -1)/63)*8) + 12)*8) + 11))/4) + (min((((v2 + v0) + -1)/63)*8, (((v0/63) + (v1*11))*8) + 76)*2)));1;165;;;;;
 (((min((v0*32) + ((((v1/63) + (v2*2))*2)*32), (min(min(min((v0*4) + ((((v1/63) + (v2*2))*2)*4), (min(((v3 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 4)/4, v0 + (((v1/63) + (v2*2))*2))*4, (min(((v3 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 4)*8) + 28)/4)*4) == min((v0*32) + ((((v1/63) + (v2*2))*2)*32), (min(min(min((v0*4) + ((((v1/63) + (v2*2))*2)*4), (min(((v3 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 4)/4, v0 + (((v1/63) + (v2*2))*2))*4, (min(((v3 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 4)*8) + 28));1;206;;;;;
 (min(max(v0, 0), (v1*4) + 2) == min(max(v0, 0), (v1*4) + 2));1;44;;;;;
 ((((v0*32) + (v1 + v2)) + -1) >= (((((v0*32) + (v1 + v2)) + -1) + 37) - 1));0;708;;;;;
 ((max(v0*16, 47) + (v1*4)) == (max(v0*16, 47) + (v1*4)));1;39;;;;;
 (((((v0/((v1/128) + 1))*32)/2)*2) == ((v0/((v1/128) + 1))*32));1;55;;;;;
 (((((v0 % ((v1 + 67)/64))*-256)/16)*16) == ((v0 % ((v1 + 67)/64))*-256));1;49;;;;;
 (((v0*16) + (((v1 + v2)/4) + (v3*8))) == ((v0*16) + (((v1 + v2)/4) + (v3*8))));1;40;;;;;
 (min(min(v0*56, 164) + v1, (v2*32) + 60) == min(min(v0*56, 164) + v1, (v2*32) + 60));1;49;;;;;
 (max(min(min(min((((v2 + v3) - max(min(v1/4, 500)*4, 1)) + -3)/4, ((max(min(((v1 + 255)/4)*4, 1995), -4) - max(min(v1/4, 500)*4, 1)) + 2)/4), (min(max(min(((v1 + 255)/4)*4, 1995), -4) + 2, v2 + v3) - max(min(v1/4, 500)*4, 1))/4), (0 + ((v4 + 9)/4)) - 1) + 1, min(max(((v3 - max(min(v1/4, 500)*4, 1))/4) + 1, 0), ((v4 + 9)/4) + 0)) <= min(max(((v3 - max(min(v1/4, 500)*4, 1))/4) + 1, 0), ((v4 + 9)/4) + 0));0;3998;;;;;
 (((v0*508) + (max(min(v1 + v2, 1999), 9) + (v3*4))) == ((v0*508) + (max(min(v1 + v2, 1999), 9) + (v3*4))));1;61;;;;;
 (max((v0/4) + -30, ((v0 + -113)/4) + (v1*16)) == max((v0/4) + -30, ((v0 + -113)/4) + (v1*16)));1;58;;;;;
 (min(((((v0 + v1) + -1)/65) - (v1/65)) + -15, v2) == min(((((v0 + v1) + -1)/65) - (v1/65)) + -15, v2));1;69;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*16) + v3)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*16) + v3)));1;85;;;;;
 ((min(max(v0 + v1, -1)*4, -1) + -9) == (((min(max(v0 + v1, -1)*4, -1) + -9) + (12 - min(max(v0 + v1, -1)*4, -1))) - 1));0;116;;;;;
 ((((max(min(v0, 121), -128) - max(min(v0, 249), 0))*8) + 1080) >= 0);0;754;;;;;
 (min(max(((v0 + -1)/4) - min(v1/4, 0), -1), v2) == min(max(((v0 + -1)/4) - min(v1/4, 0), -1), v2));1;61;;;;;
 (min(max(((v0 - max(min(v1, 1999), 0)) + 3)/4, 0), (v2 + 3)/4) == min(max(((v0 - max(min(v1, 1999), 0)) + 3)/4, 0), (v2 + 3)/4));1;79;;;;;
 ((min(max(v0, -30)*16, 61) + -65) >= (((min(max(v0, -30)*16, 61) + -65) + (70 - min(max(v0, -30)*16, 61))) - 1));0;94;;;;;
 (((v0*6) + ((((v1*76) + v2)*2) + v3)) == ((v0*6) + ((((v1*76) + v2)*2) + v3)));1;29;;;;;
 (min(max(max(min((((v0 + v1) + -1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8), min(((v0 + v1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8), ((((max((((v3 + v2) + 64)/65)*64, 1975) + 40)/32) - ((min((v2/65)*64, 4) + -6)/32))*8) + 8) + -1), ((v1 + -1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8)), -1), (v4*8) + 7) == min(max(max(min((((v0 + v1) + -1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8), min(((v0 + v1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8), ((((max((((v3 + v2) + 64)/65)*64, 1975) + 40)/32) - ((min((v2/65)*64, 4) + -6)/32))*8) + 8) + -1), ((v1 + -1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8)), -1), (v4*8) + 7));1;309;;;;;
 (min(min((v0/8) + ((((v1 - (v0/8)) + 5)/8)*8), v1 + 5) + (min(v1 - (v0/8), -2) + (min(((v1 - (v0/8)) + 5)/4, 1)*4)), v1) == min(min((v0/8) + ((((v1 - (v0/8)) + 5)/8)*8), v1 + 5) + (min(v1 - (v0/8), -2) + (min(((v1 - (v0/8)) + 5)/4, 1)*4)), v1));1;121;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 19)/9) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 19)/9));1;150;;;;;
 ((((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 133)/64) == (((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 133)/64));1;276;;;;;
 (min((v0*116) + v1, min(v2*8, 1885) + 114) == min((v0*116) + v1, min(v2*8, 1885) + 114));1;75;;;;;
 (((max(max(min(v0/2, 1006), 7)*8, 115)/4) + (v1*8)) == ((max(max(min(v0/2, 1006), 7)*8, 115)/4) + (v1*8)));1;70;;;;;
 (max((min(max(min(((v0 + v1) + 15)/8, 249), 0) - max(min(v1/8, 254), 5), v2) + 9)/4, v3) == max((min(max(min(((v0 + v1) + 15)/8, 249), 0) - max(min(v1/8, 254), 5), v2) + 9)/4, v3));1;290;;;;;
 ((v0 + v1) >= (((v0 + v1) + 127) - 1));0;40;;;;;
 ((min((v0/16)*8, 4) + (v1*508)) == (min((v0/16)*8, 4) + (v1*508)));1;65;;;;;
 (min((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*8, v2 + 111) == min((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*8, v2 + 111));1;76;;;;;
 ((((v0/32) + v1) - min((((v2 + v0) + 127)/32) - (v3*37), (v0/32) + 29)) == (((v0/32) + v1) - min((((v2 + v0) + 127)/32) - (v3*37), (v0/32) + 29)));1;74;;;;;
 (((((((v0 + v1) + 64)/65) - (v1/65)) + 6)/4) == ((((((v0 + v1) + 64)/65) - (v1/65)) + 6)/4));1;69;;;;;
 ((max(min(v0, 999), 0) + (v1*64)) == (max(min(v0, 999), 0) + (v1*64)));1;84;;;;;
 (min(v0*8, ((v1*1008) + v2) + 992) == min(v0*8, ((v1*1008) + v2) + 992));1;50;;;;;
 ((min(v0 + 247, v1) - ((v2*4) + ((v3*128) + v0))) == (min(v0 + 247, v1) - ((v2*4) + ((v3*128) + v0))));1;65;;;;;
 (min(((v0 + v1) + -1)/32, ((v1/32) + ((v2/12)*12)) + 11) == min(((v0 + v1) + -1)/32, ((v1/32) + ((v2/12)*12)) + 11));1;82;;;;;
 (((v0/32) + (v1*5)) == ((v0/32) + (v1*5)));1;30;;;;;
 (min((min((v0*-4) + ((v1*-32) + ((v2*-128) + v3)), 4) + (((min((((((v2*4) + v1)*8) + v0)*4) + 4, v3) + -1)/4)*4)) + v4, v5) == min((min((v0*-4) + ((v1*-32) + ((v2*-128) + v3)), 4) + (((min((((((v2*4) + v1)*8) + v0)*4) + 4, v3) + -1)/4)*4)) + v4, v5));1;118;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 63)/64) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 63)/64));1;160;;;;;
 ((v0 - (((v1*2) + v2)*500)) == (v0 - (((v1*2) + v2)*500)));1;26;;;;;
 (min(min(v0, 263) + 11, v1) == min(min(v0, 263) + 11, v1));1;37;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/125) + 1) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/125) + 1));1;269;;;;;
 (min(((v0 + v1) + -1)/2, ((v1/2) + (min((min((v2*-250) + v3, 249)/4)*4, 246) + (v2*250))) + 3) == min(((v0 + v1) + -1)/2, ((v1/2) + (min((min((v2*-250) + v3, 249)/4)*4, 246) + (v2*250))) + 3));1;62;;;;;
 (((v0 + 670)/668) == ((v0 + 670)/668));1;34;;;;;
 (((((((uint1)1 && (((0 + (((v0*128) + v1) + -6)) + -131) <= ((-6 + ((v0*128) + v1)) + -131))) && (((3 + (((v0*128) + v1) + 128)) + -131) >= ((((11 + -6) - 1) + (((v0*128) + v1) + 127)) + -131))) && (((v2 + v3) + -3) <= ((v2 + v3) + -3))) && (((v2 + v3) + -3) >= ((v2 + v3) + -3))) && (v4 <= v4)) && (v4 >= v4));1;190;;;;;
 (((((v0 - v1)*8) + 919)/812) == ((((v0 - v1)*8) + 919)/812));1;77;;;;;
 (((max(min(v0/2, 999), 0)*2) + -4) == ((((max(min(v0/2, 999), 0)*2) + -4) + ((v1*2) + 12)) - 1));0;150;;;;;
 (((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))/4) + 1) == ((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))/4) + 1));1;76;;;;;
 (((max(min((v1*-32) + (v2 - v3), 20), -12)/2)*2) == max(min((v1*-32) + (v2 - v3), 20), -12));0;873;;;;;
 (min(max(min(v0 + v1, 1999), 0)/16, ((max(min(v1, 2002), 3) + -19)/16) + ((v2/4)*4)) == min(max(min(v0 + v1, 1999), 0)/16, ((max(min(v1, 2002), 3) + -19)/16) + ((v2/4)*4)));1;84;;;;;
 (0 == ((0 + ((((v0 + v1) % 8) + 156)/32)) - 1));0;1247;;;;;
 ((min((((min(v0*500, v1 + -500) + v2) % 8) + 499)/8, (v3*16) + 15) - (((v3*4) + v4)*4)) == (min((((min(v0*500, v1 + -500) + v2) % 8) + 499)/8, (v3*16) + 15) - (((v3*4) + v4)*4)));1;101;;;;;
 ((min(max(min(v0, 250), 1), max(min(((min(v1, 57) + v2) + -113)/8, 249), 0) + 128) - (max(min(((min(v1, 57) + v2) + -113)/8, 249), 0) + (v3*16))) == (min(max(min(v0, 250), 1), max(min(((min(v1, 57) + v2) + -113)/8, 249), 0) + 128) - (max(min(((min(v1, 57) + v2) + -113)/8, 249), 0) + (v3*16))));1;140;;;;;
 (max(min(61 - (v0/4), (0 + 22) - 1) + 1, min(max(((0 - v0)/4) + 1, 0), 22 + 0)) <= min(max(((0 - v0)/4) + 1, 0), 22 + 0));0;914;;;;;
 ((max(((min(v0*32, 93) + v1)/4) - (((v1 + 7)/4) + (v0*8)), 0) + 12) <= 1024);0;861;;;;;
 (((max(min(v0, -8), -135)*2) + 16) == ((((max(min(v0, -8), -135)*2) + 16) + (-14 - (max(min(v0, -8), -135)*2))) - 1));0;104;;;;;
 (min(max(min(v0 + v1, 1875), -124), (max(min(v0 + v1, 1999), 0) + ((v2/4)*4)) + 3) == min(max(min(v0 + v1, 1875), -124), (max(min(v0 + v1, 1999), 0) + ((v2/4)*4)) + 3));1;71;;;;;
 ((v0 + -9) == (((v0 + -9) + 3) - 1));0;45;;;;;
 ((min(v0/8, 4) + (v1*32)) == (min(v0/8, 4) + (v1*32)));1;48;;;;;
 ((((v0*250)/2)*2) == (v0*250));1;17;;;;;
 (min(((max(min(v0 + v1, 2002), 3) + -3)/16)*16, v2 + 18) == min(((max(min(v0 + v1, 2002), 3) + -3)/16)*16, v2 + 18));1;72;;;;;
 ((min(max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*63), max(min(v1/8, 256), 7) + 55) - (max(min(v1/8, 256), 7) + (v3*35))) == (min(max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*63), max(min(v1/8, 256), 7) + 55) - (max(min(v1/8, 256), 7) + (v3*35))));1;135;;;;;
 ((((min(v0, 249)*4) + v1)*2) == (((min(v0, 249)*4) + v1)*2));1;43;;;;;
 (0 == ((0 + ((max(min(v0, 1009), 10)/2) + -3)) - 1));0;72;;;;;
 (((((((uint1)1 && ((0 + (v0 + -3)) <= (v0 + -1))) && ((3 + (v0 + 61)) >= (v0 + 64))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3));1;112;;;;;
 ((((v0/4) + v1) - min((((v2 + v0) + 3)/4) - (v3*8), (v0/4) + 7)) == (((v0/4) + v1) - min((((v2 + v0) + 3)/4) - (v3*8), (v0/4) + 7)));1;66;;;;;
 (min((v0*3) + v1, (((v2*2) + ((v3*9) + v4))*8) + 6) == min((v0*3) + v1, (((v2*2) + ((v3*9) + v4))*8) + 6));1;61;;;;;
 ((((v0/8)*8) + (((((max(min((v1*-16) + v2, 15)*-1, (v1*16) + ((v0/8) - (((v3 + v0) + 7)/8)))*-8) + 10)/66)*66) + (v1*128))) == (((v0/8)*8) + (((((max(min((v1*-16) + v2, 15)*-1, (v1*16) + ((v0/8) - (((v3 + v0) + 7)/8)))*-8) + 10)/66)*66) + (v1*128))));1;134;;;;;
 (min((v0*4) + (v1 + v2), v1 + v3) == min((v0*4) + (v1 + v2), v1 + v3));1;86;;;;;
 (((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 375)/33) == ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 375)/33));1;204;;;;;
 (min((v0*20) + (((v1*4) + v2)*8), (min(((v3 + v4) + 251)/63, ((v1*4) + v2) + 1)*8) + 9) == min((v0*20) + (((v1*4) + v2)*8), (min(((v3 + v4) + 251)/63, ((v1*4) + v2) + 1)*8) + 9));1;112;;;;;
 (min(((v0*2) + v1) + 1, v2) == min(((v0*2) + v1) + 1, v2));1;63;;;;;
 (((((v0/63)*2) + v1)*4) == ((((v0/63)*2) + v1)*4));1;37;;;;;
 (min((((v0*4) + v1)*4) + -21, v2) == min((((v0*4) + v1)*4) + -21, v2));1;48;;;;;
 ((max(min(v0, 218), -31) - ((v1*4) + v2)) == (max(min(v0, 218), -31) - ((v1*4) + v2)));1;51;;;;;
 (((max((max(min(v0*8, 4004), 5) + -13)/2, 0)/63) + (v1*8)) == ((max((max(min(v0*8, 4004), 5) + -13)/2, 0)/63) + (v1*8)));1;61;;;;;
 (((v0 + 9)/5) != 0);0;2725;;;;;
 (((min(v0*32, 111) + ((v1 + v2)/2)) + 140) == ((min(v0*32, 111) + ((v1 + v2)/2)) + 140));1;65;;;;;
 ((max(min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 990) + 11), 2) - (max(min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 997) + 11), 9) + (v3*4))) == (max(min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 990) + 11), 2) - (max(min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 997) + 11), 9) + (v3*4))));1;189;;;;;
 (max(-10 - max(v0*8, -9), min(v0*-8, 9) + -10) == max(-10 - max(v0*8, -9), min(v0*-8, 9) + -10));1;58;;;;;
 ((v0 - (v1*532)) == (v0 - (v1*532)));1;26;;;;;
 ((((v0*8) - (v1*84)) - (((v2*20) + v3)*8)) == (((v0*8) - (v1*84)) - (((v2*20) + v3)*8)));1;61;;;;;
 (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*4) + 10) == ((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*4) + 10));1;111;;;;;
 ((v0 + -9) >= (((v0 + -9) + (min((v1 + v2) - v3, -10) + 11)) - 1));1;117;;;;;
 ((((max(min(v0 + v1, 1997), -2) - max(min(v1, 2006), 7)) + 1009)/1000) == (((max(min(v0 + v1, 1997), -2) - max(min(v1, 2006), 7)) + 1009)/1000));1;138;;;;;
 ((((v0 + -8)/32) + (v1*3)) == (((v0 + -8)/32) + (v1*3)));1;34;;;;;
 (((v0/501) + 1) != 0);0;294;;;;;
 (min((((v0 + v1) + 3)/4) - (v1/4), v2 + 31) == min((((v0 + v1) + 3)/4) - (v1/4), v2 + 31));1;61;;;;;
 (max(((v0 + v1) + v2) + 9, v1) == max(((v0 + v1) + v2) + 9, v1));1;44;;;;;
 (((v0 + 46)/38) != 0);0;406;;;;;
 ((((max(v0, -1) - v1) + 505)/501) == (((max(v0, -1) - v1) + 505)/501));1;161;;;;;
 ((max(v0, 37) + (v1*4)) == (max(v0, 37) + (v1*4)));1;66;;;;;
 ((((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1283)/668) == (((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1283)/668));1;218;;;;;
 ((max((((max(v0*8, 244)/4)*-4) + ((v0*8) + v1)) - (min(v0*8, 244) + v1), -242) + 258) <= 1024);0;1083;;;;;
 (((((v0 - v1)*8) + 1542)/990) != 0);0;544;;;;;
 ((((min(max(min(((v0 + v1) + 7)/8, 249), 0)*8, 1962) - max(max(min(v1/8, 256), 7)*8, 75)) + 388)/256) == (((min(max(min(((v0 + v1) + 7)/8, 249), 0)*8, 1962) - max(max(min(v1/8, 256), 7)*8, 75)) + 388)/256));1;134;;;;;
 (((max(min((v2*-16) + (((max(v3, -1) + 1)*-16) + (max(min((v4 + min(v5*128, v6 + -128))/2, 968), -31) - max(min((v4 + min(v5*128, v6 + -128))/2, 999), 0))), -16), -32)/2)*2) == max(min((v2*-16) + (((max(v3, -1) + 1)*-16) + (max(min((v4 + min(v5*128, v6 + -128))/2, 968), -31) - max(min((v4 + min(v5*128, v6 + -128))/2, 999), 0))), -16), -32));0;3001;;;;;
 (((v0 + 679)/672) == ((v0 + 679)/672));1;29;;;;;
 ((((v0*-1024)/32)*32) == (v0*-1024));1;43;;;;;
 ((min((((v0 + v1) + 7)/8) - (v2*126), (v1/8) + 125) - ((v1/8) + (v3*33))) == (min((((v0 + v1) + 7)/8) - (v2*126), (v1/8) + 125) - ((v1/8) + (v3*33))));1;87;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 28)/17) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 28)/17));1;77;;;;;
 ((min(v0 + 127, v1) - ((v2*2) + ((v3*32) + v0))) == (min(v0 + 127, v1) - ((v2*2) + ((v3*32) + v0))));1;638;;;;;
 (((((((uint1)1 && ((v0 + -4) <= ((0 + v0) + -4))) && ((v0 + 121) >= ((((126 + 0) - 1) + v0) + -4))) && (((((0*4) + v1) + 0) + -4) <= ((((0*4) + 0) + v1) + -4))) && (((((249*4) + v1) + 3) + -4) >= ((((((250 + 0) - 1)*4) + ((4 + 0) - 1)) + v1) + -4))) && (v2 <= v2)) && (v2 >= v2));1;196;;;;;
 ((((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 685)/668) == (((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 685)/668));1;136;;;;;
 ((((v0*16) + 286)/253) != 0);0;502;;;;;
 (((min((((v0 + v1) + -1)/63) - (v2*12), (v1/63) + 11)*-2) + ((((v1/63) + (v3*6))*2) + ((v4*4) + v5))) == ((min((((v0 + v1) + -1)/63) - (v2*12), (v1/63) + 11)*-2) + ((((v1/63) + (v3*6))*2) + ((v4*4) + v5))));1;107;;;;;
 ((min(v0/8, 0) + (v1*4)) == (min(v0/8, 0) + (v1*4)));1;65;;;;;
 (min(((v0*8) + v1) + 6, v2) == min(((v0*8) + v1) + 6, v2));1;54;;;;;
 (min(v0*4, (v1*4) + 7) == min(v0*4, (v1*4) + 7));1;42;;;;;
 ((((max((max(min(min(max(v7*63, -5), (v7*63) + 29) + min(max(((v5 + v6) + 7)/8, 249), (min(v6/8, 0) + (v8*126)) + 125), 370), 121) + max(min((max(min(min(max(v7*63, -5) + (((min(v7*63, -5) + 67)/34)*34), (v7*63) + 29) + min(max(((v5 + v6) + 7)/8, 249) + -125, min(v6/8, 0) + (v8*126)), 213), -36)*-1) + 213, (max(min(min(max(v7*63, -5), (v7*63) + 29) + min(max(((v5 + v6) + 7)/8, 249), (min(v6/8, 0) + (v8*126)) + 125), 369), 120) - max(min(min(max(v7*63, -5) + (((min(v7*63, -5) + 67)/34)*34), (v7*63) + 29) + min(max(((v5 + v6) + 7)/8, 249), (min(v6/8, 0) + (v8*126)) + 125), 338), 89)) + -31), -1))*8, 962)*-1)/4)*4) == (max((max(min(min(max(v7*63, -5), (v7*63) + 29) + min(max(((v5 + v6) + 7)/8, 249), (min(v6/8, 0) + (v8*126)) + 125), 370), 121) + max(min((max(min(min(max(v7*63, -5) + (((min(v7*63, -5) + 67)/34)*34), (v7*63) + 29) + min(max(((v5 + v6) + 7)/8, 249) + -125, min(v6/8, 0) + (v8*126)), 213), -36)*-1) + 213, (max(min(min(max(v7*63, -5), (v7*63) + 29) + min(max(((v5 + v6) + 7)/8, 249), (min(v6/8, 0) + (v8*126)) + 125), 369), 120) - max(min(min(max(v7*63, -5) + (((min(v7*63, -5) + 67)/34)*34), (v7*63) + 29) + min(max(((v5 + v6) + 7)/8, 249), (min(v6/8, 0) + (v8*126)) + 125), 338), 89)) + -31), -1))*8, 962)*-1));0;5952;;;;;
 (min(((v0 + v1) + -41)/8, ((v1/8) + (v2*8)) + -5) == min(((v0 + v1) + -41)/8, ((v1/8) + (v2*8)) + -5));1;51;;;;;
 (min((v0*2) + v1, v2 + 27) == min((v0*2) + v1, v2 + 27));1;40;;;;;
 (((((((uint1)1 && (((0 + (v0 + -11)) + -3) <= (((0 + v0) + -10) + -4))) && (((3 + (v0 + 996)) + -3) >= (((3 + (v0 + 996)) + 1) + -4))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (0 >= 0));1;152;;;;;
 (((v0*2) - ((((v1*16) + v2)*2) + v3)) == ((v0*2) - ((((v1*16) + v2)*2) + v3)));1;57;;;;;
 ((min(v0*8, 117) + (v1 + v2)) == (min(v0*8, 117) + (v1 + v2)));1;30;;;;;
 (((v0/64) + 1) != 0);0;282;;;;;
 (v0 != 0);0;396;;;;;
 ((((v0 + v1)/65) + 1) < (((v0 + 1) + v1)/65));0;65;;;;;
 (min((((v0 + v1) + 63)/16)*4, ((((v0 + v1)/16) + v2)*4) + 3) == min((((v0 + v1) + 63)/16)*4, ((((v0 + v1)/16) + v2)*4) + 3));1;108;;;;;
 (((max(v0*16, 10)*-2) - (v1*15)) == ((max(v0*16, 10)*-2) - (v1*15)));1;43;;;;;
 (min(v0*8, (min(((v1*31) + v2)*8, (v2*8) + 434) + (v3*496)) + 50) == min(v0*8, (min(((v1*31) + v2)*8, (v2*8) + 434) + (v3*496)) + 50));1;74;;;;;
 (min(36 - (v0*19), (((((v1 + v2) + 127)/32)*4) - ((v0*19) + v3)) + 31) == min(36 - (v0*19), (((((v1 + v2) + 127)/32)*4) - ((v0*19) + v3)) + 31));1;90;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 14)/9) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 14)/9));1;594;;;;;
 (((v0*348) + (v1*8)) == ((v0*348) + (v1*8)));1;34;;;;;
 ((((v0 - v1) + 136)/79) == (((v0 - v1) + 136)/79));1;45;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*32, 3986), -13) - max(min((v1/16)*32, 4044), 45)) + 124)/63) == (((max(min((((v0 + v1) + -1)/16)*32, 3986), -13) - max(min((v1/16)*32, 4044), 45)) + 124)/63));1;245;;;;;
 (max(v0*8, ((v1*8) + v2) + 107) == max(v0*8, ((v1*8) + v2) + 107));1;62;;;;;
 (min(((v0*19) + v1) + 6, v2) == min(((v0*19) + v1) + 6, v2));1;51;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 127)/126) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 127)/126));1;232;;;;;
 ((v0 - ((((v1*9) + ((v2*3) + v3))*4) + ((v4*108) + v5))) == (v0 - ((((v1*9) + ((v2*3) + v3))*4) + ((v4*108) + v5))));1;95;;;;;
 ((max(min(v0/8, 249), 0) + (v1*8)) == (max(min(v0/8, 249), 0) + (v1*8)));1;47;;;;;
 (((min(((v3 % ((v4 + 19)/17))*136) + (((max(min(v2/8, 249), 0)/8)*8) + 119), (max(min(((v1 + v2) + 7)/8, 249), 0)/8)*8)/8)*8) == min(((v3 % ((v4 + 19)/17))*136) + (((max(min(v2/8, 249), 0)/8)*8) + 119), (max(min(((v1 + v2) + 7)/8, 249), 0)/8)*8));0;2058;;;;;
 ((min((((v0 + v1) + 5)/2) - ((v2/2)*126), (v1/2) + 121) - ((v1/2) + (v3*4))) == (min((((v0 + v1) + 5)/2) - ((v2/2)*126), (v1/2) + 121) - ((v1/2) + (v3*4))));1;86;;;;;
 (((((((uint1)1 && ((v0 + -3) <= (v0 + -3))) && ((v0 + 2) >= (v0 + 2))) && ((((v1 + v2) + 0) + 1) <= ((v1 + v2) + -3))) && ((((v1 + v2) + 3) + 1) >= ((v1 + v2) + 1))) && (0 <= 0)) && (2 >= 2));0;148;;;;;
 (((max(min(v0/8, 249), 0)*8) + -6) == ((((max(min(v0/8, 249), 0)*8) + -6) + ((v1*8) + 13)) - 1));0;165;;;;;
 ((min(v0, 33) + -33) == (((min(v0, 33) + -33) + (36 - min(v0, 33))) - 1));0;84;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + -5) <= ((((v0*4) + 0) + v1) + -5))) && (((((v0*4) + v1) + 3) + -5) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -5))) && ((v2 + -1) <= (-1 + v2))) && ((v2 + 256) >= (((9 + -1) - 1) + ((250 + v2) - 1)))) && (0 <= 0)) && (13 >= ((14 + 0) - 1)));1;218;;;;;
 (((v0*2) + ((v1/16) + (v2*8))) == ((v0*2) + ((v1/16) + (v2*8))));1;57;;;;;
 (((((v0 + v1) + 129)/2) - ((v2*4) + (((v0 + v1)/2) + (v3*32)))) == ((((v0 + v1) + 129)/2) - ((v2*4) + (((v0 + v1)/2) + (v3*32)))));1;83;;;;;
 (min(max(max(v0 + -42, v1), v2 + v1), v3 + 6) == min(max(max(v0 + -42, v1), v2 + v1), v3 + 6));1;49;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*116)) == (max(min(v0 + v1, 1999), 0) + (v2*116)));1;63;;;;;
 (max(min(min(min(min(1999, 1999), min(v3 + v4, 2000) + -1), min(max(min(v1/8, 254), 5)*8, (v2*8) + 55) + -52), (((v6*8) + -52) + ((min(v5, 10)*8) + 59)) - 1) + 1, min(max(max(max(0, 0), max(v4, 0)), (v6*8) + -52), ((min(v5, 10)*8) + 59) + ((v6*8) + -52))) <= min(max(max(max(0, 0), max(v4, 0)), (v6*8) + -52), ((min(v5, 10)*8) + 59) + ((v6*8) + -52)));0;2803;;;;;
 ((((min(((v3 % (((v4*512) + 1485)/756))*756) + (((v2/500)*512) + 26), (((v1 + v2) + -1)/500)*512)*-1)/4)*4) == (min(((v3 % (((v4*512) + 1485)/756))*756) + (((v2/500)*512) + 26), (((v1 + v2) + -1)/500)*512)*-1));0;2059;;;;;
 (min(((v0*2) + ((v1*8) + v2))*8, (v3*8) + 92) == min(((v0*2) + ((v1*8) + v2))*8, (v3*8) + 92));1;82;;;;;
 (max(((28 - v0)/4) + (((max((((v1 + v2) + 64)/65)*64, 1975) + 40)/32)*8), ((((max((((v1 + v2) + 64)/65)*64, 1975) + 40)/32)*8) - (v0/4)) + 7) == max(((28 - v0)/4) + (((max((((v1 + v2) + 64)/65)*64, 1975) + 40)/32)*8), ((((max((((v1 + v2) + 64)/65)*64, 1975) + 40)/32)*8) - (v0/4)) + 7));1;153;;;;;
 ((v0 + 6) == (v0 + 6));1;13;;;;;
 (((v0*16) + (max(min((v1*64) + v2, 999), 0) - max(min((v1*64) + v2, 936), -63))) == ((v0*16) + (max(min((v1*64) + v2, 999), 0) - max(min((v1*64) + v2, 936), -63))));1;223;;;;;
 (min(((v0 + v1) + 7)/2, (((v0 + v1)/2) + (((((v0 + v1) % 2) + 7)/4)*4)) + -1) == min(((v0 + v1) + 7)/2, (((v0 + v1)/2) + (((((v0 + v1) % 2) + 7)/4)*4)) + -1));1;83;;;;;
 (((((((uint1)1 && ((max(v0 + 5, v1) + -1) <= (v0 + -1))) && ((v0 + 4) >= (v0 + 4))) && (((0 + (((min(v2*36, 96) + (v3*12)) + v4) + -5)) + 4) <= (((min(v2*36, 96) + (v3*12)) + v4) + -1))) && (((3 + (((min(v2*36, 96) + (v3*12)) + v4) + 8)) + 4) >= (((min(v2*36, 96) + (v3*12)) + v4) + 15))) && (0 <= 0)) && (2 >= 2));0;281;;;;;
 (max(-905 - (v0*64), (v0*64) + 164) >= 0);0;515;;;;;
 ((((v0/2) - (v1*3)) - ((v0 + -1)/2)) == (((v0/2) - (v1*3)) - ((v0 + -1)/2)));1;38;;;;;
 (min(((v0 + v1) + 7)/8, v2) == min(((v0 + v1) + 7)/8, v2));1;40;;;;;
 ((((v0*8) + 133)/126) != 0);0;829;;;;;
 (min(((((v0 + v1) + 3)/4) - (v1/4)) + -127, v2) == min(((((v0 + v1) + 3)/4) - (v1/4)) + -127, v2));1;58;;;;;
 (((v0*36) + (((v1 + v2)/133)*8)) == ((v0*36) + (((v1 + v2)/133)*8)));1;65;;;;;
 (((v0/32) + (v1*15)) == ((v0/32) + (v1*15)));1;72;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*8) - (v2*17)) - ((max(min(v1/8, 249), 0)/8)*8)) == ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*8) - (v2*17)) - ((max(min(v1/8, 249), 0)/8)*8)));1;105;;;;;
 ((((((v0 + v1) + 251)/63)*2) - (v2/4)) == (((((v0 + v1) + 251)/63)*2) - (v2/4)));1;54;;;;;
 (((v0 + v1)/16) >= (((((v0 - 1) + v1)/16) + 1) + 1));0;74;;;;;
 (max(min((v0*4) - min(((max(min(min(((v1 + v2) + 499)/500, 3)*8, 22), -7)*8) - (v3*90)) - v4, -134), 223), min(v5 + v4, 3) + 220) == max(min((v0*4) - min(((max(min(min(((v1 + v2) + 499)/500, 3)*8, 22), -7)*8) - (v3*90)) - v4, -134), 223), min(v5 + v4, 3) + 220));1;152;;;;;
 (min((v0 + 40)/32, (v1*4) + (((v0 + -995)/32) + (v2*2))) == min((v0 + 40)/32, (v1*4) + (((v0 + -995)/32) + (v2*2))));1;84;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8)) + 6)/4) == ((((((v0 + v1) + -1)/8) - (v1/8)) + 6)/4));1;68;;;;;
 (min((v0*8) + ((v1*128) + v2), v3 + 10) == min((v0*8) + ((v1*128) + v2), v3 + 10));1;48;;;;;
 (max((((v0 + v1) + 15)/4) - ((v2*12) + v3), ((((v0 + v1) + 7)/4) - ((v4*36) + ((v1/4) + (v2*12)))) + 2) == max((((v0 + v1) + 15)/4) - ((v2*12) + v3), ((((v0 + v1) + 7)/4) - ((v4*36) + ((v1/4) + (v2*12)))) + 2));1;117;;;;;
 (min(max(v0, 0)*8, ((v1*155) + (v2*8)) + 143) == min(max(v0, 0)*8, ((v1*155) + (v2*8)) + 143));1;60;;;;;
 ((((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 160)/127) == (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 160)/127));1;108;;;;;
 ((max(min(v0/2, 999), 0) + (v1*63)) == (max(min(v0/2, 999), 0) + (v1*63)));1;36;;;;;
 ((((min(v0 + 124, v1)*8) - (v2*500)) - (v0*8)) == (((min(v0 + 124, v1)*8) - (v2*500)) - (v0*8)));1;57;;;;;
 ((((((((v0 + v1) + 63)/8) - (v1/8))*8) + 768)/708) == (((((((v0 + v1) + 63)/8) - (v1/8))*8) + 768)/708));1;84;;;;;
 (min(v0*4, (v1*4) + 9) == min(v0*4, (v1*4) + 9));1;48;;;;;
 (min(min(v0*8, ((v1*124) + (v2*8)) + 16) + 102, v3) == min(min(v0*8, ((v1*124) + (v2*8)) + 16) + 102, v3));1;65;;;;;
 (((v0*128) + ((v1*252) + v2)) == ((v0*128) + ((v1*252) + v2)));1;58;;;;;
 (((((((v0 + v1) + 63)/8) - (v1/8)) + 66)/65) == ((((((v0 + v1) + 63)/8) - (v1/8)) + 66)/65));1;58;;;;;
 (min(((max(min(v0, 3994), -5) + 19)/2) - ((max(min(v1, 4012), 13) + -13)/2), v2) == min(((max(min(v0, 3994), -5) + 19)/2) - ((max(min(v1, 4012), 13) + -13)/2), v2));1;79;;;;;
 (((v0 + 256)/251) == ((v0 + 256)/251));1;35;;;;;
 (min(max(min(v0, 1037), 38) + 459, v1) == min(max(min(v0, 1037), 38) + 459, v1));1;60;;;;;
 ((max(min(v0/2, 999), 0) + (v1*252)) == (max(min(v0/2, 999), 0) + (v1*252)));1;44;;;;;
 ((((max(min(v0 + v1, 1998), -1) - max(min(v1, 1999), 0)) + 131)/128) == (((max(min(v0 + v1, 1998), -1) - max(min(v1, 1999), 0)) + 131)/128));1;150;;;;;
 (min((min((v0 + v1) - (v2*252), (min(v3*64, 188) + v1) + 64) - (v3*64)) - v1, (v4*4) + 6) == min((min((v0 + v1) - (v2*252), (min(v3*64, 188) + v1) + 64) - (v3*64)) - v1, (v4*4) + 6));1;95;;;;;
 (min(v0*2, (((v1*30) + v2)*2) + 47) == min(v0*2, (((v1*30) + v2)*2) + 47));1;49;;;;;
 (min((v0*76) + v1, v2 + 83) == min((v0*76) + v1, v2 + 83));1;46;;;;;
 (((((((uint1)1 && (v0 <= v0)) && ((v0 + 3) >= (v0 + 3))) && ((0 + ((v1*8) + 1)) <= ((v1*8) + 1))) && ((3 + ((v1*8) + 5)) >= ((v1*8) + 8))) && (v2 <= v2)) && (v2 >= v2));1;118;;;;;
 (min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 997) + 11) == min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 997) + 11));1;69;;;;;
 ((((v0 + -2)/16) + (v1*3)) == (((v0 + -2)/16) + (v1*3)));1;46;;;;;
 ((-63 - max(v0, -63)) >= (((-63 - max(v0, -63)) + (max(v0, -63) + 67)) - 1));0;55;;;;;
 (((((((uint1)1 && ((0 + ((((v0*4) + v1)*8) + v2)) <= ((((v0*4) + v1)*8) + v2))) && ((3 + (((((v0*4) + v1)*8) + v2) + 4)) >= (((((v0*4) + v1)*8) + v2) + 7))) && ((v3/65) <= (v3/65))) && (((v3 + 1064)/65) >= ((v3 + 1064)/65))) && (v4 <= v4)) && (v4 >= v4));1;174;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4));1;183;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 50)/23) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 50)/23));1;272;;;;;
 (((((v0 % ((v1 + 559)/504))*-504)/4)*4) == ((v0 % ((v1 + 559)/504))*-504));1;75;;;;;
 ((v0 + -99) >= (((v0 + -99) + (min(v1 - (max(((v2/63)*8) + ((v3*55) - (v4*8)), -9)*8), -147) + 148)) - 1));1;193;;;;;
 ((0 - (v0*24)) > (191 - (v0*24)));0;28;;;;;
 ((max((((v0 + v1) + -1)/4)*4, -3) - ((v2*4) + v3)) == (max((((v0 + v1) + -1)/4)*4, -3) - ((v2*4) + v3)));1;71;;;;;
 (min(((v0 + v1) + 180)/8, v2 + 12) == min(((v0 + v1) + 180)/8, v2 + 12));1;52;;;;;
 (min(max(v0*4, -15) + 16, min(((v1*4) + v2)*4, 1999) + (((v3 + 19)/4)*4)) == min(max(v0*4, -15) + 16, min(((v1*4) + v2)*4, 1999) + (((v3 + 19)/4)*4)));1;104;;;;;
 (((v0/4) + 1) != 0);0;346;;;;;
 (min((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3), v4 + 4) == min((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3), v4 + 4));1;80;;;;;
 (((max(min((v1*-48) + ((v2*-16) + v3), 12), -4)/2)*2) == max(min((v1*-48) + ((v2*-16) + v3), 12), -4));0;995;;;;;
 (((((((v0 + v1) + 7)/8) - ((v1 + -1)/8))/128) + 1) == ((((((v0 + v1) + 7)/8) - ((v1 + -1)/8))/128) + 1));1;70;;;;;
 ((((v0 - v1) + 168)/116) == (((v0 - v1) + 168)/116));1;82;;;;;
 (min((v0*4) + v1, ((((v2 + v3) + 64)/65)*8) + 16) == min((v0*4) + v1, ((((v2 + v3) + 64)/65)*8) + 16));1;63;;;;;
 (min((v0*64) + v1, v2) == min((v0*64) + v1, v2));1;39;;;;;
 (((((((uint1)1 && ((((((v0*4) + v1) + -3) + 0) + -45) <= (((((v0*4) + 0) + v1) + -3) + -45))) && ((((((v0*4) + v1) + ((4 + -3) - 1)) + 3) + -45) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((4 + -3) - 1)) + -45))) && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && (v2 <= v2)) && (v2 >= v2));1;201;;;;;
 ((max((v0*24) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 476) + (v4*4)) == (max((v0*24) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 476) + (v4*4)));1;1094;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((v1 + v2)*4) + 0) + -36) <= ((((v1 + v2)*4) + 0) + -36))) && (((((v1 + v2)*4) + 3) + -36) >= ((((v1 + v2)*4) + ((4 + 0) - 1)) + -36))) && (((v3*73) + v4) <= ((v3*73) + v4))) && (((v3*73) + v4) >= ((v3*73) + v4)));1;178;;;;;
 (min((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*8, (v2*8) + 66) == min((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*8, (v2*8) + 66));1;263;;;;;
 (max(min(max((v0/8)*8, 83), (((v0/8) + v1)*8) + 169), min(((v0/8) + v1)*8, 1914) + 169) == max(min(max((v0/8)*8, 83), (((v0/8) + v1)*8) + 169), min(((v0/8) + v1)*8, 1914) + 169));1;105;;;;;
 (min(min((((v0 + v1) - (((v2*64) + v3)*2)) + 10)/4, (min(v4 - v3, 64)/2) + -1), (min(v4 - v3, 64) + -1)/2) == min(min((((v0 + v1) - (((v2*64) + v3)*2)) + 10)/4, (min(v4 - v3, 64)/2) + -1), (min(v4 - v3, 64) + -1)/2));1;124;;;;;
 ((-1 - max(min(v0 - v1, 3), 0)) == (((-1 - max(min(v0 - v1, 3), 0)) + (max(min(v0 - v1, 3), 0) + 5)) - 1));0;117;;;;;
 (min((v0*16) + v1, v2 + 97) == min((v0*16) + v1, v2 + 97));1;52;;;;;
 (((v0/4) + (v1*64)) == ((v0/4) + (v1*64)));1;987;;;;;
 (max(-184 - (max(min(((v0/65)*-8) + ((v1*-131) + (min((((v2 + v0) + 64)/65)*8, ((v1*131) + ((v0/65)*8)) + 117) - (v3*4))), -20), -23)*8), (max(min(((((v0/65)*2) + v3)*4) - min(((((v2 + v0) + 64)/65)*8) - (v1*131), ((v0/65)*8) + 117), 23), 20)*8) + -184) == max(-184 - (max(min(((v0/65)*-8) + ((v1*-131) + (min((((v2 + v0) + 64)/65)*8, ((v1*131) + ((v0/65)*8)) + 117) - (v3*4))), -20), -23)*8), (max(min(((((v0/65)*2) + v3)*4) - min(((((v2 + v0) + 64)/65)*8) - (v1*131), ((v0/65)*8) + 117), 23), 20)*8) + -184));1;270;;;;;
 (((((min(((v0*8) + v1)*8, (v2*8) + 233) + 67)/2) + (v0*-32)) - (v1*4)) == ((((min(((v0*8) + v1)*8, (v2*8) + 233) + 67)/2) + (v0*-32)) - (v1*4)));1;76;;;;;
 (min(((((v0 + v1) + -1)/2) - (v1/2)) + -251, v2) == min(((((v0 + v1) + -1)/2) - (v1/2)) + -251, v2));1;62;;;;;
 (((((v0 + v1) + 23)/8) - ((v2*4) + v3)) == ((((v0 + v1) + 23)/8) - ((v2*4) + v3)));1;55;;;;;
 (0 == ((0 + ((v0*2) + 12)) - 1));0;49;;;;;
 (max(min(max(((v0 - (v1*2)) + 141)/128, 0), ((v2 - v1) + 63)/64), min((((v3 + v0) - (v1*2)) + 13)/128, ((v2 - v1)/64) + -1) + 1) == max(min(max(((v0 - (v1*2)) + 141)/128, 0), ((v2 - v1) + 63)/64), min((((v3 + v0) - (v1*2)) + 13)/128, ((v2 - v1)/64) + -1) + 1));1;174;;;;;
 (((v0*68) + ((v1*132) + v2)) == ((v0*68) + ((v1*132) + v2)));1;31;;;;;
 ((max(min(v0, 2027), 28) - ((v1*4) + v2)) == (max(min(v0, 2027), 28) - ((v1*4) + v2)));1;41;;;;;
 (((v0 + 308)/250) != 0);0;418;;;;;
 (((v0*4) + (((v1 + v2)/2) + (v3*8))) == ((v0*4) + (((v1 + v2)/2) + (v3*8))));1;87;;;;;
 ((v0*37) == (((v0*37) + 37) - 1));0;24;;;;;
 (((v0 + 43)/42) != 0);0;355;;;;;
 (((((((v0 + v1) + 7)/8) - ((v1 + -1)/8))/126) + 1) == ((((((v0 + v1) + 7)/8) - ((v1 + -1)/8))/126) + 1));1;76;;;;;
 (((v0 + 513)/503) == ((v0 + 513)/503));1;13;;;;;
 ((((v0*2) + v1) - min(v1 + 130, v2)) == (((v0*2) + v1) - min(v1 + 130, v2)));1;58;;;;;
 (((v0*16) + (((v1*2) + v2) - min(((v0*16) + v2) + 4, v3))) == ((v0*16) + (((v1*2) + v2) - min(((v0*16) + v2) + 4, v3))));1;77;;;;;
 (max(min(max((12 - v0)/4, 0), ((v1 - v0) + 7)/4), ((min(v1, 1002) - v0) + 7)/4) == max(min(max((12 - v0)/4, 0), ((v1 - v0) + 7)/4), ((min(v1, 1002) - v0) + 7)/4));1;94;;;;;
 (min((((v0 + v1) + 1519)/504) - (v1/504), v2 + 3) == min((((v0 + v1) + 1519)/504) - (v1/504), v2 + 3));1;72;;;;;
 (((min(v0*32, 93) + ((v1*2) + v2)) + v3) < ((min(v0*32, 93) + ((v1*2) + (v2 + 1))) + v3));1;92;;;;;
 (((((v0 % ((v1/128) + 1))*-128)/4)*4) == ((v0 % ((v1/128) + 1))*-128));1;74;;;;;
 ((max(v0*3, 5) + (((((v1*4) - min(((((v2 + -5)/63)*2) + v1)*4, ((((v3 + v2) + 62)/63)*8) + 4))*2) + ((((v2 + -5)/63)*16) + v4))*4)) == (max(v0*3, 5) + (((((v1*4) - min(((((v2 + -5)/63)*2) + v1)*4, ((((v3 + v2) + 62)/63)*8) + 4))*2) + ((((v2 + -5)/63)*16) + v4))*4)));1;134;;;;;
 ((1 - ((v0*251) + v1)) > (2000 - ((v0*251) + v1)));0;61;;;;;
 (min(127 - (v0*16), v1 - ((v0*16) + ((v2*127) + v3))) == min(127 - (v0*16), v1 - ((v0*16) + ((v2*127) + v3))));1;52;;;;;
 ((min((((v0 + v1) + 1)/2) - (v2*252), ((v1/2) + (v3*32)) + 31) - ((v3*32) + ((v1/2) + (v4*4)))) == (min((((v0 + v1) + 1)/2) - (v2*252), ((v1/2) + (v3*32)) + 31) - ((v3*32) + ((v1/2) + (v4*4)))));1;101;;;;;
 (((v0*46) + ((v1/2) - (((v2 + v1) + 5)/2))) == ((v0*46) + ((v1/2) - (((v2 + v1) + 5)/2))));1;52;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;5367;;;;;
 ((max(min(((v0 + v1) + 1)/2, 999), 0) - ((v2*32) + v3)) == (max(min(((v0 + v1) + 1)/2, 999), 0) - ((v2*32) + v3)));1;83;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0))/251) + 1) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0))/251) + 1));1;152;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))]))));1;205;;;;;
 ((min((v0*253) + 248, v1) + (v2/4)) == (min((v0*253) + 248, v1) + (v2/4)));1;38;;;;;
 (((((v0 % (((v1*8) + 47)/36))*36)/4)*4) == ((v0 % (((v1*8) + 47)/36))*36));1;55;;;;;
 (((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2/4)*65)) - max(min(v1/8, 249), 0)) == ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2/4)*65)) - max(min(v1/8, 249), 0)));1;83;;;;;
 ((v0 - (((v1*2) + v2)*250)) == (v0 - (((v1*2) + v2)*250)));1;54;;;;;
 (min(((v0*4) + v1)*2, min(v0*8, 319) + 6) == min(((v0*4) + v1)*2, min(v0*8, 319) + 6));1;55;;;;;
 (((((((v0 + v1) + 159)/32) - (v1/32))/4) + 3) == ((((((v0 + v1) + 159)/32) - (v1/32))/4) + 3));1;82;;;;;
 (min(max(min(v0 + v1, 2000), 1), ((v2*64) + v3) + 59) == min(max(min(v0 + v1, 2000), 1), ((v2*64) + v3) + 59));1;73;;;;;
 ((min(v0*128, 382) + ((min((v1*252) + 248, v2) + (v3/2))*2)) == (min(v0*128, 382) + ((min((v1*252) + 248, v2) + (v3/2))*2)));1;69;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 30) == min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 30));1;62;;;;;
 (((((((uint1)1 && (((((0*2) + (v0/65))*2) + 0) <= (((v0/65)*2) + 0))) && (((((0*2) + ((v0/65) + (((v1 + 3)/2)*2)))*2) + 3) >= ((((v0/65) + (((v1 + 3)/2)*2))*2) + ((4 + 0) - 1)))) && (((((v2*3) + v3) + v4) + -6) <= ((((v2*3) + v3) + v4) + -6))) && (((((v2*3) + v3) + v4) + -6) >= ((((v2*3) + v3) + v4) + -6))) && (v5 <= v5)) && (v5 >= v5));1;219;;;;;
 (((v0/32) + ((v1/2)*9)) == ((v0/32) + ((v1/2)*9)));1;88;;;;;
 ((max(v0*32, 1964) - min((v1/32)*32, 36)) == (max(v0*32, 1964) - min((v1/32)*32, 36)));1;83;;;;;
 (min(244 - ((v0*82) + ((v1*14) + (v2*41))), 40 - (v1*14)) == min(244 - ((v0*82) + ((v1*14) + (v2*41))), 40 - (v1*14)));1;70;;;;;
 (((((v0 + v1) + 109)/2) + (v2*4)) == ((((v0 + v1) + 109)/2) + (v2*4)));1;53;;;;;
 ((min(v0*128, v1 + -128) + ((v2*64) + v3)) == (min(v0*128, v1 + -128) + ((v2*64) + v3)));1;53;;;;;
 ((((v0*64) + 427)/276) != 0);0;442;;;;;
 ((((((((v0 + v1) + 7)/8) - (v1/8))*8) + 258)/251) == (((((((v0 + v1) + 7)/8) - (v1/8))*8) + 258)/251));1;104;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 55) == min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 55));1;61;;;;;
 (min((v0 + v1) - ((v2*1004) + v3), min(v4 - (v2*1004), 996) + 10) == min((v0 + v1) - ((v2*1004) + v3), min(v4 - (v2*1004), 996) + 10));1;68;;;;;
 (min(((v0 + v1) + -1)/8, ((v1/8) + ((v2/64)*64)) + 63) == min(((v0 + v1) + -1)/8, ((v1/8) + ((v2/64)*64)) + 63));1;71;;;;;
 ((v0 + 3) != 0);0;1301;;;;;
 (min(max(min(v0/65, 34), 3)*2, (max(min(((v1 + v0) + 64)/65, 27), -4)*2) + 15) == min(max(min(v0/65, 34), 3)*2, (max(min(((v1 + v0) + 64)/65, 27), -4)*2) + 15));1;94;;;;;
 (min((v0*156) + ((v1/250)*32), ((((v2 + v1) + 249)/250)*32) + 54) == min((v0*156) + ((v1/250)*32), ((((v2 + v1) + 249)/250)*32) + 54));1;80;;;;;
 ((max(min((v0 + v1)/4, 499), 0) + max(v2, 0)) == (max(min((v0 + v1)/4, 499), 0) + max(v2, 0)));1;83;;;;;
 (min((v0*6) + v1, min(((v2 + v3) + 15)/8, v1 + 11) + 11) == min((v0*6) + v1, min(((v2 + v3) + 15)/8, v1 + 11) + 11));1;905;;;;;
 (min(min(v0*8, ((v1*124) + (v2*8)) + 16) + 98, v3) == min(min(v0*8, ((v1*124) + (v2*8)) + 16) + 98, v3));1;230;;;;;
 (min(max(min(v0*8, 2002), 3) + (((v1 + 13)/4)*4), max(min(v2*8, 1994), -5) + 14) == min(max(min(v0*8, 2002), 3) + (((v1 + 13)/4)*4), max(min(v2*8, 1994), -5) + 14));1;89;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 14)/4) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 14)/4));1;259;;;;;
 ((v0 + 8) < min(max(max(min(v1, 31), 0)*8, (v0 + 1) + 8), v0 + 1));0;95;;;;;
 ((((((((v0 + v1) + 1999)/2000) - (v1/2000))*256) + 581)/50) == (((((((v0 + v1) + 1999)/2000) - (v1/2000))*256) + 581)/50));1;81;;;;;
 (((((((v0 + v1) + 135)/64) - (v1/64)) + 18)/13) == ((((((v0 + v1) + 135)/64) - (v1/64)) + 18)/13));1;65;;;;;
 ((((((v0*3) + v1)*12) + (v2*8)) - ((((v3 + v4) + -1)/63)*8)) == (((((v0*3) + v1)*12) + (v2*8)) - ((((v3 + v4) + -1)/63)*8)));1;73;;;;;
 (((441 - max(v0*127, 378)) - (v1*64)) == ((441 - max(v0*127, 378)) - (v1*64)));1;55;;;;;
 (((v0 + 1018)/1004) != 0);0;339;;;;;
 ((min((((v0 + v1) + -1)/2) - (v2*336), (v1/2) + 335) - ((v1/2) + (v3*4))) == (min((((v0 + v1) + -1)/2) - (v2*336), (v1/2) + 335) - ((v1/2) + (v3*4))));1;93;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 42) == min(((v0*2) + v1)*4, (v2*8) + 42));1;58;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 77)/68) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 77)/68));1;69;;;;;
 (((((v0 + v1) + 15)/16) - ((v2*18) + v3)) == ((((v0 + v1) + 15)/16) - ((v2*18) + v3)));1;56;;;;;
 (((v0*724) + ((((min(v1, 489) + v2) + -569)/8)*8)) == ((v0*724) + ((((min(v1, 489) + v2) + -569)/8)*8)));1;81;;;;;
 (((((v0 % (((v1 - v2) + 78)/18))*-36)/4)*4) == ((v0 % (((v1 - v2) + 78)/18))*-36));1;63;;;;;
 (((min(v0*4, 5) + (v1*8)) - ((((v1*2) + v0) + v2)*4)) == ((min(v0*4, 5) + (v1*8)) - ((((v1*2) + v0) + v2)*4)));1;68;;;;;
 ((min(v0*68, 64) + (min(v1*16, 52) + v2)) == (min(v0*68, 64) + (min(v1*16, 52) + v2)));1;65;;;;;
 ((max(min((v0*4) + v1, 1117), 118) + (v2*2)) == (max(min((v0*4) + v1, 1117), 118) + (v2*2)));1;75;;;;;
 (((v0 + v1) - ((((v0 + v1) + 446)/8)*8)) == ((v0 + v1) - ((((v0 + v1) + 446)/8)*8)));1;62;;;;;
 (min((((min(max(v0, 0), (min(v1*20, 19) + ((v2*39) + v3)) + 19) - (v1*20))*8) - (v4*41)) - (((v2*39) + v3)*8), v5) == min((((min(max(v0, 0), (min(v1*20, 19) + ((v2*39) + v3)) + 19) - (v1*20))*8) - (v4*41)) - (((v2*39) + v3)*8), v5));1;138;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((((v0*8) + 5)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((((v0*8) + 5)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((((v0*8) + 5)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((((v0*8) + 5)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((((v0*8) + 5)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((((v0*8) + 5)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((((v0*8) + 5)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((((v0*8) + 5)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))));1;230;;;;;
 ((v0 - ((v1*16) + v2)) == (v0 - ((v1*16) + v2)));1;47;;;;;
 (((((((uint1)1 && (((0 + (((v0*12) + v1) + -2)) + -1) <= (((0 + ((v0*12) + v1)) + -2) + -1))) && (((3 + ((((max(v0*12, 20)/4)*-4) + ((v0*12) + v1)) + 39)) + -1) >= (((((4 + 0) - 1) + ((((max(v0*12, 20)/4)*-4) + ((v0*12) + v1)) + 36)) + ((6 + -2) - 1)) + -1))) && (((v2 + v3) + -998) <= (((v2 + v3) + -2) + -1001))) && (((v2 + v3) + -998) >= (((v2 + v3) + ((6 + -2) - 1)) + -1001))) && (0 <= 0)) && (0 >= 0));0;283;;;;;
 (max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((v4 + -10) + (min(v3, 116) + 18)) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), v4 + -10), (min(v3, 116) + 18) + (v4 + -10))) <= min(max(max(max(0, 0), max(v2, 0)), v4 + -10), (min(v3, 116) + 18) + (v4 + -10)));0;1673;;;;;
 ((min((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8, (v3*8) + 7) - (((v3*2) + v4)*4)) == (min((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8, (v3*8) + 7) - (((v3*2) + v4)*4)));1;82;;;;;
 (min(max(min(v0, 999)*2, -1), (max(min(v1*2, 1997), -2) + (v2*4)) + 4) == min(max(min(v0, 999)*2, -1), (max(min(v1*2, 1997), -2) + (v2*4)) + 4));1;110;;;;;
 (min(min(v0 + 122, v1), (min(v0 + 60, v1) + (v2*8)) + 8) == min(min(v0 + 122, v1), (min(v0 + 60, v1) + (v2*8)) + 8));1;98;;;;;
 (((v0/4) - (v1*32)) == ((v0/4) - (v1*32)));1;31;;;;;
 (((v0*2) + -14) == ((((v0*2) + -14) + ((((min((min(v1*33, 32) + v2) + 21, v3) - (v1*33)) - v2)*2) + 24)) - 1));0;222;;;;;
 ((((((v0 + v1) + 314)/63)*32) - ((v2*4) + v3)) == (((((v0 + v1) + 314)/63)*32) - ((v2*4) + v3)));1;77;;;;;
 (min(((v0*8) + 631)/620, max(min((((v1 - ((v2*154) + v3))*8) + 11)/620, (((v1 - ((v2*154) + v3))*2) + 2)/155), (((v1 - ((v2*154) + v3))*8) + 13)/620) + 1) == min(((v0*8) + 631)/620, max(min((((v1 - ((v2*154) + v3))*8) + 11)/620, (((v1 - ((v2*154) + v3))*2) + 2)/155), (((v1 - ((v2*154) + v3))*8) + 13)/620) + 1));1;136;;;;;
 (min((((v0 + v1) + 5)/2) - (v2*504), (min(v3*128, 380) + (v1/2)) + 119) == min((((v0 + v1) + 5)/2) - (v2*504), (min(v3*128, 380) + (v1/2)) + 119));1;79;;;;;
 ((max((v0 % 8)*32, 220) + -253) >= (((max((v0 % 8)*32, 220) + -253) + (258 - max((v0 % 8)*32, 220))) - 1));0;101;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + -10) <= (((v0*4) + v1) + -10))) && ((((v0*4) + v1) + -7) >= (((v0*4) + v1) + -7))) && ((((((v2*2) + 0)*4) + 0) + 1) <= ((v2*8) + 1))) && ((((((v2*2) + 1)*4) + 3) + 1) >= ((v2*8) + 8))) && (v3 <= v3)) && (v3 >= v3));1;216;;;;;
 ((((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 546)/508) == (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 546)/508));1;99;;;;;
 ((((v0 + v1)/65) + 1) <= ((((v0 - 1) + v1)/65) - 1));0;67;;;;;
 ((((min(((max((min((v3*-4) + (max(((v4 + v2) + 23)/8, 249) - min(v2/8, 4)), -1) + 5)/2, 0)*16) + (v3*32)) + (min(v2/8, 4)*8), (min(((max((min((v3*-4) + (max(((v4 + v2) + 23)/8, 249) - min(v2/8, 4)), -1) + 5)/2, 0)*2) + (v3*4)) + min(v2/8, 4), min((v3*4) + (min(v2/8, 4) + -1), max(((v4 + v2) + 23)/8, 249)) + 5)*8) + 12)*-1)/4)*4) == (min(((max((min((v3*-4) + (max(((v4 + v2) + 23)/8, 249) - min(v2/8, 4)), -1) + 5)/2, 0)*16) + (v3*32)) + (min(v2/8, 4)*8), (min(((max((min((v3*-4) + (max(((v4 + v2) + 23)/8, 249) - min(v2/8, 4)), -1) + 5)/2, 0)*2) + (v3*4)) + min(v2/8, 4), min((v3*4) + (min(v2/8, 4) + -1), max(((v4 + v2) + 23)/8, 249)) + 5)*8) + 12)*-1));0;4020;;;;;
 (((max(v0, 1)*-8) + 5) == ((((max(v0, 1)*-8) + 5) + ((max(v0, 1)*8) + 1)) - 1));0;93;;;;;
 (min((((((v0/500)*16) + v1)*2) + v2)*16, (min((((v0/500)*16) + v1)*4, ((((v3 + v0) + -1)/500)*64) + 85)*8) + 29) == min((((((v0/500)*16) + v1)*2) + v2)*16, (min((((v0/500)*16) + v1)*4, ((((v3 + v0) + -1)/500)*64) + 85)*8) + 29));1;132;;;;;
 (min(max(min(v0 + v1, 2000), 1), (max(min((v2*1000) + v1, 1999), 0) + (v3*64)) + 64) == min(max(min(v0 + v1, 2000), 1), (max(min((v2*1000) + v1, 1999), 0) + (v3*64)) + 64));1;81;;;;;
 (max(((v0*8) + v1)*8, (((((v0*2) + v2)*4) + v1)*8) + 3) == max(((v0*8) + v1)*8, (((((v0*2) + v2)*4) + v1)*8) + 3));1;93;;;;;
 ((((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 867)/668) == (((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 867)/668));1;273;;;;;
 (((((v0 + v1) + -1)/63) - ((v2*4) + v3)) == ((((v0 + v1) + -1)/63) - ((v2*4) + v3)));1;57;;;;;
 ((((max(v0, -1) - v1) + 132)/128) != 0);0;512;;;;;
 (((v0*1043) + (((v1 + -2)/16)*16)) == ((v0*1043) + (((v1 + -2)/16)*16)));1;21;;;;;
 ((v0*2) >= (((v0*2) + ((4*2) + -6)) - 1));0;49;;;;;
 (min(max(9 - max((v0*504) - v1, -496), min(v1 - (v0*504), 496) + 6), min(v2, 496) + 9) == min(max(9 - max((v0*504) - v1, -496), min(v1 - (v0*504), 496) + 6), min(v2, 496) + 9));1;96;;;;;
 (min(((v0*16) + v1) + 16, v2 + v3) == min(((v0*16) + v1) + 16, v2 + v3));1;51;;;;;
 (min(max(((v0 - max(min(v1/2, 1003)*2, 7)) + 15)/4, 0), (v2/4) + 2) == min(max(((v0 - max(min(v1/2, 1003)*2, 7)) + 15)/4, 0), (v2/4) + 2));1;93;;;;;
 (max(-767 - (v0*8), (v0*8) + 60) >= 0);0;535;;;;;
 (min((v0*8) + v1, v2 + 40) == min((v0*8) + v1, v2 + 40));1;53;;;;;
 ((((v0*16) - max(min(((v1 + v2) + 1)/2, 999), 0)) + v3) == (((v0*16) - max(min(((v1 + v2) + 1)/2, 999), 0)) + v3));1;98;;;;;
 (((v0*41) + ((((max(min((v1*128) + v2, min(v3 + v2, 2130) + -128), 3) + -3)/16) - (max(min((v1*128) + v2, min(v3 + v2, 1999) + -128), -128)/16))*16)) == ((v0*41) + ((((max(min((v1*128) + v2, min(v3 + v2, 2130) + -128), 3) + -3)/16) - (max(min((v1*128) + v2, min(v3 + v2, 1999) + -128), -128)/16))*16)));1;139;;;;;
 ((((max((v0*-8) + (8 + ((v1 + min(v2*128, v3 + -128))/2)), ((v1 + min(v2*128, v3 + -128)) + 3)/2)*-2)/2)*2) == (max((v0*-8) + (8 + ((v1 + min(v2*128, v3 + -128))/2)), ((v1 + min(v2*128, v3 + -128)) + 3)/2)*-2));1;117;;;;;
 (((v0/4) - (v1*32)) == ((v0/4) - (v1*32)));1;46;;;;;
 (min(max(min(v0, 31), 0), (max(min(v1/63, 31), 0) + (v2*4)) + 3) == min(max(min(v0, 31), 0), (max(min(v1/63, 31), 0) + (v2*4)) + 3));1;80;;;;;
 ((((v0 + 2)/32) + ((((v0 + 2) % 32) + 31)/32)) == (((v0 + 2)/32) + ((((v0 + 2) % 32) + 31)/32)));1;54;;;;;
 ((((v0 - v1) + 273)/252) != 0);0;463;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (2 >= ((3 + 0) - 1)));1;143;;;;;
 (max(-415 - ((v0 - v1)*8), ((v0 - v1)*8) + 106) >= 0);0;725;;;;;
 (((v0*17) + ((v1*63) + (v2 + v3))) == ((v0*17) + ((v1*63) + (v2 + v3))));1;58;;;;;
 ((((max(((v0 + v1) + -1)/8, 249) - min(v1/8, 0))/63) + 1) >= 0);1;76;;;;;
 (((max(v0, 220)*8) + -1787) == ((((max(v0, 220)*8) + -1787) + (1792 - (max(v0, 220)*8))) - 1));0;96;;;;;
 (max(min(v0, 4), min(min((249 - v1)/8, v2 + -1) - v3, 3) + 1) == max(min(v0, 4), min(min((249 - v1)/8, v2 + -1) - v3, 3) + 1));1;107;;;;;
 (((v0*36) + (((v1 + v2)/8)*8)) == ((v0*36) + (((v1 + v2)/8)*8)));1;61;;;;;
 (max((min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2)*2) + 1, v3) == max((min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2)*2) + 1, v3));1;259;;;;;
 (((((((uint1)1 && ((0 + ((v0*32) + v1)) <= ((v0*32) + v1))) && ((3 + (((v0*32) + v1) + 28)) >= (((v0*32) + 31) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4));1;134;;;;;
 ((((((v0 + v1) + -1)/8) - (v2*125)) - (v1/8)) == (((((v0 + v1) + -1)/8) - (v2*125)) - (v1/8)));1;74;;;;;
 ((max(min(min((v0*252) + 252, v1) + v2, 2000), 1) - (max(min((v0*252) + v2, 1999), 0) + (v3*4))) == (max(min(min((v0*252) + 252, v1) + v2, 2000), 1) - (max(min((v0*252) + v2, 1999), 0) + (v3*4))));1;97;;;;;
 (min((v0*504) + v1, min(v2, 2495) + -496) == min((v0*504) + v1, min(v2, 2495) + -496));1;56;;;;;
 ((((v0*260) + v1) + 264) < ((((v0 + 1)*260) + v1) + -4));0;58;;;;;
 ((max((v0*8) - v1, (v1 - (v0*8)) + 588) + -546) >= 0);0;663;;;;;
 (((v0*66) + (((v1*31) + v2)*8)) == ((v0*66) + (((v1*31) + v2)*8)));1;43;;;;;
 (((((v0 + v1) + -1)/2) - ((((v2*18) + ((v3*6) + ((v4*2) + v5)))*4) + v6)) == ((((v0 + v1) + -1)/2) - ((((v2*18) + ((v3*6) + ((v4*2) + v5)))*4) + v6)));1;83;;;;;
 (((((v0 % ((v1 + 133)/132))*-132)/12)*12) == ((v0 % ((v1 + 133)/132))*-132));1;51;;;;;
 (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - (v2*8)) - max(min((v1/63)*8, 285), 36)) == ((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - (v2*8)) - max(min((v1/63)*8, 285), 36)));1;86;;;;;
 ((((max(v0, 1) - v1) + 35)/36) != 0);0;613;;;;;
 (min(((v0 + v1) + 159)/32, v2 + 3) == min(((v0 + v1) + 159)/32, v2 + 3));1;51;;;;;
 (((v0*7) + (max(min(v1, 31), 0)*2)) == ((v0*7) + (max(min(v1, 31), 0)*2)));1;54;;;;;
 ((((((v0 + v1) % 4) + 487)/4) + (v2*-64)) == (((((v0 + v1) % 4) + 487)/4) + (v2*-64)));1;53;;;;;
 (((v0/16) + (v1*3)) == ((v0/16) + (v1*3)));1;37;;;;;
 (min((v0*24) + 22, v1) == min((v0*24) + 22, v1));1;49;;;;;
 (min(max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9), v2) == min(max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9), v2));1;135;;;;;
 (((v0 + 23)/16) != 0);0;364;;;;;
 (((min((((v0 + v1) + 7)/8) - (v2*63), (v1/8) + 62)*-2) + ((((v1/8) + (v3*38))*2) + ((v4*16) + v5))) == ((min((((v0 + v1) + 7)/8) - (v2*63), (v1/8) + 62)*-2) + ((((v1/8) + (v3*38))*2) + ((v4*16) + v5))));1;117;;;;;
 (((v0*20) + (((v1*4) + v2)*8)) == ((v0*20) + (((v1*4) + v2)*8)));1;96;;;;;
 (min(max(v0, 249), (min(v1, 0) + (((v2 + 7)/4)*4)) + -4) == min(max(v0, 249), (min(v1, 0) + (((v2 + 7)/4)*4)) + -4));1;75;;;;;
 ((v0 - ((v1 + v2)/63)) == (v0 - ((v1 + v2)/63)));1;66;;;;;
 ((v0 - max(min((v1*8) + v2, 999), 0)) == (v0 - max(min((v1*8) + v2, 999), 0)));1;61;;;;;
 ((((v0*8) - (v1*87)) - ((v2*3) + v3)) == (((v0*8) - (v1*87)) - ((v2*3) + v3)));1;63;;;;;
 (min(500 - (v0*16), (v1 - ((v0*16) + ((v2/4)*501))) + 1) == min(500 - (v0*16), (v1 - ((v0*16) + ((v2/4)*501))) + 1));1;76;;;;;
 (((v0 + 11)/3) != 0);0;351;;;;;
 ((max(min((v0*68) + v1, 378), 129) + (v2*4)) == (max(min((v0*68) + v1, 378), 129) + (v2*4)));1;47;;;;;
 ((((v0*32) + 72)/7) != 0);0;437;;;;;
 (min(((v0/63) + v1)*64, v2 + 391) == min(((v0/63) + v1)*64, v2 + 391));1;50;;;;;
 (min(((v0 + v1) + 124)/8, ((v2*4) + v3) + 3) == min(((v0 + v1) + 124)/8, ((v2*4) + v3) + 3));1;66;;;;;
 (min(((v0 + v1) + 31)/4, v2 + 1) == min(((v0 + v1) + 31)/4, v2 + 1));1;77;;;;;
 (min(((v0 + v1) + 132)/8, (((v0 + v1) + 110)/8) + (v2*5)) == min(((v0 + v1) + 132)/8, (((v0 + v1) + 110)/8) + (v2*5)));1;85;;;;;
 (((((v0 % (((v1*64) + 433)/272))*-272)/68)*68) == ((v0 % (((v1*64) + 433)/272))*-272));1;66;;;;;
 (min(max((((v0 + v1) + 15)/16)*8, 995), (min((v1/16)*8, 4) + (v2*508)) + 499) == min(max((((v0 + v1) + 15)/16)*8, 995), (min((v1/16)*8, 4) + (v2*508)) + 499));1;65;;;;;
 (min(20 - (max(min(v0, 0) - min((min(max(v1, 249) - (v2*16), min(v0, 0) + 15) + (v3*-4)) + 8, v0), 0)*8), (v4*8) + 31) == min(20 - (max(min(v0, 0) - min((min(max(v1, 249) - (v2*16), min(v0, 0) + 15) + (v3*-4)) + 8, v0), 0)*8), (v4*8) + 31));1;376;;;;;
 (min(((v0*32) + v1) + 19, v2) == min(((v0*32) + v1) + 19, v2));1;38;;;;;
 (((v0*20) + (((v1 + v2)/4) + (v3*2))) == ((v0*20) + (((v1 + v2)/4) + (v3*2))));1;78;;;;;
 (((((v0 - v1)*4) + 762)/707) != 0);0;534;;;;;
 (min(((v0*17) + ((((((min((min(v0*17, 50) + v1) + 8, (((v2 + v3) + 3)/2) + (v4*-63)) - (v0*17)) - v1) + 15)/4)*4) + (v4*63))) + v1, v5 + 12) == min(((v0*17) + ((((((min((min(v0*17, 50) + v1) + 8, (((v2 + v3) + 3)/2) + (v4*-63)) - (v0*17)) - v1) + 15)/4)*4) + (v4*63))) + v1, v5 + 12));1;164;;;;;
 ((((((v0 + v1) + v2) + 15)/8) + (v3*4)) == (((((v0 + v1) + v2) + 15)/8) + (v3*4)));1;46;;;;;
 ((((v0*-12)/2)*2) == (v0*-12));1;24;;;;;
 (max(min(max((270 - max(min(v0/2, 1006), 7))/256, 0), (v1/256) + 1), (min(758 - max(min(v0/2, 1006), 7), v1)/256) + 1) == max(min(max((270 - max(min(v0/2, 1006), 7))/256, 0), (v1/256) + 1), (min(758 - max(min(v0/2, 1006), 7), v1)/256) + 1));1;136;;;;;
 ((((max(min(((v0 + v1) + 1007)/63, 31), 0) - max(min(v1/63, 35), 4))/4) + 2) == (((max(min(((v0 + v1) + 1007)/63, 31), 0) - max(min(v1/63, 35), 4))/4) + 2));1;294;;;;;
 ((max(min(((v0 + v1) + -1)/8, 249), 0) - ((v2*4) + v3)) == (max(min(((v0 + v1) + -1)/8, 249), 0) - ((v2*4) + v3)));1;75;;;;;
 (((v0*64) + ((v1*16) + v2)) == ((v0*64) + ((v1*16) + v2)));1;28;;;;;
 ((max(min(v0, 1009), 10) - (v1*64)) == (max(min(v0, 1009), 10) - (v1*64)));1;66;;;;;
 ((((v0*2) + v1) - (max(min(min(((v2 + v3) + 499)/500, 3)*8, 22), -7)*2)) == (((v0*2) + v1) - (max(min(min(((v2 + v3) + 499)/500, 3)*8, 22), -7)*2)));1;77;;;;;
 (max(-6 - max(min((v0 - (v1*1012)) - v2, 1005), -6), max(min(((v1*1012) + v2) - v0, 6), -1005) + -6) == max(-6 - max(min((v0 - (v1*1012)) - v2, 1005), -6), max(min(((v1*1012) + v2) - v0, 6), -1005) + -6));1;98;;;;;
 ((max(min(v0*4, 282), 33) - ((v1*4) + v2)) == (max(min(v0*4, 282), 33) - ((v1*4) + v2)));1;72;;;;;
 (min((v0/2) + (((min((v1*64) + 56, v2) + 9)/2)*2), v3 + 8) == min((v0/2) + (((min((v1*64) + 56, v2) + 9)/2)*2), v3 + 8));1;91;;;;;
 ((max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (v3*4))) == (max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (v3*4))));1;119;;;;;
 ((((max(min((((v0 + v1) + 62)/63)*64, 1947), -52) - max(min((v1/63)*64, 2098), 99)) + 403)/252) == (((max(min((((v0 + v1) + 62)/63)*64, 1947), -52) - max(min((v1/63)*64, 2098), 99)) + 403)/252));1;225;;;;;
 ((max(min(v0, 113), -11) - ((((v1*8) + v2)*4) + v3)) == (max(min(v0, 113), -11) - ((((v1*8) + v2)*4) + v3)));1;75;;;;;
 (((v0*16) + ((v1*4) + v2)) == ((v0*16) + ((v1*4) + v2)));1;2240;;;;;
 ((((v0 + 1)/8) - (v1*2)) == (((v0 + 1)/8) - (v1*2)));1;41;;;;;
 (min(((((v0 + -5)/63)*2) + v1)*4, ((((v2 + v0) + 62)/63)*8) + 4) == min(((((v0 + -5)/63)*2) + v1)*4, ((((v2 + v0) + 62)/63)*8) + 4));1;59;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 81)/63) == (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 81)/63));1;205;;;;;
 (min(max(min(v0 + v1, 1999), 0), max(min(v0 + v1, 1875), -124) + 131) == min(max(min(v0 + v1, 1999), 0), max(min(v0 + v1, 1875), -124) + 131));1;79;;;;;
 ((max(min((v0*1000) + v1, min(v2 + v1, 1995) + -1000), -1004) - (max(min((v0*1000) + v1, min(v2 + v1, 3003) + -1000), 4) + (v3*4))) == (max(min((v0*1000) + v1, min(v2 + v1, 1995) + -1000), -1004) - (max(min((v0*1000) + v1, min(v2 + v1, 3003) + -1000), 4) + (v3*4))));1;129;;;;;
 (((v0/8) + ((v1*16) - (((v2 + v0) + 7)/8))) == ((v0/8) + ((v1*16) - (((v2 + v0) + 7)/8))));1;50;;;;;
 ((min(v0*12, 20) + min(((v1*63) + ((v2*32) + v3)) + 21, v4 + v3)) == (min(v0*12, 20) + min(((v1*63) + ((v2*32) + v3)) + 21, v4 + v3)));1;1102;;;;;
 (v0 <= (v0 - 1));0;35;;;;;
 (((v0/8) + (((v1*4) + v2)*2)) == ((v0/8) + (((v1*4) + v2)*2)));1;41;;;;;
 ((((v0*-72)/4)*4) == (v0*-72));1;30;;;;;
 (min(v0*8, ((v1*1004) + ((v2/8)*8)) + 988) == min(v0*8, ((v1*1004) + ((v2/8)*8)) + 988));1;55;;;;;
 (min((v0 + v1) + 13, v2) == min((v0 + v1) + 13, v2));1;426;;;;;
 (((((((v0 + v1) + 16)/17) - (v1/17)) + 21)/16) == ((((((v0 + v1) + 16)/17) - (v1/17)) + 21)/16));1;88;;;;;
 (((max(((v0 + v1) + 23)/8, 249) - (v2*4)) - min(v1/8, 4)) == ((max(((v0 + v1) + 23)/8, 249) - (v2*4)) - min(v1/8, 4)));1;81;;;;;
 (min(((v0 + v1) + 255)/4, v2 + 3) == min(((v0 + v1) + 255)/4, v2 + 3));1;48;;;;;
 (min(((((v0 + v1) + -1)/8) - (v1/8)) + -124, v2) == min(((((v0 + v1) + -1)/8) - (v1/8)) + -124, v2));1;46;;;;;
 (((((((v0 + v1) + 63)/8) - (v1/8)) + 18)/17) == ((((((v0 + v1) + 63)/8) - (v1/8)) + 18)/17));1;71;;;;;
 (min((v0/4) + v1, v2 + 2) == min((v0/4) + v1, v2 + 2));1;41;;;;;
 (((((((uint1)1 && ((((v0*2) + v1) + v2) <= (((v0*2) + v1) + v2))) && ((((v0*2) + v1) + v2) >= (((v0*2) + v1) + v2))) && ((((0*4) + v3) + 0) <= (((0*4) + 0) + v3))) && ((((7*4) + v3) + 3) >= (((((8 + 0) - 1)*4) + ((4 + 0) - 1)) + v3))) && (0 <= 0)) && (0 >= 0));1;189;;;;;
 (((((((v0 + v1) + 191)/64) - ((v1 + -136)/64))/20) + 1) == ((((((v0 + v1) + 191)/64) - ((v1 + -136)/64))/20) + 1));1;64;;;;;
 ((v0 - ((v1*126) + v2)) == (v0 - ((v1*126) + v2)));1;44;;;;;
 (max(min(max(v0*64, 99), ((min(v1, 1) + v0)*64) + 152), min((min(v1, 1) + v0)*64, 1947) + 152) == max(min(max(v0*64, 99), ((min(v1, 1) + v0)*64) + 152), min((min(v1, 1) + v0)*64, 1947) + 152));1;128;;;;;
 (max(min(max(((v0 - max(min(v1, 2002), 3)) + 6)/4, 0), (v2 + 9)/4), (min(min(v3 + v0, max(min(v4 + v1, 1997), -2) + 3) - max(min(v1, 2002), 3), v2 + 6) + 3)/4) == max(min(max(((v0 - max(min(v1, 2002), 3)) + 6)/4, 0), (v2 + 9)/4), (min(min(v3 + v0, max(min(v4 + v1, 1997), -2) + 3) - max(min(v1, 2002), 3), v2 + 6) + 3)/4));1;182;;;;;
 ((((max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2)) + 18)/16) == (((max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2)) + 18)/16));1;290;;;;;
 (min(((v0 + v1) + 314)/63, ((v1/63) + (v2*3)) + -7) == min(((v0 + v1) + 314)/63, ((v1/63) + (v2*3)) + -7));1;48;;;;;
 (min((v0*4) + v1, v2 + 28) == min((v0*4) + v1, v2 + 28));1;43;;;;;
 ((((min((v0*4) + ((((v1/125)*4)*4) + -4), (((v1/125) + v2)*16) + -5)*8)/4)*4) == (min((v0*4) + ((((v1/125)*4)*4) + -4), (((v1/125) + v2)*16) + -5)*8));1;125;;;;;
 (min(max(((v0 - ((v1/63)*64)) + 334)/246, 0), ((v2*64) + 410)/246) == min(max(((v0 - ((v1/63)*64)) + 334)/246, 0), ((v2*64) + 410)/246));1;78;;;;;
 (min(v0 - max(min((v1 + v2)/2, 999), 0), v3) == min(v0 - max(min((v1 + v2)/2, 999), 0), v3));1;71;;;;;
 (((v0/65) + 1) != 0);0;300;;;;;
 (((v0 + 10)/1008) == ((((v0 + 10)/1008) + ((((v0 + 10) % 1008) + 1007)/1008)) - 1));0;491;;;;;
 (min((min((v0*4) + 3, v1)/2)*2, (v0*4) + 2) == min((min((v0*4) + 3, v1)/2)*2, (v0*4) + 2));1;63;;;;;
 (((v0*16) + (((v1/2) + (v2*2)) - (min(min((v1/2) + (((min((v3*64) + 56, v4) + 26)/4)*4), min(((v5 + v1) + 7)/2, ((v1/2) + (v3*64)) + 56) + 23) - (v3*64), ((v6*8) + ((v1/2) + (v0*16))) + 8) + (v6*-8)))) == ((v0*16) + (((v1/2) + (v2*2)) - (min(min((v1/2) + (((min((v3*64) + 56, v4) + 26)/4)*4), min(((v5 + v1) + 7)/2, ((v1/2) + (v3*64)) + 56) + 23) - (v3*64), ((v6*8) + ((v1/2) + (v0*16))) + 8) + (v6*-8)))));1;759;;;;;
 (min(max(min((((v0 + v1) + -1)/8)*8, 1994), -5), v2 + 45) == min(max(min((((v0 + v1) + -1)/8)*8, 1994), -5), v2 + 45));1;87;;;;;
 (((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32)*2) - ((((min((v1/65)*64, 4) + -6)/32)*2) + v2)) == ((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32)*2) - ((((min((v1/65)*64, 4) + -6)/32)*2) + v2)));1;109;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*8) + v3)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*8) + v3)));1;82;;;;;
 ((((v0*16) + v1) + (min(min((((min(v2*500, v3 + -500) + v4) % 8) + 507)/8, (v5*32) + 31) - (((((v5*2) + v0)*4) + v6)*4), 3) + (v6*4))) == (((v0*16) + v1) + (min(min((((min(v2*500, v3 + -500) + v4) % 8) + 507)/8, (v5*32) + 31) - (((((v5*2) + v0)*4) + v6)*4), 3) + (v6*4))));1;142;;;;;
 (min(((v0 + v1) + 39)/8, v2 + 74) == min(((v0 + v1) + 39)/8, v2 + 74));1;37;;;;;
 (min(min((2007 - (v0*8))/3, 669 - ((v0*8)/3)), ((min((max(min(((v1 + v2) + 31)/8, 249), 0) - ((v3/4)*63)) - max(min(v2/8, 250), 1), 61)*8)/3) + 5) == min(min((2007 - (v0*8))/3, 669 - ((v0*8)/3)), ((min((max(min(((v1 + v2) + 31)/8, 249), 0) - ((v3/4)*63)) - max(min(v2/8, 250), 1), 61)*8)/3) + 5));1;505;;;;;
 (((((min((v3*14) + (max(min((v2 + min(v4*48, v5 + -48))/2, 999), 0) + 10), max(min(((v2 + min(v4*48, v5 + -48)) + 49)/2, 999), 0)) - min((v3*14) + min(max(min((v2 + min(v4*48, v5 + -48))/2, 999), 0) + -2, max(min((v2 + min(v4*48, v5 + -48))/2, 999), 0)), max(min(((v2 + min(v4*48, v5 + -48)) + 49)/2, 999), 0) + 4))*2)/4)*4) == ((min((v3*14) + (max(min((v2 + min(v4*48, v5 + -48))/2, 999), 0) + 10), max(min(((v2 + min(v4*48, v5 + -48)) + 49)/2, 999), 0)) - min((v3*14) + min(max(min((v2 + min(v4*48, v5 + -48))/2, 999), 0) + -2, max(min((v2 + min(v4*48, v5 + -48))/2, 999), 0)), max(min(((v2 + min(v4*48, v5 + -48)) + 49)/2, 999), 0) + 4))*2));0;2809;;;;;
 (max(-428 - (max(min((((((v0 + v1) + 249)/250)*8) - ((v2*8) + v3))*4, -50), -53)*8), (max(min(v4*4, 53), 50)*8) + -428) == max(-428 - (max(min((((((v0 + v1) + 249)/250)*8) - ((v2*8) + v3))*4, -50), -53)*8), (max(min(v4*4, 53), 50)*8) + -428));1;141;;;;;
 (((max(min(v0, 2), -16)*8) + -21) == ((((max(min(v0, 2), -16)*8) + -21) + (26 - (max(min(v0, 2), -16)*8))) - 1));0;110;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 138)/32) == (((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 138)/32));1;246;;;;;
 (max(-769 - (v0*8), (v0*8) + 60) >= 0);0;499;;;;;
 ((288 - ((max(min((v0/32)*4, 285), 36) + v1)*8)) == (2287 - ((max(min((v0/32)*4, 285), 36) + v1)*8)));0;83;;;;;
 ((max(min(v0, 0), -250) + -2) == (max(min(v0, 0), -250) + -2));1;47;;;;;
 (((min(v0*2, 27) + (v1 + v2)) - (v0*2)) == ((min(v0*2, 27) + (v1 + v2)) - (v0*2)));1;50;;;;;
 ((v0 - (v1*36)) == (v0 - (v1*36)));1;45;;;;;
 ((v0 + v1) >= ((v0 + (v1 - 1)) + 1));1;40;;;;;
 (0 == ((0 + (63 - max(((v0*2) + v1)*16, 47))) - 1));0;76;;;;;
 (max(min(((v0*128) + 1297)/1116, max(min(((((((v1 + v2) + 124)/125) - (v2/125))*128) + 181)/1116, ((((((v1 + v2) + 124)/125) - (v2/125))*32) + 45)/279), ((((((v1 + v2) + 124)/125) - (v2/125))*128) + 186)/1116) + 1), (v3 + 182)/1116) == max(min(((v0*128) + 1297)/1116, max(min(((((((v1 + v2) + 124)/125) - (v2/125))*128) + 181)/1116, ((((((v1 + v2) + 124)/125) - (v2/125))*32) + 45)/279), ((((((v1 + v2) + 124)/125) - (v2/125))*128) + 186)/1116) + 1), (v3 + 182)/1116));1;187;;;;;
 (((min(v0, 1006) + 13)/4) == ((min(v0, 1006) + 13)/4));1;47;;;;;
 ((((((v0 + v1) + 15)/16) - (v2*32)) - (v1/16)) == (((((v0 + v1) + 15)/16) - (v2*32)) - (v1/16)));1;64;;;;;
 (((((((v0 + v1) + 39)/8) - (v1/8))/2) + 1) == ((((((v0 + v1) + 39)/8) - (v1/8))/2) + 1));1;63;;;;;
 ((((v0*2) + 64)/63) != 0);0;445;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*512)) == (max(min(v0/2, 1006), 7) + (v1*512)));1;51;;;;;
 (min(v0*2, (min(v1*128, 124) + ((max(min(v2/2, 999), 0) + (v3*126))*2)) + 120) == min(v0*2, (min(v1*128, 124) + ((max(min(v2/2, 999), 0) + (v3*126))*2)) + 120));1;92;;;;;
 (min(max(min((v0*24) + v1, 1003)*2, 7), max(min(v2, 1996), -3) + 6) == min(max(min((v0*24) + v1, 1003)*2, 7), max(min(v2, 1996), -3) + 6));1;91;;;;;
 (((v0/2) + (v1*4)) == ((v0/2) + (v1*4)));1;102;;;;;
 (((((((v0 + v1) + 1)/2) - (v1/2))/501) + 1) == ((((((v0 + v1) + 1)/2) - (v1/2))/501) + 1));1;289;;;;;
 (min(v0*8, ((v1*55) + ((v2/63)*8)) + 9) == min(v0*8, ((v1*55) + ((v2/63)*8)) + 9));1;77;;;;;
 ((((min(((v0*8) + ((v1*28) + v2))*4, (((v1*28) + v2)*4) + 83) - (v0*32)) - (v1*112)) - (v2*4)) == (((min(((v0*8) + ((v1*28) + v2))*4, (((v1*28) + v2)*4) + 83) - (v0*32)) - (v1*112)) - (v2*4)));1;117;;;;;
 ((max(min((v0/63)*64, 2044), 45) + (v1*500)) == (max(min((v0/63)*64, 2044), 45) + (v1*500)));1;58;;;;;
 (min(max(min((v0*336) + v1, min(v2 + v1, 2000) + -336), -335) - max(min((v0*336) + v1, min(v2 + v1, 2335) + -336), 0), v3 + 3) == min(max(min((v0*336) + v1, min(v2 + v1, 2000) + -336), -335) - max(min((v0*336) + v1, min(v2 + v1, 2335) + -336), 0), v3 + 3));1;977;;;;;
 (((((max(min(min((v1*-1000) + v2, 1000)*-2, 1), -62)*4) + (max(((min((v1*-1000) + (v2 + v3), v3 + 1000)*-8) + ((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004)) + (v3*8), -4002)*-1))/4)*4) == ((max(min(min((v1*-1000) + v2, 1000)*-2, 1), -62)*4) + (max(((min((v1*-1000) + (v2 + v3), v3 + 1000)*-8) + ((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004)) + (v3*8), -4002)*-1)));0;4594;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;5106;;;;;
 (min(v0*4, ((max(((v1 + v2) + 7)/8, 255)/16)*16) + 35) == min(v0*4, ((max(((v1 + v2) + 7)/8, 255)/16)*16) + 35));1;82;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 166)/125) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 166)/125));1;222;;;;;
 ((((v0/4) + ((((min((v1*-32) + v2, 31) + 6)/19)*19) + (v1*32))) - max((v0/4) + ((v1*32) - (((v3 + v0) + -1)/4)), 6)) == (((v0/4) + ((((min((v1*-32) + v2, 31) + 6)/19)*19) + (v1*32))) - max((v0/4) + ((v1*32) - (((v3 + v0) + -1)/4)), 6)));1;134;;;;;
 (max(min(63 - (v0*22), (0 + 22) - 1) + 1, min(max(0 - (v0*22), 0), 22 + 0)) <= min(max(0 - (v0*22), 0), 22 + 0));0;851;;;;;
 (min(max(v0, 249) - min(v1, 0), v2) == min(max(v0, 249) - min(v1, 0), v2));1;1310;;;;;
 ((v0 + -1883) >= (((v0 + -1883) + 119) - 1));0;38;;;;;
 ((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3)) + 9)/2) == (((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3)) + 9)/2));1;216;;;;;
 (((min((((v0/63)*2) + v1)*4, ((((v2 + v0) + -1)/63)*8) + 8) + (v1*-4)) - ((v0/63)*8)) == ((min((((v0/63)*2) + v1)*4, ((((v2 + v0) + -1)/63)*8) + 8) + (v1*-4)) - ((v0/63)*8)));1;103;;;;;
 (((((v0 % ((v1 + 15)/16))*-16)/4)*4) == ((v0 % ((v1 + 15)/16))*-16));1;63;;;;;
 (min(((((v0 - v1) + 5)/4)*4) + v1, v0 + 2) == min(((((v0 - v1) + 5)/4)*4) + v1, v0 + 2));1;34;;;;;
 (min((min(((v0 + v1) + 15)/16, ((v1 + 30)/16) + (v2*6))*16) + 18, v3) == min((min(((v0 + v1) + 15)/16, ((v1 + 30)/16) + (v2*6))*16) + 18, v3));1;67;;;;;
 (min(v0 - max(min((v1 + v2)/8, 249), 0), v3) == min(v0 - max(min((v1 + v2)/8, 249), 0), v3));1;50;;;;;
 ((v0 - ((v1/63)*8)) == (v0 - ((v1/63)*8)));1;659;;;;;
 (min(v0*8, (((v1/8) + (v2*4))*8) + 19) == min(v0*8, (((v1/8) + (v2*4))*8) + 19));1;65;;;;;
 ((((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 192)/128) == (((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 192)/128));1;231;;;;;
 (((v0 % 500) + 1999) >= 0);1;25;;;;;
 (min((((((max(v0, 0) - v1) + 1)/31)*31) + v1)*8, (max(v0, 0)*8) + 12) == min((((((max(v0, 0) - v1) + 1)/31)*31) + v1)*8, (max(v0, 0)*8) + 12));1;84;;;;;
 (((v0*2) + ((v1*2) + (((v2/2)*17) + (((v3/65)*4) + v4)))) == ((v0*2) + ((v1*2) + (((v2/2)*17) + (((v3/65)*4) + v4)))));1;69;;;;;
 (((v0*72) + v1) == ((v0*72) + v1));1;26;;;;;
 (min(((v0/8) + (v1*128)) + 127, v2) == min(((v0/8) + (v1*128)) + 127, v2));1;52;;;;;
 (min((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32) - ((min((v1/65)*64, 4) + -38)/32)) + -1, v2) == min((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32) - ((min((v1/65)*64, 4) + -38)/32)) + -1, v2));1;90;;;;;
 ((min(v0*63, 62) + (min(v1*125, v2 + -125) + v3)) == (min(v0*63, 62) + (min(v1*125, v2 + -125) + v3)));1;52;;;;;
 (((((v0 + v1) + 499)/2) + ((v2*250) + (((((v0 + v1)/2) + (v2*250))/8)*-8))) == ((((v0 + v1) + 499)/2) + ((v2*250) + (((((v0 + v1)/2) + (v2*250))/8)*-8))));1;86;;;;;
 (max(min(max(((v0 - ((v1*12) + v2)) + 66)/4, 0), (v3 + 15)/4), min((min(((v4 + v0) - ((v1*12) + v2)) + 48, v3) + 11)/4, (((min((v4 + v0) + 54, v5) - v2)/4) + (v1*-3)) + 2) + 1) == max(min(max(((v0 - ((v1*12) + v2)) + 66)/4, 0), (v3 + 15)/4), min((min(((v4 + v0) - ((v1*12) + v2)) + 48, v3) + 11)/4, (((min((v4 + v0) + 54, v5) - v2)/4) + (v1*-3)) + 2) + 1));1;249;;;;;
 (((((((v0 + v1) + -1)/125) - (v1/125))/8) + 1) == ((((((v0 + v1) + -1)/125) - (v1/125))/8) + 1));1;79;;;;;
 (min(((v0 + v1) + 23)/8, v2 + -3) == min(((v0 + v1) + 23)/8, v2 + -3));1;49;;;;;
 (((v0 + 29)/24) != 0);0;362;;;;;
 (((v0 + 121)/63) != 0);0;220;;;;;
 (min(80 - (((v0*5) + ((v1*3) + v2))*4), 19 - (((v1*3) + v2)*4)) == min(80 - (((v0*5) + ((v1*3) + v2))*4), 19 - (((v1*3) + v2)*4)));1;82;;;;;
 (min(max(min((((v0 + v1) + 999)/8)*8, 1994), -5), (max(min(((v0 + v1)/8)*8, 2004), 5) + (v2*502)) + 491) == min(max(min((((v0 + v1) + 999)/8)*8, 1994), -5), (max(min(((v0 + v1)/8)*8, 2004), 5) + (v2*502)) + 491));1;881;;;;;
 (((min(v0*8, (((v1*62) + v2)*8) + 484) - (v1*496)) - (v2*8)) == ((min(v0*8, (((v1*62) + v2)*8) + 484) - (v1*496)) - (v2*8)));1;93;;;;;
 (min(max(min(v0, 499), 0) - max(min((v1 + v2)/4, 499), 0), v3) == min(max(min(v0, 499), 0) - max(min((v1 + v2)/4, 499), 0), v3));1;164;;;;;
 ((((v0 - v1) + 260)/254) != 0);0;699;;;;;
 (min((((v0/1000)*8) + v1)*32, ((((v2 + v0) + -1)/1000)*256) + 516) == min((((v0/1000)*8) + v1)*32, ((((v2 + v0) + -1)/1000)*256) + 516));1;62;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/4) + 2) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/4) + 2));1;253;;;;;
 ((288 - ((max(min((v0/32)*4, 285), 36) + v1)*8)) >= (2287 - ((max(min((v0/32)*4, 285), 36) + v1)*8)));0;92;;;;;
 ((((v0*8) + ((((min((v1*-153) + ((v2 - v0)*8), 45) + 109)/16)*16) + (v1*153))) + (min(((v2*8) - (v1*153)) - (v0*8), -106) + (min((min(((v2*8) - (v1*153)) - (v0*8), 45) + 109)/4, 3)*4))) == (((v0*8) + ((((min((v1*-153) + ((v2 - v0)*8), 45) + 109)/16)*16) + (v1*153))) + (min(((v2*8) - (v1*153)) - (v0*8), -106) + (min((min(((v2*8) - (v1*153)) - (v0*8), 45) + 109)/4, 3)*4))));1;151;;;;;
 (min(((v0/2) + (((min(((v1 + v0) + 1)/2, ((v2*8) + ((v3*2) + ((v0/2) + (v4*4)))) + 1) - (v0/2))/2)*2)) + 1, v5) == min(((v0/2) + (((min(((v1 + v0) + 1)/2, ((v2*8) + ((v3*2) + ((v0/2) + (v4*4)))) + 1) - (v0/2))/2)*2)) + 1, v5));1;114;;;;;
 (((((v0 % (((v1*8) + 75)/36))*36)/4)*4) == ((v0 % (((v1*8) + 75)/36))*36));1;58;;;;;
 ((min((((v0 + v1) + -1)/8) - (v2*63), (v1/8) + 62) - ((v1/8) + (v3*32))) == (min((((v0 + v1) + -1)/8) - (v2*63), (v1/8) + 62) - ((v1/8) + (v3*32))));1;92;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 30)/16) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 30)/16));1;295;;;;;
 (((((((v0 + v1) + -1)/16) - (v1/16))/4) + 1) == ((((((v0 + v1) + -1)/16) - (v1/16))/4) + 1));1;34;;;;;
 ((((v0*336)/8)*8) == (v0*336));1;32;;;;;
 (((v0*494) + (v1*8)) == ((v0*494) + (v1*8)));1;48;;;;;
 ((v0 - ((v1*4) + ((v2*504) + v3))) == (v0 - ((v1*4) + ((v2*504) + v3))));1;52;;;;;
 ((min(((v0*4) + v1) + 3, max(v2, 0) + (v3*-20)) + (v0*-4)) == (min(((v0*4) + v1) + 3, max(v2, 0) + (v3*-20)) + (v0*-4)));1;87;;;;;
 ((min((v0 + 436)/63, (((v1 + v0) + 62)/63) - (v2*8)) - (((v0 + -68)/63) + (v3*4))) == (min((v0 + 436)/63, (((v1 + v0) + 62)/63) - (v2*8)) - (((v0 + -68)/63) + (v3*4))));1;98;;;;;
 (min(1000 - (((v0*63) + v1)*8), v2 - (((v3*125) + ((v0*63) + v1))*8)) == min(1000 - (((v0*63) + v1)*8), v2 - (((v3*125) + ((v0*63) + v1))*8)));1;83;;;;;
 (((v0*140) + ((min(v1/8, 0)/16)*16)) == ((v0*140) + ((min(v1/8, 0)/16)*16)));1;40;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*128) + 253)/72) == (((((((v0 + v1) + 124)/125) - (v1/125))*128) + 253)/72));1;69;;;;;
 ((max(min(v0*4, 1999), 0) + (v1*4)) == (max(min(v0*4, 1999), 0) + (v1*4)));1;39;;;;;
 (min(((((v0 + v1) + 64)/65) - (v1/65))*8, (v2*8) + 131) == min(((((v0 + v1) + 64)/65) - (v1/65))*8, (v2*8) + 131));1;79;;;;;
 (min(((v0 + v1) + 62)/8, v2 + 3) == min(((v0 + v1) + 62)/8, v2 + 3));1;53;;;;;
 (((((((v0 + v1) + 135)/128) - (v1/128))/9) + 1) == ((((((v0 + v1) + 135)/128) - (v1/128))/9) + 1));1;72;;;;;
 (((v0 + v1)/8) >= ((((v0 + v1)/8) + ((((v0 + v1) % 8) + 143)/8)) - 1));0;92;;;;;
 ((((v0/2)*34) + ((v1/65)*8)) == (((v0/2)*34) + ((v1/65)*8)));1;95;;;;;
 (min(v0*1000, v1 + -1000) == min(v0*1000, v1 + -1000));1;857;;;;;
 (0 == ((0 + (102 - max((v0 % 8)*13, 89))) - 1));0;55;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 269)/252) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 269)/252));1;156;;;;;
 (((v0/16) + ((v1/4)*32)) == ((v0/16) + ((v1/4)*32)));1;38;;;;;
 (((v0*63) + (max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) - max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127))) == ((v0*63) + (max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) - max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127))));1;1126;;;;;
 (((v0 + 169)/128) != 0);0;318;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7)) + 29)/16) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7)) + 29)/16));1;262;;;;;
 (min(max(v0, 0) + (v1*8), max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) + 492) == min(max(v0, 0) + (v1*8), max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) + 492));1;85;;;;;
 ((min(((v0 + v1)/63)*64, (v0 + v1) + 11) + (v2*4)) == (min(((v0 + v1)/63)*64, (v0 + v1) + 11) + (v2*4)));1;61;;;;;
 ((((((((v0 + v1) + -1)/250) - (v1/250))*256) + 471)/35) == (((((((v0 + v1) + -1)/250) - (v1/250))*256) + 471)/35));1;70;;;;;
 (min(((v0 + v1) + 3)/4, (v1/4) + v2) == min(((v0 + v1) + 3)/4, (v1/4) + v2));1;51;;;;;
 (((max(v0, 249)*8) - ((v1*20) + v2)) == ((max(v0, 249)*8) - ((v1*20) + v2)));1;59;;;;;
 ((((v0 + v1)/4) + (v2*4)) == (((v0 + v1)/4) + (v2*4)));1;1148;;;;;
 (min(((v0 + v1) + -1)/16, v2 + 62) == min(((v0 + v1) + -1)/16, v2 + 62));1;41;;;;;
 (min(((v0*-64) + ((v1*252) + (((((min((v0*64) + 64, (v1*-252) + v2) + -3)/4) + (v0*16))*4) + v3))) + 6, v4) == min(((v0*-64) + ((v1*252) + (((((min((v0*64) + 64, (v1*-252) + v2) + -3)/4) + (v0*16))*4) + v3))) + 6, v4));1;107;;;;;
 (min(((v0 + v1) + 1)/2, ((v1/2) + ((v2/4)*4)) + 3) == min(((v0 + v1) + 1)/2, ((v1/2) + ((v2/4)*4)) + 3));1;74;;;;;
 (max(0, min(283 - ((v0 % 32)*9), (0 + 9) - 1) + 1) <= 0);0;63;;;;;
 (min(max(((v0 - (max(min((v1/63)*8, 285), 36)*8)) + 1304)/1004, 0), ((v2*8) + 1005)/1004) == min(max(((v0 - (max(min((v1/63)*8, 285), 36)*8)) + 1304)/1004, 0), ((v2*8) + 1005)/1004));1;107;;;;;
 (min((((v0*2) + v1)*4) + 9, v2) == min((((v0*2) + v1)*4) + 9, v2));1;76;;;;;
 ((((v0*-128)/8)*8) == (v0*-128));1;58;;;;;
 (((v0 + 136)/130) != 0);0;378;;;;;
 ((v0 - ((v1*8) + ((v2*16) + v3))) == (v0 - ((v1*8) + ((v2*16) + v3))));1;45;;;;;
 (min((v0*128) + ((v1*8) + v2), min((v2 + (v0*128)) + 16, v3 + v4) + -8) == min((v0*128) + ((v1*8) + v2), min((v2 + (v0*128)) + 16, v3 + v4) + -8));1;81;;;;;
 (((v0*4) + v1) >= (((v0*4) + (v1 - 1)) + 1));1;57;;;;;
 (((v0 + 259)/252) != 0);0;338;;;;;
 (min((v0*10) + v1, v2 + 3) == min((v0*10) + v1, v2 + 3));1;56;;;;;
 (max(min(v0, 2193), ((max(min(v0, 2193), 194) + v1) + v2) + 200) == max(min(v0, 2193), ((max(min(v0, 2193), 194) + v1) + v2) + 200));1;62;;;;;
 ((max(min(((v0*4) + v1) - v2, 0), -3)*8) == (((max(min(((v0*4) + v1) - v2, 0), -3)*8) + (4 - (max(min(((v0*4) + v1) - v2, 0), -3)*8))) - 1));0;126;;;;;
 ((((min((v0*8) + (((v1 + min(v2*125, v3 + -125))/8) + -1), ((v1 + min(v2*125, v3 + -125)) + 164)/8)*-8)/8)*8) == (min((v0*8) + (((v1 + min(v2*125, v3 + -125))/8) + -1), ((v1 + min(v2*125, v3 + -125)) + 164)/8)*-8));1;110;;;;;
 (((v0*128) + (((v1 + v2)/2) + (v3*32))) == ((v0*128) + (((v1 + v2)/2) + (v3*32))));1;47;;;;;
 ((max(min(((((v0/8)*8) + -5)/63)*8, 253), 4) + (v1*4)) == (max(min(((((v0/8)*8) + -5)/63)*8, 253), 4) + (v1*4)));1;114;;;;;
 (max(v0*2, ((v1*2) + v2) + 14) == max(v0*2, ((v1*2) + v2) + 14));1;52;;;;;
 ((((v0*8) + 48)/20) != 0);0;425;;;;;
 (max(min(min(((v0 + v1) + 62)/8, v2 + 4) - ((v3*4) + v4), min(v5 - v4, -9) + 12), min(max(((v1 + 62)/8) - ((v3*4) + v4), -1), min(v5 - v4, -9) + 13)) == max(min(min(((v0 + v1) + 62)/8, v2 + 4) - ((v3*4) + v4), min(v5 - v4, -9) + 12), min(max(((v1 + 62)/8) - ((v3*4) + v4), -1), min(v5 - v4, -9) + 13)));1;217;;;;;
 ((max(min((((v0/63)*16) + v1)*4, min(v2*8, 1947) + 148), 96) - max(min((((v0/63)*16) + v1)*4, min(v2*8, 1950) + 148), 99)) == (max(min((((v0/63)*16) + v1)*4, min(v2*8, 1947) + 148), 96) - max(min((((v0/63)*16) + v1)*4, min(v2*8, 1950) + 148), 99)));1;949;;;;;
 (((v0*132) + ((v1/8)*8)) == ((v0*132) + ((v1/8)*8)));1;59;;;;;
 ((v0 - (v1*125)) == (v0 - (v1*125)));1;13;;;;;
 (((min((min((v3*504) + ((v2/2) + 500), ((v1 + v2) + 1001)/2)*-1) + (((v1 + v2) + 985)/2), 496)/8)*8) == min((min((v3*504) + ((v2/2) + 500), ((v1 + v2) + 1001)/2)*-1) + (((v1 + v2) + 985)/2), 496));0;1661;;;;;
 (((v0*2) - ((max(min(v1, 249), 0)*2) + v2)) == ((v0*2) - ((max(min(v1, 249), 0)*2) + v2)));1;65;;;;;
 (max((((v0 + 4) % 8) + 515)/8, (max((v0 + 507)/8, min((v0 + 483)/8, (v0/8) + (((((min(v1*1000, v2 + -1000) + v3) % 8) + 507)/32)*4)) + 3) - (v0/8)) + 1) <= 1024);0;2042;;;;;
 (min((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*63)) - max(min(v1/2, 1006), 7), min(v3, 55) + 39) == min((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*63)) - max(min(v1/2, 1006), 7), min(v3, 55) + 39));1;105;;;;;
 ((((v0 - v1) + 146)/133) == (((v0 - v1) + 146)/133));1;53;;;;;
 (((((v0*10) + v1)*8) + -194) == ((((((v0*10) + v1)*8) + -194) + ((v2*8) + 87)) - 1));0;108;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -1883) <= ((((0*4) + v0) + 0) + -1883))) && (((((30*4) + v0) + 3) + -1883) >= ((((30*4) + v0) + 3) + -1883))) && (((v1*32) + -942) <= (0 + ((v1*32) + -942)))) && (((v2*32) + -733) >= (1 + ((v2*32) + -734)))) && (v3 <= v3)) && (v3 >= v3));1;198;;;;;
 (min(max(((v0 - (((max(min(v1, 2005), 6) + -10)/4)*4)) + 15)/16, 0), (v2 + 7)/4) == min(max(((v0 - (((max(min(v1, 2005), 6) + -10)/4)*4)) + 15)/16, 0), (v2 + 7)/4));1;104;;;;;
 (min(v0*8, v1 + 45) == min(v0*8, v1 + 45));1;58;;;;;
 (0 == ((0 + (126 - max(v0*16, 110))) - 1));0;65;;;;;
 (max((((((v0*125) + v1) + v2)*2) + v3)*2, (((v4/4)*4) + ((v5*1000) + ((((v0*125) + v1)*4) + ((v3*2) - max((((((v0*125) + ((v4/4) + (v5*250))) + v1)*2) + v3)*2, 1999))))) + 1999) == max((((((v0*125) + v1) + v2)*2) + v3)*2, (((v4/4)*4) + ((v5*1000) + ((((v0*125) + v1)*4) + ((v3*2) - max((((((v0*125) + ((v4/4) + (v5*250))) + v1)*2) + v3)*2, 1999))))) + 1999));1;181;;;;;
 (((v0 + 1004)/1002) != 0);0;334;;;;;
 (min((((min(v0 - v1, (v2*32) + 20) + 15)/4)*4) + v1, min(((v2*32) + v1) + 20, v0) + 12) == min((((min(v0 - v1, (v2*32) + 20) + 15)/4)*4) + v1, min(((v2*32) + v1) + 20, v0) + 12));1;95;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*500)) + 499) == min(max(min(((v0 + v1) + -1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*500)) + 499));1;111;;;;;
 (((((((v0 + v1) + 11)/2) - (v1/2)) + 515)/508) == ((((((v0 + v1) + 11)/2) - (v1/2)) + 515)/508));1;82;;;;;
 (min(max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0), v2) == min(max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0), v2));1;231;;;;;
 ((max((((((v0*250) + v1) + 31)/8) + ((((((v0*250) - (((((v0*250) + v1) + 15)/8)*8)) + v1) + 257)/24)*3)) - ((((v0*250) + v1) + 15)/8), 2) + 1) <= 1024);0;1881;;;;;
 (((206 - max(v0*120, 118)) - (v1*32)) == ((206 - max(v0*120, 118)) - (v1*32)));1;53;;;;;
 (max(((v0 - v1) + 6)/87, 0) >= ((max(((v0 - v1) + 6)/87, 0) + ((((v0 - v1) + 92)/87) - max(((v0 - v1) + 6)/87, 0))) - 1));1;125;;;;;
 ((v0 - ((v1*4) + v2)) == (v0 - ((v1*4) + v2)));1;37;;;;;
 ((((v0*256) + 794)/263) != 0);0;461;;;;;
 (max(min(max(((v0 - v1) + 65)/64, 0), (v2 + 67)/64), (min(((v3 + v0) - v1) + 61, v2) + 4)/64) == max(min(max(((v0 - v1) + 65)/64, 0), (v2 + 67)/64), (min(((v3 + v0) - v1) + 61, v2) + 4)/64));1;118;;;;;
 ((max(min(v0*8, 2044), 45) + min(v1*4, v2 + 58)) == (max(min(v0*8, 2044), 45) + min(v1*4, v2 + 58)));1;61;;;;;
 (max(min(max(((v0 - (v1*2)) + 155)/64, 0), ((v2 - v1) + 31)/32), min((((v3 + v0) - (v1*2)) + 91)/64, ((v2 - v1)/32) + -1) + 1) == max(min(max(((v0 - (v1*2)) + 155)/64, 0), ((v2 - v1) + 31)/32), min((((v3 + v0) - (v1*2)) + 91)/64, ((v2 - v1)/32) + -1) + 1));1;164;;;;;
 ((((v0*3) + (v1 + v2)) + -1) == (((((v0*3) + (v1 + v2)) + -1) + 5) - 1));0;61;;;;;
 ((v0 - ((v1/63)*2)) == (v0 - ((v1/63)*2)));1;45;;;;;
 ((((v0*8) + 144)/131) != 0);0;464;;;;;
 (min(v0*16, v1 + 4) == min(v0*16, v1 + 4));1;38;;;;;
 (min((((v0/63)*2) + v1)*4, ((((v2 + v0) + 62)/63)*8) + 4) == min((((v0/63)*2) + v1)*4, ((((v2 + v0) + 62)/63)*8) + 4));1;85;;;;;
 (min((min(v0*32, 488) + (v1*508)) + 8, v2) == min((min(v0*32, 488) + (v1*508)) + 8, v2));1;59;;;;;
 (((v0/4) + 1) != 0);0;344;;;;;
 ((v0*4) >= ((((v0 - 1)*4) + 3) + 1));1;51;;;;;
 (((v0 + 43)/33) != 0);0;528;;;;;
 (min(49 - ((v0*7) + (v1*13)), 12 - (v0*7)) == min(49 - ((v0*7) + (v1*13)), 12 - (v0*7)));1;46;;;;;
 (max(-886 - ((v0 - v1)*4), ((v0 - v1)*4) + 39) >= 0);0;726;;;;;
 (((((((uint1)1 && ((-5 + v0) <= (-5 + v0))) && ((((11 + -5) - 1) + v0) >= (((11 + -5) - 1) + v0))) && ((((0*16) + ((((v1*2) + v2)*32) + ((v3*128) + v4))) + 0) <= ((((v1*2) + v2)*32) + ((v3*128) + v4)))) && ((((0*16) + (((((v1*2) + v2)*32) + ((v3*128) + v4)) + 16)) + 15) >= (((((v1*2) + v2)*32) + ((v3*128) + v4)) + 31))) && (0 <= 0)) && (0 >= 0));1;200;;;;;
 ((((max(min(v0, 248), -1)*8) - (v1*1001)) - (max(min(v2/8, 254), 5)*8)) == (((max(min(v0, 248), -1)*8) - (v1*1001)) - (max(min(v2/8, 254), 5)*8)));1;99;;;;;
 (((v0 + 499)/500) != 0);0;373;;;;;
 ((max(min(min(v0*32, 93) + (v1 + v2), 1999), 0) + (v3*4)) == (max(min(min(v0*32, 93) + (v1 + v2), 1999), 0) + (v3*4)));1;69;;;;;
 ((min((min(((v0/4)*4) + 3, v1) + (v2*-4)) - (v3*8), -13) + (v2*4)) == (min((min(((v0/4)*4) + 3, v1) + (v2*-4)) - (v3*8), -13) + (v2*4)));1;156;;;;;
 ((((max(v0, 249) - min(v1, 0)) + 15)/4) == (((max(v0, 249) - min(v1, 0)) + 15)/4));1;63;;;;;
 ((min(v0, 0) + -5) == (((min(v0, 0) + -5) + (7 - min(v0, 0))) - 1));0;72;;;;;
 ((min(((v0*8) + v1)*4, min(v0*32, 93) + 28) + (min(v2*125, v3 + -125) + v4)) == (min(((v0*8) + v1)*4, min(v0*32, 93) + 28) + (min(v2*125, v3 + -125) + v4)));1;83;;;;;
 (max(-336 - (v0*32), (v0*32) + 71) >= 0);0;520;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8)) + 17)/16) == ((((((v0 + v1) + -1)/8) - (v1/8)) + 17)/16));1;59;;;;;
 ((min((((v0 + v1) + -1)/2) - (v2*4), (v1/2) + 3) - ((v1/2) + (v3*2))) == (min((((v0 + v1) + -1)/2) - (v2*4), (v1/2) + 3) - ((v1/2) + (v3*2))));1;104;;;;;
 ((((max(((v0 + v1) + 7)/4, 499) - min(v1/4, 0))/32) + 1) >= 0);1;78;;;;;
 ((max(v0, 0) - min(v0, 1)) == (max(v0, 0) - min(v0, 1)));1;37;;;;;
 (((v0/63) + ((v1/8)*19)) == ((v0/63) + ((v1/8)*19)));1;43;;;;;
 ((max(min(((v0*4) + v1)*2, 499), 0) + ((v2/4)*4)) == (max(min(((v0*4) + v1)*2, 499), 0) + ((v2/4)*4)));1;70;;;;;
 (((((v0 + v1) + 7)/2) - ((v2*8) + v3)) == ((((v0 + v1) + 7)/2) - ((v2*8) + v3)));1;55;;;;;
 (max(min(min(min(((v1 + 33)/4) - (v4*4), (((v2 + v3) + 19)/4) - (v4*4)), ((min(v1 + 11, v2 + v3) + 22)/4) - (v4*4)), (0 + (v5 + 10)) - 1) + 1, min(max((((v3 + 22)/4) - (v4*4)) + 1, 0), (v5 + 10) + 0)) <= min(max((((v3 + 22)/4) - (v4*4)) + 1, 0), (v5 + 10) + 0));0;3442;;;;;
 (((((max(min(((v0 + v1) + 71)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 305)/251) == ((((max(min(((v0 + v1) + 71)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 305)/251));1;291;;;;;
 (((v0*116) + (((v1 + v2)/32)*32)) == ((v0*116) + (((v1 + v2)/32)*32)));1;72;;;;;
 (((v0/63) + (v1*16)) == ((v0/63) + (v1*16)));1;1373;;;;;
 (0 == ((0 + (67 - max(v0*8, 59))) - 1));0;71;;;;;
 (min((v0*4) + ((v1 + v2) + v3), ((v4*125) + (v1 + v2)) + 121) == min((v0*4) + ((v1 + v2) + v3), ((v4*125) + (v1 + v2)) + 121));1;83;;;;;
 (max(-1138 - (v0*64), (v0*64) + 388) >= 0);0;603;;;;;
 (min(max(((v0 + 55)/4) - (v1*2), -1), (min(min((v2 - (v3*4)) + 8, v4) - min(v4, 0), 0)*2) + 8) == min(max(((v0 + 55)/4) - (v1*2), -1), (min(min((v2 - (v3*4)) + 8, v4) - min(v4, 0), 0)*2) + 8));1;230;;;;;
 (min(((v0 + v1) + -1)/4, ((v2*32) + v3) + 31) == min(((v0 + v1) + -1)/4, ((v2*32) + v3) + 31));1;65;;;;;
 (max(0, min((((min(v0*64, v1 + -64) + v2) % 4) + 55)/16, (0 + 5) - 1) + 1) <= 0);0;69;;;;;
 (min((((v0 + v1) + 31)/32)*32, v2 + 620) == min((((v0 + v1) + 31)/32)*32, v2 + 620));1;62;;;;;
 (((v0*8) - ((((v1*68) + v2)*4) + v3)) == ((v0*8) - ((((v1*68) + v2)*4) + v3)));1;48;;;;;
 (min(max(min(((v0 + v1) + 1001)/2, 999), 0), (max(min((v0 + v1)/2, 1006), 7) + (v2*32)) + 7) == min(max(min(((v0 + v1) + 1001)/2, 999), 0), (max(min((v0 + v1)/2, 1006), 7) + (v2*32)) + 7));1;92;;;;;
 (max(min(min(v0*32, 93) + (v1 + v2), 1999), ((max(min(min(v0*32, 93) + (v1 + v2), 1999), 0) + v3) + v4) + 44) == max(min(min(v0*32, 93) + (v1 + v2), 1999), ((max(min(min(v0*32, 93) + (v1 + v2), 1999), 0) + v3) + v4) + 44));1;101;;;;;
 (min(max(max(min(((min((v0*8) + 147, v1 + v2) + 19)/4) - (v3*2), min(((v1 + v2)/4) - (v3*2), ((v0 - v3)*2) + 37) + 4), ((v2 + 19)/4) - (v3*2)), -1), ((v0 - v3)*2) + 42) == min(max(max(min(((min((v0*8) + 147, v1 + v2) + 19)/4) - (v3*2), min(((v1 + v2)/4) - (v3*2), ((v0 - v3)*2) + 37) + 4), ((v2 + 19)/4) - (v3*2)), -1), ((v0 - v3)*2) + 42));1;198;;;;;
 ((((v0/500)*16) + (v1*36)) == (((v0/500)*16) + (v1*36)));1;57;;;;;
 (((((((uint1)1 && ((v0 + -9) <= (((((max(-2, 0)*4) + v0) + 0) + -4) + -5))) && ((((v1*4) + v0) + 12) >= ((((((v1 + 3)*4) + v0) + 3) + 2) + -5))) && ((((((v2*129) + v3) + v4) + 0) + -8) <= (((((v2*129) + v3) + v4) + -4) + -10))) && ((((((v2*129) + v3) + v4) + 3) + -8) >= (((((v2*129) + v3) + v4) + 2) + -10))) && (v5 <= v5)) && (v5 >= v5));0;261;;;;;
 (min((v0*4) + v1, v2 + -4) == min((v0*4) + v1, v2 + -4));1;82;;;;;
 (((v0*2) + ((v1*20) + v2)) == ((v0*2) + ((v1*20) + v2)));1;63;;;;;
 (((min(v0*256, 3752)/4)*4) == min(v0*256, 3752));1;51;;;;;
 ((v0 - max(min((min(v1*16, 109) + (v2 + v3))/2, 999), 0)) == (v0 - max(min((min(v1*16, 109) + (v2 + v3))/2, 999), 0)));1;66;;;;;
 ((((v0*32)/13) + 6) != 0);0;367;;;;;
 (min((v0*252) + 242, v1) == min((v0*252) + 242, v1));1;38;;;;;
 ((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3)) + 13)/4) == (((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3)) + 13)/4));1;239;;;;;
 ((v0 - (v1*1004)) == (v0 - (v1*1004)));1;23;;;;;
 (min(((v0 + v1) + 124)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 156)/32)*4)) + -1) == min(((v0 + v1) + 124)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 156)/32)*4)) + -1));1;1598;;;;;
 ((((v0 - v1)/127) + 1) == (((v0 - v1)/127) + 1));1;80;;;;;
 (max(min(max(((((v0 + 6)/8) - ((((v1*2) + v2)*4) + v3)) + 3)/4, 0), v4 + 1), min(min(min(min(min(min(min(min(min(min(min(((min(((v5 + v0)/8) + 2, v6) - ((((v1*2) + v2)*4) + v3)) + -3)/4, (((((v5 + v0) + -33)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -9)/8) - v3)/4) - ((v1*2) + v2)), ((v6 - ((((v1*2) + v2)*4) + v3)) + -3)/4), (((((v5 + v0) + -7)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -6)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -5)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -4)/8) - v3)/4) - ((v1*2) + v2)), ((v6 - ((((v1*2) + v2)*4) + v3)) + -3)/4), (((((v5 + v0) + -3)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -2)/8) - v3)/4) - ((v1*2) + v2)), v4) + 1) == max(min(max(((((v0 + 6)/8) - ((((v1*2) + v2)*4) + v3)) + 3)/4, 0), v4 + 1), min(min(min(min(min(min(min(min(min(min(min(((min(((v5 + v0)/8) + 2, v6) - ((((v1*2) + v2)*4) + v3)) + -3)/4, (((((v5 + v0) + -33)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -9)/8) - v3)/4) - ((v1*2) + v2)), ((v6 - ((((v1*2) + v2)*4) + v3)) + -3)/4), (((((v5 + v0) + -7)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -6)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -5)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -4)/8) - v3)/4) - ((v1*2) + v2)), ((v6 - ((((v1*2) + v2)*4) + v3)) + -3)/4), (((((v5 + v0) + -3)/8) - v3)/4) - ((v1*2) + v2)), (((((v5 + v0) + -2)/8) - v3)/4) - ((v1*2) + v2)), v4) + 1));1;648;;;;;
 (((v0*-6) + ((min(((v0*3) + v1)*8, (((((v2 + v3) + -1)/65)*8) - (v4*84)) - ((v3/65)*8))/4) + (v1*-2))) == ((v0*-6) + ((min(((v0*3) + v1)*8, (((((v2 + v3) + -1)/65)*8) - (v4*84)) - ((v3/65)*8))/4) + (v1*-2))));1;115;;;;;
 (max((min(v0*4, 3) + v1) + 7, (v0*4) + v2) == max((min(v0*4, 3) + v1) + 7, (v0*4) + v2));1;63;;;;;
 (max(0, min(((v0 % 2) + 175)/89, (0 + 3) - 1) + 1) <= 0);0;44;;;;;
 (min(507 - (((v0*64) + v1)*4), (max(min(v2, 2003), 4) - ((((v0*64) + v1)*4) + v3)) + 5) == min(507 - (((v0*64) + v1)*4), (max(min(v2, 2003), 4) - ((((v0*64) + v1)*4) + v3)) + 5));1;93;;;;;
 (((v0*8) + ((v1*4) + v2)) == ((v0*8) + ((v1*4) + v2)));1;77;;;;;
 (0 >= ((0 + ((((min((((((v0 + v1) + 7)/8) - (v2*128)) - (v3*32)) - (v1/8), (min((v4*3) + v5, 7)*4) + 3)/4) - v5) - (v4*3)) + 1)) - 1));0;1776;;;;;
 ((((v0 + v1)*16) + (v2*3)) == (((v0 + v1)*16) + (v2*3)));1;32;;;;;
 (((v0*61) + (((375 - ((min(v1*125, v2 + -125) + v3) % 500))/500)*512)) == ((v0*61) + (((375 - ((min(v1*125, v2 + -125) + v3) % 500))/500)*512)));1;75;;;;;
 (min(250 - (v0*63), max(min(v1 + v2, 2000), 1) - ((v0*63) + v3)) == min(250 - (v0*63), max(min(v1 + v2, 2000), 1) - ((v0*63) + v3)));1;67;;;;;
 ((((v0 - v1)/128) + 1) != 0);0;435;;;;;
 (((v0/62) + (v1*4)) == ((v0/62) + (v1*4)));1;34;;;;;
 (((v0 - v1) - (v2/65)) == ((v0 - v1) - (v2/65)));1;43;;;;;
 ((((min((v2*1000) + 1000, v1) + (min(v2*1000, v1)*-1))/4)*4) == (min((v2*1000) + 1000, v1) + (min(v2*1000, v1)*-1)));0;869;;;;;
 (max(min(v0 + 1, v1), v2) == max(min(v0 + 1, v1), v2));1;35;;;;;
 (min((((v0 + v1) + 31)/32)*4, (((v1/32) + v2)*4) + 3) == min((((v0 + v1) + 31)/32)*4, (((v1/32) + v2)*4) + 3));1;52;;;;;
 (min(max(min((v0/32)*4, 285), 36) + (v1*4), max(min((((v2 + v0) + 127)/32)*4, 246), -3) + 36) == min(max(min((v0/32)*4, 285), 36) + (v1*4), max(min((((v2 + v0) + 127)/32)*4, 246), -3) + 36));1;106;;;;;
 ((max(min((v0 + v1)/8, 254), 5) + (v2*4)) == (max(min((v0 + v1)/8, 254), 5) + (v2*4)));1;59;;;;;
 (min((v0*4) + v1, (v2*8) + 226) == min((v0*4) + v1, (v2*8) + 226));1;35;;;;;
 ((((v0 + v1) + v2)/4) >= ((((((v0 - 1) + v1) + v2)/4) + 1) + 1));0;115;;;;;
 (((((((uint1)1 && ((max((((max(((0 - (((v0*125) + v1) % 8))/8)*8, -7) + ((v0*125) + v1)) + 7)/8)*8, ((((((v0*125) + v1) + -1)/8) + v2)*8) + 11) + -5) <= (max((((max(((0 - (((v0*125) + v1) % 8))/8)*8, -7) + ((v0*125) + v1)) + 7)/8)*8, ((((((v0*125) + v1) + -1)/8) + v2)*8) + 11) + -5))) && ((((((((v0*125) + v1) + 7)/8) + v2)*8) + 5) >= (((((((v0*125) + v1) + 7)/8) + v2)*8) + 5))) && (((((((v3/8)*2) + 0)*4) + 0) + -5) <= ((((((v3/8)*2) + 0)*4) + 0) + -5))) && (((((((v3/8)*2) + (((((((((v4 + 3)/4)*4) + v3) + 7)/8) - (v3/8))*2) + 2))*4) + 3) + -5) >= ((((((v3/8)*2) + (((((((((v4 + 3)/4)*4) + v3) + 7)/8) - (v3/8))*2) + 2))*4) + 3) + -5))) && (0 <= 0)) && (2 >= 2));1;573;;;;;
 ((max((v0*500) + (max(min((v1*1000) + v2, min(v3 + v2, 2999) + -1000), 0) - max(min((v1*1000) + v2, min(v3 + v2, 2000) + -1000), -999)), 500) + (v4*253)) == (max((v0*500) + (max(min((v1*1000) + v2, min(v3 + v2, 2999) + -1000), 0) - max(min((v1*1000) + v2, min(v3 + v2, 2000) + -1000), -999)), 500) + (v4*253)));1;1177;;;;;
 (((((v0 % (((v1*64) + 219)/68))*68)/4)*4) == ((v0 % (((v1*64) + 219)/68))*68));1;58;;;;;
 (min(((max(min(v0, 31), 0)*2) + v1)*4, (max(min(v0, 29), 0)*8) + 20) == min(((max(min(v0, 31), 0)*2) + v1)*4, (max(min(v0, 29), 0)*8) + 20));1;92;;;;;
 (min(125 - (v0*32), (((((v1 + v2) + 3)/4)*4) - ((v0*32) + v3)) + 11) == min(125 - (v0*32), (((((v1 + v2) + 3)/4)*4) - ((v0*32) + v3)) + 11));1;79;;;;;
 (((((((uint1)1 && (((0 + (max(v0*500, -2) + v1)) + 2) <= ((v0*500) + v1))) && (((1 + ((((min(v0*500, -2)/2)*2) + (max(v0*500, -2) + v1)) + 500)) + 2) >= (((v0*500) + v1) + 501))) && ((((0*4) + v2) + 0) <= v2)) && ((((31*4) + v2) + 3) >= (v2 + 124))) && (0 <= 0)) && (0 >= 0));0;283;;;;;
 ((v0 + -37) >= (((v0 + -37) + (min(v1 - (max(((v2*4) - v3) + v4, 1)*16), -77) + 78)) - 1));1;181;;;;;
 (min(((v0 + v1) + 62)/8, v2 + 3) == min(((v0 + v1) + 62)/8, v2 + 3));1;893;;;;;
 ((((min(((v3 % ((v4 + 19)/16))*128) + (((v2/8)*8) + 100), (((v1 + v2) + 7)/8)*8)*-1)/4)*4) == (min(((v3 % ((v4 + 19)/16))*128) + (((v2/8)*8) + 100), (((v1 + v2) + 7)/8)*8)*-1));0;1831;;;;;
 (min(v0/32, v1) == min(v0/32, v1));1;19;;;;;
 (((v0*128) + (max(min(((((min(v1, 969) + v2) + -1009)/8) + (v3*128))*2, 499), 0) - max(min(min((((min(v1, 969) + v2) + 15)/8) + (v3*128), v4)*2, 499), 0))) == ((v0*128) + (max(min(((((min(v1, 969) + v2) + -1009)/8) + (v3*128))*2, 499), 0) - max(min(min((((min(v1, 969) + v2) + 15)/8) + (v3*128), v4)*2, 499), 0))));1;510;;;;;
 (min((v0*3) + ((v1/63)*8), v2 + 4) == min((v0*3) + ((v1/63)*8), v2 + 4));1;817;;;;;
 ((((v0 - v1)/256) + 1) == (((v0 - v1)/256) + 1));1;67;;;;;
 (min(154 - (((v0*2) + v1)*8), ((max(v2, 0)*8) - ((((v0*2) + v1)*8) + v3)) + 11) == min(154 - (((v0*2) + v1)*8), ((max(v2, 0)*8) - ((((v0*2) + v1)*8) + v3)) + 11));1;101;;;;;
 ((((v0 - v1) + 323)/316) == (((v0 - v1) + 323)/316));1;35;;;;;
 ((((max(min(((v0 + v1) + -1)/2, 999), 0)*2) - (v2*125)) - (max(min(v1/2, 999), 0)*2)) == (((max(min(((v0 + v1) + -1)/2, 999), 0)*2) - (v2*125)) - (max(min(v1/2, 999), 0)*2)));1;119;;;;;
 (min(min(v0, 2007) + (((v1 + 7)/4)*4), max(v0, 5) + 4) == min(min(v0, 2007) + (((v1 + 7)/4)*4), max(v0, 5) + 4));1;58;;;;;
 (min(max(((v0 + -1)/4) - (v1*2), -1), ((max(v2, 0) - v1)*2) + 1) == min(max(((v0 + -1)/4) - (v1*2), -1), ((max(v2, 0) - v1)*2) + 1));1;68;;;;;
 ((max(min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*64)) + 63), 499), 0) - max(min((v1/4) + (v2*64), 499), 0)) == (max(min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*64)) + 63), 499), 0) - max(min((v1/4) + (v2*64), 499), 0)));1;1594;;;;;
 (((min(v0*8, 118) + ((v1*4) + v2)) + v3) < ((min(v0*8, 118) + ((v1*4) + (v2 + 1))) + v3));1;91;;;;;
 (((v0 + 68)/64) != 0);0;399;;;;;
 (min(min(v0, 7914) + (v1*8), v2 + 3811) == min(min(v0, 7914) + (v1*8), v2 + 3811));1;76;;;;;
 (((((v0 + v1)/4) + ((min((min(((((v0 + v1) % 4) + 999)/4) + (v2*-128), 127) + 6)/33, ((max(((-996 - ((v0 + v1) % 4))/4) + (v2*128), -127)*-4) + 27)/132)*33) + (v2*128))) - -26) == ((((v0 + v1)/4) + ((min((min(((((v0 + v1) % 4) + 999)/4) + (v2*-128), 127) + 6)/33, ((max(((-996 - ((v0 + v1) % 4))/4) + (v2*128), -127)*-4) + 27)/132)*33) + (v2*128))) - -26));1;213;;;;;
 (((((v0 + v1) + 511)/504) - (v1/504)) == ((((v0 + v1) + 511)/504) - (v1/504)));1;49;;;;;
 (min(v0*8, (((v1*2) + v2)*4) + -57) == min(v0*8, (((v1*2) + v2)*4) + -57));1;64;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 334)/252) == (((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 334)/252));1;241;;;;;
 (((((((uint1)1 && ((((((v0*8) + v1)*4) + v2) + 0) <= ((((v0*8) + v1)*4) + v2))) && ((((((v0*8) + v1)*4) + v2) + 3) >= (((((v0*8) + v1)*4) + v2) + 3))) && (0 <= 0)) && ((8 - 1) >= 7)) && (v3 <= v3)) && (v3 >= v3));1;145;;;;;
 (((v0*16) + ((((v1 + v2)/32)*2) + v3)) == ((v0*16) + ((((v1 + v2)/32)*2) + v3)));1;59;;;;;
 ((min(v0*12, 57) + (v1*4)) == (min(v0*12, 57) + (v1*4)));1;53;;;;;
 (min((v0*4) + ((v1*12) + v2), ((((v3 + v4) + 7)/8)*8) + 45) == min((v0*4) + ((v1*12) + v2), ((((v3 + v4) + 7)/8)*8) + 45));1;72;;;;;
 (((v0/8) + (v1*16)) == ((v0/8) + (v1*16)));1;312;;;;;
 (min((((v0 + v1) + -1)/63)*8, v2 + 5) == min((((v0 + v1) + -1)/63)*8, v2 + 5));1;71;;;;;
 ((max(min(v0, 1030), 31) + (v1*2)) == (max(min(v0, 1030), 31) + (v1*2)));1;51;;;;;
 (min((((v0 + v1) + 749)/250) - (v1/250), v2 + 3) == min((((v0 + v1) + 749)/250) - (v1/250), v2 + 3));1;53;;;;;
 (((v0 + 1008)/1004) == ((v0 + 1008)/1004));1;29;;;;;
 (max((min((((v0 + v1) + 13)/2) - (v1/2), v2 + 1) + 62)/63, max(v3/63, -1) + 1) == max((min((((v0 + v1) + 13)/2) - (v1/2), v2 + 1) + 62)/63, max(v3/63, -1) + 1));1;101;;;;;
 (min((((((v0/1000)*8) + v1)*2) + v2)*16, ((((v3 + v0) + -1)/1000)*256) + 516) == min((((((v0/1000)*8) + v1)*2) + v2)*16, ((((v3 + v0) + -1)/1000)*256) + 516));1;118;;;;;
 (min((v0*-64) + v1, v2 + 14) == min((v0*-64) + v1, v2 + 14));1;56;;;;;
 (((v0*1004) + (((max(min(v1, 2002), 3) + -3)/16)*16)) == ((v0*1004) + (((max(min(v1, 2002), 3) + -3)/16)*16)));1;67;;;;;
 (min(max(min(v0*8, 2002), 3) + (((v1 + 73)/4)*4), max(min(v0*8, 1938), -61) + 70) == min(max(min(v0*8, 2002), 3) + (((v1 + 73)/4)*4), max(min(v0*8, 1938), -61) + 70));1;140;;;;;
 (((((((v0 + v1) + 23)/8) - (v1/8)) + 90)/86) == ((((((v0 + v1) + 23)/8) - (v1/8)) + 90)/86));1;75;;;;;
 ((((v0*8) + 76)/67) != 0);0;441;;;;;
 ((min((((v0 + v1) + 1)/2) - (v2*504), (min(v3*64, 440) + (v1/2)) + 63) - ((v3*64) + ((v1/2) + (v4*4)))) == (min((((v0 + v1) + 1)/2) - (v2*504), (min(v3*64, 440) + (v1/2)) + 63) - ((v3*64) + ((v1/2) + (v4*4)))));1;98;;;;;
 (min((v0*336) + v1, min(v2 + v1, 2000) + -336) == min((v0*336) + v1, min(v2 + v1, 2000) + -336));1;75;;;;;
 ((((max(((v0 + v1) + 3)/4, 499) - min(v1/4, 0)) + 254)/252) >= 0);1;75;;;;;
 (((v0*68) + ((v1*128) + v2)) == ((v0*68) + ((v1*128) + v2)));1;153;;;;;
 (min(max(min((v0/32)*4, 285), 36) + (v1*4), max(min((((v2 + v0) + 127)/32)*4, 246), -3) + 36) == min(max(min((v0/32)*4, 285), 36) + (v1*4), max(min((((v2 + v0) + 127)/32)*4, 246), -3) + 36));1;113;;;;;
 (min((v0*4) + (max(v1*504, -9) + (v2 + v3)), ((v1*504) + (v2 + v3)) + 500) == min((v0*4) + (max(v1*504, -9) + (v2 + v3)), ((v1*504) + (v2 + v3)) + 500));1;86;;;;;
 (min(v0*4, min((((v1 + v2) + -1)/4)*4, 3003) + -1004) == min(v0*4, min((((v1 + v2) + -1)/4)*4, 3003) + -1004));1;66;;;;;
 (((((((v0 + v1) + 62)/63) - (v1/63))*2) + 5) == ((((((v0 + v1) + 62)/63) - (v1/63))*2) + 5));1;62;;;;;
 ((((((v0*3) + v1)*4) + v2) - (((v3 + v4) + -1)/8)) == (((((v0*3) + v1)*4) + v2) - (((v3 + v4) + -1)/8)));1;74;;;;;
 (((((v0 % (((v1*32) + 463)/40))*-40)/4)*4) == ((v0 % (((v1*32) + 463)/40))*-40));1;60;;;;;
 (max(min(max((v0*4) + v1, 8), ((v0*4) + v1) + 4), min((v0*4) + v1, 34) + 4) == max(min(max((v0*4) + v1, 8), ((v0*4) + v1) + 4), min((v0*4) + v1, 34) + 4));1;74;;;;;
 (min((v0*2) + 2, v1) == min((v0*2) + 2, v1));1;48;;;;;
 (((((((v0 + v1) + 62)/63)*8) - (v2*17)) - ((v1/63)*8)) == ((((((v0 + v1) + 62)/63)*8) - (v2*17)) - ((v1/63)*8)));1;74;;;;;
 (((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((0*4) + ((v0*4) + ((v1*1000) + v2))) + 0) <= ((v0*4) + ((v1*1000) + v2)))) && ((((0*4) + ((v0*4) + ((v1*1000) + v2))) + 3) >= (((v0*4) + ((v1*1000) + v2)) + 3))) && (0 <= 0)) && (0 >= 0));1;148;;;;;
 (min(max(min((min(v0*128, 372)/2) + (((v1 + v2) + 129)/2), 999), 0) - max(min((min(v0*128, 372)/2) + ((v1 + v2)/2), 999), 0), (v3*16) + 15) == min(max(min((min(v0*128, 372)/2) + (((v1 + v2) + 129)/2), 999), 0) - max(min((min(v0*128, 372)/2) + ((v1 + v2)/2), 999), 0), (v3*16) + 15));1;574;;;;;
 (max(-35 - max(min((((((v0 + v1) + 127)/32)*4) - (v2*19)) - ((v1/32)*4), -13), -31), max(min(v3, 31), 13) + -35) == max(-35 - max(min((((((v0 + v1) + 127)/32)*4) - (v2*19)) - ((v1/32)*4), -13), -31), max(min(v3, 31), 13) + -35));1;127;;;;;
 (min(547 - (((v0*16) + v1)*4), ((v2*8) - ((((v0*16) + v1)*4) + v3)) + 71) == min(547 - (((v0*16) + v1)*4), ((v2*8) - ((((v0*16) + v1)*4) + v3)) + 71));1;94;;;;;
 (((v0*8) + ((v1*16) + ((v2*2) + v3))) == ((v0*8) + ((v1*16) + ((v2*2) + v3))));1;51;;;;;
 (((v0*35) + (v1*8)) == ((v0*35) + (v1*8)));1;53;;;;;
 (min((v0*4) + v1, ((((v2 + v3) + 124)/250)*64) + 101) == min((v0*4) + v1, ((((v2 + v3) + 124)/250)*64) + 101));1;78;;;;;
 (((v0*128) + ((v1*4) + v2)) == ((v0*128) + ((v1*4) + v2)));1;195;;;;;
 (min(max(min(v0 + v1, 1999), ((max(min(v0 + v1, 1999), 0)/16)*16) + 9), ((v2*76) + (((max(min((v3*125) + v0, 2002), 3) + -3)/16)*16)) + 62) == min(max(min(v0 + v1, 1999), ((max(min(v0 + v1, 1999), 0)/16)*16) + 9), ((v2*76) + (((max(min((v3*125) + v0, 2002), 3) + -3)/16)*16)) + 62));1;1295;;;;;
 (max(v0*8, (((v1*16) + v0)*8) + 1) == max(v0*8, (((v1*16) + v0)*8) + 1));1;71;;;;;
 (min(max(min((((v0 + v1) + 127)/32)*4, 246), -3) - max(min((v1/32)*4, 281), 32), v2 + 3) == min(max(min((((v0 + v1) + 127)/32)*4, 246), -3) - max(min((v1/32)*4, 281), 32), v2 + 3));1;212;;;;;
 (((((v0 + v1) + -1)/8) - ((v1/8) + (v2*2))) == ((((v0 + v1) + -1)/8) - ((v1/8) + (v2*2))));1;79;;;;;
 (max((v0 + 23)/516, 0) >= ((max((v0 + 23)/516, 0) + max(((v0 + 538)/516) - max((v0 + 23)/516, 0), 0)) - 1));0;772;;;;;
 (min((min(v0 + v1, 2119) + v2) + 129, v0 + v1) == min((min(v0 + v1, 2119) + v2) + 129, v0 + v1));1;52;;;;;
 ((((v0*250)/125)*125) == (v0*250));1;34;;;;;
 ((max(v0, 1997) - ((((v1*34) + v2)*4) + v3)) == (max(v0, 1997) - ((((v1*34) + v2)*4) + v3)));1;54;;;;;
 ((max(min(v0, 2004), 5) + (v1*8)) == (max(min(v0, 2004), 5) + (v1*8)));1;46;;;;;
 (((v0/4) + 1) != 0);0;301;;;;;
 (max(min(min(min(min(min((v3/125) + -1, (v3/125) + -1), (v3/125) + -1), min(min(15 - (v4/125), (v3/125) + -1), ((((((v6 + v5) + 11)/8)*8) - v4) + -1)/125)), min(min(15 - (v4/125), (v3/125) + -1), ((((((v6 + v5) + 11)/8)*8) - v4) + -1)/125)), (0 + ((v3 + 124)/125)) - 1) + 1, min(max(max(max(max(max(max(0 - (v4/125), (132 - v4)/125), (132 - v4)/125), (132 - v4)/125), max((((max((v5 + 11)/8, 1)*8) - v4) + 124)/125, 0 - (v4/125))), max((((max((v5 + 11)/8, 1)*8) - v4) + 124)/125, 0 - (v4/125))), 0), ((v3 + 124)/125) + 0)) <= min(max(max(max(max(max(max(0 - (v4/125), (132 - v4)/125), (132 - v4)/125), (132 - v4)/125), max((((max((v5 + 11)/8, 1)*8) - v4) + 124)/125, 0 - (v4/125))), max((((max((v5 + 11)/8, 1)*8) - v4) + 124)/125, 0 - (v4/125))), 0), ((v3 + 124)/125) + 0));0;4233;;;;;
 ((((v0 - v1) + 176)/120) != 0);0;450;;;;;
 (min(min(v0 - (v1*32), 31)/2, -1 - (max((v1*32) - v0, -31)/2)) == min(min(v0 - (v1*32), 31)/2, -1 - (max((v1*32) - v0, -31)/2)));1;78;;;;;
 (((v0*6) + ((v1*42) + (min(v2*125, v3 + -125) + v4))) == ((v0*6) + ((v1*42) + (min(v2*125, v3 + -125) + v4))));1;50;;;;;
 (((v0*32) + (v1 + v2)) == ((((v0*32) + (v1 + v2)) + 32) - 1));0;21;;;;;
 (((v0 + 47)/40) != 0);0;328;;;;;
 (((((v0 % ((v1 + 28)/18))*-18)/9)*9) == ((v0 % ((v1 + 28)/18))*-18));1;80;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((((((v0*127) + v1) + v2) + v3) + -255) % 8) <= ((((((v0*127) + v1) + v2) + v3) + -255) % 8))) && (((((((v0*127) + v1) + v2) + v3) + -255) % 8) >= ((((((v0*127) + v1) + v2) + v3) + -255) % 8))) && (((v4*4) + 0) <= ((v4*4) + 0))) && (((v4*4) + 3) >= ((v4*4) + ((4 + 0) - 1))));1;215;;;;;
 (min(((v0 + v1) + -1)/8, (min((min((v2*32) + 31, v3)/4)*4, (v2*32) + 28) + (v1/8)) + 3) == min(((v0 + v1) + -1)/8, (min((min((v2*32) + 31, v3)/4)*4, (v2*32) + 28) + (v1/8)) + 3));1;88;;;;;
 ((((v0 - v1) + 221)/212) != 0);0;458;;;;;
 (min(max(v0*8, 995) + 9, v1) == min(max(v0*8, 995) + 9, v1));1;54;;;;;
 ((v3 + -12) >= (((v3 + -12) + ((max(v0, 0) - max(min(v1 + v2, 2007), max(v0, 1) + 13)) + 14)) - 1));0;1550;;;;;
 (min((v0*66) + v1, (((v2*63) + ((v3/8) + (v4*16)))*8) + 62) == min((v0*66) + v1, (((v2*63) + ((v3/8) + (v4*16)))*8) + 62));1;75;;;;;
 (((((v0/((v1 + 31)/20))*-4)/2)*2) == ((v0/((v1 + 31)/20))*-4));1;53;;;;;
 ((min(v0*1000, v1 + -1000) + ((v2*500) + v3)) == (min(v0*1000, v1 + -1000) + ((v2*500) + v3)));1;22;;;;;
 (min((v0*4) + v1, v2 + 8) == min((v0*4) + v1, v2 + 8));1;1390;;;;;
 (((v0*16) + (max(min(v1/8, 256), 7) + (v2*128))) == ((v0*16) + (max(min(v1/8, 256), 7) + (v2*128))));1;77;;;;;
 ((((max((((v0 + v1) + 31)/32)*32, 1964) - min((v1/32)*32, 36)) + 209)/132) >= 0);1;82;;;;;
 ((((((((v0 + v1) + 31)/32) - (v1/32))*16) + 100)/18) == (((((((v0 + v1) + 31)/32) - (v1/32))*16) + 100)/18));1;78;;;;;
 (min(((v0*64) + v1) + 55, v2) == min(((v0*64) + v1) + 55, v2));1;54;;;;;
 (((((((v0 + v1) + 15)/16) - ((v1 + -2)/16))/64) + 1) == ((((((v0 + v1) + 15)/16) - ((v1 + -2)/16))/64) + 1));1;40;;;;;
 ((((min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*4))*16) + 39, v2)/4) - (v1*16)) - (((max(min(v0, 2002), 3) + -3)/16)*4)) == (((min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*4))*16) + 39, v2)/4) - (v1*16)) - (((max(min(v0, 2002), 3) + -3)/16)*4)));1;133;;;;;
 (min(v0*4, (min(v1*36, 32) + (((v2*17) + v3)*4)) + 27) == min(v0*4, (min(v1*36, 32) + (((v2*17) + v3)*4)) + 27));1;90;;;;;
 ((min(max(v0 + v1, -7) - min(v1, 2002), v2) + 3) == (min(max(v0 + v1, -7) - min(v1, 2002), v2) + 3));1;55;;;;;
 (min(max(min(min(((v0 + v1) + -1)/2, v2 + 7), 999), 0) - max(min(v2, 999), 0), (v3*4) + 3) == min(max(min(min(((v0 + v1) + -1)/2, v2 + 7), 999), 0) - max(min(v2, 999), 0), (v3*4) + 3));1;282;;;;;
 ((max(v0, 4) + 1) >= 0);1;33;;;;;
 ((min(max((v0*5) + v1, 8)*16, 140) + -140) == (6 - (v2*4)));0;61;;;;;
 ((min(v0*4, 261) + ((v1*250) + (v2 + v3))) == (min(v0*4, 261) + ((v1*250) + (v2 + v3))));1;62;;;;;
 (((v0/16) + 1) != 0);0;288;;;;;
 (max(((v0 - v1) + 1)/128, 0) >= ((max(((v0 - v1) + 1)/128, 0) + ((((v0 - v1)/128) - max(((v0 - v1) + 1)/128, 0)) + 1)) - 1));1;152;;;;;
 (((min(min(min((v0*-4) + (min(max(v1, 249) + (v2*-16), min(v3, 0) + 15) + 8), v3) - min(v3, 0), 0)*8, (v4*12) + -20)/4)*4) == min(min(min((v0*-4) + (min(max(v1, 249) + (v2*-16), min(v3, 0) + 15) + 8), v3) - min(v3, 0), 0)*8, (v4*12) + -20));1;296;;;;;
 (((v0*137) + (v1*8)) == ((v0*137) + (v1*8)));1;41;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 68)/64) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 68)/64));1;132;;;;;
 ((((max(min(((((((v0 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 13)/4) == (((max(min(((((((v0 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 13)/4));1;343;;;;;
 (((v0 + 254)/252) != 0);0;352;;;;;
 (max((max(v0, 0) + min(max(v0, 0) - v1, -1)) + 1, v0) == max((max(v0, 0) + min(max(v0, 0) - v1, -1)) + 1, v0));1;83;;;;;
 ((min(v0, 55) + (v1*-29)) == (min(v0, 55) + (v1*-29)));1;44;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 46)/33) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 46)/33));1;71;;;;;
 (((max(max(min((v0 + v1)/2, 1006), 7)*8, 115)/4) + (v2*4)) == ((max(max(min((v0 + v1)/2, 1006), 7)*8, 115)/4) + (v2*4)));1;80;;;;;
 (max(min(max(max((289 - ((v0/125)*32))/274, (578 - ((v0/125)*64))/548), 0), ((v1*64) + 619)/548), (min(((((v2 + v0) + 124)/125) - (v0/125))*64, (v1*64) + 547) + 72)/548) == max(min(max(max((289 - ((v0/125)*32))/274, (578 - ((v0/125)*64))/548), 0), ((v1*64) + 619)/548), (min(((((v2 + v0) + 124)/125) - (v0/125))*64, (v1*64) + 547) + 72)/548));1;156;;;;;
 ((((v0*400)/16)*16) == (v0*400));1;44;;;;;
 (min((((v0 + v1) + 5)/2) - (v1/2), v2 + 255) == min((((v0 + v1) + 5)/2) - (v1/2), v2 + 255));1;69;;;;;
 (((v0 + 10)/504) == ((((v0 + 10)/504) + ((((v0 + 10) % 504) + 503)/504)) - 1));0;543;;;;;
 ((((v0 - v1) + 133)/130) == (((v0 - v1) + 133)/130));1;68;;;;;
 (min(min(v0*8, 59) + v1, ((((v2 + v3) + 62)/63)*8) + 1) == min(min(v0*8, 59) + v1, ((((v2 + v3) + 62)/63)*8) + 1));1;71;;;;;
 ((((min((v0 % 8)*33, 225)*-8)/24)*24) == (min((v0 % 8)*33, 225)*-8));0;919;;;;;
 ((((((((v0 + v1) + 265)/133) - (v1/133))*8) + 59)/12) == (((((((v0 + v1) + 265)/133) - (v1/133))*8) + 59)/12));1;2143;;;;;
 (min(max(min(v0*2, 1991), -8), v1 + 244) == min(max(min(v0*2, 1991), -8), v1 + 244));1;55;;;;;
 ((((max(v0, 1)*-292)/4)*4) == (max(v0, 1)*-292));1;50;;;;;
 ((v0 - (v1*136)) == (v0 - (v1*136)));1;46;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 74)/65) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 74)/65));1;65;;;;;
 (min(v0*8, ((v1*1120) + ((min(v2/8, 0)/16)*128)) + 807) == min(v0*8, ((v1*1120) + ((min(v2/8, 0)/16)*128)) + 807));1;80;;;;;
 (((v0 + v1) + -5) >= ((((v0 + v1) + -5) + 130) - 1));0;82;;;;;
 (((max(min((v1*-1008) + ((v2*-1008) + v3), 1008), 0)/16)*16) == max(min((v1*-1008) + ((v2*-1008) + v3), 1008), 0));0;970;;;;;
 ((v0 - ((v1*-16) + v2)) == (v0 - ((v1*-16) + v2)));1;63;;;;;
 (((v0 + 160)/36) == ((v0 + 160)/36));1;54;;;;;
 (max(min((v0 + 9)/8, max((0 - v1)/8, -1) + 1), (min(1993 - v1, v0 + -6)/8) + 1) == max(min((v0 + 9)/8, max((0 - v1)/8, -1) + 1), (min(1993 - v1, v0 + -6)/8) + 1));1;79;;;;;
 ((min((max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*64)) + 63), 249), 0) - max(min((v1/8) + (v2*64), 249), 0)) - (v3*32), 30) - (v4*3)) == (min((max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*64)) + 63), 249), 0) - max(min((v1/8) + (v2*64), 249), 0)) - (v3*32), 30) - (v4*3)));1;395;;;;;
 (max(v0*8, (v1*8) + 57) == max(v0*8, (v1*8) + 57));1;48;;;;;
 (min((v0*2) + v1, v2 + 15) == min((v0*2) + v1, v2 + 15));1;50;;;;;
 (((max(min((v3*-14) + (max(min(((v1 + v2) + 49)/2, 999), 0) - max(min((v1 + v2)/2, 999), 0)), 10), -6)/2)*2) == max(min((v3*-14) + (max(min(((v1 + v2) + 49)/2, 999), 0) - max(min((v1 + v2)/2, 999), 0)), 10), -6));0;1689;;;;;
 (min(max(min(((v0*16) + v1)*8, 2012), 13) + -16, v2) == min(max(min(((v0*16) + v1)*8, 2012), 13) + -16, v2));1;63;;;;;
 (min(max(min(v0, 999), 0), ((v1*4) + v2) + 3) == min(max(min(v0, 999), 0), ((v1*4) + v2) + 3));1;136;;;;;
 (max(min((v1 + v2) + -1, (((v4*8) + -5) + ((min(v3, 15)*8) + 13)) - 1) + 1, min(max(v2, (v4*8) + -5), ((min(v3, 15)*8) + 13) + ((v4*8) + -5))) <= min(max(v2, (v4*8) + -5), ((min(v3, 15)*8) + 13) + ((v4*8) + -5)));0;1852;;;;;
 ((((v0 % 4)*16) + ((v1*8) + v2)) == (((v0 % 4)*16) + ((v1*8) + v2)));1;38;;;;;
 (min(max(min(v0, 31), 0)*8, v1 + 8) == min(max(min(v0, 31), 0)*8, v1 + 8));1;63;;;;;
 (((((((v0 + v1) + 62)/63) - (v1/63))/9) + 1) == ((((((v0 + v1) + 62)/63) - (v1/63))/9) + 1));1;43;;;;;
 (((v0*256) + ((v1*1008) + (max(v2*128, -5) + v3))) == ((v0*256) + ((v1*1008) + (max(v2*128, -5) + v3))));1;2072;;;;;
 (0 == ((0 + ((min(((v0*8) - (v1*76)) - (v2*8), 57)*2) + 38)) - 1));0;115;;;;;
 (min((v0*16) + v1, ((v2 + v3)/4) + 28) == min((v0*16) + v1, ((v2 + v3)/4) + 28));1;875;;;;;
 (((v0*17) + (((v1/63) + v2)*8)) == ((v0*17) + (((v1/63) + v2)*8)));1;45;;;;;
 (((((v0 + v1)/2)*2) + -7) >= ((((((v0 + v1)/2)*2) + -7) + 142) - 1));0;92;;;;;
 (((v0 + 669)/668) == ((v0 + 669)/668));1;192;;;;;
 (((min((v0*252) + ((max(min(v1/4, 499), 0)*4) + -5), (max(min(((v2 + v1) + -1)/4, 499), 0)*4) + -249)/8)*8) == min((v0*252) + ((max(min(v1/4, 499), 0)*4) + -5), (max(min(((v2 + v1) + -1)/4, 499), 0)*4) + -249));0;1474;;;;;
 (min((v0*16) + ((v1*128) + ((v2/2) + (v3*504))), min(((v4 + v2) + 5)/2, ((v3*504) + ((v2/2) + (v1*128))) + 119) + 8) == min((v0*16) + ((v1*128) + ((v2/2) + (v3*504))), min(((v4 + v2) + 5)/2, ((v3*504) + ((v2/2) + (v1*128))) + 119) + 8));1;121;;;;;
 ((min(v0*15, 14) + (min(v1*29, 56) + (min(v2*2, 13) + v3))) == (min(v0*15, 14) + (min(v1*29, 56) + (min(v2*2, 13) + v3))));1;58;;;;;
 ((((((((v0 + v1) + 15)/16) - (v1/16))*8) + 345)/337) == (((((((v0 + v1) + 15)/16) - (v1/16))*8) + 345)/337));1;80;;;;;
 (((v0*8) + ((v1*32) + (v2 + v3))) == ((v0*8) + ((v1*32) + (v2 + v3))));1;40;;;;;
 (min((((v0 + v1) + -1)/8) - ((v2*63) + v3), 124 - (v2*63)) == min((((v0 + v1) + -1)/8) - ((v2*63) + v3), 124 - (v2*63)));1;73;;;;;
 (min(max(((v0 + 31)/4) - (v1*2), -1), (min((max(((v2 + v3) + 23)/8, 249) - (v4*17)) - min(v3/8, 4), 12)*2) + 9) == min(max(((v0 + 31)/4) - (v1*2), -1), (min((max(((v2 + v3) + 23)/8, 249) - (v4*17)) - min(v3/8, 4), 12)*2) + 9));1;152;;;;;
 (((((((v0 + v1) + 62)/63) - (v1/63)) + 18)/17) == ((((((v0 + v1) + 62)/63) - (v1/63)) + 18)/17));1;72;;;;;
 (((((v0*1011) + v1) + v2) + -6) < ((((v0*1011) + v1) + (v2 + 1)) + -11));0;86;;;;;
 ((((((v0 + 2)/8) - (((max(min(v1, 2002), 3) + -3)/16)*2)) + 130)/128) == (((((v0 + 2)/8) - (((max(min(v1, 2002), 3) + -3)/16)*2)) + 130)/128));1;101;;;;;
 (min(max(((v0 - ((v1/2)*2)) + 3)/4, 0), (v2/2) + 1) == min(max(((v0 - ((v1/2)*2)) + 3)/4, 0), (v2/2) + 1));1;61;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 5)/2) - ((max(min((v1/4)*8, 4012), 13) + -13)/2))/64) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 5)/2) - ((max(min((v1/4)*8, 4012), 13) + -13)/2))/64) + 1));1;144;;;;;
 ((max(min(v0/2, 1003)*2, 7) + (v1*96)) == (max(min(v0/2, 1003)*2, 7) + (v1*96)));1;59;;;;;
 (((v0*256) + ((v1*504) + ((v2*4) + v3))) == ((v0*256) + ((v1*504) + ((v2*4) + v3))));1;43;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*4) + 24)/19) == (((((((v0 + v1) + 249)/250) - (v1/250))*4) + 24)/19));1;155;;;;;
 (((v0*9) + ((((v1 + v2)/8)*2) + v3)) == ((v0*9) + ((((v1 + v2)/8)*2) + v3)));1;52;;;;;
 (((((((v0 + v1) + 188)/63) - (v1/63)) + 19)/14) == ((((((v0 + v1) + 188)/63) - (v1/63)) + 19)/14));1;81;;;;;
 (((v0*8) + (min(v1*1000, v2 + -1000) + v3)) == ((v0*8) + (min(v1*1000, v2 + -1000) + v3)));1;43;;;;;
 ((((((v0 + v1) + 11)/4) - (v2*2)) - ((v1/4) + v3)) == (((((v0 + v1) + 11)/4) - (v2*2)) - ((v1/4) + v3)));1;62;;;;;
 ((((max(min(v0/8, 256), 7) + v1)*8) + ((v2*3) + v3)) == (((max(min(v0/8, 256), 7) + v1)*8) + ((v2*3) + v3)));1;63;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/16) + 2) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/16) + 2));1;237;;;;;
 ((((((v0 + v1) + -1)/4) - (v2*252)) - (v1/4)) == (((((v0 + v1) + -1)/4) - (v2*252)) - (v1/4)));1;53;;;;;
 ((((v0 - v1)/4) + (v2*-9)) == (((v0 - v1)/4) + (v2*-9)));1;42;;;;;
 (max(-539 - (v0*16), (v0*16) + 33) >= 0);0;519;;;;;
 (((v0*128) + ((v1*4) + v2)) == ((v0*128) + ((v1*4) + v2)));1;66;;;;;
 (((max(min(v0 + v1, 249), 0)*8) + -13) == ((((max(min(v0 + v1, 249), 0)*8) + -13) + 19) - 1));0;97;;;;;
 (((v0 + 255)/251) != 0);0;420;;;;;
 (((v0*8) + -60) == ((((v0*8) + -60) + ((max(v1*29, 57)*-8) + 693)) - 1));0;111;;;;;
 ((min(v0*3, 14) + min((((v1 + v2) + -1)/63)*8, ((v3*17) + ((v2/63)*8)) + 3)) == (min(v0*3, 14) + min((((v1 + v2) + -1)/63)*8, ((v3*17) + ((v2/63)*8)) + 3)));1;82;;;;;
 ((((v0*32) + 551)/520) != 0);0;461;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((0*4) + v1) + 0) + -1) <= (v1 + -1))) && (((((2*4) + v1) + 3) + -1) >= (v1 + 10))) && (0 <= 0)) && (4 >= 4));1;116;;;;;
 (min(v0 + 12, v1) == min(v0 + 12, v1));1;25;;;;;
 ((max(v0*8, -9) + (v1/8)) == (max(v0*8, -9) + (v1/8)));1;33;;;;;
 ((((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))*8) + 264)/253) == (((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))*8) + 264)/253));1;110;;;;;
 (((min((v1*-112) + (((((v2 + v3) + 1999)/2000)*256) + 464), min(v4*64, 48) + ((v3/2000)*256))/16)*16) == min((v1*-112) + (((((v2 + v3) + 1999)/2000)*256) + 464), min(v4*64, 48) + ((v3/2000)*256)));0;1553;;;;;
 (min((v0/2) + (v1*2), v2 + 1) == min((v0/2) + (v1*2), v2 + 1));1;56;;;;;
 (((v0 + 106)/64) != 0);0;344;;;;;
 (((v0*2) + -17) == ((((v0*2) + -17) + ((-10*2) + 22)) - 1));0;48;;;;;
 ((v0 - (v1*2)) == (v0 - (v1*2)));1;34;;;;;
 ((min(v0, 31)/12) == (min(v0, 31)/12));1;47;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + -7) <= ((((v0*4) + v1) + 0) + -7))) && (((((v0*4) + v1) + 3) + -7) >= ((((v0*4) + v1) + ((4 + 0) - 1)) + -7))) && ((-5 + v2) <= (-5 + v2))) && ((((9 + -5) - 1) + v2) >= (((9 + -5) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3));1;194;;;;;
 (min(v0*4, (min(((v1/32) + (((v2 - (v1/32))/2)*2)) + 1, v2)*4) + 129) == min(v0*4, (min(((v1/32) + (((v2 - (v1/32))/2)*2)) + 1, v2)*4) + 129));1;89;;;;;
 (((max(min(v0, 0), -3)*8) + -4) == ((((max(min(v0, 0), -3)*8) + -4) + (9 - (max(min(v0, 0), -3)*8))) - 1));0;102;;;;;
 (min(((((max((((v0 + v1) + -1)/65)*8, 239) - v2) + 14)/4)*4) + v2, max((((v0 + v1) + -1)/65)*8, 239) + 11) == min(((((max((((v0 + v1) + -1)/65)*8, 239) - v2) + 14)/4)*4) + v2, max((((v0 + v1) + -1)/65)*8, 239) + 11));1;257;;;;;
 (0 == ((0 + (34 - max(v0*9, 25))) - 1));0;66;;;;;
 (((((((uint1)1 && ((v0 + -48) <= ((0 + v0) + -48))) && ((v0 + 964) >= ((((1013 + 0) - 1) + v0) + -48))) && (v1 <= (((0*4) + v1) + 0))) && ((v1 + 127) >= (((((32 + 0) - 1)*4) + v1) + ((4 + 0) - 1)))) && (v2 <= v2)) && (v2 >= v2));1;149;;;;;
 (((v0 + v1) + -6) < (((v0 + 1) + v1) + -11));0;55;;;;;
 (min(((v0 + v1) + -65)/32, (v1/32) + (v2*4)) == min(((v0 + v1) + -65)/32, (v1/32) + (v2*4)));1;51;;;;;
 (max(-60 - max(min(((min(((v0 + v1) + 63)/8, v2 + 15)*8) - (v3*59)) - (v2*8), 3), -55), max(min(v4, 55), -3) + -60) == max(-60 - max(min(((min(((v0 + v1) + 63)/8, v2 + 15)*8) - (v3*59)) - (v2*8), 3), -55), max(min(v4, 55), -3) + -60));1;129;;;;;
 (max(min(241 - (v0*8), (-4 + 10) - 1) + 1, min(max(-8 - (v0*8), -4), 10 + -4)) <= min(max(-8 - (v0*8), -4), 10 + -4));0;1014;;;;;
 (((max(v0, 249) + (v1*-16)) - min(v2, 0)) == ((max(v0, 249) + (v1*-16)) - min(v2, 0)));1;36;;;;;
 (min((v0*4) + v1, (min(v2*256, 252) + (v3 + v4)) + 254) == min((v0*4) + v1, (min(v2*256, 252) + (v3 + v4)) + 254));1;71;;;;;
 (max(min(max(((v0 - (v1*2)) + 77)/64, 0), ((v2 - v1) + 43)/32), min(((v2 - v1) + -20)/32, (((v3 + v0) - (v1*2)) + 13)/64) + 1) == max(min(max(((v0 - (v1*2)) + 77)/64, 0), ((v2 - v1) + 43)/32), min(((v2 - v1) + -20)/32, (((v3 + v0) - (v1*2)) + 13)/64) + 1));1;179;;;;;
 ((((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0)) + 35)/32) == (((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0)) + 35)/32));1;253;;;;;
 (max((((v0 - v1)*8) + 44)/1044, 0) >= ((max((((v0 - v1)*8) + 44)/1044, 0) + (((((v0 - v1)*8) + 1091)/1044) - max((((v0 - v1)*8) + 44)/1044, 0))) - 1));0;1279;;;;;
 ((max(((v0*5) + v1) + v4, max(((v0*5) + v1) + v4, v5)) + (v6*8)) >= ((min(((v0*5) + v1) + v2, min(((v0*5) + v1) + v2, v3)) + ((v6 - 1)*8)) + 1));0;1222;;;;;
 ((min((((v0 + v1) + 7)/8) - (v2*64), (v1/8) + 63) - ((v3*4) + ((v1/8) + (v4*16)))) == (min((((v0 + v1) + 7)/8) - (v2*64), (v1/8) + 63) - ((v3*4) + ((v1/8) + (v4*16)))));1;112;;;;;
 ((max((((max(v0*64, 436)/4)*-4) + ((v0*64) + v1)) - (min(v0*64, 436) + v1), -436) + 500) <= 1024);0;1079;;;;;
 (((((v0 - v1)*8) + 1545)/991) == ((((v0 - v1)*8) + 1545)/991));1;1431;;;;;
 ((((v0*84)/2)*2) == (v0*84));1;32;;;;;
 (min(v0*8, ((v1*63) + (((v2/8)*8) + (v3*36))) + -9) == min(v0*8, ((v1*63) + (((v2/8)*8) + (v3*36))) + -9));1;102;;;;;
 (((v0 + 74)/64) != 0);0;356;;;;;
 (min(((((v0 + v1) + 7)/8) - (v1/8)) + -11, v2) == min(((((v0 + v1) + 7)/8) - (v1/8)) + -11, v2));1;94;;;;;
 (min(((v0/63) + (((v1 + 3)/2)*2))*8, ((((v2 + v0) + 62)/63)*8) + 9) == min(((v0/63) + (((v1 + 3)/2)*2))*8, ((((v2 + v0) + 62)/63)*8) + 9));1;115;;;;;
 (max(min((v0 + 33)/4, 5), min(((v1 - v2)/4) + (v3*-6), -4) + 9) == max(min((v0 + 33)/4, 5), min(((v1 - v2)/4) + (v3*-6), -4) + 9));1;83;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 63) == min(((v0 + v1) + -1)/8, v2 + 63));1;83;;;;;
 (min(((v0 + v1) + 23)/8, (v1/8) + v2) == min(((v0 + v1) + 23)/8, (v1/8) + v2));1;29;;;;;
 (min(((v0 + v1) + 1005)/2, (min((v2*32) + (v3*132), min(v3*132, 128) + 115) + (((v0 + v1)/2) + (v4*256))) + 8) == min(((v0 + v1) + 1005)/2, (min((v2*32) + (v3*132), min(v3*132, 128) + 115) + (((v0 + v1)/2) + (v4*256))) + 8));1;126;;;;;
 (min((v0*4) + v1, v2 + 18) == min((v0*4) + v1, v2 + 18));1;35;;;;;
 (((v0/500) + ((v1/4)*4)) == ((v0/500) + ((v1/4)*4)));1;37;;;;;
 ((v0 + 7) != 0);0;263;;;;;
 (min(max(min(((v0 + v1) + 132)/8, 249), 0), max(min((v0 + v1)/8, 249), 0) + -1) == min(max(min(((v0 + v1) + 132)/8, 249), 0), max(min((v0 + v1)/8, 249), 0) + -1));1;99;;;;;
 (((v0*4) + ((v1*1000) + v2)) == ((v0*4) + ((v1*1000) + v2)));1;39;;;;;
 (min(max(min(v0, 1999), 0) + (((v1 + 22)/4)*4), max(min(v0, 1984), -15) + 19) == min(max(min(v0, 1999), 0) + (((v1 + 22)/4)*4), max(min(v0, 1984), -15) + 19));1;78;;;;;
 ((((v0*32) + (v1 + v2)) + -1) == (((((v0*32) + (v1 + v2)) + -1) + 37) - 1));0;1776;;;;;
 ((max(min(((v0/125) + v1)*16, 220), -29) - max(min((v0/125)*16, 286), 37)) == (max(min(((v0/125) + v1)*16, 220), -29) - max(min((v0/125)*16, 286), 37)));1;190;;;;;
 (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 64)/63) == ((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 64)/63));1;89;;;;;
 (((min((max((min((v0*-64) + ((((v1 + v2) + 501)/2) - ((v1 + v2)/2)), 63) + 1)/24, 0)*24) + (v3*24), 40)/4)*4) == min((max((min((v0*-64) + ((((v1 + v2) + 501)/2) - ((v1 + v2)/2)), 63) + 1)/24, 0)*24) + (v3*24), 40));1;200;;;;;
 ((((v0/8)*8) + (v1*68)) == (((v0/8)*8) + (v1*68)));1;52;;;;;
 ((((((v0 + v1) + v2) + v3)/8) + 1) <= ((((((v0 - 1) + v1) + v2) + v3)/8) - 1));0;98;;;;;
 (((v0*2) + -92) == ((((v0*2) + -92) + ((min(min(v1 + 17, v2) - ((v3*39) + v1), -22)*2) + 122)) - 1));0;184;;;;;
 (((v0 + 136)/130) != 0);0;351;;;;;
 (max(min(max(((v0 - max(min(v1, 2609), 610)) + 618)/4, 0), (v2 + 9)/4), ((min(max(min(v3, 2610), 611), (v4 + v0) + 609) - max(min(v1, 2609), 610)) + 6)/4) == max(min(max(((v0 - max(min(v1, 2609), 610)) + 618)/4, 0), (v2 + 9)/4), ((min(max(min(v3, 2610), 611), (v4 + v0) + 609) - max(min(v1, 2609), 610)) + 6)/4));1;177;;;;;
 ((max(min(((((v0 + v1)/32)*4) + v2)*4, min((((v0 + v1) + 281)/32)*16, 954) + 79), 34) - (max(min(((((v0 + v1)/32)*4) + v2)*4, min((((v0 + v1) + 281)/32)*16, 957) + 79), 37) + (v3*4))) == (max(min(((((v0 + v1)/32)*4) + v2)*4, min((((v0 + v1) + 281)/32)*16, 954) + 79), 34) - (max(min(((((v0 + v1)/32)*4) + v2)*4, min((((v0 + v1) + 281)/32)*16, 957) + 79), 37) + (v3*4))));1;180;;;;;
 ((-553 - (max(min(v0, -65), -69)*8)) >= (((-553 - (max(min(v0, -65), -69)*8)) + ((max(min(v0, -65), -69)*8) + 555)) - 1));0;81;;;;;
 (min((v0*4) + v1, max(min(v2, 972), -27) + 26) == min((v0*4) + v1, max(min(v2, 972), -27) + 26));1;57;;;;;
 ((((v0 + -1)/16) - (v1*63)) == (((v0 + -1)/16) - (v1*63)));1;33;;;;;
 (min(max(min((((v0 + v1) + 47)/8)*8, 1994), -5), (max(min((v1/8)*8, 2100), 101) + (v2*125)) + 18) == min(max(min((((v0 + v1) + 47)/8)*8, 1994), -5), (max(min((v1/8)*8, 2100), 101) + (v2*125)) + 18));1;98;;;;;
 ((v0 - ((v1*19) + v2)) == (v0 - ((v1*19) + v2)));1;59;;;;;
 (min((v0*8) + 9, v1) == min((v0*8) + 9, v1));1;61;;;;;
 (min(((v0 + v1) + 156)/32, v2 + 3) == min(((v0 + v1) + 156)/32, v2 + 3));1;34;;;;;
 ((max(min((v0 + v1)/8, 249), 0) - min(((v0 + v1) + 1007)/8, 249)) == (max(min((v0 + v1)/8, 249), 0) - min(((v0 + v1) + 1007)/8, 249)));1;98;;;;;
 ((((v0*12) + v1) + ((v2*4) + v3)) == (((v0*12) + v1) + ((v2*4) + v3)));1;40;;;;;
 (((v0*4) + -308) == ((((v0*4) + -308) + 320) - 1));0;32;;;;;
 ((((max(((v0 + v1) + 7)/8, 255) - min(v1/8, 0))/32) + 1) == (((max(((v0 + v1) + 7)/8, 255) - min(v1/8, 0))/32) + 1));1;95;;;;;
 (((max(min(v0, 5), -2)*8) + -45) == ((((max(min(v0, 5), -2)*8) + -45) + (49 - (max(min(v0, 5), -2)*8))) - 1));0;117;;;;;
 ((((v0 + v1) + v2)/65) >= ((((((v0 - 1) + v1) + v2)/65) + 1) + 1));0;95;;;;;
 ((min((((v0 + v1) + 63)/8) - (v2*16), (v1/8) + 14) - ((v1/8) + (v3*4))) == (min((((v0 + v1) + 63)/8) - (v2*16), (v1/8) + 14) - ((v1/8) + (v3*4))));1;83;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 124) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;161;;;;;
 ((v0 - max(min(v1 + v2, 1879), -120)) == (v0 - max(min(v1 + v2, 1879), -120)));1;47;;;;;
 ((((max(min(max(min((((v4/((v5 + 37)/32)) % ((v6 + 137)/132))*132) + ((v3/8) + -5), min(((v2 + v3) + -977)/8, 249)), 0)*8, (max(min((((v4/((v5 + 37)/32)) % ((v6 + 137)/132))*132) + ((v3/8) + -5), min(((v2 + v3) + -977)/8, 250)), 1)*8) + 7), 12)*-1)/4)*4) == (max(min(max(min((((v4/((v5 + 37)/32)) % ((v6 + 137)/132))*132) + ((v3/8) + -5), min(((v2 + v3) + -977)/8, 249)), 0)*8, (max(min((((v4/((v5 + 37)/32)) % ((v6 + 137)/132))*132) + ((v3/8) + -5), min(((v2 + v3) + -977)/8, 250)), 1)*8) + 7), 12)*-1));0;3207;;;;;
 (max((min((((v0 + v1) + -1)/250) - (v1/250), v2)*16) + 26, v3) == max((min((((v0 + v1) + -1)/250) - (v1/250), v2)*16) + 26, v3));1;75;;;;;
 (min(max(min(((v0 + v1) + -1)/63, 31), 0)*64, (min(v2*540, 536) + v3) + 378) == min(max(min(((v0 + v1) + -1)/63, 31), 0)*64, (min(v2*540, 536) + v3) + 378));1;85;;;;;
 ((((((v0 + v1) + 249)/250)*32) - ((((v2*2) + v3)*4) + v4)) == (((((v0 + v1) + 249)/250)*32) - ((((v2*2) + v3)*4) + v4)));1;82;;;;;
 (((((v0 % ((v1 + 19)/16))*-64)/16)*16) == ((v0 % ((v1 + 19)/16))*-64));1;60;;;;;
 (min(max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7), v2) == min(max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7), v2));1;172;;;;;
 (min(((v0 + v1) + 3)/4, ((v2*126) + v3) + -1) == min(((v0 + v1) + 3)/4, ((v2*126) + v3) + -1));1;56;;;;;
 (((max(v0, 0) - v1) + 7) == ((max(v0, 0) - v1) + 7));1;49;;;;;
 ((((v0 - v1) + 346)/340) == (((v0 - v1) + 346)/340));1;46;;;;;
 (min(((v0 + v1) + 7)/2, v2 + 56) == min(((v0 + v1) + 7)/2, v2 + 56));1;70;;;;;
 ((min((((((v0 + v1) + 7)/8) - (v2*16)) - (v3*8)) - (v4*4), (v1/8) + 3) - ((v1/8) + (v5*4))) == (min((((((v0 + v1) + 7)/8) - (v2*16)) - (v3*8)) - (v4*4), (v1/8) + 3) - ((v1/8) + (v5*4))));1;111;;;;;
 (((v0*71) + ((max(min(((v1*9) + v2)*8, 285), 36)*2) + v3)) == ((v0*71) + ((max(min(((v1*9) + v2)*8, 285), 36)*2) + v3)));1;64;;;;;
 (max(min((998 + 21)/4, max(((9 - v0)/4) + (v1*-252), -1) + 1), min((min(min(v2 - (v1*1008), 998 + 3), 998) + 14)/4, ((2006 - v0)/4) + (v1*-252)) + 1) == max(min((998 + 21)/4, max(((9 - v0)/4) + (v1*-252), -1) + 1), min((min(min(v2 - (v1*1008), 998 + 3), 998) + 14)/4, ((2006 - v0)/4) + (v1*-252)) + 1));1;266;;;;;
 (min((((v0 + v1) - (v2*128)) - (v3*32)) - v1, min(((v0 + v1) - (v2*128)) - ((v3*32) + v1), 32) + 3) == min((((v0 + v1) - (v2*128)) - (v3*32)) - v1, min(((v0 + v1) - (v2*128)) - ((v3*32) + v1), 32) + 3));1;107;;;;;
 (((v0*8) - (max(v0*32, -9)/4)) == ((v0*8) - (max(v0*32, -9)/4)));1;51;;;;;
 (min(max(min(((v0 + v1) + 129)/2, 999), 0), v2 + 15) == min(max(min(((v0 + v1) + 129)/2, 999), 0), v2 + 15));1;67;;;;;
 (((v0*15) + (min((((((min(v1*125, v2 + -125) + v3) + 6) % 8) + 54)/8) + (v4*-5), 4)*-8)) == ((v0*15) + (min((((((min(v1*125, v2 + -125) + v3) + 6) % 8) + 54)/8) + (v4*-5), 4)*-8)));1;117;;;;;
 (min(v0*8, (max(max(min(v1/8, 256), 7)*8, 75) + (v2*504)) + 382) == min(v0*8, (max(max(min(v1/8, 256), 7)*8, 75) + (v2*504)) + 382));1;79;;;;;
 (min(v0, 7) == min(v0, 7));1;32;;;;;
 (((max(min((v0*-252) + v1, 252), 0)/4)*4) == max(min((v0*-252) + v1, 252), 0));0;596;;;;;
 ((((v0 + -61)/8)*8) == (((v0 + -61)/8)*8));1;18;;;;;
 ((max(min(v0*8, 2082), 83) + (v1*4)) == (max(min(v0*8, 2082), 83) + (v1*4)));1;48;;;;;
 ((min(((v0 + v1) + -1)/64, v2 + 3) - ((v3*4) + v2)) == (min(((v0 + v1) + -1)/64, v2 + 3) - ((v3*4) + v2)));1;69;;;;;
 ((min(min(((16 - max(v0*17, 16))/4)*4, -3) + (v0*17), 13) - ((v0*17) + v1)) == (min(min(((16 - max(v0*17, 16))/4)*4, -3) + (v0*17), 13) - ((v0*17) + v1)));1;78;;;;;
 (max(((v0/8) + (v1*4)) - min(((v2 + v0) + 7)/8, ((v0/8) + (min(min((v1*4) + 3, v3)/4, v1)*4)) + 3), (v0/8) + ((v1*4) - (((v2 + v0) + 7)/8))) == max(((v0/8) + (v1*4)) - min(((v2 + v0) + 7)/8, ((v0/8) + (min(min((v1*4) + 3, v3)/4, v1)*4)) + 3), (v0/8) + ((v1*4) - (((v2 + v0) + 7)/8))));1;158;;;;;
 (min((v0*4) + v1, v2 + 57) == min((v0*4) + v1, v2 + 57));1;61;;;;;
 (min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 63), ((v3*64) + (max(min(v1/2, 999), 0) + (v4*4))) + -2) == min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 63), ((v3*64) + (max(min(v1/2, 999), 0) + (v4*4))) + -2));1;107;;;;;
 (((v0*8) - max(min(((v1 + v2) + 999)/8, 249) - max(min((v1 + v2)/8, 249), 0), 0)) == ((v0*8) - max(min(((v1 + v2) + 999)/8, 249) - max(min((v1 + v2)/8, 249), 0), 0)));1;108;;;;;
 (((v0*8) + -4) >= ((((v0*8) + -4) + 10) - 1));0;40;;;;;
 (((((v0 + v1) + 39)/32) - ((((v2*3) + v3)*4) + v4)) == ((((v0 + v1) + 39)/32) - ((((v2*3) + v3)*4) + v4)));1;78;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && ((((((((v0/63)*2) + v1)*4) + v2) + 0) + -36) <= (((((((v0/63)*2) + v1)*4) + 0) + v2) + -36))) && ((((((((v0/63)*2) + v1)*4) + v2) + 3) + -36) >= (((((((v0/63)*2) + v1)*4) + ((4 + 0) - 1)) + v2) + -36))) && (0 <= 0)) && (0 >= 0));1;221;;;;;
 (min((v0*2) + v1, v2 + 17) == min((v0*2) + v1, v2 + 17));1;58;;;;;
 ((v0 - (max(min((((v1 + v2) + 499)/500)*8, 26), -5)*8)) == (v0 - (max(min((((v1 + v2) + 499)/500)*8, 26), -5)*8)));1;72;;;;;
 (((v0*12) + (max(min(min(v1*252, 748) + (v2 + v3), 1999), 0) + (v4*128))) == ((v0*12) + (max(min(min(v1*252, 748) + (v2 + v3), 1999), 0) + (v4*128))));1;84;;;;;
 ((v0 + -11) == (((v0 + -11) + (14 - (6*2))) - 1));0;38;;;;;
 (min(min((max(min(v0/2, 999), 0) + ((min(v1, 499)/6)*6)) + 485, v2), (min(min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), min((min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), 499)/6)*6, 14) + 485), 1) + (((min(min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), min((min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), 499)/6)*6, 14) + 485), 5)/2)*2) + (max(min(v0/2, 999), 0) + ((min(v1, 499)/6)*6)))) + 480) == min(min((max(min(v0/2, 999), 0) + ((min(v1, 499)/6)*6)) + 485, v2), (min(min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), min((min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), 499)/6)*6, 14) + 485), 1) + (((min(min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), min((min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), 499)/6)*6, 14) + 485), 5)/2)*2) + (max(min(v0/2, 999), 0) + ((min(v1, 499)/6)*6)))) + 480));1;454;;;;;
 (min((v0*4) + v1, max(min(((v2*4) + (min(v3*20, 19) + v4))*8, 2227), 228) + -231) == min((v0*4) + v1, max(min(((v2*4) + (min(v3*20, 19) + v4))*8, 2227), 228) + -231));1;108;;;;;
 (min(max(((v0 - max(min(v1*8, 2098), 99)) + 102)/4, 0), (v2 + 115)/4) == min(max(((v0 - max(min(v1*8, 2098), 99)) + 102)/4, 0), (v2 + 115)/4));1;88;;;;;
 (((((v0 + v1) + 5)/2) - ((v2*32) + v3)) == ((((v0 + v1) + 5)/2) - ((v2*32) + v3)));1;48;;;;;
 ((min((((v0 + v1) + 3)/2) - (v2*63), (v1/2) + 58) - ((v1/2) + (v3*34))) == (min((((v0 + v1) + 3)/2) - (v2*63), (v1/2) + 58) - ((v1/2) + (v3*34))));1;94;;;;;
 (((((((uint1)1 && ((0 + ((v0*32) + v1)) <= ((v0*32) + v1))) && ((3 + (((v0*32) + v1) + 28)) >= (((v0*32) + v1) + 31))) && (((min((v2/65)*64, 4) + -6)/32) <= ((min((v2/65)*64, 4) + -6)/32))) && (((max(min((v2/65)*64, 4) + v3, 1975) + 40)/32) >= ((max(min((v2/65)*64, 4) + v3, 1975) + 40)/32))) && (v4 <= v4)) && (v4 >= v4));1;231;;;;;
 (((v0*8) + ((((max(v0 - (((v1 + v2) + 63)/8), -15)*-8) + 55)/59)*59)) == ((v0*8) + ((((max(v0 - (((v1 + v2) + 63)/8), -15)*-8) + 55)/59)*59)));1;74;;;;;
 (((((((v0 + v1) + 440)/63) - (v1/63)) + 19)/12) == ((((((v0 + v1) + 440)/63) - (v1/63)) + 19)/12));1;111;;;;;
 ((((v0*252) + (v1 + v2)) + -5) == (((((v0*252) + (v1 + v2)) + -5) + (1012 - max(v0*252, 753))) - 1));0;109;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*2) + v3)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*2) + v3)));1;66;;;;;
 ((((v0*32) + 331)/260) != 0);0;435;;;;;
 (max(v0*8, ((v1*8) + v2) + 195) == max(v0*8, ((v1*8) + v2) + 195));1;46;;;;;
 ((min(v0*4, 13) + (v1*8)) == (min(v0*4, 13) + (v1*8)));1;34;;;;;
 ((min((((v0 + v1) + -1)/2) - (v2*63), (v1/2) + 62) - ((v1/2) + (v3*4))) == (min((((v0 + v1) + -1)/2) - (v2*63), (v1/2) + 62) - ((v1/2) + (v3*4))));1;91;;;;;
 ((((v0 + v1) + v2) + v3) >= (((((v0 - 1) + v1) + v2) + v3) + 1));1;57;;;;;
 ((((v0*5) + v1)*32) == (((((v0*5) + v1)*32) + 32) - 1));0;54;;;;;
 ((v0 + v1) >= (((v0 + v1) + 63) - 1));0;40;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((v2/4) + (v3*4)) <= (((v2 + 0)/4) + (v3*4)))) && ((((v2 + 15)/4) + (v3*4)) >= (((v2 + ((16 + 0) - 1))/4) + (v3*4)))) && (0 <= 0)) && (0 >= 0));1;207;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7)));1;273;;;;;
 (min(max(v0, 0), ((v1*18) + v2) + 4) == min(max(v0, 0), ((v1*18) + v2) + 4));1;42;;;;;
 (((((((uint1)1 && ((0 + ((v0*504) + v1)) <= ((v0*504) + v1))) && ((3 + (((v0*504) + v1) + 500)) >= (((v0*504) + v1) + 503))) && ((((v2*63) + v3) + -12) <= (((v2*63) + v3) + -12))) && (((min((v2*63) + 51, v4) + v3) + 6) >= ((min((v2*63) + 51, v4) + v3) + 6))) && (0 <= 0)) && (2 >= 2));1;231;;;;;
 (((((v0 + v1) + 62)/63) - ((v2*4) + v3)) == ((((v0 + v1) + 62)/63) - ((v2*4) + v3)));1;86;;;;;
 ((max(min((v0/63)*8, 285), 36) + (v1*16)) == (max(min((v0/63)*8, 285), 36) + (v1*16)));1;1149;;;;;
 (((v0/16) + (v1*4)) == ((v0/16) + (v1*4)));1;41;;;;;
 (min(max(min(((v0 + v1) + 3)/4, 499), 0), v2) == min(max(min(((v0 + v1) + 3)/4, 499), 0), v2));1;80;;;;;
 (min(((v0*2) + v1)*2, min(v0*4, 3) + 2) == min(((v0*2) + v1)*2, min(v0*4, 3) + 2));1;55;;;;;
 ((v0 - max(min(min(v1*22, 106) + v2, 1117), 118)) == (v0 - max(min(min(v1*22, 106) + v2, 1117), 118)));1;62;;;;;
 (max(510 - max(((v0*4) + v1)*2, 507), 4 - max(min((v0*4) + v1, 2)*2, 1)) == max(510 - max(((v0*4) + v1)*2, 507), 4 - max(min((v0*4) + v1, 2)*2, 1)));1;103;;;;;
 (((v0 + v1) + -5) == ((((v0 + v1) + -5) + 130) - 1));0;55;;;;;
 (min(max(min(v0/2, 999), 0) + v1, ((v2*16) + v3) + 12) == min(max(min(v0/2, 999), 0) + v1, ((v2*16) + v3) + 12));1;77;;;;;
 (min(267 - (((v0*34) + v1)*4), (max(v2, 1997) - ((((v0*34) + v1)*4) + v3)) + 2) == min(267 - (((v0*34) + v1)*4), (max(v2, 1997) - ((((v0*34) + v1)*4) + v3)) + 2));1;98;;;;;
 (max(min(min(min(((v3 - ((v4*256) + v5)) + 14)/4, (((v1 + v2) - ((v4*256) + v5)) + 13)/4), ((min((v1 + v2) + 2, v3) - ((v4*256) + v5)) + 14)/4), (0 + ((min(v6 - v5, 245) + 21)/4)) - 1) + 1, min(max((((v2 - v5)/4) + (v4*-64)) + 5, 0), ((min(v6 - v5, 245) + 21)/4) + 0)) <= min(max((((v2 - v5)/4) + (v4*-64)) + 5, 0), ((min(v6 - v5, 245) + 21)/4) + 0));0;3126;;;;;
 ((((max(min((v1*-128) + (max(min((v2*1000) + 1000, v3) + v4, 1) - min((v2*1000) + v4, 1999)), 128), 0) + (v1*128))/4)*4) == (max(min((v1*-128) + (max(min((v2*1000) + 1000, v3) + v4, 1) - min((v2*1000) + v4, 1999)), 128), 0) + (v1*128)));0;1657;;;;;
 (((((v0 + v1) + 3)/4) - v2) == ((((v0 + v1) + 3)/4) - v2));1;67;;;;;
 (((max(max(min((v0*288) + v1, min(v2 + v1, 2000) + -288), -287) + 11, min(v0*288, v2 + -288) + v1) - min(min(max(min((v0*288) + v1, min(v2 + v1, 2287) + -288), 0) + -11, (v0*288) + v1), (v2 + v1) + -288)) - (v3*156)) == ((max(max(min((v0*288) + v1, min(v2 + v1, 2000) + -288), -287) + 11, min(v0*288, v2 + -288) + v1) - min(min(max(min((v0*288) + v1, min(v2 + v1, 2287) + -288), 0) + -11, (v0*288) + v1), (v2 + v1) + -288)) - (v3*156)));1;192;;;;;
 (max(0, min(112 - ((v0 % 8)*15), (0 + 15) - 1) + 1) <= 0);0;76;;;;;
 ((max(min(min(v0*32, 223) + v1, 1244), 245) + (v2*8)) == (max(min(min(v0*32, 223) + v1, 1244), 245) + (v2*8)));1;63;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 10)/4) == (((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 10)/4));1;198;;;;;
 (min((v0*12) + (v1*16), (v2*16) + 71) == min((v0*12) + (v1*16), (v2*16) + 71));1;44;;;;;
 ((((((((v0 + v1) + -1)/250) - (v1/250))*32) + 125)/72) == (((((((v0 + v1) + -1)/250) - (v1/250))*32) + 125)/72));1;68;;;;;
 (((v0*3) + (max(min(v1/8, 250), 1)*8)) == ((v0*3) + (max(min(v1/8, 250), 1)*8)));1;145;;;;;
 ((((v0*8) + 107)/92) != 0);0;432;;;;;
 (min((v0*4) + v1, max(min((v2*32) + v3, 1214), 215) + 30) == min((v0*4) + v1, max(min((v2*32) + v3, 1214), 215) + 30));1;68;;;;;
 (max(((((v0 + v1) + 7)/8) - (v2*2)) - (v1/8), ((v0 + -1)/8) - (v2*2)) == max(((((v0 + v1) + 7)/8) - (v2*2)) - (v1/8), ((v0 + -1)/8) - (v2*2)));1;87;;;;;
 ((((((v0 + v1) + 31)/32)*4) - v2) == (((((v0 + v1) + 31)/32)*4) - v2));1;68;;;;;
 (((v0 - v1)/4) == ((v0 - v1)/4));1;44;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*32)) == (max(min(v0 + v1, 1999), 0) + (v2*32)));1;90;;;;;
 ((max(min(((v0*40) + v1)*8, 8114), 115) + min(v2*4, v3 + 217)) == (max(min(((v0*40) + v1)*8, 8114), 115) + min(v2*4, v3 + 217)));1;86;;;;;
 ((((v0 - v1) + 161)/93) == (((v0 - v1) + 161)/93));1;73;;;;;
 (((v0 + v1) + -3) >= ((((v0 - 1) + v1) + 1) + 1));0;88;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (0 <= 0)) && (0 >= 0)) && ((0 + min(v1*8, 14)) <= min(v1*8, 14))) && ((3 + (min(v1*8, 14) + 4)) >= (min(v1*8, 14) + 7)));1;123;;;;;
 ((((0 - max(v0*8, (max(min((v1 + v2)/8, 249), 0)*8) + -17))/4) + (v0*2)) == (((0 - max(v0*8, (max(min((v1 + v2)/8, 249), 0)*8) + -17))/4) + (v0*2)));1;104;;;;;
 (((((max(min(v0, 2002), 3) + -3)/16)*16) - min((max(min(v1 + v0, 1999), 0)/16)*16, ((((max(min(v0, 2002), 3) + -3)/16) + v2)*16) + 2)) == ((((max(min(v0, 2002), 3) + -3)/16)*16) - min((max(min(v1 + v0, 1999), 0)/16)*16, ((((max(min(v0, 2002), 3) + -3)/16) + v2)*16) + 2)));1;145;;;;;
 (((v0*4) + ((v1*48) + v2)) == ((v0*4) + ((v1*48) + v2)));1;34;;;;;
 ((((v0*64) + 124)/36) != 0);0;1713;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 36) == min(((v0*2) + v1)*4, (v2*8) + 36));1;66;;;;;
 (min(v0 - min((v1/32)*32, 36), v2) == min(v0 - min((v1/32)*32, 36), v2));1;50;;;;;
 (0 == ((0 + (76 - max(min(v0*16, 76), 60))) - 1));0;65;;;;;
 ((max(min(v0, 669), -330) - max(min(max(min((((v1 + v2) + 15)/16)*8, 1329), 995), v0 + 321), 330)) == (max(min(v0, 669), -330) - max(min(max(min((((v1 + v2) + 15)/16)*8, 1329), 995), v0 + 321), 330)));1;320;;;;;
 ((max(v0 + v1, -8) - ((((v2*32) + v3)*4) + v4)) == (max(v0 + v1, -8) - ((((v2*32) + v3)*4) + v4)));1;63;;;;;
 ((((v0 + v1)/65) + ((40 - (v0 + v1))/65)) == (((v0 + v1)/65) + ((40 - (v0 + v1))/65)));1;53;;;;;
 (min(min(((v0*4) + v1)*2, 251) + (v2*4), (min((v0*4) + v1, min(max(min(v3*8, 113), -11) + 5, v1) + 4)*2) + 4) == min(min(((v0*4) + v1)*2, 251) + (v2*4), (min((v0*4) + v1, min(max(min(v3*8, 113), -11) + 5, v1) + 4)*2) + 4));1;118;;;;;
 (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 15) == ((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 15));1;261;;;;;
 ((((v0 - v1) + 268)/257) != 0);0;562;;;;;
 (((v0*-60) + ((min(v1 + 155, v2)*8) - ((v1*8) + (v3*180)))) == ((v0*-60) + ((min(v1 + 155, v2)*8) - ((v1*8) + (v3*180)))));1;67;;;;;
 ((min(((((v0 + v1) + 64)/65)*8) - (v2*131), ((v1/65)*8) + 117) - ((((v1/65)*2) + v3)*4)) == (min(((((v0 + v1) + 64)/65)*8) - (v2*131), ((v1/65)*8) + 117) - ((((v1/65)*2) + v3)*4)));1;101;;;;;
 (((v0 + v1) + -8) < (((v0 + 1) + v1) + -14));0;54;;;;;
 (0 == ((0 + ((max(min(v0, -1), -2)*4) + 8)) - 1));0;64;;;;;
 (min(((v0/8) + (v1*128)) + 127, v2) == min(((v0/8) + (v1*128)) + 127, v2));1;754;;;;;
 (((((((v0 + v1) + -1)/63) - (v1/63)) + 16)/12) == ((((((v0 + v1) + -1)/63) - (v1/63)) + 16)/12));1;51;;;;;
 (((v0 + 135)/128) == ((v0 + 135)/128));1;18;;;;;
 (min(((v0*65) + v1) + 53, v2) == min(((v0*65) + v1) + 53, v2));1;39;;;;;
 ((((max(min((((v0 + v1) + 47)/8)*8, 1994), -5) - max(min((v1/8)*8, 2100), 101)) + 234)/128) == (((max(min((((v0 + v1) + 47)/8)*8, 1994), -5) - max(min((v1/8)*8, 2100), 101)) + 234)/128));1;245;;;;;
 (((v0*4) + (((v1/1000)*16) + v2)) == ((v0*4) + (((v1/1000)*16) + v2)));1;41;;;;;
 ((((min(v0*36, 464) + (v1 + v2))/2) + (v3*10)) == (((min(v0*36, 464) + (v1 + v2))/2) + (v3*10)));1;54;;;;;
 (((max(min((v1*-32) + (v3 + (v2*-64)), -468), -500)/4)*4) == max(min((v1*-32) + (v3 + (v2*-64)), -468), -500));0;999;;;;;
 (((v0 + 690)/673) == ((v0 + 690)/673));1;29;;;;;
 (min(max(v0, 0)*8, (min(v1*120, 236) + v2) + 108) == min(max(v0, 0)*8, (min(v1*120, 236) + v2) + 108));1;64;;;;;
 ((max(min(min(v0*32, 223) + v1, 1213), 214) - (max(min(min(v0*32, 223) + v1, 1244), 245) + (((v2*4) + v3)*3))) == (max(min(min(v0*32, 223) + v1, 1213), 214) - (max(min(min(v0*32, 223) + v1, 1244), 245) + (((v2*4) + v3)*3))));1;153;;;;;
 (((min(v0 - v1, min((min(v0 - v1, (v2*64) + 14)/4)*4, (v2*64) + 11) + 3)/2) + (v2*-32)) == ((min(v0 - v1, min((min(v0 - v1, (v2*64) + 14)/4)*4, (v2*64) + 11) + 3)/2) + (v2*-32)));1;112;;;;;
 (0 == ((0 + (131 - max(min(v0*66, 131), 65))) - 1));0;79;;;;;
 ((v0 - (v1/125)) == (v0 - (v1/125)));1;55;;;;;
 (((((((uint1)1 && (((v0*4) + v1) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((((((v2*2) + 0)*4) + 0) + 1) <= ((v2*8) + 1))) && ((((((v2*2) + 15)*4) + 3) + 1) >= ((v2*8) + 64))) && (0 <= 0)) && (((14 + 0) - 1) >= ((14 + 0) - 1)));1;189;;;;;
 (((max(min(v0, 249), 0) - (v1*9)) - max(min((v2 + v3)/8, 249), 0)) == ((max(min(v0, 249), 0) - (v1*9)) - max(min((v2 + v3)/8, 249), 0)));1;101;;;;;
 (min(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 99, v3) == min(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 99, v3));1;63;;;;;
 (min(v0 + 4, (v1/8) + v2) == min(v0 + 4, (v1/8) + v2));1;49;;;;;
 (min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60), ((v3*34) + v2) + 28) == min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60), ((v3*34) + v2) + 28));1;87;;;;;
 (min(((v0 + v1) + -1)/8, ((v2*4) + ((v3*12) + ((v1/8) + (v4*84)))) + 3) == min(((v0 + v1) + -1)/8, ((v2*4) + ((v3*12) + ((v1/8) + (v4*84)))) + 3));1;71;;;;;
 (((v0*8) + -44) == ((((v0*8) + -44) + ((min((((((v1 + v2) + 64)/65)*8) - (v3*17)) - ((v2/65)*8), -7)*8) + 194)) - 1));0;246;;;;;
 (max(-754 - (v0*8), (v0*8) + 56) >= 0);0;514;;;;;
 (((v0*2) + (max(min(v1/2, 999), 0) + (v2*63))) == ((v0*2) + (max(min(v1/2, 999), 0) + (v2*63))));1;69;;;;;
 (min((v0*7) + v1, (((min(v0*7, -2)/2)*2) + (max(v0*7, -2) + v1)) + 3) == min((v0*7) + v1, (((min(v0*7, -2)/2)*2) + (max(v0*7, -2) + v1)) + 3));1;80;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*8) + 16)/9) == (((((((v0 + v1) + 124)/125) - (v1/125))*8) + 16)/9));1;66;;;;;
 (((((((v0 + v1) + 499)/500) - (v1/500)) + 9)/5) == ((((((v0 + v1) + 499)/500) - (v1/500)) + 9)/5));1;80;;;;;
 (min((v0*16) + ((v1*128) + ((v2/2) + (v3*504))), min(((v4 + v2) + 5)/2, ((v3*504) + ((v2/2) + (v1*128))) + 119) + 8) == min((v0*16) + ((v1*128) + ((v2/2) + (v3*504))), min(((v4 + v2) + 5)/2, ((v3*504) + ((v2/2) + (v1*128))) + 119) + 8));1;135;;;;;
 ((max(min(v0, 2082), 83) + (((v1 + 93)/4)*4)) == (max(min(v0, 2082), 83) + (((v1 + 93)/4)*4)));1;53;;;;;
 ((min((v0*8) + v1, 36) - max(min(min(((v2 + v3) + 499)/500, 3)*8, 22), -7)) == (min((v0*8) + v1, 36) - max(min(min(((v2 + v3) + 499)/500, 3)*8, 22), -7)));1;75;;;;;
 (min(min(((v0*180) + v1) + 180, v2) + -12, v3) == min(min(((v0*180) + v1) + 180, v2) + -12, v3));1;43;;;;;
 (((v0*63) + (max(min((v1 + v2)/2, 999), 0)*2)) == ((v0*63) + (max(min((v1 + v2)/2, 999), 0)*2)));1;51;;;;;
 (((((min(v0*63, 62) + v1) + v2)/8) + 1) < (((min(v0*63, 62) + (v1 + 1)) + v2)/8));0;120;;;;;
 (((v0 + 39)/32) != 0);0;2274;;;;;
 ((((v0 + v1)/2) + 1) <= ((((v0 - 1) + v1)/2) - 1));0;71;;;;;
 ((((v0*4) + 33)/9) != 0);0;433;;;;;
 (((v0*2) + ((v1*108) + v2)) == ((v0*2) + ((v1*108) + v2)));1;53;;;;;
 (((max(min((v1*-128) + ((v2*-64) + v3), 64), 0)/4)*4) == max(min((v1*-128) + ((v2*-64) + v3), 64), 0));0;3359;;;;;
 (((max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*16)) + 15), 249), 0) - max(min((v1/8) + (v2*16), 249), 0)) - (v3*4)) == ((max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*16)) + 15), 249), 0) - max(min((v1/8) + (v2*16), 249), 0)) - (v3*4)));1;287;;;;;
 ((-10 - max(min(v0, 1)*8, -7)) >= (((-10 - max(min(v0, 1)*8, -7)) + (max(min(v0, 1)*8, -7) + 14)) - 1));0;93;;;;;
 (((v0/8) + 1) != 0);0;264;;;;;
 (((((((uint1)1 && (((0 + (max(v0*12, -8) + v1)) + 1) <= (-7 + ((v0*12) + v1)))) && (((3 + ((((min(v0*12, -8)/4)*4) + (max(v0*12, -8) + v1)) + 16)) + 1) >= (0 + (((v0*12) + v1) + 12)))) && (((((0*1334) + v2) + 0) + -128) <= ((0 + v2) + -128))) && (((((1*1334) + v2) + 1333) + -128) >= ((3 + (v2 + 2684)) + -128))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) + -1)));0;421;;;;;
 ((((v0 + v1)*256) - (v2*136)) == (((v0 + v1)*256) - (v2*136)));1;37;;;;;
 (((v0*8) + (((min(v1*125, v2 + -125) + v3)/4) + (v4*4))) == ((v0*8) + (((min(v1*125, v2 + -125) + v3)/4) + (v4*4))));1;48;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1983), -5) - max(min((v1/8)*8, 2012), 16)) + 1032)/1000) == (((max(min((((v0 + v1) + -1)/8)*8, 1983), -5) - max(min((v1/8)*8, 2012), 16)) + 1032)/1000));1;232;;;;;
 ((((max(min(v0 + v1, 1997), -2) - max(min(v1, 2002), 3)) + 517)/512) == (((max(min(v0 + v1, 1997), -2) - max(min(v1, 2002), 3)) + 517)/512));1;143;;;;;
 (((v0*256) + ((v1*1008) + (max(v2*128, -5) + v3))) == ((v0*256) + ((v1*1008) + (max(v2*128, -5) + v3))));1;631;;;;;
 (((min((min((v1*1000) + 1000, v2)*8) + (v3*8), (((v1*8000) + ((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004)) + (v3*8)) + 4002)/8)*8) == min((min((v1*1000) + 1000, v2)*8) + (v3*8), (((v1*8000) + ((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004)) + (v3*8)) + 4002));0;2009;;;;;
 ((((v0*16)/8)*8) == (v0*16));1;325;;;;;
 (min(max(min(v0*8, 243), -6) + 132, v1) == min(max(min(v0*8, 243), -6) + 132, v1));1;58;;;;;
 ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*2) + 89) == (((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*2) + 89));1;217;;;;;
 ((((max(v0 + v1, -8) - min(v1, 2007)) + 689)/673) == (((max(v0 + v1, -8) - min(v1, 2007)) + 689)/673));1;69;;;;;
 ((1 - (max(min(v0, 249), 0)*2)) > (((max(min(v0, 122), -127) - max(min(v0, 249), 0))*2) + 255));0;435;;;;;
 (((max(min((v1*-16) + ((v2*-16) + v3), 12), -4)/4)*4) == max(min((v1*-16) + ((v2*-16) + v3), 12), -4));0;1003;;;;;
 ((((((((v0 + v1) + 31)/32) - (v1/32))*32) + 601)/524) == (((((((v0 + v1) + 31)/32) - (v1/32))*32) + 601)/524));1;97;;;;;
 ((min(v0, 1999) + (v1*32)) == (min(v0, 1999) + (v1*32)));1;31;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*128) + 1297)/1116) == (((((((v0 + v1) + 124)/125) - (v1/125))*128) + 1297)/1116));1;68;;;;;
 (max(min(max(((v0 - v1) + 11)/4, 0), ((v2 - v1)/4) + 5), ((min(v2 + 10, v3 + v0) - v1) + 7)/4) == max(min(max(((v0 - v1) + 11)/4, 0), ((v2 - v1)/4) + 5), ((min(v2 + 10, v3 + v0) - v1) + 7)/4));1;117;;;;;
 ((min(v0, 5) + -5) >= (((min(v0, 5) + -5) + (7 - min(v0, 5))) - 1));0;72;;;;;
 (max(min(min((((v1 + v2) - (((v4*9) + v5)*64)) + -227)/287, ((min((v3*8) + 235, v1 + v2) - (((v4*9) + v5)*64)) + 59)/287), (0 + (((v6*8) + 867)/287)) - 1) + 1, min(max(((v2 - (((v4*9) + v5)*64)) + 346)/287, 0), (((v6*8) + 867)/287) + 0)) <= min(max(((v2 - (((v4*9) + v5)*64)) + 346)/287, 0), (((v6*8) + 867)/287) + 0));0;4232;;;;;
 (min(((v0 + v1) + -1)/4, ((v2*128) + v3) + 122) == min(((v0 + v1) + -1)/4, ((v2*128) + v3) + 122));1;61;;;;;
 (max(((v0*70) - ((max(((v1 + v2) + 7)/8, 255)/16)*16)) + (((min(v2/8, 0)/16)*16) + (v3*140)), v4) == max(((v0*70) - ((max(((v1 + v2) + 7)/8, 255)/16)*16)) + (((min(v2/8, 0)/16)*16) + (v3*140)), v4));1;110;;;;;
 (min(v0*8, (((v1*2) + v2)*8) + 7) == min(v0*8, (((v1*2) + v2)*8) + 7));1;76;;;;;
 (min(((v0 + v1) + 499)/500, v2 + 3) == min(((v0 + v1) + 499)/500, v2 + 3));1;64;;;;;
 (((v0*16) + ((v1*120) + v2)) == ((v0*16) + ((v1*120) + v2)));1;38;;;;;
 (min(v0 + 121, v1) == min(v0 + 121, v1));1;39;;;;;
 (((v0*500) + (v1*252)) == ((v0*500) + (v1*252)));1;39;;;;;
 ((((v0*4) + (v1 + v2)) + -12) == (((((v0*4) + (v1 + v2)) + -12) + (144 - max(v0*4, 3))) - 1));0;119;;;;;
 (((v0 + 82)/64) != 0);0;337;;;;;
 ((((min(max(min((min(v3*125, v4 + -125) + v2)/8, 249), 0) - min((min(v3*125, v4 + -125) + (v2 + 124))/8, 249), 0)*-1)/4)*4) == (min(max(min((min(v3*125, v4 + -125) + v2)/8, 249), 0) - min((min(v3*125, v4 + -125) + (v2 + 124))/8, 249), 0)*-1));0;2030;;;;;
 (min(max(min((v0*2) + v1, 1996), -3) + (v2*4), max(min((v0*2) + v1, 1993), -6) + 3) == min(max(min((v0*2) + v1, 1996), -3) + (v2*4), max(min((v0*2) + v1, 1993), -6) + 3));1;129;;;;;
 (min(v0 + 502, v1) == min(v0 + 502, v1));1;33;;;;;
 (((min(v0, 996) - (v1*64)) - max(v0, 122)) == ((min(v0, 996) - (v1*64)) - max(v0, 122)));1;53;;;;;
 ((((max(min(v0, 231), -18) + 26)/4) - (max(min(v1, 31), 1)*2)) == (((max(min(v0, 231), -18) + 26)/4) - (max(min(v1, 31), 1)*2)));1;80;;;;;
 (((v0 + 15)/252) == ((((v0 + 15)/252) + ((((v0 + 15) % 252) + 251)/252)) - 1));0;543;;;;;
 (max((((v0 + v1) + 23)/8) - ((v2*12) + v3), ((((v0 + v1) + 7)/8) - ((v4*84) + ((v1/8) + (v2*12)))) + 2) == max((((v0 + v1) + 23)/8) - ((v2*12) + v3), ((((v0 + v1) + 7)/8) - ((v4*84) + ((v1/8) + (v2*12)))) + 2));1;128;;;;;
 (0 >= ((0 + ((((v0 + v1) % 32) + 540)/32)) - 1));0;49;;;;;
 (min(((v0/2) + (((min((v1*-127) + ((((v2 + v0) + 3)/2) - (v0/2)), (min(v3*44, 86) + (v4*504)) + 32)/2)*2) + (v1*127))) + 1, v5) == min(((v0/2) + (((min((v1*-127) + ((((v2 + v0) + 3)/2) - (v0/2)), (min(v3*44, 86) + (v4*504)) + 32)/2)*2) + (v1*127))) + 1, v5));1;125;;;;;
 ((((v0*168)/2)*2) == (v0*168));1;39;;;;;
 (((v0*8) + -544) >= ((((v0*8) + -544) + 588) - 1));0;38;;;;;
 ((min(v0, 1962) - ((v1*4) + v2)) == (min(v0, 1962) - ((v1*4) + v2)));1;50;;;;;
 (max(min(max(max((v0 + 1)/2, (v1*8) + -4), 0), ((min(((((v2 + v3) + 15)/16) - (v4*8)) - (v3/16), 7) + v1)*8) + 5), min(min(((v5 + v0) + -1)/2, min((v5 + v0)/2, 1000) + -1), ((min(((((v2 + v3) + 15)/16) - (v4*8)) - (v3/16), 7) + v1)*8) + 4) + 1) == max(min(max(max((v0 + 1)/2, (v1*8) + -4), 0), ((min(((((v2 + v3) + 15)/16) - (v4*8)) - (v3/16), 7) + v1)*8) + 5), min(min(((v5 + v0) + -1)/2, min((v5 + v0)/2, 1000) + -1), ((min(((((v2 + v3) + 15)/16) - (v4*8)) - (v3/16), 7) + v1)*8) + 4) + 1));1;240;;;;;
 (min((v0 + 9)/8, max((0 - v1)/8, -1) + 1) == min((v0 + 9)/8, max((0 - v1)/8, -1) + 1));1;1269;;;;;
 (max((v0*4) + v1, (max(min((v2 + v3)/4, 499), 0)*4) + -5) == max((v0*4) + v1, (max(min((v2 + v3)/4, 499), 0)*4) + -5));1;73;;;;;
 (((v0*24) + (min(v1*64, v2 + -64) + v3)) == ((v0*24) + (min(v1*64, v2 + -64) + v3)));1;40;;;;;
 (min(max(min((v0 + v1)/2, 937), -62) + 33, v2) == min(max(min((v0 + v1)/2, 937), -62) + 33, v2));1;62;;;;;
 (min(((v0*304) + ((min(min((v0*-152) + (v1 - v2), 139)*8, (v3*124) + 16)/4) + (v2*2)))*4, v4 + 2) == min(((v0*304) + ((min(min((v0*-152) + (v1 - v2), 139)*8, (v3*124) + 16)/4) + (v2*2)))*4, v4 + 2));1;110;;;;;
 ((max(((v0/16) + v1)*8, 1003) - min((v0/16)*8, 4)) == (max(((v0/16) + v1)*8, 1003) - min((v0/16)*8, 4)));1;52;;;;;
 (min(min(((v0*64) + ((v1*1000) + v2)) + 11, v3), (((min(((v0*64) + (v1*1000)) + 11, v4)/4)*4) + v2) + 3) == min(min(((v0*64) + ((v1*1000) + v2)) + 11, v3), (((min(((v0*64) + (v1*1000)) + 11, v4)/4)*4) + v2) + 3));1;89;;;;;
 (min((v0*4) + v1, (min(v2*12, 44) + v3) + 10) == min((v0*4) + v1, (min(v2*12, 44) + v3) + 10));1;55;;;;;
 (min(((v0/63) + (v1*17)) + 15, v2) == min(((v0/63) + (v1*17)) + 15, v2));1;68;;;;;
 ((min((v0*-8) + (max(min(min(v1*24, 39) + ((v2 + v3)/2), 976), -23) - max(min(((v2 + v3)/2) + (v1*24), 999), 0)), -16) + (v4*-4)) == (min((v0*-8) + (max(min(min(v1*24, 39) + ((v2 + v3)/2), 976), -23) - max(min(((v2 + v3)/2) + (v1*24), 999), 0)), -16) + (v4*-4)));1;315;;;;;
 ((max(v0 + v1, -8) - ((((v2*127) + v3)*4) + v4)) == (max(v0 + v1, -8) - ((((v2*127) + v3)*4) + v4)));1;72;;;;;
 (((v0/65) + ((v1*2) - (((v2 + v0) + 64)/65))) == ((v0/65) + ((v1*2) - (((v2 + v0) + 64)/65))));1;74;;;;;
 ((((min((v2*48) + (max(min(v3/2, 999), 0) + 44), max(min(v3/2, 999), 0) + v1) + (min((v2*48) + max(min(v3/2, 999), 0), (max(min(v3/2, 999), 0) + v1) + 6)*-1))/2)*2) == (min((v2*48) + (max(min(v3/2, 999), 0) + 44), max(min(v3/2, 999), 0) + v1) + (min((v2*48) + max(min(v3/2, 999), 0), (max(min(v3/2, 999), 0) + v1) + 6)*-1)));0;1047;;;;;
 (((((v0 + v1)/32)*16) + -37) == ((((((v0 + v1)/32)*16) + -37) + ((v2*16) + 83)) - 1));0;111;;;;;
 ((max(min(((v0/63) + v1)*8, min((((v2 + v0) + 62)/63)*8, 243) + 8), 2) - (max(min(((v0/63) + v1)*8, min((((v2 + v0) + 62)/63)*8, 250) + 8), 9) + (v3*4))) == (max(min(((v0/63) + v1)*8, min((((v2 + v0) + 62)/63)*8, 243) + 8), 2) - (max(min(((v0/63) + v1)*8, min((((v2 + v0) + 62)/63)*8, 250) + 8), 9) + (v3*4))));1;180;;;;;
 (min(v0*8, ((v1*122) + (((v2*152) + v3)*8)) + 54) == min(v0*8, ((v1*122) + (((v2*152) + v3)*8)) + 54));1;56;;;;;
 (0 >= ((0 + ((((v0 + v1) % 8) + 94)/32)) - 1));0;35;;;;;
 (max(min(1999, (((v2*8) + -75) + ((min((max(min(((v3 + v4) + 7)/8, 249), 0) - (v5*128)) - max(min(v4/8, 256), 7), 114)*8) + 113)) - 1) + 1, min(max(0, (v2*8) + -75), ((min((max(min(((v3 + v4) + 7)/8, 249), 0) - (v5*128)) - max(min(v4/8, 256), 7), 114)*8) + 113) + ((v2*8) + -75))) <= min(max(0, (v2*8) + -75), ((min((max(min(((v3 + v4) + 7)/8, 249), 0) - (v5*128)) - max(min(v4/8, 256), 7), 114)*8) + 113) + ((v2*8) + -75)));0;2753;;;;;
 (((((v0 % (((v1*8) + 77)/68))*68)/4)*4) == ((v0 % (((v1*8) + 77)/68))*68));1;61;;;;;
 (min(max(min(v0, 1991), -8), (max(min((v1*505) + ((v2*1008) + v3), 2005), 6) + (v4*255)) + 232) == min(max(min(v0, 1991), -8), (max(min((v1*505) + ((v2*1008) + v3), 2005), 6) + (v4*255)) + 232));1;103;;;;;
 (((v0*9) + ((v1*3) + v2)) == ((v0*9) + ((v1*3) + v2)));1;33;;;;;
 ((max(min(v0*8, 214), -35) - max(min(v1*8, 254), 5)) == (max(min(v0*8, 214), -35) - max(min(v1*8, 254), 5)));1;162;;;;;
 ((((((v0 + v1) + -1)/250) - (v1/250)) + 1) == (((((v0 + v1) + -1)/250) - (v1/250)) + 1));1;247;;;;;
 (((((v0 + -2)/16)*2) + (v1*3)) == ((((v0 + -2)/16)*2) + (v1*3)));1;47;;;;;
 (max(min(249, ((((v1*63) + v2) + -1) + (v3 + 6)) - 1) + 1, min(max(0, ((v1*63) + v2) + -1), (v3 + 6) + (((v1*63) + v2) + -1))) <= min(max(0, ((v1*63) + v2) + -1), (v3 + 6) + (((v1*63) + v2) + -1)));0;1637;;;;;
 (min((((v0 + v1) + 62)/63)*8, v2 + 23) == min((((v0 + v1) + 62)/63)*8, v2 + 23));1;51;;;;;
 (((min(v0 - (v1*29), ((max(min(v2/8, 249), 0)/8)*8) + 25)*-8) + (((max(min(v2/8, 249), 0)/8)*64) + (v3*3))) == ((min(v0 - (v1*29), ((max(min(v2/8, 249), 0)/8)*8) + 25)*-8) + (((max(min(v2/8, 249), 0)/8)*64) + (v3*3))));1;117;;;;;
 (((max(min((v4*-4) + min((v1*-8) + ((max(v2, -1)*-8) + (max(min(v3, 976), -23) - max(min(v3, 999), 0))), -8), -12), -16)/2)*2) == max(min((v4*-4) + min((v1*-8) + ((max(v2, -1)*-8) + (max(min(v3, 976), -23) - max(min(v3, 999), 0))), -8), -12), -16));0;1808;;;;;
 (max(min(1 - min(v0*2, 1), (min(v1, 3)*2) + 3), min(999 - (v0*2), (min(v2 - v0, v1)*2) + 2) + 1) == max(min(1 - min(v0*2, 1), (min(v1, 3)*2) + 3), min(999 - (v0*2), (min(v2 - v0, v1)*2) + 2) + 1));1;126;;;;;
 (min(88 - (max(v0 - v1, 9)*8), (min(v1 - v0, -9)*8) + 107) == min(88 - (max(v0 - v1, 9)*8), (min(v1 - v0, -9)*8) + 107));1;85;;;;;
 (max(v0*8, (((v1*4) + (min(v2*20, 19) + v3))*8) + 7) == max(v0*8, (((v1*4) + (min(v2*20, 19) + v3))*8) + 7));1;75;;;;;
 (((v0 - (v1*126)) - ((v2/8)*8)) == ((v0 - (v1*126)) - ((v2/8)*8)));1;51;;;;;
 (min(max(min((v0 + v1)/2, 937), -62) + 66, v2) == min(max(min((v0 + v1)/2, 937), -62) + 66, v2));1;62;;;;;
 ((v0*8) == (((v0*8) + (2 - (v0*8))) - 1));0;38;;;;;
 (((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 379)/34) == ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 379)/34));1;3019;;;;;
 (((max(v0, 0) - v1) + 1) == ((max(v0, 0) - v1) + 1));1;51;;;;;
 (0 == ((0 + ((((v0 + v1) % 16) + 313)/32)) - 1));0;72;;;;;
 ((((max(v0 + v1, -8) - min(v1, 2007)) + 37)/16) == (((max(v0 + v1, -8) - min(v1, 2007)) + 37)/16));1;87;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + 1) <= ((((v0*4) + 0) + v1) + -3))) && (((((v0*4) + v1) + 3) + 1) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + ((5 + -3) - 1)))) && ((((v2*63) + v3) + -3) <= ((((v2*63) + v3) + 0) + -3))) && ((((v2*63) + v3) + 63) >= ((((v2*63) + v3) + ((63 + 0) - 1)) + ((5 + -3) - 1)))) && (v4 <= v4)) && (v4 >= v4));0;263;;;;;
 ((max(v0, 250) + -1) >= 0);1;23;;;;;
 (min(((v0*4) + v1)*16, v2 + 15) == min(((v0*4) + v1)*16, v2 + 15));1;53;;;;;
 (((min(v0 - v1, 60) + 7)/4) == ((min(v0 - v1, 60) + 7)/4));1;62;;;;;
 (((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -9) <= ((0 + (min(v0, 4) + v1)) + -9))) && (((3 + ((((max(v0, 4) + 11)/4)*4) + (min(v0, 4) + v1))) + -9) >= ((3 + ((((max(v0, 4) + 11)/4)*4) + (min(v0, 4) + v1))) + -9))) && ((((v2*8) + ((v3*32) + v4)) + 7) <= (-1 + ((v2*8) + ((v3*32) + v4))))) && ((((v2*8) + ((v3*32) + v4)) + 14) >= (7 + (((v2*8) + ((v3*32) + v4)) + 7)))) && (0 <= 0)) && (13 >= 13));0;256;;;;;
 ((min((v0 + v1) - (v2*1008), v1 + 1008) - ((v3*505) + v1)) == (min((v0 + v1) - (v2*1008), v1 + 1008) - ((v3*505) + v1)));1;60;;;;;
 (min(max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1), v2) == min(max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1), v2));1;205;;;;;
 (((v0*15) + (((v1/65)*4) + v2)) == ((v0*15) + (((v1/65)*4) + v2)));1;44;;;;;
 (((((v0 % ((v1 + 47)/8))*-64)/32)*32) == ((v0 % ((v1 + 47)/8))*-64));1;71;;;;;
 (min(min((v0*6) + v1, v2 + 43)*8, ((((min(v0*6, (v2 - v1) + 43)/2)*2) + v1)*8) + 12) == min(min((v0*6) + v1, v2 + 43)*8, ((((min(v0*6, (v2 - v1) + 43)/2)*2) + v1)*8) + 12));1;104;;;;;
 (((((((v0 + v1) + -1)/17) - (v1/17))/24) + 1) == ((((((v0 + v1) + -1)/17) - (v1/17))/24) + 1));1;74;;;;;
 (min(max(min(v0 + v1, 2000), 1), v2 + -3) == min(max(min(v0 + v1, 2000), 1), v2 + -3));1;51;;;;;
 ((((v0 - v1) + 39)/32) != 0);0;456;;;;;
 (min(((v0*504) + ((v1*1008) + v2)) + 494, v3 + v2) == min(((v0*504) + ((v1*1008) + v2)) + 494, v3 + v2));1;60;;;;;
 (min((v0*4) + v1, max(min(min(v2*64, 191) + v3, 1181), 182) + 62) == min((v0*4) + v1, max(min(min(v2*64, 191) + v3, 1181), 182) + 62));1;66;;;;;
 ((((max(min((v0/125)*16, 286), 37)*2) + v1)*4) == (((max(min((v0/125)*16, 286), 37)*2) + v1)*4));1;79;;;;;
 ((max(min(v0, 16), -491) + -20) == (max(min(v0, 16), -491) + -20));1;41;;;;;
 (min((v0*128) + v1, v2 + 2) == min((v0*128) + v1, v2 + 2));1;52;;;;;
 ((((v0 - v1) + 524)/513) != 0);0;440;;;;;
 (max(0, min(83 - ((v0 % 8)*11), (0 + 11) - 1) + 1) <= 0);0;70;;;;;
 (min(max(max(max(min(v0/8, 256), 7)*8, 75) + -84, v1), (max(max(min(v0/8, 256), 7)*8, 75) + v2) + 52) == min(max(max(max(min(v0/8, 256), 7)*8, 75) + -84, v1), (max(max(min(v0/8, 256), 7)*8, 75) + v2) + 52));1;104;;;;;
 ((min((v0/32)*32, 36) + (v1*4)) == (min((v0/32)*32, 36) + (v1*4)));1;49;;;;;
 (max(min(max(v0, 0), v1 + 1), min(v1, 62) + 1) == max(min(max(v0, 0), v1 + 1), min(v1, 62) + 1));1;66;;;;;
 (((((((uint1)1 && (((((((((min(v0, 4) + v1) + -4)/8)*2) + 0)*4) + 0) + -5) <= (((0 + (((min(v0, 4) + v1) + -4)/8))*8) + -5))) && (((((((((min(v0, 4) + v1) + -4)/8)*2) + (((((((min(v0, 4) + v1) + 20)/8) + ((v2/4)*4)) - (((min(v0, 4) + v1) + -4)/8))*2) + 2))*4) + 3) + -5) >= (((((4 + 0) - 1) + ((((min(v0, 4) + v1) + -4)/8) + ((v2/4)*4)))*8) + ((11 + -5) - 1)))) && (((v3*8) + -5) <= ((v3*8) + -5))) && (((v3*8) + ((11 + -5) - 1)) >= ((v3*8) + ((11 + -5) - 1)))) && (v4 <= v4)) && (v4 >= v4));1;471;;;;;
 ((max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + (v3*252)) == (max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + (v3*252)));1;70;;;;;
 ((((max(min((v1*-32) + (v2 - v3), 20), -12) + (v1*32))/4)*4) == (max(min((v1*-32) + (v2 - v3), 20), -12) + (v1*32)));0;1022;;;;;
 ((min(max(min(((v0 + v1) + 7)/8, 249), 0), (min(v2*4, 59) + v3) + -4) - (v2*4)) == (min(max(min(((v0 + v1) + 7)/8, 249), 0), (min(v2*4, 59) + v3) + -4) - (v2*4)));1;94;;;;;
 (min(((v0 + v1) + 7)/8, ((v2*4) + ((v3*16) + ((v1/8) + (v4*128)))) + 3) == min(((v0 + v1) + 7)/8, ((v2*4) + ((v3*16) + ((v1/8) + (v4*128)))) + 3));1;72;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 138)/129) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 138)/129));1;61;;;;;
 (min(((v0 + v1) + -1)/8, ((v2*4) + ((v1/8) + (v3*12))) + 3) == min(((v0 + v1) + -1)/8, ((v2*4) + ((v1/8) + (v3*12))) + 3));1;64;;;;;
 (((v0 + 28)/16) != 0);0;387;;;;;
 (min(((((v0 + v1) + 3)/4) - (v1/4)) + -7, v2) == min(((((v0 + v1) + 3)/4) - (v1/4)) + -7, v2));1;54;;;;;
 (max(min(max(((v0 - (v1*2)) + 245)/232, 0), ((v2 - v1) + 115)/116), min((((v3 + v0) - (v1*2)) + 13)/232, ((v2 - v1)/116) + -1) + 1) == max(min(max(((v0 - (v1*2)) + 245)/232, 0), ((v2 - v1) + 115)/116), min((((v3 + v0) - (v1*2)) + 13)/232, ((v2 - v1)/116) + -1) + 1));1;201;;;;;
 (min(((v0 + v1)*8) + 5, v2) == min(((v0 + v1)*8) + 5, v2));1;36;;;;;
 ((((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0)) + 9)/8) == (((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0)) + 9)/8));1;225;;;;;
 ((((max(min((max(min(min(((v7/((v8 + 9)/5))*5) + (v5/63), ((v6 + v5) + -1)/63)*8, 244), -5)*8) + 450, (max(min(((v7/((v8 + 9)/5))*40) + ((v5/63)*8), 285), 36)*8) + (max((((max(min(min(((v7/((v8 + 9)/5))*5) + (v5/63), ((v6 + v5) + -1)/63)*8, 244), -5) - max(min(((v7/((v8 + 9)/5))*40) + ((v5/63)*8), 285), 36))*8) + 326)/172, 0)*172)) + 8, (max(min(((v7/((v8 + 9)/5))*40) + ((v5/63)*8), 285), 36)*8) + (max((((max(min(min(((v7/((v8 + 9)/5))*5) + (v5/63), ((v6 + v5) + -1)/63)*8, 244), -5) - max(min(((v7/((v8 + 9)/5))*40) + ((v5/63)*8), 285), 36))*8) + 326)/172, 0)*172))*-1)/4)*4) == (max(min((max(min(min(((v7/((v8 + 9)/5))*5) + (v5/63), ((v6 + v5) + -1)/63)*8, 244), -5)*8) + 450, (max(min(((v7/((v8 + 9)/5))*40) + ((v5/63)*8), 285), 36)*8) + (max((((max(min(min(((v7/((v8 + 9)/5))*5) + (v5/63), ((v6 + v5) + -1)/63)*8, 244), -5) - max(min(((v7/((v8 + 9)/5))*40) + ((v5/63)*8), 285), 36))*8) + 326)/172, 0)*172)) + 8, (max(min(((v7/((v8 + 9)/5))*40) + ((v5/63)*8), 285), 36)*8) + (max((((max(min(min(((v7/((v8 + 9)/5))*5) + (v5/63), ((v6 + v5) + -1)/63)*8, 244), -5) - max(min(((v7/((v8 + 9)/5))*40) + ((v5/63)*8), 285), 36))*8) + 326)/172, 0)*172))*-1));0;4542;;;;;
 ((v0 + 456) == (((v0 + 456) + (52 - max(v1*38, 14))) - 1));0;85;;;;;
 (min(((v0 + v1) + -1)/16, v2 + 3) == min(((v0 + v1) + -1)/16, v2 + 3));1;102;;;;;
 (((v0/65) + ((v1*4) - v2)) == ((v0/65) + ((v1*4) - v2)));1;49;;;;;
 ((v0 + -2) == (((v0 + -2) + 13) - 1));0;35;;;;;
 (min(((max(min(max(v0*64, -5) + v1, 2246), 247) + -251)/4)*4, min(max(min(max(v0*64, -5) + v1, 2246), 247), (v0*64) + v1) + -251) == min(((max(min(max(v0*64, -5) + v1, 2246), 247) + -251)/4)*4, min(max(min(max(v0*64, -5) + v1, 2246), 247), (v0*64) + v1) + -251));1;146;;;;;
 ((min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + (min(v2*42, 83) + (min(v3*125, v4 + -125) + v5))) == (min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + (min(v2*42, 83) + (min(v3*125, v4 + -125) + v5))));1;236;;;;;
 (((((v0*126) + v1) + v2) + -70) < ((((v0*126) + (v1 + 1)) + v2) + -73));0;70;;;;;
 ((((v0 + v1)*8) + -50) < (min(max(((v0 + 1) + v1)*8, (v1*8) + 6), (((v0 + 1) + v1)*8) + 6) + -67));0;202;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 31) == min(((v0*2) + v1)*4, (v2*8) + 31));1;43;;;;;
 (min(v0*8, (max(min(((v1 + v2) + -1)/63, 31), 0)*8) + 12) == min(v0*8, (max(min(((v1 + v2) + -1)/63, 31), 0)*8) + 12));1;81;;;;;
 (min((((v0/8)*2) + v1)*4, v2 + -1) == min((((v0/8)*2) + v1)*4, v2 + -1));1;52;;;;;
 (((v0/64) + 1) == ((v0/64) + 1));1;20;;;;;
 (min(((v0 + v1) + 63)/8, ((v1/8) + (v2*17)) + 15) == min(((v0 + v1) + 63)/8, ((v1/8) + (v2*17)) + 15));1;63;;;;;
 (((v0 + 358)/340) != 0);0;365;;;;;
 ((((v0*32) + 601)/524) != 0);0;444;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 52)/8) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 52)/8));1;208;;;;;
 (((((min(((((v0/65) + (v1*4))*2) + v2)*4, (min(((v3 + v0) + -1)/65, ((v0/65) + (v1*4)) + 3)*8) + 4)/4) - v2) - (v1*8)) - ((v0/65)*2)) == ((((min(((((v0/65) + (v1*4))*2) + v2)*4, (min(((v3 + v0) + -1)/65, ((v0/65) + (v1*4)) + 3)*8) + 4)/4) - v2) - (v1*8)) - ((v0/65)*2)));1;141;;;;;
 (((v0*2) - (((max(min((v1 + v2)/8, 249), 0)/8)*16) + v3)) == ((v0*2) - (((max(min((v1 + v2)/8, 249), 0)/8)*16) + v3)));1;71;;;;;
 (((v0*12) + (((v1/8) + (v2*12))*8)) == ((v0*12) + (((v1/8) + (v2*12))*8)));1;47;;;;;
 (((v0*4) + (v1 + v2)) == ((v0*4) + (v1 + v2)));1;33;;;;;
 (((max(min(v0 - v1, 69)*8, 489) + -553) + (555 - max(min(v0 - v1, 69)*8, 489))) <= (max(min(v0 - v1, 69)*8, 489) + -553));0;118;;;;;
 ((-68 - (((v0 - ((v1/32) + (v2*33)))*4)*8)) == (-68 - (((v0 - ((v1/32) + (v2*33)))*4)*8)));1;61;;;;;
 (min((v0*8) + 20, v1) == min((v0*8) + 20, v1));1;60;;;;;
 (min(max((219 - (v0*8))/137, 0), ((min(((((v1 + v2) + 87)/8) - ((v3/2)*34)) - (v2/8), 23)*8) + 225)/137) == min(max((219 - (v0*8))/137, 0), ((min(((((v1 + v2) + 87)/8) - ((v3/2)*34)) - (v2/8), 23)*8) + 225)/137));1;131;;;;;
 (((v0*8) + -56) == ((((v0*8) + -56) + ((min(v1, 0)*8) + 20)) - 1));0;88;;;;;
 (min(max(v0, 0), ((v1*16) + v2) + 2) == min(max(v0, 0), ((v1*16) + v2) + 2));1;57;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[(((v0*v1) + ((v2*v3) + v4)) + v5) - ((v6*v5) + ((v7*v1) + ((v8*v3) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[(((v0*v1) + ((v2*v3) + v4)) + v5) - ((v6*v5) + ((v7*v1) + ((v8*v3) + v9)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[(((v0*v1) + ((v2*v3) + v4)) + v5) - ((v6*v5) + ((v7*v1) + ((v8*v3) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[(((v0*v1) + ((v2*v3) + v4)) + v5) - ((v6*v5) + ((v7*v1) + ((v8*v3) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[(((v0*v1) + ((v2*v3) + v4)) + v5) - ((v6*v5) + ((v7*v1) + ((v8*v3) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[(((v0*v1) + ((v2*v3) + v4)) + v5) - ((v6*v5) + ((v7*v1) + ((v8*v3) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[(((v0*v1) + ((v2*v3) + v4)) + v5) - ((v6*v5) + ((v7*v1) + ((v8*v3) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[(((v0*v1) + ((v2*v3) + v4)) + v5) - ((v6*v5) + ((v7*v1) + ((v8*v3) + v9)))]))));1;1197;;;;;
 (((v0 + 44)/32) != 0);0;374;;;;;
 (min((((((v0 + v1) + -1)/2) - (v2*500)) - (v3*250)) - (v1/2), v4) == min((((((v0 + v1) + -1)/2) - (v2*500)) - (v3*250)) - (v1/2), v4));1;80;;;;;
 ((max(min((v0/8)*8, 2012), 13) + (v1*999)) == (max(min((v0/8)*8, 2012), 13) + (v1*999)));1;55;;;;;
 (min(min(v0, 996)*2, v1 + 116) == min(min(v0, 996)*2, v1 + 116));1;43;;;;;
 ((max(min(((v0 + v1) + 124)/8, 249) - max(min((v0 + v1)/8, 249), 0), 0) + (v2*-8)) == (max(min(((v0 + v1) + 124)/8, 249) - max(min((v0 + v1)/8, 249), 0), 0) + (v2*-8)));1;163;;;;;
 ((((v0*12)/4)*4) == (v0*12));1;32;;;;;
 (max(((v0 - v1) + 8)/64, 0) >= ((max(((v0 - v1) + 8)/64, 0) + max((((v0 - v1) + 71)/64) - max(((v0 - v1) + 8)/64, 0), 0)) - 1));0;976;;;;;
 (((((v0 + v1) + -1)/8) - ((((v2*3) + v3)*4) + v4)) == ((((v0 + v1) + -1)/8) - ((((v2*3) + v3)*4) + v4)));1;72;;;;;
 (((v0*73) + (max(min((v1 + v2)/8, 249), 0)*8)) == ((v0*73) + (max(min((v1 + v2)/8, 249), 0)*8)));1;70;;;;;
 (0 == ((0 + ((((v0 + v1) % 4) + 143)/16)) - 1));0;532;;;;;
 (((v0 + 29)/24) != 0);0;343;;;;;
 ((v0 + 1) == (((v0 + 1) + (0 + 1)) - 1));1;38;;;;;
 ((((v0*64) + 607)/544) != 0);0;492;;;;;
 (((v0*20) + ((v1*64) + (v2 + v3))) == ((v0*20) + ((v1*64) + (v2 + v3))));1;62;;;;;
 (min(v0, 14) > 14);0;12;;;;;
 ((((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 272)/252) == (((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 272)/252));1;177;;;;;
 (min(v0 - (v1/8), v2) == min(v0 - (v1/8), v2));1;36;;;;;
 (min(((v0 + v1) + 503)/4, v2 + 3) == min(((v0 + v1) + 503)/4, v2 + 3));1;83;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/8) + 1) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/8) + 1));1;253;;;;;
 (min(((v0 + v1) + -1)/8, ((v2*64) + v3) + 63) == min(((v0 + v1) + -1)/8, ((v2*64) + v3) + 63));1;78;;;;;
 ((min((v0*12) + (max(v1*64, -2) + (v2 + v3)), ((v1*64) + (v2 + v3)) + 52) + min(v4*128, 372)) == (min((v0*12) + (max(v1*64, -2) + (v2 + v3)), ((v1*64) + (v2 + v3)) + 52) + min(v4*128, 372)));1;99;;;;;
 (min((min(v0 - v1, 8) + 3)/4, ((v2 - v1)/4) + (v3*-2)) == min((min(v0 - v1, 8) + 3)/4, ((v2 - v1)/4) + (v3*-2)));1;76;;;;;
 (((((v0 + v1) + 15)/16) - ((v2*18) + v3)) == ((((v0 + v1) + 15)/16) - ((v2*18) + v3)));1;50;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*16) + 39)/18) == (((((((v0 + v1) + 124)/125) - (v1/125))*16) + 39)/18));1;102;;;;;
 (min(max(((v0/16) + v1)*8, 1003), (min((v0/16)*8, 4) + (v2*127)) + 126) == min(max(((v0/16) + v1)*8, 1003), (min((v0/16)*8, 4) + (v2*127)) + 126));1;84;;;;;
 (((((((uint1)1 && ((((((v0*3) + v1)*4) + v2) + 0) <= ((((v0*3) + v1)*4) + v2))) && ((((((v0*3) + v1)*4) + v2) + 3) >= (((((v0*3) + v1)*4) + 3) + v2))) && (v3 <= (0 + v3))) && ((v3 + 124) >= (((125 + 0) - 1) + v3))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)));1;206;;;;;
 ((v0 + -4) >= (((v0 + -4) + (min(((max(min(v1, 999), 0) + v2)*2) + (v3 - (max(min(v1, 999), 0)*2)), -14) + 15)) - 1));1;214;;;;;
 (max(-529 - (v0*8), (v0*8) + 18) >= 0);0;447;;;;;
 (((v0/8) + (v1*32)) == ((v0/8) + (v1*32)));1;247;;;;;
 (((v0 + 266)/252) == ((v0 + 266)/252));1;27;;;;;
 (min(max(((v0 + 557)/16) - ((v1*12) + v2), -1), min(v3 - v2, -21) + 37) == min(max(((v0 + 557)/16) - ((v1*12) + v2), -1), min(v3 - v2, -21) + 37));1;81;;;;;
 ((max(min((v0*4) + v1, min(v2 + v1, 2000) + -4), -3) - (max(min((v0*4) + v1, min(v2 + v1, 2003) + -4), 0) + (v3*4))) == (max(min((v0*4) + v1, min(v2 + v1, 2000) + -4), -3) - (max(min((v0*4) + v1, min(v2 + v1, 2003) + -4), 0) + (v3*4))));1;115;;;;;
 (0 == ((0 + (40 - (max(min((((-133 - ((v0 + v1) % 8))/8)*2) + v2, 10), 9)*4))) - 1));0;129;;;;;
 (((min(max(min((v3*64) + ((v2/8) + 63), min(((v1 + v2) + 7)/8, 249)), 0) - max(min((v3*64) + (v2/8), 249), 0), 30)/3)*3) == min(max(min((v3*64) + ((v2/8) + 63), min(((v1 + v2) + 7)/8, 249)), 0) - max(min((v3*64) + (v2/8), 249), 0), 30));0;2205;;;;;
 ((((v0 - v1) + 48)/32) == (((v0 - v1) + 48)/32));1;57;;;;;
 (((max(min(v0*8, 3986), -13) - (v1*62)) - max(min(v2*32, 4044), 45)) == ((max(min(v0*8, 3986), -13) - (v1*62)) - max(min(v2*32, 4044), 45)));1;79;;;;;
 (((v0 + 378)/250) != 0);0;343;;;;;
 ((((v0*-176)/4)*4) == (v0*-176));1;21;;;;;
 (min((v0*100) + (v1*8), (v2*8) + 100) == min((v0*100) + (v1*8), (v2*8) + 100));1;44;;;;;
 (min(((v0*8) + v1) + -1, v2) == min(((v0*8) + v1) + -1, v2));1;40;;;;;
 (((min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*32), (max(min(v1/2, 999), 0) + (v3*64)) + 31) + (v3*-64)) - (max(min(v1/2, 999), 0) + (v4*2))) == ((min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*32), (max(min(v1/2, 999), 0) + (v3*64)) + 31) + (v3*-64)) - (max(min(v1/2, 999), 0) + (v4*2))));1;158;;;;;
 ((max(min(v0/4, 499), 0) + (v1*4)) == (max(min(v0/4, 499), 0) + (v1*4)));1;57;;;;;
 ((((((((min(v0*125, v1 + -125) + v2) % 8) + 132)/8)*8)/28)*28) == (((((min(v0*125, v1 + -125) + v2) % 8) + 132)/8)*8));0;76;;;;;
 (min(((((v0 + v1) + 64)/65) - (v1/65)) + -15, v2) == min(((((v0 + v1) + 64)/65) - (v1/65)) + -15, v2));1;42;;;;;
 (((((v0*3) + v1)*4) + ((v2*4) + v3)) == ((((v0*3) + v1)*4) + ((v2*4) + v3)));1;56;;;;;
 ((((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 1018)/1004) == (((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 1018)/1004));1;147;;;;;
 ((((((min(max(min((v0*125) + v1, min(v2 + v1, 2125) + -125), 1) + (v3*16), max(min((v0*125) + v1, min(v2 + v1, 1996) + -125), -128) + 122) + 2) % 4) + -23)/4) + (v4*4)) == (((((min(max(min((v0*125) + v1, min(v2 + v1, 2125) + -125), 1) + (v3*16), max(min((v0*125) + v1, min(v2 + v1, 1996) + -125), -128) + 122) + 2) % 4) + -23)/4) + (v4*4)));1;143;;;;;
 (max(min(249, (((v1/8) + v2) + (((v1 % 8) + 15)/8)) - 1) + 1, min(max(0, (v1/8) + v2), (((v1 % 8) + 15)/8) + ((v1/8) + v2))) <= min(max(0, (v1/8) + v2), (((v1 % 8) + 15)/8) + ((v1/8) + v2)));0;1731;;;;;
 (max(min(min(min(((v3 - ((v4*126) + v5))/4) + -1, (((v1 + v2) - ((v4*126) + v5))/4) + -1), ((min((v1 + v2) + 3, v3) - ((v4*126) + v5))/4) + -1), (0 + ((min(v6 - v5, 126) + 3)/4)) - 1) + 1, min(max(((v2 - ((v4*126) + v5)) + 3)/4, 0), ((min(v6 - v5, 126) + 3)/4) + 0)) <= min(max(((v2 - ((v4*126) + v5)) + 3)/4, 0), ((min(v6 - v5, 126) + 3)/4) + 0));0;2629;;;;;
 (((v0*2) + (max(v1*8, -2) + v2)) == ((v0*2) + (max(v1*8, -2) + v2)));1;50;;;;;
 (((((v0 % (((v1*32) + 1071)/1040))*1040)/4)*4) == ((v0 % (((v1*32) + 1071)/1040))*1040));1;69;;;;;
 (min(1999 - (((v0 + v1)/4)*4), (((v0 + v1)/4)*4) + 127) == min(1999 - (((v0 + v1)/4)*4), (((v0 + v1)/4)*4) + 127));1;78;;;;;
 (((((v0*2) + v1)*16) + ((v2*128) + v3)) == ((((v0*2) + v1)*16) + ((v2*128) + v3)));1;48;;;;;
 (min(max(min(min(v0*6, 122) + v1, 1117), 118), v2) == min(max(min(min(v0*6, 122) + v1, 1117), 118), v2));1;85;;;;;
 (max(max(min(((v0 + 5)/63)*8, 244), -5)*8, v0 + -38) == max(max(min(((v0 + 5)/63)*8, 244), -5)*8, v0 + -38));1;59;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 104)/63) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 104)/63));1;228;;;;;
 (((v0*34) + (((v1 + v2)/8)*8)) == ((v0*34) + (((v1 + v2)/8)*8)));1;40;;;;;
 (max(-332 - (v0*32), (v0*32) + 71) >= 0);0;506;;;;;
 (min(max(min((v0/8) + v1, 249), 0), max(min(v0/8, 256), 7) + 114) == min(max(min((v0/8) + v1, 249), 0), max(min(v0/8, 256), 7) + 114));1;102;;;;;
 ((((((v0*8) + 337)/501)*501) + (max(min((v1/63)*8, 285), 36)*8)) == (((((v0*8) + 337)/501)*501) + (max(min((v1/63)*8, 285), 36)*8)));1;79;;;;;
 (max(-1 - max(min((v0 - (v1*8)) - v2, 7), 0), max(min(((v1*8) + v2) - v0, 0), -7) + -1) == max(-1 - max(min((v0 - (v1*8)) - v2, 7), 0), max(min(((v1*8) + v2) - v0, 0), -7) + -1));1;107;;;;;
 ((((v0*64) + 1008)/1000) != 0);0;495;;;;;
 ((max(min(v0, 499), 0) + (((v1*2) + v2)*4)) == (max(min(v0, 499), 0) + (((v1*2) + v2)*4)));1;60;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 64)/63) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 64)/63));1;223;;;;;
 ((-6 - max(min(v0 - v1, 125), -6)) == (((-6 - max(min(v0 - v1, 125), -6)) + (max(min(v0 - v1, 125), -6) + 11)) - 1));0;129;;;;;
 (min(max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45), v2 + 3) == min(max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45), v2 + 3));1;194;;;;;
 (min((v0*19) + v1, v2 + 1) == min((v0*19) + v1, v2 + 1));1;44;;;;;
 ((((v0*64) + 1065)/827) != 0);0;431;;;;;
 (max(min((v1 + v2) + -1, ((((v3*63) + v4) + -12) + (v5 + 20)) - 1) + 1, min(max(v2, ((v3*63) + v4) + -12), (v5 + 20) + (((v3*63) + v4) + -12))) <= min(max(v2, ((v3*63) + v4) + -12), (v5 + 20) + (((v3*63) + v4) + -12)));0;1861;;;;;
 ((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3)) + 19)/9) == (((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3)) + 19)/9));1;197;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*16)) == (max(min(v0/2, 1006), 7) + (v1*16)));1;76;;;;;
 ((max(min(v0, 46), 15) + (v1*4)) == (max(min(v0, 46), 15) + (v1*4)));1;53;;;;;
 (min(((v0 + v1)/32) + 3, v2) == min(((v0 + v1)/32) + 3, v2));1;48;;;;;
 ((1999 - max(((v0*2) + v1)*2, 1999)) == (((1999 - max(((v0*2) + v1)*2, 1999)) + (max(((v0*2) + v1)*2, 1999) + -1997)) - 1));0;89;;;;;
 (min((v0*12) + v1, v2 + 49) == min((v0*12) + v1, v2 + 49));1;46;;;;;
 (((((v0 + v1) + 31)/32) - (v2*2)) == ((((v0 + v1) + 31)/32) - (v2*2)));1;49;;;;;
 ((min((max(v0, 249) - (v1*4)) + 8, v2) - min(v2, 0)) == (min((max(v0, 249) - (v1*4)) + 8, v2) - min(v2, 0)));1;163;;;;;
 (((v0 + 692)/676) == ((v0 + 692)/676));1;21;;;;;
 ((((max(v0, 0) - v1)/3) + 3) != 0);0;454;;;;;
 ((max(min(v0, 5), 2) + -7) >= (((max(min(v0, 5), 2) + -7) + (12 - max(min(v0, 5), 2))) - 1));0;77;;;;;
 (min((v0*8) + -997, v1) == min((v0*8) + -997, v1));1;42;;;;;
 (min(((v0 + v1) + 63)/8, ((v1/8) + (((v2 + 33)/32)*32)) + -2) == min(((v0 + v1) + 63)/8, ((v1/8) + (((v2 + 33)/32)*32)) + -2));1;70;;;;;
 (((max(v0 + 8, v1) + v2) + -5) >= ((((v0 - 1) + v2) + 3) + 1));1;120;;;;;
 (max(min((v1 + v2) + -1, ((((v5*1043) + v4) + -23) + (min(v3 - v4, 973) + 75)) - 1) + 1, min(max(v2, ((v5*1043) + v4) + -23), (min(v3 - v4, 973) + 75) + (((v5*1043) + v4) + -23))) <= min(max(v2, ((v5*1043) + v4) + -23), (min(v3 - v4, 973) + 75) + (((v5*1043) + v4) + -23)));0;2154;;;;;
 (((max(min((v0*-128) + v1, 128), 0)/4)*4) == max(min((v0*-128) + v1, 128), 0));0;597;;;;;
 ((((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))*8) + 687)/676) == (((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))*8) + 687)/676));1;79;;;;;
 ((((((((v0 + v1) + 314)/63) - (v1/63))*32) + 195)/80) == (((((((v0 + v1) + 314)/63) - (v1/63))*32) + 195)/80));1;83;;;;;
 (((((v0*8) + v1)*8) + (v2 - v3)) == ((((v0*8) + v1)*8) + (v2 - v3)));1;58;;;;;
 (min(min((v0 - ((v1*8) + v2))*8, -44) + 33, v3) == min(min((v0 - ((v1*8) + v2))*8, -44) + 33, v3));1;80;;;;;
 ((max(min(((v0 + v1)/2) + (v2*4), 943), -56) + (v3*4)) == (max(min(((v0 + v1)/2) + (v2*4), 943), -56) + (v3*4)));1;89;;;;;
 (max(min(max((260 - max(min(v0, 1999), 0))/252, 0), (v1 + 257)/252), (min(max(min(v2 + v0, 2000), 1) - max(min(v0, 1999), 0), v1 + 251) + 6)/252) == max(min(max((260 - max(min(v0, 1999), 0))/252, 0), (v1 + 257)/252), (min(max(min(v2 + v0, 2000), 1) - max(min(v0, 1999), 0), v1 + 251) + 6)/252));1;225;;;;;
 ((((((((v0 + v1) + 127)/32) - (v1/32))*4) + 105)/74) == (((((((v0 + v1) + 127)/32) - (v1/32))*4) + 105)/74));1;74;;;;;
 (max(min(min(min(999, min((v1 + v2)/2, 1000) + -1), min(((v1 + v2) + -1)/2, 999)), (v3 + 4) - 1) + 1, min(max(max(0, max((v2 + 1)/2, 0)), v3), 4 + v3)) <= min(max(max(0, max((v2 + 1)/2, 0)), v3), 4 + v3));0;1787;;;;;
 (min(((v0 + v1) + 124)/125, ((v1/125) + ((v2/9)*9)) + 8) == min(((v0 + v1) + 124)/125, ((v1/125) + ((v2/9)*9)) + 8));1;58;;;;;
 (((max(min((v1*-32) + ((v2*-64) + (v3 - (v4*128))), 32), 0)/4)*4) == max(min((v1*-32) + ((v2*-64) + (v3 - (v4*128))), 32), 0));0;1224;;;;;
 (min(max(min((v0/63)*8, 285), 36) + (((v1 + 45)/4)*4), max(min((((v2 + v0) + -1)/63)*8, 244), -5) + 42) == min(max(min((v0/63)*8, 285), 36) + (((v1 + 45)/4)*4), max(min((((v2 + v0) + -1)/63)*8, 244), -5) + 42));1;101;;;;;
 (((((((v0 + v1) + 132)/133) - (v1/133))/2) + 1) == ((((((v0 + v1) + 132)/133) - (v1/133))/2) + 1));1;83;;;;;
 ((min(((((v0 + v1) + -1)/63) - (v2*8)) - (v1/63), 7) + 3) == (min(((((v0 + v1) + -1)/63) - (v2*8)) - (v1/63), 7) + 3));1;94;;;;;
 (min(v0*8, v1 + 378) == min(v0*8, v1 + 378));1;48;;;;;
 (((v0*62) + (((v1*38) + ((v2*76) + v3))*8)) == ((v0*62) + (((v1*38) + ((v2*76) + v3))*8)));1;52;;;;;
 (((max(min(v0/8, 249), 0)/8) + ((v1/4)*9)) == ((max(min(v0/8, 249), 0)/8) + ((v1/4)*9)));1;65;;;;;
 ((max(min((v0 + v1)/8, 249), 0) + (v2*4)) == (max(min((v0 + v1)/8, 249), 0) + (v2*4)));1;71;;;;;
 (min(max(min(v0, 270), 21), (max(min(v1, 249), 0) + (v2*4)) + 24) == min(max(min(v0, 270), 21), (max(min(v1, 249), 0) + (v2*4)) + 24));1;86;;;;;
 (min(((v0 + v1) + -1)/8, ((v1/8) + (v2*64)) + 63) == min(((v0 + v1) + -1)/8, ((v1/8) + (v2*64)) + 63));1;80;;;;;
 (((max(v0*8, -2)/2)*2) == max(v0*8, -2));1;75;;;;;
 (min((v0*36) + ((v1/63)*64), ((((v2 + v1) + -1)/63)*64) + 60) == min((v0*36) + ((v1/63)*64), ((((v2 + v1) + -1)/63)*64) + 60));1;71;;;;;
 (min((((v0 + v1) + 21)/2) - (v1/2), v2 + 513) == min((((v0 + v1) + 21)/2) - (v1/2), v2 + 513));1;73;;;;;
 (((v0*32) + ((v1*1024) + (((((min(v0*-4, 0 - (v0*4)) + (min(((v2*-125) + (v3 + v0))*4, (min(v1*128, 372) + (v0*4)) + 131) + (v1*-128))) + -3)/63)*504) + (v2*4000)))) == ((v0*32) + ((v1*1024) + (((((min(v0*-4, 0 - (v0*4)) + (min(((v2*-125) + (v3 + v0))*4, (min(v1*128, 372) + (v0*4)) + 131) + (v1*-128))) + -3)/63)*504) + (v2*4000)))));1;138;;;;;
 (min(((((v0*4) + v1)*8) + (min((v2*-20) + (min(((v0*-4) + v3) - v1, -9)*8), -106) + ((min(v2*20, (min((v0*-4) + (v3 - v1), -9)*8) + 88)/4)*4))) + 108, v4) == min(((((v0*4) + v1)*8) + (min((v2*-20) + (min(((v0*-4) + v3) - v1, -9)*8), -106) + ((min(v2*20, (min((v0*-4) + (v3 - v1), -9)*8) + 88)/4)*4))) + 108, v4));1;159;;;;;
 ((max(min(v0*8, 2009), 10) + (v1*4)) == (max(min(v0*8, 2009), 10) + (v1*4)));1;53;;;;;
 (((v0*-32) + ((((v1 + v2) + 15)/8) - v3)) == ((v0*-32) + ((((v1 + v2) + 15)/8) - v3)));1;63;;;;;
 (min((((min(v0/8, 0)/16)*4) + v1)*4, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 39) == min((((min(v0/8, 0)/16)*4) + v1)*4, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 39));1;95;;;;;
 (min(((v0 + v1) + -1)/4, (min(v2*128, 124) + v3) + 127) == min(((v0 + v1) + -1)/4, (min(v2*128, 124) + v3) + 127));1;96;;;;;
 (min(max(min((v0/500)*8, 36), 5) + (((v1 + 30)/16)*16), max(min(min(((v2 + v0) + 499)/500, 3)*8, 22), -7) + 15) == min(max(min((v0/500)*8, 36), 5) + (((v1 + 30)/16)*16), max(min(min(((v2 + v0) + 499)/500, 3)*8, 22), -7) + 15));1;160;;;;;
 (((min((((v0 + v1) + 7)/8) - (v2*8), (v1/8) + 7)*-8) + ((v3*4) + (((v1/8)*8) + (v4*36)))) == ((min((((v0 + v1) + 7)/8) - (v2*8), (v1/8) + 7)*-8) + ((v3*4) + (((v1/8)*8) + (v4*36)))));1;119;;;;;
 (((((v0 + v1) + 63)/8) - ((v2*8) + v3)) == ((((v0 + v1) + 63)/8) - ((v2*8) + v3)));1;51;;;;;
 (((min(v0*32, 220) + (v1 + v2)) + -5) >= ((((min(v0*32, 220) + (v1 + v2)) + -5) + 37) - 1));0;72;;;;;
 ((v3 + -12) >= (((v3 + -12) + ((max(v0, 0) - max(min(v1 + v2, 2007), max(v0, 1) + 13)) + 14)) - 1));0;1591;;;;;
 ((max(v0, 0) + (v1*16)) == (max(v0, 0) + (v1*16)));1;43;;;;;
 (min(((v0*127) + v1) + 119, v2) == min(((v0*127) + v1) + 119, v2));1;37;;;;;
 ((((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 73)/4) == (((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 73)/4));1;215;;;;;
 (((v0/2) - (((v1*21) + v2)*3)) == ((v0/2) - (((v1*21) + v2)*3)));1;52;;;;;
 (min(117 - min((v0/63)*8, 117), (v1*8) + 216) == min(117 - min((v0/63)*8, 117), (v1*8) + 216));1;71;;;;;
 (min(999 - (((v0*63) + v1)*4), (max(min(v2 + v3, 1997), 1) - ((((v0*63) + v1)*4) + v4)) + 11) == min(999 - (((v0*63) + v1)*4), (max(min(v2 + v3, 1997), 1) - ((((v0*63) + v1)*4) + v4)) + 11));1;105;;;;;
 ((v0 + -7) == (((v0 + -7) + 15) - 1));0;44;;;;;
 (min((v0*8) + v1, v2 + 20) == min((v0*8) + v1, v2 + 20));1;48;;;;;
 ((((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 35)/18) >= 0);1;96;;;;;
 (min(max(v0*8, 995), (min((v1/16)*8, 4) + ((((max(v0*8, 995) - min((v1/16)*8, 4)) + 8)/505)*505)) + 496) == min(max(v0*8, 995), (min((v1/16)*8, 4) + ((((max(v0*8, 995) - min((v1/16)*8, 4)) + 8)/505)*505)) + 496));1;130;;;;;
 (((v0*136) + ((v1/63)*64)) == ((v0*136) + ((v1/63)*64)));1;400;;;;;
 (max(min((v1 + v2) + -1, (((((v3*16) + v5)*8) + -20) + (((v4 - v5)*8) + 170)) - 1) + 1, min(max(v2, (((v3*16) + v5)*8) + -20), (((v4 - v5)*8) + 170) + ((((v3*16) + v5)*8) + -20))) <= min(max(v2, (((v3*16) + v5)*8) + -20), (((v4 - v5)*8) + 170) + ((((v3*16) + v5)*8) + -20)));0;2017;;;;;
 (min(max(((v0 - (v1*4)) + 59)/16, 0), ((v2 - v1) + 17)/4) == min(max(((v0 - (v1*4)) + 59)/16, 0), ((v2 - v1) + 17)/4));1;71;;;;;
 (((max(min((v4*-34) + (min(max(min(((v2 + v3) + -1)/2, 999), 0), (max(min(v3/2, 999), 0) + (v5*64)) + 63) - (max(min(v3/2, 999), 0) + (v5*64))), 30), 14)/2)*2) == max(min((v4*-34) + (min(max(min(((v2 + v3) + -1)/2, 999), 0), (max(min(v3/2, 999), 0) + (v5*64)) + 63) - (max(min(v3/2, 999), 0) + (v5*64))), 30), 14));0;1970;;;;;
 (max((min((((v0 + v1) + 7)/4) - (v1/4), v2 + 1) + 63)/64, max(v3/64, -1) + 1) == max((min((((v0 + v1) + 7)/4) - (v1/4), v2 + 1) + 63)/64, max(v3/64, -1) + 1));1;94;;;;;
 (min(((v0 + v1) + -1)/4, v2 + 251) == min(((v0 + v1) + -1)/4, v2 + 251));1;48;;;;;
 (((v0*2) + ((v1*12) + v2)) == ((v0*2) + ((v1*12) + v2)));1;36;;;;;
 (((v0/8) + (v1*2)) == ((v0/8) + (v1*2)));1;21;;;;;
 (((max(min((((v0 + v1) + -1)/63)*8, 244), -5)*2) - ((v2*2) + ((v3*3) + (v4*8)))) == ((max(min((((v0 + v1) + -1)/63)*8, 244), -5)*2) - ((v2*2) + ((v3*3) + (v4*8)))));1;100;;;;;
 (min(max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61), v2) == min(max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61), v2));1;219;;;;;
 ((v0 + -80) >= (((v0 + -80) + (min(((max(min((v1/63)*8, 258), 9) + v2)*8) + (v3 - (max(min((v1/63)*8, 258), 9)*8)), 5) + -4)) - 1));1;244;;;;;
 (min(max(min(v0, 2100), 101) + (v1*4), max(min(v0, 2030), 31) + 67) == min(max(min(v0, 2100), 101) + (v1*4), max(min(v0, 2030), 31) + 67));1;88;;;;;
 (max(-950 - (v0*32), (v0*32) + 199) >= 0);0;507;;;;;
 (min(v0*8, v1 + 1222) == min(v0*8, v1 + 1222));1;32;;;;;
 (((v0 + 12)/8) != 0);0;347;;;;;
 (max(min(1999, (((v2*64) + -99) + ((min(v1, 1)*64) + 152)) - 1) + 1, min(max(0, (v2*64) + -99), ((min(v1, 1)*64) + 152) + ((v2*64) + -99))) <= min(max(0, (v2*64) + -99), ((min(v1, 1)*64) + 152) + ((v2*64) + -99)));0;1509;;;;;
 (((v0*8) + ((v1*12) - min(min(v1*12, 32) + (v0*8), ((v0*8) - (v2*44)) + 237))) == ((v0*8) + ((v1*12) - min(min(v1*12, 32) + (v0*8), ((v0*8) - (v2*44)) + 237))));1;85;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -3) <= (v0 + -3))) && (((((125*4) + v0) + 3) + -3) >= ((v0 + 503) + -3))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= ((0*83) + 0))) && (165 >= ((((2 + 0) - 1)*83) + ((83 + 0) - 1))));1;183;;;;;
 (max(((((v0 + v1) + 64)/65) - v2)/4, (((((v0 + v1) + 64)/65) - (v1/65))/4) + (v3*-2)) == max(((((v0 + v1) + 64)/65) - v2)/4, (((((v0 + v1) + 64)/65) - (v1/65))/4) + (v3*-2)));1;108;;;;;
 (((v0*4) + (min((v1*126) + 124, v2) + v3)) == ((v0*4) + (min((v1*126) + 124, v2) + v3)));1;49;;;;;
 (min(v0*8, ((v1*244) + (v2*8)) + 134) == min(v0*8, ((v1*244) + (v2*8)) + 134));1;61;;;;;
 (min(min((v0 + v1)*4, (min(((v2*3) + v3)*128, 1016) + (((v4*286) + v1)*4)) + 128)/4, ((v5*8) + ((v3*32) + ((v2*96) + ((v4*286) + v1)))) + 6) == min(min((v0 + v1)*4, (min(((v2*3) + v3)*128, 1016) + (((v4*286) + v1)*4)) + 128)/4, ((v5*8) + ((v3*32) + ((v2*96) + ((v4*286) + v1)))) + 6));1;136;;;;;
 ((((max(min((v1*-64) + (max(min(min((v2*128) + 128, v3) + v4, 2000), 1) - max(min((v2*128) + v4, 1999), 0)), 64), 0) + (v1*64))/4)*4) == (max(min((v1*-64) + (max(min(min((v2*128) + 128, v3) + v4, 2000), 1) - max(min((v2*128) + v4, 1999), 0)), 64), 0) + (v1*64)));0;1889;;;;;
 (min((v0*4) + v1, (v2*2) + -22) == min((v0*4) + v1, (v2*2) + -22));1;66;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9), v2) == min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9), v2));1;284;;;;;
 (((v0 + 13)/11) != 0);0;355;;;;;
 (0 == ((0 + (251 - max(v0*3, 248))) - 1));0;65;;;;;
 (((v0*20) + ((v1*32) + (max(v2, 0) + (v3*4)))) == ((v0*20) + ((v1*32) + (max(v2, 0) + (v3*4)))));1;39;;;;;
 ((max(min((v0 + v1)/2, 1003)*2, 7) + (v2*72)) == (max(min((v0 + v1)/2, 1003)*2, 7) + (v2*72)));1;71;;;;;
 ((v0*4) == (((v0*4) + (58 - max(v0*4, 54))) - 1));0;111;;;;;
 (((((v0*3) + v1)*8) + -13) == ((((((v0*3) + v1)*8) + -13) + ((min(v2, 1)*8) + 21)) - 1));0;152;;;;;
 (min(519 - (v0*2), (min(((((v1 + v2) + 7)/8) - (v3*16)) - (v2/8), 15)*2) + 42) == min(519 - (v0*2), (min(((((v1 + v2) + 7)/8) - (v3*16)) - (v2/8), 15)*2) + 42));1;146;;;;;
 ((max((((max(v0*120, 224)/4)*-4) + ((v0*120) + v1)) - (min(v0*120, 224) + v1), -224) + 344) <= 1024);0;1211;;;;;
 ((min(max(v0*8, 995), v1 + 375) + (v2*28)) == (min(max(v0*8, 995), v1 + 375) + (v2*28)));1;75;;;;;
 ((min((((v0 + v1) + 31)/2) - (v2*2), ((v0 + v1)/2) + 1) - (((v0 + v1)/2) + v3)) == (min((((v0 + v1) + 31)/2) - (v2*2), ((v0 + v1)/2) + 1) - (((v0 + v1)/2) + v3)));1;95;;;;;
 (max(min(min((((v0 + v1) + 37)/4) - (v2*16), min((min((v3*64) + 63, v0 + v1)/4) - (v2*16), ((v3 - v2)*16) + 15) + 10), (min(((((v4 + v5) + -1)/63) - (v6*2)) - (v5/63), 1)*16) + 26), min(max((v1/4) - (v2*16), -11), (min(((((v4 + v5) + -1)/63) - (v6*2)) - (v5/63), 1)*16) + 16) + 10) == max(min(min((((v0 + v1) + 37)/4) - (v2*16), min((min((v3*64) + 63, v0 + v1)/4) - (v2*16), ((v3 - v2)*16) + 15) + 10), (min(((((v4 + v5) + -1)/63) - (v6*2)) - (v5/63), 1)*16) + 26), min(max((v1/4) - (v2*16), -11), (min(((((v4 + v5) + -1)/63) - (v6*2)) - (v5/63), 1)*16) + 16) + 10));1;283;;;;;
 (((v0/16) + (v1*68)) == ((v0/16) + (v1*68)));1;41;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*32, 3986), -13) - max(min((v1/16)*32, 4044), 45)) + 93)/32) == (((max(min((((v0 + v1) + -1)/16)*32, 3986), -13) - max(min((v1/16)*32, 4044), 45)) + 93)/32));1;229;;;;;
 ((((v0*8) + 16)/9) != 0);0;449;;;;;
 ((min(((((v0 + v1) + 3)/4) - (v2*24)) - (v3*8), (v1/4) + 7) - ((v1/4) + (v4*4))) == (min(((((v0 + v1) + 3)/4) - (v2*24)) - (v3*8), (v1/4) + 7) - ((v1/4) + (v4*4))));1;101;;;;;
 (min((v0*4) + ((v1*20) + v2), v3 + 1) == min((v0*4) + ((v1*20) + v2), v3 + 1));1;58;;;;;
 (min(max(v0*12, 189)/3, v0*4) == min(max(v0*12, 189)/3, v0*4));1;40;;;;;
 (min(((((v0 + v1) + -1)/2) - (v1/2)) + -63, v2) == min(((((v0 + v1) + -1)/2) - (v1/2)) + -63, v2));1;60;;;;;
 (min(((v0 + v1) + 64)/65, min(((v0 + v1) + 64)/65, (v1/65) + ((v2/8)*8)) + (min(v2, 3) + (min(v2/4, 1)*4))) == min(((v0 + v1) + 64)/65, min(((v0 + v1) + 64)/65, (v1/65) + ((v2/8)*8)) + (min(v2, 3) + (min(v2/4, 1)*4))));1;121;;;;;
 ((v0 - ((v1/8) + (v2*63))) == (v0 - ((v1/8) + (v2*63))));1;65;;;;;
 ((v0 + -241) >= (((v0 + -241) + (min(v1 - max(v2*159, 158), -318) + 319)) - 1));1;112;;;;;
 ((min((((v0 + v1) + -1)/63) - (v2*2), (v1/63) + 1) - ((v1/63) + (v3*4))) == (min((((v0 + v1) + -1)/63) - (v2*2), (v1/63) + 1) - ((v1/63) + (v3*4))));1;79;;;;;
 (((min(v0 - (v1*136), min(v2, 0) + 124)*-2) + (((min(v2, 0) + (v3*2))*2) + v4)) == ((min(v0 - (v1*136), min(v2, 0) + 124)*-2) + (((min(v2, 0) + (v3*2))*2) + v4)));1;95;;;;;
 ((((max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (max(min(min(v1/16, 124)*2, 1), -1)*8)) + 556)/508) >= 0);1;127;;;;;
 (((v0*256) + ((v1*1008) + (max(v2*128, -5) + v3))) == ((v0*256) + ((v1*1008) + (max(v2*128, -5) + v3))));1;1956;;;;;
 ((((min((v0*4) + (v1/32), ((v2 + v1) + -97)/32)*16)/4)*4) == (min((v0*4) + (v1/32), ((v2 + v1) + -97)/32)*16));1;74;;;;;
 (((v0 + 44)/36) != 0);0;390;;;;;
 ((((v0*3) + v1) + 6) < ((((v0 + 1)*3) + v1) + -1));0;66;;;;;
 (max(((v0 - v1) + 15)/16, v2) == max(((v0 - v1) + 15)/16, v2));1;51;;;;;
 (min(((v0 + v1) + -1)/16, (min(v2*12, 20) + ((v1/16) + (v3*32))) + 11) == min(((v0 + v1) + -1)/16, (min(v2*12, 20) + ((v1/16) + (v3*32))) + 11));1;80;;;;;
 ((((min(v0*68, 66)*0)/4)*4) == (min(v0*68, 66)*0));1;52;;;;;
 (min((v0*12) + v1, max(min((((v2 + v3) + -1)/63)*8, 244), -5) + 30) == min((v0*12) + v1, max(min((((v2 + v3) + -1)/63)*8, 244), -5) + 30));1;99;;;;;
 (max((v0 + v1) + 51, v2) == max((v0 + v1) + 51, v2));1;49;;;;;
 (min(((v0*508) + v1) + 497, v2) == min(((v0*508) + v1) + 497, v2));1;44;;;;;
 (((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 408)/66) == ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 408)/66));1;240;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 0)) + 529)/506) == (((max(v0 + v1, 2000) - min(v1, 0)) + 529)/506));1;75;;;;;
 ((v0 - ((v1 + v2)/65)) == (v0 - ((v1 + v2)/65)));1;34;;;;;
 ((((v0*4000)/32)*32) == (v0*4000));1;33;;;;;
 (max((min(((min(v0*63, 62) + (v1 + v2)) + 62)/8, v3 + 3)*8) + v4, (v3*8) + -3) == max((min(((min(v0*63, 62) + (v1 + v2)) + 62)/8, v3 + 3)*8) + v4, (v3*8) + -3));1;108;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((((0*63) + v2) + 0) <= (0 + v2))) && ((((1*63) + v2) + 62) >= (((125 + 0) - 1) + v2))) && (0 <= 0)) && (0 >= 0));1;201;;;;;
 ((((v0*-4) + (min(((v1 + v2) + 1)/2, min((v2/2) + ((min((((v0*2) + v3)*2) + 1, v4)/2)*2), (v3*2) + ((v2/2) + (v0*4))) + 1) + (v3*-2))) - ((v2/2) + (v5*2))) == (((v0*-4) + (min(((v1 + v2) + 1)/2, min((v2/2) + ((min((((v0*2) + v3)*2) + 1, v4)/2)*2), (v3*2) + ((v2/2) + (v0*4))) + 1) + (v3*-2))) - ((v2/2) + (v5*2))));1;136;;;;;
 (((((max(v0, 0) - v1)*8) + 165)/155) == ((((max(v0, 0) - v1)*8) + 165)/155));1;140;;;;;
 ((max(v0*64, -10) + (v1*128)) == (max(v0*64, -10) + (v1*128)));1;49;;;;;
 (((v0*32) + (v1*2000)) == ((v0*32) + (v1*2000)));1;39;;;;;
 (((((((v0 + v1) + -1)/500) - (v1/500))*4) + 5) == ((((((v0 + v1) + -1)/500) - (v1/500))*4) + 5));1;56;;;;;
 (0 == ((0 + ((min((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - (v2*16)) - max(min((v1/63)*8, 285), 36), -26)*2) + 86)) - 1));0;291;;;;;
 (min(max(max(((v0 - v1) + 3)/4, min(min(((-159 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min(v2*8, (v3 + v0) + 158) - v1) + -159)/4) + 1), 0), v4) == min(max(max(((v0 - v1) + 3)/4, min(min(((-159 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min(v2*8, (v3 + v0) + 158) - v1) + -159)/4) + 1), 0), v4));1;172;;;;;
 ((min(max(min(v0 + v1, 1999), 0), (max(min(v0 + v1, 1500), -499) - (v2*251)) + 250) - (max(min(v0 + v1, 1999), 0) + (v3*32))) == (min(max(min(v0 + v1, 1999), 0), (max(min(v0 + v1, 1500), -499) - (v2*251)) + 250) - (max(min(v0 + v1, 1999), 0) + (v3*32))));1;154;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*2)) == (max(min(v0/2, 1006), 7) + (v1*2)));1;38;;;;;
 (((max(v0*16, -4) + (v1*4)) + min((max(min((((v2 + v3) + -1)/4)*8, 3994), -5) + -75)/2, ((max(min((v3/4)*8, 4012), 13) + -19)/2) + (v4*48))) == ((max(v0*16, -4) + (v1*4)) + min((max(min((((v2 + v3) + -1)/4)*8, 3994), -5) + -75)/2, ((max(min((v3/4)*8, 4012), 13) + -19)/2) + (v4*48))));1;122;;;;;
 ((((min(((v2 % ((v3 + 102)/16))*128) + (max(min((v1/125)*16, 286), 37)*8), (max(min((((v4 + v1) + 124)/125)*16, 204), -45)*8) + 564)*-1)/4)*4) == (min(((v2 % ((v3 + 102)/16))*128) + (max(min((v1/125)*16, 286), 37)*8), (max(min((((v4 + v1) + 124)/125)*16, 204), -45)*8) + 564)*-1));0;2205;;;;;
 (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16)) + 7)/6) >= 0);1;78;;;;;
 (min(max(((v0 - max(min(v1, 2889), 890)) + 893)/4, 0), (v2 + 1123)/4) == min(max(((v0 - max(min(v1, 2889), 890)) + 893)/4, 0), (v2 + 1123)/4));1;84;;;;;
 ((((v0*64)/4)*4) == (v0*64));1;30;;;;;
 (((((((v0 + v1) + 1999)/2000) - (v1/2000))*32) + 66) == ((((((v0 + v1) + 1999)/2000) - (v1/2000))*32) + 66));1;112;;;;;
 ((v0 + 3) < min(max(((min(v1, 4) + v2) + -132)/32, (v0 + 1) + 3), (v0 + 1) + -4));0;124;;;;;
 (min(((v0 + v1) + 539)/8, v2 + 3) == min(((v0 + v1) + 539)/8, v2 + 3));1;47;;;;;
 (((((v0 + v1) + 31)/32) - (v2*8)) == ((((v0 + v1) + 31)/32) - (v2*8)));1;49;;;;;
 (min((min(v0, 1008) + 14)/16, ((1990 - v1)/16) + (v2*-63)) == min((min(v0, 1008) + 14)/16, ((1990 - v1)/16) + (v2*-63)));1;42;;;;;
 (min(((v0*128) + ((v1*256) + ((v2*1000) + v3))) + 118, v4 + v3) == min(((v0*128) + ((v1*256) + ((v2*1000) + v3))) + 118, v4 + v3));1;84;;;;;
 (((((((uint1)1 && ((v0*8) <= ((0 + v0)*8))) && (((v0*8) + 56) >= ((((8 + 0) - 1) + v0)*8))) && (((v1*4) + v2) <= ((v1*4) + v2))) && ((((v1*4) + v2) + 3) >= (((v1*4) + v2) + 3))) && (((0*4) + 0) <= 0)) && (((3*4) + 3) >= 13));1;181;;;;;
 (((v0*8) - (v1/4)) == ((v0*8) - (v1/4)));1;32;;;;;
 (((min(v0*252, 748)/2)*2) == min(v0*252, 748));1;84;;;;;
 ((((v0 - v1)/504) + 1) != 0);0;427;;;;;
 (min(((v0*4) + v1) + -21, v2) == min(((v0*4) + v1) + -21, v2));1;48;;;;;
 ((min(((v0 + v1) - (v2*128)) - (v3*64), v1 + 61) - ((v4*4) + v1)) == (min(((v0 + v1) - (v2*128)) - (v3*64), v1 + 61) - ((v4*4) + v1)));1;76;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*64) + 107)/36) == (((((((v0 + v1) + 124)/125) - (v1/125))*64) + 107)/36));1;71;;;;;
 ((((v0*64) + 1066)/828) != 0);0;429;;;;;
 (((v0*16) + ((v1*128) + v2)) == ((v0*16) + ((v1*128) + v2)));1;95;;;;;
 (((v0*-4) + (((((v1 + v2) + -1)/2) - (v3*16)) - (v2/2))) == ((v0*-4) + (((((v1 + v2) + -1)/2) - (v3*16)) - (v2/2))));1;64;;;;;
 ((max(min(min((v0/16)*8, 4) + v1, 990), -9) - (((v2*8) + v3)*4)) == (max(min(min((v0/16)*8, 4) + v1, 990), -9) - (((v2*8) + v3)*4)));1;106;;;;;
 ((max(min(v0*8, 244), -5) - ((v1*4) + v2)) == (max(min(v0*8, 244), -5) - ((v1*4) + v2)));1;72;;;;;
 ((min((v0/16)*8, (max(v1*8, 995) - (v2*4)) + 5) - min((v0/16)*8, 4)) == (min((v0/16)*8, (max(v1*8, 995) - (v2*4)) + 5) - min((v0/16)*8, 4)));1;232;;;;;
 (((((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32) - ((min((v1/65)*64, 4) + -6)/32))*32) + 67)/36) >= 0);1;108;;;;;
 (((v0*8) - ((((v1*3) + v2)*12) + v3)) == ((v0*8) - ((((v1*3) + v2)*12) + v3)));1;45;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((min(v2*3, 122) + v3) <= ((min(v2*3, 122) + 0) + v3))) && (((min(v2*3, 122) + v3) + 2) >= ((min(v2*3, 122) + ((3 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4));1;225;;;;;
 (max(min(v0, 249), (max(min(v1, 249), 0) + (((max(min(min(((v2 + v3) + 7)/8, ((v3/8) + (v4*126)) + 125), 249), 0) - max(min((v3/8) + (v4*126), 249), 0))/4)*4)) + 3) == max(min(v0, 249), (max(min(v1, 249), 0) + (((max(min(min(((v2 + v3) + 7)/8, ((v3/8) + (v4*126)) + 125), 249), 0) - max(min((v3/8) + (v4*126), 249), 0))/4)*4)) + 3));1;347;;;;;
 (max(min((v0 + 15)/16, 125), min(min(((v1 + v0) + -1)/16, (((22 - (v1 + v0))/4)*-1)/4), 123) + 1) == max(min((v0 + 15)/16, 125), min(min(((v1 + v0) + -1)/16, (((22 - (v1 + v0))/4)*-1)/4), 123) + 1));1;122;;;;;
 (min(35 - (((v0*5) + v1)*4), ((max(v2, 249)*8) - ((((v0*5) + v1)*4) + v3)) + 95) == min(35 - (((v0*5) + v1)*4), ((max(v2, 249)*8) - ((((v0*5) + v1)*4) + v3)) + 95));1;94;;;;;
 ((max((((v0 + v1) + -1)/65)*8, 239) - ((v2*4) + ((v3*128) + v4))) == (max((((v0 + v1) + -1)/65)*8, 239) - ((v2*4) + ((v3*128) + v4))));1;92;;;;;
 (((v0 + v1) + v2) >= (((v0 + v1) + (v2 - 1)) + 1));1;77;;;;;
 (min((v0*8) + v1, max(v2, 0) + 10) == min((v0*8) + v1, max(v2, 0) + 10));1;57;;;;;
 (min(((v0 + v1) + 253)/2, v2 + 62) == min(((v0 + v1) + 253)/2, v2 + 62));1;43;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0)*8) - max(max(min(v1/8, 254), 5)*8, 52)) + 726)/668) == ((((max(min(((v0 + v1) + 7)/8, 249), 0)*8) - max(max(min(v1/8, 254), 5)*8, 52)) + 726)/668));1;158;;;;;
 (max((min(v0*8, v1 + 437) + v2) + 553, v1) == max((min(v0*8, v1 + 437) + v2) + 553, v1));1;64;;;;;
 ((v0 + -115) >= (((v0 + -115) + (min(v1 - (max(max(min(v2/2, 1006), 7) + ((v3*64) - max(min(((v4 + v2) + 1)/2, 999), 0)), -39)*8), -195) + 196)) - 1));1;286;;;;;
 (((((v0 - v1)*8) + 1542)/990) == ((((v0 - v1)*8) + 1542)/990));1;51;;;;;
 ((((((v0 + v1) + 124)/125) - (v2*3)) - (v1/125)) == (((((v0 + v1) + 124)/125) - (v2*3)) - (v1/125)));1;58;;;;;
 (max(((v0*82) + v1) + v4, max(((v0*82) + v1) + v4, v5)) >= (min((((v0 - 1)*82) + v1) + v2, min((((v0 - 1)*82) + v1) + v2, v3)) + 1));0;1126;;;;;
 ((0 - max(v0, 1)) >= (((0 - max(v0, 1)) + (max(v0, 1) + 1)) - 1));0;56;;;;;
 (min(((v0/125) + v1)*8, (v2*8) + 1) == min(((v0/125) + v1)*8, (v2*8) + 1));1;44;;;;;
 ((((((v0 + v1) + -1)/63)*8) - ((((v2*3) + v3)*4) + v4)) == (((((v0 + v1) + -1)/63)*8) - ((((v2*3) + v3)*4) + v4)));1;64;;;;;
 (min((v0*4) + ((v1*32) + v2), v3 + 5) == min((v0*4) + ((v1*32) + v2), v3 + 5));1;58;;;;;
 (min((((v0 + v1) + 1)/2) - ((((v2*16) + v3)*4) + v4), 503 - (((v2*16) + v3)*4)) == min((((v0 + v1) + 1)/2) - ((((v2*16) + v3)*4) + v4), 503 - (((v2*16) + v3)*4)));1;100;;;;;
 (max(-855 - ((max(v0, 0) - v1)*8), ((max(v0, 0) - v1)*8) + 26) >= 0);0;848;;;;;
 (min(min((((v0 + v1)/8) + (v2*4))*8, (min(((v0 + v1) + 132)/8, (((v0 + v1)/8) + (v2*4)) + 3)*8) + 9) + (min((min(v3*4, 33) + 3)/4, v3)*4), (v4*8) + 9) == min(min((((v0 + v1)/8) + (v2*4))*8, (min(((v0 + v1) + 132)/8, (((v0 + v1)/8) + (v2*4)) + 3)*8) + 9) + (min((min(v3*4, 33) + 3)/4, v3)*4), (v4*8) + 9));1;171;;;;;
 (min(max(v0, 115), (v0 - max((max(min((v1 + v2)/2, 1006), 7) - v3)*8, 113)) + 121) == min(max(v0, 115), (v0 - max((max(min((v1 + v2)/2, 1006), 7) - v3)*8, 113)) + 121));1;626;;;;;
 (min(v0*4, ((v1*74) + (v2*4)) + 51) == min(v0*4, ((v1*74) + (v2*4)) + 51));1;1093;;;;;
 (min(((v0 + v1) + 180)/8, v2 + -6) == min(((v0 + v1) + 180)/8, v2 + -6));1;53;;;;;
 ((min(v0 - v1, 0) + -5) == (min(v0 - v1, 0) + -5));1;54;;;;;
 ((((v0*32) + 199)/152) != 0);0;451;;;;;
 (((v0*2) + (v1 + v2)) == ((v0*2) + (v1 + v2)));1;57;;;;;
 (min((((v0 + v1) + 63)/16)*4, ((((v0 + v1)/16) + v2)*4) + -1) == min((((v0 + v1) + 63)/16)*4, ((((v0 + v1)/16) + v2)*4) + -1));1;778;;;;;
 (min((((v0 + v1) + -1)/8)*8, (v2*8) + 989) == min((((v0 + v1) + -1)/8)*8, (v2*8) + 989));1;372;;;;;
 (min(((v0*8) + v1) + 8, v2) == min(((v0*8) + v1) + 8, v2));1;76;;;;;
 (((v0*8) + (v1*3)) == ((v0*8) + (v1*3)));1;668;;;;;
 (max(v0*2, (((v1*19) + v0)*2) + 1) == max(v0*2, (((v1*19) + v0)*2) + 1));1;45;;;;;
 (min(max(v0, 0), v1 + 11) == min(max(v0, 0), v1 + 11));1;49;;;;;
 ((((((v0 + v1) + -1)/63)*64) - ((v2*4) + v3)) == (((((v0 + v1) + -1)/63)*64) - ((v2*4) + v3)));1;81;;;;;
 ((min(((v0*8) - (v1*124)) - (v2*8), -106) + ((v2*8) + ((((min((v1*-124) + ((v0 - v2)*8), 16) + 109)/12)*12) + (v1*124)))) == (min(((v0*8) - (v1*124)) - (v2*8), -106) + ((v2*8) + ((((min((v1*-124) + ((v0 - v2)*8), 16) + 109)/12)*12) + (v1*124)))));1;117;;;;;
 (min(((v0*10) + ((v1*7) + (v2 + v3))) + -10, min(v1*7, 6) + (v2 + v3)) == min(((v0*10) + ((v1*7) + (v2 + v3))) + -10, min(v1*7, 6) + (v2 + v3)));1;1135;;;;;
 (min((v0*8) + 8, v1) == min((v0*8) + 8, v1));1;47;;;;;
 ((((v0*32)/16)*16) == (v0*32));1;26;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))));1;163;;;;;
 (((v0 + 1003)/4) == ((v0 + 1003)/4));1;27;;;;;
 (max(min(1999, ((((v1*504) + v2) + -7) + 513) - 1) + 1, min(max(0, ((v1*504) + v2) + -7), 513 + (((v1*504) + v2) + -7))) <= min(max(0, ((v1*504) + v2) + -7), 513 + (((v1*504) + v2) + -7)));0;1376;;;;;
 (((v0 + 90)/4) != 0);0;351;;;;;
 (((v0 + 509)/504) == ((v0 + 509)/504));1;27;;;;;
 (min(v0*32, min((v0*32) + 16, v1) + -8) == min(v0*32, min((v0*32) + 16, v1) + -8));1;49;;;;;
 (max(min(max(min(((47 - v0)/32) + v1, 2), (min((v1*32) - v0, 40) + 47)/32), max(min(((v1*8) - (v0/4)) + 11, 21), (min((v1*32) - v0, 40) + 47)/4)/8), (min(((v1*32) - (v2*88)) - (v3*32), 40) + 52)/32) == max(min(max(min(((47 - v0)/32) + v1, 2), (min((v1*32) - v0, 40) + 47)/32), max(min(((v1*8) - (v0/4)) + 11, 21), (min((v1*32) - v0, 40) + 47)/4)/8), (min(((v1*32) - (v2*88)) - (v3*32), 40) + 52)/32));1;220;;;;;
 ((v0 + -36) >= (((v0 + -36) + (min((v1*4) + (v2 - (v3*4)), -39) + 40)) - 1));1;108;;;;;
 ((max(min(((v0 + v1)/8)*2, 509), 10) + (v2*4)) == (max(min(((v0 + v1)/8)*2, 509), 10) + (v2*4)));1;58;;;;;
 (((v0*-16) + ((((v1 + v2) + 15)/8) - v3)) == ((v0*-16) + ((((v1 + v2) + 15)/8) - v3)));1;51;;;;;
 (min((((v0 + v1) + -1)/2) - ((((v2*63) + v3)*4) + v4), 499 - (((v2*63) + v3)*4)) == min((((v0 + v1) + -1)/2) - ((((v2*63) + v3)*4) + v4), 499 - (((v2*63) + v3)*4)));1;90;;;;;
 (min(max(((v0 + 306)/4) - (max(min((v1/125)*16, 286), 37)*2), -1), (v2*2) + 172) == min(max(((v0 + 306)/4) - (max(min((v1/125)*16, 286), 37)*2), -1), (v2*2) + 172));1;105;;;;;
 (((v0*2) + ((v1*32) + v2)) == ((v0*2) + ((v1*32) + v2)));1;27;;;;;
 (min((v0*30) + v1, v2 + 27) == min((v0*30) + v1, v2 + 27));1;44;;;;;
 (((v0 + 133)/127) != 0);0;354;;;;;
 ((min(((v0 + v1) + -977)/8, ((v1/8) + (v2*132)) + -5) + (v3*4)) == (min(((v0 + v1) + -977)/8, ((v1/8) + (v2*132)) + -5) + (v3*4)));1;497;;;;;
 (((((((uint1)1 && ((((((((v0/2000)*16) + v1)*16) + v2) + 0) + -235) <= (((((((v0/2000)*16) + v1)*16) + 0) + v2) + -235))) && ((((((((v0/2000)*16) + v1)*16) + v2) + 15) + -235) >= (((((((v0/2000)*16) + v1)*16) + ((16 + 0) - 1)) + v2) + -235))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (0 <= 0)) && (0 >= 0));1;223;;;;;
 ((((v0*-160)/4)*4) == (v0*-160));1;51;;;;;
 (((v0*8) + -32) == ((((v0*8) + -32) + ((min((v1 - (v2*7)) - v3, 1)*8) + 52)) - 1));0;157;;;;;
 ((((v0/16) + v1) - min((((v2 + v0) + -1)/16) - (v3*16), (v0/16) + 15)) == (((v0/16) + v1) - min((((v2 + v0) + -1)/16) - (v3*16), (v0/16) + 15)));1;83;;;;;
 (((v0*2) + -4) == ((((v0*2) + -4) + ((v1 - v0)*2)) - 1));0;78;;;;;
 ((((v0 - ((v1*12) + v2)) + 11)/4) == (((v0 - ((v1*12) + v2)) + 11)/4));1;47;;;;;
 (min((((v0 + v1) + 87)/8)*8, (((v1/8) + (v2*68))*8) + 455) == min((((v0 + v1) + 87)/8)*8, (((v1/8) + (v2*68))*8) + 455));1;58;;;;;
 (min(((v0*2) + v1)*4, v2 + 30) == min(((v0*2) + v1)*4, v2 + 30));1;37;;;;;
 ((((max(min((((v0 + v1) + 124)/125)*128, 1918), -81) - max(min((v1/125)*128, 2061), 62)) + 643)/500) == (((max(min((((v0 + v1) + 124)/125)*128, 1918), -81) - max(min((v1/125)*128, 2061), 62)) + 643)/500));1;229;;;;;
 (((max(v0, 0) - (v1*2)) - ((v2*20) + v3)) == ((max(v0, 0) - (v1*2)) - ((v2*20) + v3)));1;31;;;;;
 (((max(v0, 249) - (v1*128)) - min(v2, 0)) == ((max(v0, 249) - (v1*128)) - min(v2, 0)));1;90;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 5)/2) - ((max(min((v1/4)*8, 4004), 5) + -13)/2))/1004) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 5)/2) - ((max(min((v1/4)*8, 4004), 5) + -13)/2))/1004) + 1));1;130;;;;;
 ((max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0))) == (max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0))));1;89;;;;;
 ((min(((max(min((((v0 + v1) + -1)/63)*8, 244), -5)*8) - (v2*252)) - (max(min((v1/63)*8, 285), 36)*8), -86) + (v3*-128)) == (min(((max(min((((v0 + v1) + -1)/63)*8, 244), -5)*8) - (v2*252)) - (max(min((v1/63)*8, 285), 36)*8), -86) + (v3*-128)));1;128;;;;;
 (max((((((v0 + v1) + -1)/63)*2) - (v2/4)) + 3, ((18 - v2)/4) + ((((v0 + v1) + -1)/63)*2)) == max((((((v0 + v1) + -1)/63)*2) - (v2/4)) + 3, ((18 - v2)/4) + ((((v0 + v1) + -1)/63)*2)));1;93;;;;;
 (((v0*16) - ((v1*4) + v2)) == ((v0*16) - ((v1*4) + v2)));1;45;;;;;
 ((((((v0 + v1) + -1)/2) - (v2*63)) - (v1/2)) == (((((v0 + v1) + -1)/2) - (v2*63)) - (v1/2)));1;58;;;;;
 (((((((v0 + v1) + 23)/8) - (v1/8)) + 35)/32) == ((((((v0 + v1) + 23)/8) - (v1/8)) + 35)/32));1;70;;;;;
 ((((v0 + v1)*8) + -32) == (((((v0 + v1)*8) + -32) + 8) - 1));0;53;;;;;
 (min(((v0 + v1) + -1)/4, ((v1/4) + (v2*8)) + -1) == min(((v0 + v1) + -1)/4, ((v1/4) + (v2*8)) + -1));1;66;;;;;
 (0 >= ((0 + (((81 - max((v0*16) - v1, (v2*16) + 77))/4) + (v2*4))) - 1));0;955;;;;;
 (0 >= ((0 + ((((((min((((((v0/500) + (v1*3))*2) + (v2*3)) + v3)*4, ((((v4 + v0) + 499)/500)*8) + 36)/4) - v3) - (v2*3)) - (v1*6)) - ((v0/500)*2)) + 1)) - 1));0;2239;;;;;
 (((v0 + 62)/63) == ((v0 + 62)/63));1;2409;;;;;
 (((max(min(v0, 25), -4) - (v1*3)) - max(min(v2, 36), 5)) == ((max(min(v0, 25), -4) - (v1*3)) - max(min(v2, 36), 5)));1;63;;;;;
 (min((((v0 + v1) + -1)/63)*8, ((v2*17) + ((v1/63)*8)) + 3) == min((((v0 + v1) + -1)/63)*8, ((v2*17) + ((v1/63)*8)) + 3));1;59;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 0)) + 151)/128) >= 0);1;58;;;;;
 (min((v0/8)*2, ((v1*65) + (((v2 + -2)/64)*2)) + 55) == min((v0/8)*2, ((v1*65) + (((v2 + -2)/64)*2)) + 55));1;67;;;;;
 (max(-333 - (v0*32), (v0*32) + 71) >= 0);0;518;;;;;
 ((max(v0*4, -2) + ((min(v0*4, -2)/2)*2)) == (max(v0*4, -2) + ((min(v0*4, -2)/2)*2)));1;54;;;;;
 ((max(min(((v0 + v1) + 129)/2, 999) - max(min((v0 + v1)/2, 999), 0), 0) + (v2*-32)) == (max(min(((v0 + v1) + 129)/2, 999) - max(min((v0 + v1)/2, 999), 0), 0) + (v2*-32)));1;106;;;;;
 (min(((v0 + v1) + -1009)/8, (v1/8) + (v2*128)) == min(((v0 + v1) + -1009)/8, (v1/8) + (v2*128)));1;69;;;;;
 (min(507 - (((v0*16) + v1)*4), (v2 - ((((v0*16) + v1)*4) + v3)) + 11) == min(507 - (((v0*16) + v1)*4), (v2 - ((((v0*16) + v1)*4) + v3)) + 11));1;97;;;;;
 (min(v0*144, v1 + -144) == min(v0*144, v1 + -144));1;36;;;;;
 ((((min((v0*4) + ((v1/8) + 3), ((v2 + v1) + 39)/8)*8)/4)*4) == (min((v0*4) + ((v1/8) + 3), ((v2 + v1) + 39)/8)*8));1;85;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8))/125) + 1) == ((((((v0 + v1) + -1)/8) - (v1/8))/125) + 1));1;119;;;;;
 (max(min(min(v0 + v1, (max(min((v2/8)*8, 2012), 13) + v3) + 17), 2000), min(max(max(max(min((v2/8)*8, 2012), 13) + -16, v1), 0), (max(min((v2/8)*8, 2012), 13) + v3) + 17)) == max(min(min(v0 + v1, (max(min((v2/8)*8, 2012), 13) + v3) + 17), 2000), min(max(max(max(min((v2/8)*8, 2012), 13) + -16, v1), 0), (max(min((v2/8)*8, 2012), 13) + v3) + 17)));1;155;;;;;
 (((max(v0, 0) - (v1*2)) - ((v2*20) + v3)) == ((max(v0, 0) - (v1*2)) - ((v2*20) + v3)));1;46;;;;;
 ((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))/4) + 1) == (((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))/4) + 1));1;258;;;;;
 (((v0/16) + 1) != 0);0;2374;;;;;
 ((((v0*-32)/16)*16) == (v0*-32));1;55;;;;;
 ((min(max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*128), max(min(v1/8, 256), 7) + 120) - ((v3*16) + (max(min(v1/8, 256), 7) + (v4*80)))) == (min(max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*128), max(min(v1/8, 256), 7) + 120) - ((v3*16) + (max(min(v1/8, 256), 7) + (v4*80)))));1;158;;;;;
 (((((((uint1)1 && (((v0*2) + 1) <= ((v0*2) + 1))) && (((v0*2) + 2) >= ((v0*2) + 2))) && ((((0*4) + ((v1*32) + ((v2*64) + v3))) + 0) <= ((v1*32) + ((v2*64) + v3)))) && ((((7*4) + ((v1*32) + ((v2*64) + v3))) + 3) >= (((v1*32) + ((v2*64) + v3)) + 31))) && (0 <= 0)) && (((161 + 0) - 1) >= ((161 + 0) - 1)));1;180;;;;;
 (min(130 - (v0*17), (((((v1 + v2) + -1)/63)*8) - ((v0*17) + v3)) + 12) == min(130 - (v0*17), (((((v1 + v2) + -1)/63)*8) - ((v0*17) + v3)) + 12));1;69;;;;;
 ((((((((v0 + v1) + 7)/504) - (v1/504))*8) + 17)/9) == (((((((v0 + v1) + 7)/504) - (v1/504))*8) + 17)/9));1;80;;;;;
 ((min(v0, 0) + (v1*8)) == (min(v0, 0) + (v1*8)));1;30;;;;;
 (((v0*256) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499))) == ((v0*256) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499))));1;1064;;;;;
 (min(max(max(((v0 - v1) + 3)/4, min(min(((33 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min((v2*8) + 34, v3 + v0) - v1) + -1)/4) + 1), 0), v4) == min(max(max(((v0 - v1) + 3)/4, min(min(((33 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min((v2*8) + 34, v3 + v0) - v1) + -1)/4) + 1), 0), v4));1;193;;;;;
 ((max(min((v0*32) + v1, 1214), 215) - (max(min((v0*32) + v1, 1245), 246) + (((v2*3) + v3)*4))) == (max(min((v0*32) + v1, 1214), 215) - (max(min((v0*32) + v1, 1245), 246) + (((v2*3) + v3)*4))));1;130;;;;;
 (min(((v0/63) + (v1*4)) + 3, v2) == min(((v0/63) + (v1*4)) + 3, v2));1;50;;;;;
 (min(((((v0 + v1) + 135)/128) - (v1/128))*2, (v2*2) + 1) == min(((((v0 + v1) + 135)/128) - (v1/128))*2, (v2*2) + 1));1;66;;;;;
 (((((v0 % (((v1*8) + 148)/132))*132)/4)*4) == ((v0 % (((v1*8) + 148)/132))*132));1;55;;;;;
 ((((max(min((v1*-128) + v2, 128), 0) + (v1*128))/4)*4) == (max(min((v1*-128) + v2, 128), 0) + (v1*128)));0;952;;;;;
 (((v0 + 37)/32) != 0);0;402;;;;;
 (min(((v0/4) + (((v1 + -250)/4)*4)) + 253, v2) == min(((v0/4) + (((v1 + -250)/4)*4)) + 253, v2));1;65;;;;;
 ((v0 + 4) < ((v0 + 1) + -6));0;35;;;;;
 ((((((v0 + v1) + -1)/63)*2) - (((v1/63)*2) + v2)) == (((((v0 + v1) + -1)/63)*2) - (((v1/63)*2) + v2)));1;73;;;;;
 (((v0/65) + (v1*2)) == ((v0/65) + (v1*2)));1;68;;;;;
 ((((v0/65)*8) + (v1*12)) == (((v0/65)*8) + (v1*12)));1;42;;;;;
 (max(min(min(min(min((((v7 + v4) - max(min(v5, 2003), 4)) + -124)/128, (((v7 + v4) - max(min(v5, 2003), 4)) + -124)/128), ((min(max(min(v6 + v5, 1995), -4), (v7 + v4) + 122) - max(min(v5, 2003), 4)) + -119)/128), ((min(max(min(v6 + v5, 1995), -4), (v7 + v4) + 122) - max(min(v5, 2003), 4)) + -119)/128), (0 + ((v3 + 136)/128)) - 1) + 1, min(max(((v4 - max(min(v5, 2003), 4)) + 131)/128, 0), ((v3 + 136)/128) + 0)) <= min(max(((v4 - max(min(v5, 2003), 4)) + 131)/128, 0), ((v3 + 136)/128) + 0));0;3210;;;;;
 (((((v0 % (((v1 - v2) + 48)/32))*-32)/4)*4) == ((v0 % (((v1 - v2) + 48)/32))*-32));1;60;;;;;
 (0 == ((0 + ((max(v0*12, 238)*-2) + 500)) - 1));0;55;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*128) + 733)/557) == (((((((v0 + v1) + 124)/125) - (v1/125))*128) + 733)/557));1;68;;;;;
 ((((((v0 + v1) + v2) + v3)*8) + 1) >= (((((((v0 - 1) + v1) + v2) + v3)*8) + 8) + 1));1;115;;;;;
 (((v0*142) + (((v1/500) - (((v2 + v1) + -1)/500))*512)) == ((v0*142) + (((v1/500) - (((v2 + v1) + -1)/500))*512)));1;61;;;;;
 (((max(min(v0, 1999), 0)/4) + (v1*4)) == ((max(min(v0, 1999), 0)/4) + (v1*4)));1;45;;;;;
 (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 43)/42) == ((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 43)/42));1;89;;;;;
 (((((((uint1)1 && ((-4 + v0) <= (-4 + v0))) && ((((6 + -4) - 1) + v0) >= (((6 + -4) - 1) + v0))) && ((0 + ((v1/32) + -4)) <= ((0 + (v1/32)) + -4))) && ((3 + (((v1/32) + ((((v1 % 32) + 124)/128)*4)) + 1)) >= ((((4 + 0) - 1) + ((v1/32) + ((((v1 % 32) + 124)/128)*4))) + ((6 + -4) - 1)))) && (v2 <= v2)) && (v2 >= v2));1;231;;;;;
 ((((v0*4) + v1) - (((v2 + v3) + 31)/32)) == (((v0*4) + v1) - (((v2 + v3) + 31)/32)));1;61;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/2) + 2) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/2) + 2));1;260;;;;;
 (min(48 - (v0*25), (((((v1 + v2) + -1)/1000)*256) - ((v0*25) + v3)) + 527) == min(48 - (v0*25), (((((v1 + v2) + -1)/1000)*256) - ((v0*25) + v3)) + 527));1;83;;;;;
 ((max(v0*8, 6) + (v1*4)) == (max(v0*8, 6) + (v1*4)));1;36;;;;;
 (0 == ((0 + ((((v0 + v1) % 16) + 188)/64)) - 1));0;64;;;;;
 ((max(min((v0*16) + v1, 1102), 103) - (max(min((v0*16) + v1, 1117), 118) + (v2*2))) == (max(min((v0*16) + v1, 1102), 103) - (max(min((v0*16) + v1, 1117), 118) + (v2*2))));1;100;;;;;
 ((v0 - (v1*266)) == (v0 - (v1*266)));1;39;;;;;
 (min(((v0 + v1)/8)*8, ((((v0 + v1) + 124)/8)*8) + 39) == min(((v0 + v1)/8)*8, ((((v0 + v1) + 124)/8)*8) + 39));1;75;;;;;
 (((((v0 - v1)*8) + 1091)/1044) == ((((v0 - v1)*8) + 1091)/1044));1;62;;;;;
 ((((min((v1*16) + (v2*8), (min((v1*2) + v2, v3 + 3)*8) + 12)*-1)/4)*4) == (min((v1*16) + (v2*8), (min((v1*2) + v2, v3 + 3)*8) + 12)*-1));0;1458;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 19)/2) - ((max(min((v1/4)*8, 4012), 13) + -19)/2))/16) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 19)/2) - ((max(min((v1/4)*8, 4012), 13) + -19)/2))/16) + 1));1;129;;;;;
 ((((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 456)/251) == (((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 456)/251));1;272;;;;;
 ((((((v0 + v1) + 63)/8)*8) - ((((v2*17) + v3)*4) + v4)) == (((((v0 + v1) + 63)/8)*8) - ((((v2*17) + v3)*4) + v4)));1;77;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((1*4) + v0) + 3) >= (((((2 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((0 + v1) <= (0 + v1))) && ((((125 + 0) - 1) + v1) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;175;;;;;
 (((v0*19) + (((-16 - ((min(v1*6, 119) + (min(v2*125, v3 + -125) + v4)) % 2))/2)*2)) == ((v0*19) + (((-16 - ((min(v1*6, 119) + (min(v2*125, v3 + -125) + v4)) % 2))/2)*2)));1;96;;;;;
 ((((((((v0 + v1) + 499)/500) - (v1/500))*8) + 27)/15) == (((((((v0 + v1) + 499)/500) - (v1/500))*8) + 27)/15));1;61;;;;;
 ((((v0 + v1) - (v2*125)) - ((v3*500) + v1)) == (((v0 + v1) - (v2*125)) - ((v3*500) + v1)));1;54;;;;;
 ((v0 - (((v1 + v2) + 188)/63)) == (v0 - (((v1 + v2) + 188)/63)));1;42;;;;;
 (((v0 + 48)/40) != 0);0;344;;;;;
 ((min((v0*1000) + v1, 1999) + (((min((v2*128) + 128, v3) + -1)/4)*4)) == (min((v0*1000) + v1, 1999) + (((min((v2*128) + 128, v3) + -1)/4)*4)));1;71;;;;;
 (((((((uint1)1 && ((0 + ((v0*32) + v1)) <= ((v0*32) + v1))) && ((3 + (((v0*32) + v1) + 28)) >= (((v0*32) + 31) + v1))) && (v2 <= v2)) && (((v3 + v2) + -1) >= ((v3 + v2) - 1))) && (v4 <= v4)) && (v4 >= v4));1;145;;;;;
 (min((v0*4) + v1, (v2*8) + 74) == min((v0*4) + v1, (v2*8) + 74));1;42;;;;;
 (((min(v0*16, 984)/4)*4) == min(v0*16, 984));1;51;;;;;
 (((((v0 + v1) + -1)/63) - (v2*9)) == ((((v0 + v1) + -1)/63) - (v2*9)));1;40;;;;;
 (min(((v0 + v1) + 999)/4, v2 + 124) == min(((v0 + v1) + 999)/4, v2 + 124));1;59;;;;;
 ((max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - (min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125) + (((v3*3) + v4)*4))) == (max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - (min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125) + (((v3*3) + v4)*4))));1;216;;;;;
 ((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))/2) + 6) == (((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))/2) + 6));1;213;;;;;
 (min(v0*8, (v1*8) + 553) == min(v0*8, (v1*8) + 553));1;47;;;;;
 ((((max((v0*-4) + (((v1 + v2)/8) + -1), ((v1 + v2) + 23)/8)*-8)/8)*8) == (max((v0*-4) + (((v1 + v2)/8) + -1), ((v1 + v2) + 23)/8)*-8));1;99;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))/2) + 3) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))/2) + 3));1;234;;;;;
 (min(min(((v0 + v1) + 15)/4, v2 + 251)*4, (((v3*127) + v2)*4) + 497) == min(min(((v0 + v1) + 15)/4, v2 + 251)*4, (((v3*127) + v2)*4) + 497));1;48;;;;;
 ((((v0*-18)/9)*9) == (v0*-18));1;38;;;;;
 (((((v0 + v1) + -13)/8) - (((v0 + v1)/8) + (v2*4))) == ((((v0 + v1) + -13)/8) - (((v0 + v1)/8) + (v2*4))));1;61;;;;;
 ((((v0*32) + 630)/552) != 0);0;427;;;;;
 ((min(v0/4, 0)*4) == (((min(v0/4, 0)*4) + ((v1*4) + 4)) - 1));0;104;;;;;
 (((v0/2) + 2) != 0);0;285;;;;;
 ((max(min(v0, 1999), 0) + (v1*250)) == (max(min(v0, 1999), 0) + (v1*250)));1;39;;;;;
 ((max(min(min(((v0 + v1) + 3)/4, ((v1/4) + (v2*24)) + 23), 499), 0) - min(max(min((v1/4) + (v2*24), 499), 0), max(min(min(((v0 + v1) + 3)/4, ((v1/4) + (v2*24)) + -1), 499), 0) + 1)) == (max(min(min(((v0 + v1) + 3)/4, ((v1/4) + (v2*24)) + 23), 499), 0) - min(max(min((v1/4) + (v2*24), 499), 0), max(min(min(((v0 + v1) + 3)/4, ((v1/4) + (v2*24)) + -1), 499), 0) + 1)));1;180;;;;;
 (max(0, min(114 - ((v0 % 4)*29), (0 + 29) - 1) + 1) <= 0);0;65;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 13)/2) - ((max(min((v1/4)*8, 4012), 13) + -17)/2))/504) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 13)/2) - ((max(min((v1/4)*8, 4012), 13) + -17)/2))/504) + 1));1;129;;;;;
 (min(((v0*30) + v1) + 11, v2) == min(((v0*30) + v1) + 11, v2));1;43;;;;;
 (((((v0*3) + v1)*8) + -13) == ((((((v0*3) + v1)*8) + -13) + ((min(v2, 1)*8) + 19)) - 1));0;143;;;;;
 (((((((uint1)1 && ((((((((v0*4) + v1)*2) + 0)*4) + 0) + -4) <= (((((((v0*4) + v1)*2) + 0)*4) + 0) + -4))) && ((((((((v0*4) + v1)*2) + ((v2*2) + 2))*4) + 3) + -4) >= (((((((v0*4) + v1)*2) + ((v2*2) + 2))*4) + ((4 + 0) - 1)) + -4))) && (((v3 + v4) + -4) <= ((v3 + v4) + -4))) && (((v3 + v4) + -4) >= ((v3 + v4) + -4))) && (0 <= 0)) && (0 >= 0));1;313;;;;;
 (min(((((v0 - v1) + 317)/268)*268) + v1, v0 + 50) == min(((((v0 - v1) + 317)/268)*268) + v1, v0 + 50));1;59;;;;;
 ((min(v0*45, 88) + (v1 + v2)) == (min(v0*45, 88) + (v1 + v2)));1;41;;;;;
 (((v0 - (v1/32)) + 8) > ((v0 - (v1/32)) + 8));0;42;;;;;
 (((v0 + 11)/3) != 0);0;400;;;;;
 ((((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 76)/63) == (((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 76)/63));1;209;;;;;
 ((max(min(v0, 1999), 0) + ((v1/4)*4)) == (max(min(v0, 1999), 0) + ((v1/4)*4)));1;46;;;;;
 ((max(min(((min(v0, 5) + v1) + -5)/2, 999), 0) + (v2*48)) == (max(min(((min(v0, 5) + v1) + -5)/2, 999), 0) + (v2*48)));1;66;;;;;
 (((((v0*3) + v1)*8) + -32) == ((((((v0*3) + v1)*8) + -32) + ((min(v2, -2)*8) + 40)) - 1));0;125;;;;;
 (max(min(v0, 263), min(max(min(v0, 263), 14) + (((v1 + 23)/4)*4), max(min(v0, 249), 0) + 20)) == max(min(v0, 263), min(max(min(v0, 263), 14) + (((v1 + 23)/4)*4), max(min(v0, 249), 0) + 20)));1;87;;;;;
 (min(max(min(((v0 + v1) + 132)/8, 249), 0)*8, v2 + 55) == min(max(min(((v0 + v1) + 132)/8, 249), 0)*8, v2 + 55));1;73;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + -1)/63) - (v2*2)) - (v1/63), 1)*2) + 2)) - 1));0;260;;;;;
 (((max(min((v3*-508) + max(2000 - min(v1, 0), v2), 484), -24)/4)*4) == max(min((v3*-508) + max(2000 - min(v1, 0), v2), 484), -24));0;1014;;;;;
 (min(min((((((v0 + v1) + -1)/8) - (v2*64)) - (v3*32)) - (v1/8), 31) + -3, v4) == min(min((((((v0 + v1) + -1)/8) - (v2*64)) - (v3*32)) - (v1/8), 31) + -3, v4));1;95;;;;;
 (min((v0*4) + v1, v2 + 16) == min((v0*4) + v1, v2 + 16));1;59;;;;;
 (min(v0*2, (((v1*30) + v2)*2) + 47) == min(v0*2, (((v1*30) + v2)*2) + 47));1;71;;;;;
 (((v0*-16) + (max((((v1 + v2) + -1)/65)*8, 239) - v3)) == ((v0*-16) + (max((((v1 + v2) + -1)/65)*8, 239) - v3)));1;68;;;;;
 (((min(v0, 0)*8) + ((v1*128) + (min((min((v1*-16) + (max(v2, 249) - min(v0, 0)), 15) + (v3*-4))*8, -92) + (v3*32)))) == ((min(v0, 0)*8) + ((v1*128) + (min((min((v1*-16) + (max(v2, 249) - min(v0, 0)), 15) + (v3*-4))*8, -92) + (v3*32)))));1;122;;;;;
 ((((v0 + v1) + v2) + -5) >= (((((v0 - 1) + v1) + v2) + 1) + 1));0;70;;;;;
 (((v0/252) + 1) != 0);0;304;;;;;
 (((((v0 % ((v1 + 74)/64))*-64)/4)*4) == ((v0 % ((v1 + 74)/64))*-64));1;46;;;;;
 (((max(max(min(v0/2, 1006), 7)*8, 115)/4) + (v1*4)) == ((max(max(min(v0/2, 1006), 7)*8, 115)/4) + (v1*4)));1;84;;;;;
 (min(v0*252, v1 + -252) == min(v0*252, v1 + -252));1;59;;;;;
 (max((v0 + 11)/4, max(v1, -1) + 1) == max((v0 + 11)/4, max(v1, -1) + 1));1;61;;;;;
 (((max(min((v1*-128) + (((v2/128)*-128) + v2), 128), 0)/4)*4) == max(min((v1*-128) + (((v2/128)*-128) + v2), 128), 0));0;999;;;;;
 (((((v0 % ((v1 + 133)/128))*-128)/4)*4) == ((v0 % ((v1 + 133)/128))*-128));1;46;;;;;
 ((((v0 + -1)/4) - (((v1*8) + v2)*4)) == (((v0 + -1)/4) - (((v1*8) + v2)*4)));1;67;;;;;
 (((((((uint1)1 && (((0 + ((v0*4) + v1)) + -2) <= ((((v0*4) + v1) + 0) + -2))) && (((3 + (((v0*4) + v1) + 8)) + -2) >= ((((v0*4) + v1) + ((4 + 0) - 1)) + ((6 + -2) - 1)))) && ((max(v2*8, v3 + 4) + -1) <= (-2 + v3))) && ((v3 + 3) >= (((6 + -2) - 1) + v3))) && (v4 <= v4)) && (v4 >= v4));0;151;;;;;
 (min(((v0 + v1) + 3)/4, ((v1/4) + (v2*32)) + 31) == min(((v0 + v1) + 3)/4, ((v1/4) + (v2*32)) + 31));1;65;;;;;
 (max(min(min((((v0 + v1) + 158)/16) - ((v2/250)*16), min(((v0 + v1)/16) - ((v2/250)*16), (((((v3 + v2) + -1)/250) - (v2/250))*16) + 14) + 11), (v4*16) + 26), min(max((v1/16) - ((v2/250)*16), -12), (v4*16) + 15) + 11) == max(min(min((((v0 + v1) + 158)/16) - ((v2/250)*16), min(((v0 + v1)/16) - ((v2/250)*16), (((((v3 + v2) + -1)/250) - (v2/250))*16) + 14) + 11), (v4*16) + 26), min(max((v1/16) - ((v2/250)*16), -12), (v4*16) + 15) + 11));1;203;;;;;
 (((max(min((v1*-12) + (max(min(v2 + v3, 2000), 1) - max(min(v3, 1999), 0)), 12), 0)/4)*4) == max(min((v1*-12) + (max(min(v2 + v3, 2000), 1) - max(min(v3, 1999), 0)), 12), 0));0;1350;;;;;
 ((min(((((v0 + v1) + -1)/8) - (v2*36)) - (v3*12), (v1/8) + 11) - ((v1/8) + (v4*4))) == (min(((((v0 + v1) + -1)/8) - (v2*36)) - (v3*12), (v1/8) + 11) - ((v1/8) + (v4*4))));1;84;;;;;
 (max(((v0*28) + v1)*8, ((v2*8) + v3) + 147) == max(((v0*28) + v1)*8, ((v2*8) + v3) + 147));1;62;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*4) + v3)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*4) + v3)));1;63;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8))/84) + 1) == ((((((v0 + v1) + -1)/8) - (v1/8))/84) + 1));1;61;;;;;
 (max(min((v2 + v3) + -1, (((v4*8) + -547) + ((min(((min(v5, 31)*8) - (v6*76)) - (min(v7, 36)*8), -76)*8) + 1216)) - 1) + 1, min(max(v3, (v4*8) + -547), ((min(((min(v5, 31)*8) - (v6*76)) - (min(v7, 36)*8), -76)*8) + 1216) + ((v4*8) + -547))) <= min(max(v3, (v4*8) + -547), ((min(((min(v5, 31)*8) - (v6*76)) - (min(v7, 36)*8), -76)*8) + 1216) + ((v4*8) + -547)));0;2944;;;;;
 (min(min((((((v0 + v1) + -1)/8) - (v2*128)) - (v3*32)) - (v1/8), 31) + -3, v4) == min(min((((((v0 + v1) + -1)/8) - (v2*128)) - (v3*32)) - (v1/8), 31) + -3, v4));1;85;;;;;
 (max(-1 - min((((((min(v0*1000, v1 + -1000) + v2) + 4) % 8) + 259)/8) + (v3*-8), 7), max(v4, -7) + -1) == max(-1 - min((((((min(v0*1000, v1 + -1000) + v2) + 4) % 8) + 259)/8) + (v3*-8), 7), max(v4, -7) + -1));1;114;;;;;
 (min((min(v0*256, 754) + (v1 + v2)) + 253, v3) == min((min(v0*256, 754) + (v1 + v2)) + 253, v3));1;64;;;;;
 (max(min(max(max(((max(v0, 0) - (v1*8)) + 114)/32, (14 - v1)/4), 0), ((max(v2, 0) - v1) + 17)/4), min(min(min(((min(v3 + v0, 2000) - (v1*8)) + 50)/32, ((max(v2, 0) - v1) + 10)/4), (256 - v1)/4), ((max(v2, 0) - v1) + 13)/4) + 1) == max(min(max(max(((max(v0, 0) - (v1*8)) + 114)/32, (14 - v1)/4), 0), ((max(v2, 0) - v1) + 17)/4), min(min(min(((min(v3 + v0, 2000) - (v1*8)) + 50)/32, ((max(v2, 0) - v1) + 10)/4), (256 - v1)/4), ((max(v2, 0) - v1) + 13)/4) + 1));1;243;;;;;
 (min(max(v0, 0), ((v1*16) + v2) + 15) == min(max(v0, 0), ((v1*16) + v2) + 15));1;1263;;;;;
 (min((((min(((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*32), 64 - max(v3*32, 33))/16)*16) + v4) + (min(((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*32), 3) + (min(min(((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*32), 31)/4, 3)*4)), v5) == min((((min(((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*32), 64 - max(v3*32, 33))/16)*16) + v4) + (min(((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*32), 3) + (min(min(((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*32), 31)/4, 3)*4)), v5));1;205;;;;;
 ((((((((v0 + v1) + 440)/63) - (v1/63))*8) + 249)/185) == (((((((v0 + v1) + 440)/63) - (v1/63))*8) + 249)/185));1;81;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*128) + 217)/36) == (((((((v0 + v1) + 124)/125) - (v1/125))*128) + 217)/36));1;73;;;;;
 ((min(v0*2, v1 + 14) + (v2/2)) == (min(v0*2, v1 + 14) + (v2/2)));1;48;;;;;
 ((min(v0 - (v1*516), 493) + (v2*-2)) == (min(v0 - (v1*516), 493) + (v2*-2)));1;44;;;;;
 ((((((v0 + v1) + -1)/4) - (v2*8)) - (v1/4)) == (((((v0 + v1) + -1)/4) - (v2*8)) - (v1/4)));1;77;;;;;
 ((min(max(min(((v0 + v1) + 3)/4, 499), 0) - (v2*32), max(min(v1/4, 499), 0) + 28) - (max(min(v1/4, 499), 0) + v3)) == (min(max(min(((v0 + v1) + 3)/4, 499), 0) - (v2*32), max(min(v1/4, 499), 0) + 28) - (max(min(v1/4, 499), 0) + v3)));1;143;;;;;
 (min((v0*2) + ((v1*36) + v2), v3 + 45) == min((v0*2) + ((v1*36) + v2), v3 + 45));1;47;;;;;
 ((((((v0 + v1) + 13)/2) - (v2*64)) - (v1/2)) == (((((v0 + v1) + 13)/2) - (v2*64)) - (v1/2)));1;46;;;;;
 ((max(min(v0/8, 249), 0) + (v1*4)) == (max(min(v0/8, 249), 0) + (v1*4)));1;70;;;;;
 (max((((v0 + v1)*8) + v2)*4, (((v0 + v1)*32) + ((v2*4) + v3)) + 24) == max((((v0 + v1)*8) + v2)*4, (((v0 + v1)*32) + ((v2*4) + v3)) + 24));1;79;;;;;
 (((((((v0 + v1) + 31)/8) - (v1/8)) + 71)/68) == ((((((v0 + v1) + 31)/8) - (v1/8)) + 71)/68));1;72;;;;;
 (((v0 + v1) + -7) == ((((v0 + v1) + -7) + 138) - 1));0;52;;;;;
 (((((v0 - v1)*8) + 259)/153) == ((((v0 - v1)*8) + 259)/153));1;62;;;;;
 (((((v0 + v1) + 31)/32) - ((((v2*2) + v3)*4) + v4)) == ((((v0 + v1) + 31)/32) - ((((v2*2) + v3)*4) + v4)));1;64;;;;;
 (min(((min(v0/8, 0)/16) + v1)*16, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 3) == min(((min(v0/8, 0)/16) + v1)*16, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 3));1;89;;;;;
 (((v0*132) + (max(min((v1/500)*8, 67), 36)*8)) == ((v0*132) + (max(min((v1/500)*8, 67), 36)*8)));1;48;;;;;
 (min(min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*32), max(min(v1/2, 999), 0) + 31) - (max(min(v1/2, 999), 0) + (v3*6)), ((min(max(min(((v0 + v1) + -1)/2, 999), 0), (min(v3*6, 26) + (max(min(v1/2, 999), 0) + (v2*32))) + 5) + (v3*-6)) - (max(min(v1/2, 999), 0) + (v2*32))) + -1) == min(min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*32), max(min(v1/2, 999), 0) + 31) - (max(min(v1/2, 999), 0) + (v3*6)), ((min(max(min(((v0 + v1) + -1)/2, 999), 0), (min(v3*6, 26) + (max(min(v1/2, 999), 0) + (v2*32))) + 5) + (v3*-6)) - (max(min(v1/2, 999), 0) + (v2*32))) + -1));1;283;;;;;
 (((((((uint1)1 && ((((((v0*4) + v1) + -3) + 0) + -4) <= (((((v0*4) + 0) + v1) + -3) + -4))) && ((((((v0*4) + v1) + ((4 + -3) - 1)) + 3) + -4) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((4 + -3) - 1)) + -4))) && (((v2 + v3) % 4) <= ((v2 + v3) % 4))) && (((v2 + v3) % 4) >= ((v2 + v3) % 4))) && (v4 <= v4)) && (v4 >= v4));1;235;;;;;
 ((((v0 + v1)/32) + (v2*4)) == (((v0 + v1)/32) + (v2*4)));1;93;;;;;
 (((((v0/2)*-32)/16)*16) == ((v0/2)*-32));1;28;;;;;
 ((min(v0/8, 0) + ((v1/4)*4)) == (min(v0/8, 0) + ((v1/4)*4)));1;42;;;;;
 (min(((v0 + v1) + -1)/65, ((v1/65) + (v2*2)) + 1) == min(((v0 + v1) + -1)/65, ((v1/65) + (v2*2)) + 1));1;72;;;;;
 (min(v0*2, max(min(min((max(min(((v1 + v2)/125)*8, 125), 1) + ((min(max(min((((v1 + v3) + 124)/125)*8, 113), -11) - max(min(((v1 + v3)/125)*8, 125), 1), (v4*4) + -9)/2)*2)) + 10, v5), max(min((((v1 + v2) + 124)/125)*8, 113), -11) + 9)*2, -5) + 4) == min(v0*2, max(min(min((max(min(((v1 + v2)/125)*8, 125), 1) + ((min(max(min((((v1 + v3) + 124)/125)*8, 113), -11) - max(min(((v1 + v3)/125)*8, 125), 1), (v4*4) + -9)/2)*2)) + 10, v5), max(min((((v1 + v2) + 124)/125)*8, 113), -11) + 9)*2, -5) + 4));1;363;;;;;
 (((v0*8) + (v1*1220)) == ((v0*8) + (v1*1220)));1;35;;;;;
 (((v0 + v1) + -1) < (((v0 + 1) + v1) + -6));0;50;;;;;
 ((((((v0 + v1) + 31)/4) - (v2*3)) - (v1/4)) == (((((v0 + v1) + 31)/4) - (v2*3)) - (v1/4)));1;52;;;;;
 (((v0 + 518)/500) != 0);0;339;;;;;
 (0 == ((0 + ((max((v0 % 4)*63, 187)*-2) + 500)) - 1));0;337;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 59) == min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 59));1;55;;;;;
 (max(min(min(min(min((((v6 + v4) - max(min(v5, 2004), 5)) + -11)/16, (((v6 + v4) - max(min(v5, 2004), 5)) + -11)/16), ((min(max(min(v5, 1872), -127) + 113, v6 + v4) - max(min(v5, 2004), 5)) + 4)/16), ((min(max(min(v5, 1872), -127) + 113, v6 + v4) - max(min(v5, 2004), 5)) + 4)/16), (0 + ((v3 + 148)/16)) - 1) + 1, min(max(((v4 - max(min(v5, 2004), 5)) + 20)/16, 0), ((v3 + 148)/16) + 0)) <= min(max(((v4 - max(min(v5, 2004), 5)) + 20)/16, 0), ((v3 + 148)/16) + 0));0;3146;;;;;
 (min(((((v0 + v1) + -1)/65) - (v1/65)) + -3, v2) == min(((((v0 + v1) + -1)/65) - (v1/65)) + -3, v2));1;85;;;;;
 (((v0*36) + (((v1 + v2)/2) + (v3*12))) == ((v0*36) + (((v1 + v2)/2) + (v3*12))));1;43;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((((v0*8) + 2)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((((v0*8) + 2)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((((v0*8) + 2)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((((v0*8) + 2)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((((v0*8) + 2)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((((v0*8) + 2)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((((v0*8) + 2)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((((v0*8) + 2)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))));1;209;;;;;
 (min((((v0 + v1) + 515)/32) - (v2*2), (min((max(min(min(((v3 + v4) + 499)/500, 3)*8, 22), -7) - ((v5/4)*12)) - max(min((v4/500)*8, 36), 5), -16)*2) + 55) == min((((v0 + v1) + 515)/32) - (v2*2), (min((max(min(min(((v3 + v4) + 499)/500, 3)*8, 22), -7) - ((v5/4)*12)) - max(min((v4/500)*8, 36), 5), -16)*2) + 55));1;173;;;;;
 (((((v0 % (((v1 - v2) + 78)/18))*-36)/4)*4) == ((v0 % (((v1 - v2) + 78)/18))*-36));1;102;;;;;
 ((((max(v0, 2000) - min(v1, 0)) + 131)/132) >= 0);1;40;;;;;
 (min(v0 + 27, v1) == min(v0 + 27, v1));1;33;;;;;
 (((v0 + 128)/126) != 0);0;363;;;;;
 (min(((v0 + v1) + 124)/32, (((v0 + v1)/32) + (((((v0 + v1) % 32) + 252)/128)*4)) + -1) == min(((v0 + v1) + 124)/32, (((v0 + v1)/32) + (((((v0 + v1) % 32) + 252)/128)*4)) + -1));1;123;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*16) + 57)/36) == (((((((v0 + v1) + 124)/125) - (v1/125))*16) + 57)/36));1;77;;;;;
 (((v0/4) - (v1*16)) == ((v0/4) - (v1*16)));1;28;;;;;
 (((((((uint1)1 && (((((0*4) + ((v0*1008) + v1)) + 0) + -8) <= (((v0*1008) + v1) + -8))) && (((((0*4) + (((v0*1008) + v1) + 1004)) + 3) + -8) >= ((((v0*1008) + v1) + 1007) + -8))) && ((v2 + -5) <= ((0 + v2) + -5))) && ((v2 + -1) >= ((((5 + 0) - 1) + v2) + -5))) && (((v3*83) + v4) <= ((v3*83) + v4))) && (((v3*83) + v4) >= ((v3*83) + v4)));1;133;;;;;
 (((((v0 % ((v1 + 4)/3))*-24)/12)*12) == ((v0 % ((v1 + 4)/3))*-24));1;63;;;;;
 ((((((((v0 + v1) + 1999)/2000) - (v1/2000))*256) + 739)/208) == (((((((v0 + v1) + 1999)/2000) - (v1/2000))*256) + 739)/208));1;80;;;;;
 (min(v0*4, v1 + 22) == min(v0*4, v1 + 22));1;42;;;;;
 (min(max(min(v0 + v1, 2000), 1) + 6, v2) == min(max(min(v0 + v1, 2000), 1) + 6, v2));1;60;;;;;
 (min(v0 - (((max(min(v1, 2002), 3) + -3)/16)*16), v2 + 251) == min(v0 - (((max(min(v1, 2002), 3) + -3)/16)*16), v2 + 251));1;75;;;;;
 ((min(((((v0*4) + v1)*4) + v2)*4, v3 + 15) + (v4 + v5)) == (min(((((v0*4) + v1)*4) + v2)*4, v3 + 15) + (v4 + v5)));1;84;;;;;
 (min(max(min(v0*8, 113), -11) + 5, v1) == min(max(min(v0*8, 113), -11) + 5, v1));1;75;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2) == min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2));1;484;;;;;
 (((v0/64) + 1) != 0);0;1312;;;;;
 (min((v0*16) + v1, min(v2, 998) + -14) == min((v0*16) + v1, min(v2, 998) + -14));1;72;;;;;
 ((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))/10) + 2) == (((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))/10) + 2));1;202;;;;;
 (min(((v0 + v1) + 415)/32, (v1/32) + (((v2 + 46)/38)*38)) == min(((v0 + v1) + 415)/32, (v1/32) + (((v2 + 46)/38)*38)));1;98;;;;;
 ((v0 + 10) != 0);0;269;;;;;
 ((((v0/8)*2) + ((v1*8) + v2)) == (((v0/8)*2) + ((v1*8) + v2)));1;40;;;;;
 (min((min(v0, 124) + 1)/2, ((v1*-63) - (v2/2)) + 999) == min((min(v0, 124) + 1)/2, ((v1*-63) - (v2/2)) + 999));1;74;;;;;
 ((((-117 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*4)) == (((-117 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*4)));1;87;;;;;
 (max(min(min(v0 + v1, (max(min(v2, 1998), -1) + v3) + 6), 2000), min(max(max(min(v2, 1998), -1) + 1, v1), (max(min(v2, 1998), -1) + v3) + 6)) == max(min(min(v0 + v1, (max(min(v2, 1998), -1) + v3) + 6), 2000), min(max(max(min(v2, 1998), -1) + 1, v1), (max(min(v2, 1998), -1) + v3) + 6)));1;130;;;;;
 (max(min(max(((v0 - ((v1/8)*8)) + 546)/512, 0), (v2 + 67)/64), min(min(min(min(min((v2 + -60)/64, (((v3 + v0) - ((v1/8)*8)) + 31)/512), (((v3 + v0) - ((v1/8)*8)) + 32)/512), (((v3 + v0) - ((v1/8)*8)) + 33)/512), (((v3 + v0) - ((v1/8)*8)) + 34)/512), (v2 + 3)/64) + 1) == max(min(max(((v0 - ((v1/8)*8)) + 546)/512, 0), (v2 + 67)/64), min(min(min(min(min((v2 + -60)/64, (((v3 + v0) - ((v1/8)*8)) + 31)/512), (((v3 + v0) - ((v1/8)*8)) + 32)/512), (((v3 + v0) - ((v1/8)*8)) + 33)/512), (((v3 + v0) - ((v1/8)*8)) + 34)/512), (v2 + 3)/64) + 1));1;248;;;;;
 ((((v0 + -36)/8)*8) == (((v0 + -36)/8)*8));1;25;;;;;
 (((v0*32) + ((v1*64) + v2)) == ((v0*32) + ((v1*64) + v2)));1;58;;;;;
 (((min(v0 - v1, 190) + 133)/4) == ((min(v0 - v1, 190) + 133)/4));1;82;;;;;
 (((min(v0*3, 20) + v1) + v2) < ((min(v0*3, 20) + (v1 + 1)) + v2));1;82;;;;;
 (((v0*144) + ((v1/500)*64)) == ((v0*144) + ((v1/500)*64)));1;83;;;;;
 ((((v0*-136)/68)*68) == (v0*-136));1;53;;;;;
 (min(((v0*4) + ((v1*16) + v2)) + 3, v3) == min(((v0*4) + ((v1*16) + v2)) + 3, v3));1;49;;;;;
 (max((((v0 + v1) + 127)/32) - ((v2*8) + v3), ((((v0 + v1) + 63)/32) - ((v4*32) + ((v1/32) + (v2*8)))) + 2) == max((((v0 + v1) + 127)/32) - ((v2*8) + v3), ((((v0 + v1) + 63)/32) - ((v4*32) + ((v1/32) + (v2*8)))) + 2));1;112;;;;;
 ((((v0*32) + 203)/132) != 0);0;425;;;;;
 (((((((v0 + v1) + 15)/16) - (v1/16))/64) + 1) == ((((((v0 + v1) + 15)/16) - (v1/16))/64) + 1));1;72;;;;;
 ((((v0*16) + 380)/284) != 0);0;488;;;;;
 (((((((uint1)1 && (v4 <= v4)) && (v4 >= v4)) && (((((0*4) + ((v1*5) + ((v2*4) + v3))) + 0) + -10) <= (((((v2*4) + v3) + 0) + ((v1*5) + 0)) + -10))) && (((((0*4) + (((v1*5) + ((v2*4) + v3)) + 4)) + 3) + -10) >= (((((v2*4) + v3) + ((4 + 0) - 1)) + ((v1*5) + ((5 + 0) - 1))) + -10))) && (v5 <= v5)) && (v5 >= v5));0;2054;;;;;
 (((((((uint1)1 && ((((v0 + v1) + -2) + -5) <= (((v0 + v1) + -2) + -5))) && ((((v0 + v1) + ((7 + -2) - 1)) + -5) >= (((v0 + v1) + ((7 + -2) - 1)) + -5))) && ((((((0*4) + v2) + -2) + 0) + -5) <= (((((0*4) + 0) + v2) + -2) + -5))) && ((((((4*4) + v2) + ((7 + -2) - 1)) + 3) + -5) >= (((((4*4) + ((4 + 0) - 1)) + v2) + ((7 + -2) - 1)) + -5))) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)));1;297;;;;;
 (min(((v0 + v1) + 31)/32, v2 + 15) == min(((v0 + v1) + 31)/32, v2 + 15));1;49;;;;;
 (min(max(min(v0, 124), 0) + (((v1 + 23)/4)*4), max(min(v0, 105), -19) + 20) == min(max(min(v0, 124), 0) + (((v1 + 23)/4)*4), max(min(v0, 105), -19) + 20));1;88;;;;;
 (min((v0*20) + ((v1*64) + v2), v3 + 11) == min((v0*20) + ((v1*64) + v2), v3 + 11));1;61;;;;;
 ((max((v0*504) - v1, -501) + (v2*4)) == (max((v0*504) - v1, -501) + (v2*4)));1;52;;;;;
 ((max(min((v0 + v1)/8, 249), 0) + (v2*8)) == (max(min((v0 + v1)/8, 249), 0) + (v2*8)));1;32;;;;;
 (min(v0*8, min(((v1/8)*8) + (((((min((v2*-16) + v3, 14)*8) + 81)/97)*97) + (v2*128)), (v0*8) + 81) + min(min(v4, 14)*8, 15)) == min(v0*8, min(((v1/8)*8) + (((((min((v2*-16) + v3, 14)*8) + 81)/97)*97) + (v2*128)), (v0*8) + 81) + min(min(v4, 14)*8, 15)));1;130;;;;;
 ((((max(min((min((v0*252) + (v1*252), v2 + -252) + v3)/2, 999), 0)*8)/4)*4) == (max(min((min((v0*252) + (v1*252), v2 + -252) + v3)/2, 999), 0)*8));1;105;;;;;
 ((((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1283)/668) == (((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1283)/668));1;241;;;;;
 (max(min(v0*16, 531), min(((v1/1000)*256) + ((v2*32) + ((v3*16) - min((((((v1/1000)*8) + v2)*2) + v3)*16, ((((v4 + v1) + -1)/1000)*256) + 516))), 15) + 516) == max(min(v0*16, 531), min(((v1/1000)*256) + ((v2*32) + ((v3*16) - min((((((v1/1000)*8) + v2)*2) + v3)*16, ((((v4 + v1) + -1)/1000)*256) + 516))), 15) + 516));1;156;;;;;
 (min(v0*2, ((max(min(v1/2, 999), 0) + (v2*2))*2) + 1) == min(v0*2, ((max(min(v1/2, 999), 0) + (v2*2))*2) + 1));1;60;;;;;
 ((((((v0 + v1) + 7)/8) - (v2*63)) - (v1/8)) == (((((v0 + v1) + 7)/8) - (v2*63)) - (v1/8)));1;166;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), v2 + 59) == min(max(min(((v0 + v1) + -1)/2, 999), 0), v2 + 59));1;68;;;;;
 (((min((((v0 + v1) + 3)/4) - (v2*64), (v1/4) + 63)*-4) + ((v3*126) + ((v1/4)*4))) == ((min((((v0 + v1) + 3)/4) - (v2*64), (v1/4) + 63)*-4) + ((v3*126) + ((v1/4)*4))));1;79;;;;;
 (min(max(max(min(((min((v0*8) + 5, v1 + v2) + 31)/4) - (v3*2), min(((v1 + v2)/4) - (v3*2), ((v0 - v3)*2) + 2) + 7), ((v2 + 31)/4) - (v3*2)), -1), (min((max(((v4 + v5) + 23)/8, 249) - (v6*17)) - min(v5/8, 4), 12)*2) + 9) == min(max(max(min(((min((v0*8) + 5, v1 + v2) + 31)/4) - (v3*2), min(((v1 + v2)/4) - (v3*2), ((v0 - v3)*2) + 2) + 7), ((v2 + 31)/4) - (v3*2)), -1), (min((max(((v4 + v5) + 23)/8, 249) - (v6*17)) - min(v5/8, 4), 12)*2) + 9));1;281;;;;;
 (min(((v0 + v1) + 7)/8, ((v1/8) + (v2*128)) + 127) == min(((v0 + v1) + 7)/8, ((v1/8) + (v2*128)) + 127));1;540;;;;;
 ((max(min(v0/8, 249), 0) + (v1*16)) == (max(min(v0/8, 249), 0) + (v1*16)));1;1792;;;;;
 ((((v0*-84)/28)*28) == (v0*-84));1;21;;;;;
 ((((max(min(v0, 2002), 3) + -3)/16) + (v1*16)) == (((max(min(v0, 2002), 3) + -3)/16) + (v1*16)));1;37;;;;;
 (max(min(max(((v0 - max(min(v1, 1999), 0)) + 131)/128, 0), (v2 + 133)/128), (min(min(max(min(v3 + v1, 2000), 1), (v4 + v0) + 125) - max(min(v1, 1999), 0), v2 + 127) + 6)/128) == max(min(max(((v0 - max(min(v1, 1999), 0)) + 131)/128, 0), (v2 + 133)/128), (min(min(max(min(v3 + v1, 2000), 1), (v4 + v0) + 125) - max(min(v1, 1999), 0), v2 + 127) + 6)/128));1;194;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 521)/504) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 521)/504));1;160;;;;;
 ((max(min((v0 + v1)/8, 258), 9) + (((v2 + 14)/4)*4)) == (max(min((v0 + v1)/8, 258), 9) + (((v2 + 14)/4)*4)));1;78;;;;;
 (((min(v0*252, 248)/2)*2) == min(v0*252, 248));1;41;;;;;
 (((((((v0 + v1) + 9)/2) - (v1/2)) + 504)/503) == ((((((v0 + v1) + 9)/2) - (v1/2)) + 504)/503));1;70;;;;;
 (((((((v0 + v1) + 3)/4) - v2) + 1)/4) >= ((((((v0 + v1) + 7)/4) - v2) + -1)/4));0;1105;;;;;
 ((((max(v0 + v1, 1) - ((v2*32) + v3)) + 3)/4) == (((max(v0 + v1, 1) - ((v2*32) + v3)) + 3)/4));1;69;;;;;
 (min(((v0 + v1) + -993)/8, (v1/8) + (v2*125)) == min(((v0 + v1) + -993)/8, (v1/8) + (v2*125)));1;62;;;;;
 (((((v0/((v1/3) + 10))*-8)/4)*4) == ((v0/((v1/3) + 10))*-8));1;48;;;;;
 (min(((((v0 - v1) + 11)/4)*4) + v1, v0 + 12) == min(((((v0 - v1) + 11)/4)*4) + v1, v0 + 12));1;62;;;;;
 (min((((v0 + v1) + 188)/63) - (v1/63), v2 + 1) == min((((v0 + v1) + 188)/63) - (v1/63), v2 + 1));1;67;;;;;
 ((max(min((v0/32)*4, 285), 36) + (v1*4)) == (max(min((v0/32)*4, 285), 36) + (v1*4)));1;65;;;;;
 (max((min((((v0 + v1) + 7)/8) - (v1/8), v2)*2) + 3, v3) == max((min((((v0 + v1) + 7)/8) - (v1/8), v2)*2) + 3, v3));1;75;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*16)) == (max(min(v0 + v1, 1999), 0) + (v2*16)));1;48;;;;;
 (min(((v0 + v1)/8) - v2, 0) > 2);0;33;;;;;
 ((max(min(v0, 2004), 5) + (v1*125)) == (max(min(v0, 2004), 5) + (v1*125)));1;51;;;;;
 ((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) - max(min((v1/4)*8, 4012), 13)) + 82)/64) == (((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) - max(min((v1/4)*8, 4012), 13)) + 82)/64));1;239;;;;;
 (0 == ((0 + (38 - (max(min(v0, 2), 1)*19))) - 1));0;62;;;;;
 (min((v0/2) + (((((min((((v1 + v0) + 5)/2) - (v2*128), v3 + 119) - (v0/2)) + 95)/72)*72) + (v2*128)), v4 + 24) == min((v0/2) + (((((min((((v1 + v0) + 5)/2) - (v2*128), v3 + 119) - (v0/2)) + 95)/72)*72) + (v2*128)), v4 + 24));1;120;;;;;
 (min((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + 221)/16), v2 + 2) == min((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + 221)/16), v2 + 2));1;99;;;;;
 ((v0 - ((((v1*2) + v2)*4) + ((v3*152) + v4))) == (v0 - ((((v1*2) + v2)*4) + ((v3*152) + v4))));1;68;;;;;
 (max(max(v0*-40, -38)/2, v0*-20) == max(max(v0*-40, -38)/2, v0*-20));1;44;;;;;
 (max((v0 + 9)/4, 0) >= ((max((v0 + 9)/4, 0) + ((max(v0/4, -3) - max((v0 + 9)/4, 0)) + 3)) - 1));0;755;;;;;
 ((((((v0 + v1) + 7)/8) - ((v2/5)*84)) - (v1/8)) == (((((v0 + v1) + 7)/8) - ((v2/5)*84)) - (v1/8)));1;81;;;;;
 ((((max(((v0 + v1) + -1)/8, 0) - min(v1/8, 249)) + 10)/8) == (((max(((v0 + v1) + -1)/8, 0) - min(v1/8, 249)) + 10)/8));1;80;;;;;
 ((max(min(((v0 + v1) + -1)/8, 249), 0) - (v2*4)) == (max(min(((v0 + v1) + -1)/8, 249), 0) - (v2*4)));1;65;;;;;
 (min((v0*4) + v1, ((((((v2*4) + v3) + v4)*4) + v5)*8) + 2) == min((v0*4) + v1, ((((((v2*4) + v3) + v4)*4) + v5)*8) + 2));1;71;;;;;
 (min(((((v0 + v1) + 7)/8) - (v1/8)) + -31, v2) == min(((((v0 + v1) + 7)/8) - (v1/8)) + -31, v2));1;59;;;;;
 (min(v0 + 230, v1) == min(v0 + 230, v1));1;28;;;;;
 (min(((v0*152) + v1) + 139, v2) == min(((v0*152) + v1) + 139, v2));1;75;;;;;
 (min(((v0 + v1) + 131)/4, v2 + 19) == min(((v0 + v1) + 131)/4, v2 + 19));1;57;;;;;
 (((((((uint1)1 && ((((((v0*64) + v1)*2) + 0) + -503) <= (((((v0*64) + v1)*2) + 0) + -503))) && (((((((v0*64) + v1) + 62)*2) + 3) + -503) >= ((((((v0*64) + v1) + 62)*2) + 3) + -503))) && (v2 <= v2)) && (((min(v3*63, 62) + v4) + 62) >= ((min(v3*63, 62) + v4) + 62))) && (0 <= 0)) && (4 >= 4));1;237;;;;;
 (min((max(min(v0, 63), 1) + v1)*4, (v2*4) + 1) == min((max(min(v0, 63), 1) + v1)*4, (v2*4) + 1));1;67;;;;;
 ((max(min(v0/4, 499), 0) + (v1*12)) == (max(min(v0/4, 499), 0) + (v1*12)));1;45;;;;;
 (((v0*36) + ((v1/4) + (((v2*3) + v3)*4))) == ((v0*36) + ((v1/4) + (((v2*3) + v3)*4))));1;56;;;;;
 ((((v0 - v1) + 136)/79) != 0);0;485;;;;;
 ((((v0*16) + 325)/261) != 0);0;431;;;;;
 ((max(min(v0, 2100), 101) + (v1*2)) == (max(min(v0, 2100), 101) + (v1*2)));1;83;;;;;
 (((v0/65) + (v1 - ((v2*-4) + (min(((v3 + v0) + 64)/65, min((v0/65) + (((min(((v3 + v0) + 64)/65, v4 + 3) - (v0/65))/4)*4), v4) + 3) - (v5*8))))) == ((v0/65) + (v1 - ((v2*-4) + (min(((v3 + v0) + 64)/65, min((v0/65) + (((min(((v3 + v0) + 64)/65, v4 + 3) - (v0/65))/4)*4), v4) + 3) - (v5*8))))));1;158;;;;;
 ((v0 + -48) == (((v0 + -48) + 69) - 1));0;45;;;;;
 (((v0*38) + (v1*4)) == ((v0*38) + (v1*4)));1;31;;;;;
 (min(((v0 + v1) + -1)/8, ((v2*4) + ((v3*8) + ((v1/8) + (v4*128)))) + 3) == min(((v0 + v1) + -1)/8, ((v2*4) + ((v3*8) + ((v1/8) + (v4*128)))) + 3));1;81;;;;;
 ((((-28 - ((min(v0*32, v1 + -32) + v2) % 4))/4) + (v3*4)) == (((-28 - ((min(v0*32, v1 + -32) + v2) % 4))/4) + (v3*4)));1;73;;;;;
 ((((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 867)/668) == (((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 867)/668));1;216;;;;;
 (((v0*8) + (max(min((min(v1*128, 372) + (v2 + v3))/2, 999), 0) + (v4*16))) == ((v0*8) + (max(min((min(v1*128, 372) + (v2 + v3))/2, 999), 0) + (v4*16))));1;113;;;;;
 (((min((v0/63)*8, (((((v1 + v0) + 62)/63)*8) - (v2*18)) + 1)*-8) + (((v0/63)*64) + (v3*79))) == ((min((v0/63)*8, (((((v1 + v0) + 62)/63)*8) - (v2*18)) + 1)*-8) + (((v0/63)*64) + (v3*79))));1;107;;;;;
 ((max(min(v0, 0), -16)*8) >= (((max(min(v0, 0), -16)*8) + (2 - (max(min(v0, 0), -16)*8))) - 1));0;70;;;;;
 (((v0/16) + (v1*4)) == ((v0/16) + (v1*4)));1;20;;;;;
 ((((v0*2) + v1) - min(v2 - (v3*532), v1 + 482)) == (((v0*2) + v1) - min(v2 - (v3*532), v1 + 482)));1;72;;;;;
 ((-19 - max(min(v0, 19), -13)) == (((-19 - max(min(v0, 19), -13)) + (max(min(v0, 19), -13) + 27)) - 1));0;85;;;;;
 ((max(min(v0, 996), -3) - max(min(v1, 999), 0)) == (max(min(v0, 996), -3) - max(min(v1, 999), 0)));1;119;;;;;
 (min(((v0/4) + v1)*4, (((v0/4) + (v2*16))*4) + 39) == min(((v0/4) + v1)*4, (((v0/4) + (v2*16))*4) + 39));1;68;;;;;
 (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 15) == min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 15));1;135;;;;;
 ((((max(min((((v0 + v1) + 47)/8)*8, 1994), -5) - max(min((v1/8)*8, 2100), 101)) + 138)/32) == (((max(min((((v0 + v1) + 47)/8)*8, 1994), -5) - max(min((v1/8)*8, 2100), 101)) + 138)/32));1;251;;;;;
 ((max(min(v0/8, 256), 7) + (v1*128)) == (max(min(v0/8, 256), 7) + (v1*128)));1;373;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/4) + 1) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/4) + 1));1;277;;;;;
 ((v0 - (((v1 + v2) + 234)/4)) == (v0 - (((v1 + v2) + 234)/4)));1;57;;;;;
 (((((min(max(min(v0 + v1, 1991), -8), (max(min(v1, 2005), 6) + (v2*336)) + 313) % 4) + -339)/4) + (v3*4)) == ((((min(max(min(v0 + v1, 1991), -8), (max(min(v1, 2005), 6) + (v2*336)) + 313) % 4) + -339)/4) + (v3*4)));1;87;;;;;
 (min(min(v0*63, 187) + ((v1*250) + (v2 + v3)), (v2 + v3) + 437) == min(min(v0*63, 187) + ((v1*250) + (v2 + v3)), (v2 + v3) + 437));1;97;;;;;
 (((min((((v0 + v1) + 31)/32) - (v2*8), (v1/32) + 7)*-4) + (((v1/32)*4) + (v3*7))) == ((min((((v0 + v1) + 31)/32) - (v2*8), (v1/32) + 7)*-4) + (((v1/32)*4) + (v3*7))));1;89;;;;;
 (0 == ((0 + ((max(min((((v0 + v1) + 7)/8) - v2, 61), -2)*2) + 4)) - 1));0;388;;;;;
 (min((v0/2) + (v1*2), v2 + 1) == min((v0/2) + (v1*2), v2 + 1));1;50;;;;;
 (((v0*16) - ((max(min(v1/63, 31), 0)*16) + v2)) == ((v0*16) - ((max(min(v1/63, 31), 0)*16) + v2)));1;67;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1983), -5) - max(min((v1/8)*8, 2012), 16)) + 282)/250) == (((max(min((((v0 + v1) + -1)/8)*8, 1983), -5) - max(min((v1/8)*8, 2012), 16)) + 282)/250));1;217;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 209)/126) == (((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 209)/126));1;213;;;;;
 (min(v0 + -12, v1) == min(v0 + -12, v1));1;28;;;;;
 (((v0*8) + 6) == ((((v0*8) + 6) + 2) - 1));0;39;;;;;
 (max(min(min((((v1 + v2) - (max(min((v4/63)*8, 285), 36)*8)) + 174)/127, ((min(max(min((((v3 + v4) + -1)/63)*8, 244), -5)*8, (v1 + v2) + 74) - (max(min((v4/63)*8, 285), 36)*8)) + 226)/127), (0 + (((v5*8) + 479)/127)) - 1) + 1, min(max(((v2 - (max(min((v4/63)*8, 285), 36)*8)) + 427)/127, 0), (((v5*8) + 479)/127) + 0)) <= min(max(((v2 - (max(min((v4/63)*8, 285), 36)*8)) + 427)/127, 0), (((v5*8) + 479)/127) + 0));0;4151;;;;;
 (((v0/65) - (min((((v1 + v0) + -1)/65) - (v2*4), (v0/65) + 3) + (v3*-2))) == ((v0/65) - (min((((v1 + v0) + -1)/65) - (v2*4), (v0/65) + 3) + (v3*-2))));1;90;;;;;
 ((((-149 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*4)) == (((-149 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*4)));1;58;;;;;
 ((min((((v0/8) + (v1*4))*8) + 29, v2) - (((v1*8) + (((v0/8)*2) + v3))*4)) == (min((((v0/8) + (v1*4))*8) + 29, v2) - (((v1*8) + (((v0/8)*2) + v3))*4)));1;86;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 729)/671) == ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 729)/671));1;245;;;;;
 (((max(min(v0 + v1, 0), -7)*8) + -4) >= ((((max(min(v0 + v1, 0), -7)*8) + -4) + (9 - (max(min(v0 + v1, 0), -7)*8))) - 1));0;115;;;;;
 (min((v0*4) + v1, max(min(min(v2*64, 191) + v3, 1181), 182) + 62) == min((v0*4) + v1, max(min(min(v2*64, 191) + v3, 1181), 182) + 62));1;122;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 45)/36) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 45)/36));1;70;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*8) + 24)/17) == (((((((v0 + v1) + 124)/125) - (v1/125))*8) + 24)/17));1;80;;;;;
 (((((((uint1)1 && (((0 + v0) + -4) <= ((0 + v0) + -4))) && (((3 + (v0 + 252)) + -4) >= ((3 + (v0 + 252)) + -4))) && (max(v1*2, (((v2*16) + v1)*2) + 1) <= (((v2*16) + v1)*2))) && (((((v2*16) + v1)*2) + 32) >= ((((v2*16) + v1)*2) + 32))) && (0 <= 0)) && (2 >= 2));0;201;;;;;
 (min(v0*125, v1 + -125) == min(v0*125, v1 + -125));1;1141;;;;;
 (((v0/2) + ((v1*16) + ((v2*63) - (((v3 + v0) + 1)/2)))) == ((v0/2) + ((v1*16) + ((v2*63) - (((v3 + v0) + 1)/2)))));1;62;;;;;
 (min((min(v0, -1) + 15)/4, (((v1 - v2)/4) + (v3*-3)) + 3) == min((min(v0, -1) + 15)/4, (((v1 - v2)/4) + (v3*-3)) + 3));1;106;;;;;
 (((v0*251) + ((v1/8)*8)) == ((v0*251) + ((v1/8)*8)));1;33;;;;;
 (min((v0*4) + ((v1*32) + (v2 + v3)), (min(v1*32, 98) + (v2 + v3)) + 28) == min((v0*4) + ((v1*32) + (v2 + v3)), (min(v1*32, 98) + (v2 + v3)) + 28));1;88;;;;;
 ((((v0 - v1) + 93)/88) != 0);0;508;;;;;
 (min(((v0*4) + v1) + 3, (v2*8) + v3) == min(((v0*4) + v1) + 3, (v2*8) + v3));1;54;;;;;
 (((max(min((v0*-1000) + v1, 1000), 896)/4)*4) == max(min((v0*-1000) + v1, 1000), 896));0;609;;;;;
 (min(((v0 + v1) + -1)/125, ((v1/125) + ((v2/4)*4)) + 3) == min(((v0 + v1) + -1)/125, ((v1/125) + ((v2/4)*4)) + 3));1;33;;;;;
 (min(max(v0, 1997), (min(v1, 0) + (v2*8)) + 5) == min(max(v0, 1997), (min(v1, 0) + (v2*8)) + 5));1;1372;;;;;
 ((((v0*8) + 281)/253) != 0);0;488;;;;;
 ((-56 - (v0*8)) > (249 - (v0*8)));0;31;;;;;
 (((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))*64) + 1137)/749) == ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))*64) + 1137)/749));1;266;;;;;
 (((v0*4) + (max(min(v1 + v2, 1999), 0) + (v3*4))) == ((v0*4) + (max(min(v1 + v2, 1999), 0) + (v3*4))));1;77;;;;;
 (((((v0 % ((v1 + 253)/252))*-252)/4)*4) == ((v0 % ((v1 + 253)/252))*-252));1;65;;;;;
 (min((((v0 + v1) + 259)/65) - (v1/65), v2 + 3) == min((((v0 + v1) + 259)/65) - (v1/65), v2 + 3));1;65;;;;;
 (((((((v0 + v1) + 188)/63) - (v1/63))/5) + 2) == ((((((v0 + v1) + 188)/63) - (v1/63))/5) + 2));1;75;;;;;
 ((((v0*8) + 252)/186) != 0);0;450;;;;;
 ((((max(min(max(min(min((min(v4*128, v5 + -128) + (v3 + 127))/4, (((min(v4*128, v5 + -128) + (((((min(v4*128, v5 + -128) + v3) % 4) + 143)/16)*16)) + v3)/4) + -1), 499), 0), (max(min((min(v4*128, v5 + -128) + v3)/4, 499), 0) + (((max(min(min((min(v4*128, v5 + -128) + (v3 + 127))/4, (((min(v4*128, v5 + -128) + (((((min(v4*128, v5 + -128) + v3) % 4) + 143)/16)*16)) + v3)/4) + -1), 499), 0) - max(min((min(v4*128, v5 + -128) + v3)/4, 499), 0))/4)*4)) + 3)*4, (max(min((min(v4*128, v5 + -128) + v3)/4, 499), 0)*4) + -7)*-1)/4)*4) == (max(min(max(min(min((min(v4*128, v5 + -128) + (v3 + 127))/4, (((min(v4*128, v5 + -128) + (((((min(v4*128, v5 + -128) + v3) % 4) + 143)/16)*16)) + v3)/4) + -1), 499), 0), (max(min((min(v4*128, v5 + -128) + v3)/4, 499), 0) + (((max(min(min((min(v4*128, v5 + -128) + (v3 + 127))/4, (((min(v4*128, v5 + -128) + (((((min(v4*128, v5 + -128) + v3) % 4) + 143)/16)*16)) + v3)/4) + -1), 499), 0) - max(min((min(v4*128, v5 + -128) + v3)/4, 499), 0))/4)*4)) + 3)*4, (max(min((min(v4*128, v5 + -128) + v3)/4, 499), 0)*4) + -7)*-1));0;4419;;;;;
 (((min((min((v3*504) + ((((max(v4/504, -1) + 1)*504) + (v2/2)) + 500), ((v1 + v2) + 1001)/2)*-1) + (((v1 + v2) + 985)/2), 496)/8)*8) == min((min((v3*504) + ((((max(v4/504, -1) + 1)*504) + (v2/2)) + 500), ((v1 + v2) + 1001)/2)*-1) + (((v1 + v2) + 985)/2), 496));0;1901;;;;;
 ((max(min(v0, 36), 5) + (((v1 + 11)/4)*4)) == (max(min(v0, 36), 5) + (((v1 + 11)/4)*4)));1;60;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 38) == min(((v0 + v1) + -1)/8, v2 + 38));1;587;;;;;
 (((v0*-16) + ((v1*-64) + ((v1*64) + (max(min(v2/2, 999), 0) + (((min((((v1*4) + v0)*16) + 15, v3)/2) + (v0*8))*2))))) == ((v0*-16) + ((v1*-64) + ((v1*64) + (max(min(v2/2, 999), 0) + (((min((((v1*4) + v0)*16) + 15, v3)/2) + (v0*8))*2))))));1;130;;;;;
 (((v0/125) + 1) != 0);0;951;;;;;
 (v0 != 0);0;1906;;;;;
 (((((v0 % ((v1 + 22)/8))*-8)/4)*4) == ((v0 % ((v1 + 22)/8))*-8));1;59;;;;;
 (((((v0*36) - min(((v1 + v2) + 7)/8, (min((min((((v1 + v2) + 7)/8) - (v2/8), (v0*36) + 35)/18)*18, (v0*36) + 18) + (v2/8)) + 17))*2) + (((v2/8)*2) + v3)) == ((((v0*36) - min(((v1 + v2) + 7)/8, (min((min((((v1 + v2) + 7)/8) - (v2/8), (v0*36) + 35)/18)*18, (v0*36) + 18) + (v2/8)) + 17))*2) + (((v2/8)*2) + v3)));1;140;;;;;
 (0 == ((0 + (7 - max(v0*4, 3))) - 1));0;77;;;;;
 (((max(min(min((v2*-8) + (max(min(min(v3*24, 39) + ((v4 + min(v6*125, v7 + -125))/2), 976), -23) - max(min(((v4 + min(v6*125, v7 + -125))/2) + (v3*24), 999), 0)), -16) + (v5*-4), -20), -24)/2)*2) == max(min(min((v2*-8) + (max(min(min(v3*24, 39) + ((v4 + min(v6*125, v7 + -125))/2), 976), -23) - max(min(((v4 + min(v6*125, v7 + -125))/2) + (v3*24), 999), 0)), -16) + (v5*-4), -20), -24));0;3156;;;;;
 (((v0 + 108)/92) != 0);0;388;;;;;
 ((((min(min((v1*32) + (((v2/65)*8) + (v3*92)), v4 + 14)*8, (v1*256) + ((((v2/65)*64) + (v3*736)) + 7))*-1)/4)*4) == (min(min((v1*32) + (((v2/65)*8) + (v3*92)), v4 + 14)*8, (v1*256) + ((((v2/65)*64) + (v3*736)) + 7))*-1));0;2171;;;;;
 ((max(min((v0/63)*8, 285), 36) + (v1*4)) == (max(min((v0/63)*8, 285), 36) + (v1*4)));1;62;;;;;
 ((((v0*-1000)/2)*2) == (v0*-1000));1;28;;;;;
 (min(v0*4, ((v1*66) + (max(min((v2 + v3)/4, 499), 0)*4)) + 58) == min(v0*4, ((v1*66) + (max(min((v2 + v3)/4, 499), 0)*4)) + 58));1;99;;;;;
 (((v0*3) + (max(min((v1/63)*8, 285), 36)*8)) == ((v0*3) + (max(min((v1/63)*8, 285), 36)*8)));1;68;;;;;
 (min(((v0/65) + ((v1/15)*17))*2, ((((v2 + v0) + 64)/65)*2) + -29) == min(((v0/65) + ((v1/15)*17))*2, ((((v2 + v0) + 64)/65)*2) + -29));1;81;;;;;
 ((min(((v0*4) + v1)*2, min((((v2 + v3) + 64)/65)*2, (v1*2) + 31) + 7) + (v4*4)) == (min(((v0*4) + v1)*2, min((((v2 + v3) + 64)/65)*2, (v1*2) + 31) + 7) + (v4*4)));1;101;;;;;
 (((min(max(min((v0/63)*8, 285), 36), ((v1*-12) + (max(min((((v2 + v0) + -1)/63)*8, 244), -5) - (v3*84))) + 30)*-2) + ((max(min((v0/63)*8, 285), 36)*2) + v4)) == ((min(max(min((v0/63)*8, 285), 36), ((v1*-12) + (max(min((((v2 + v0) + -1)/63)*8, 244), -5) - (v3*84))) + 30)*-2) + ((max(min((v0/63)*8, 285), 36)*2) + v4)));1;187;;;;;
 ((((v0 + 3)/4)*4) == (((v0 + 3)/4)*4));1;24;;;;;
 (((((((uint1)1 && ((0 + ((((v0*8) + ((v1*4) + ((v2*2) + v3)))*4) + v4)) <= ((((v0*8) + ((v1*4) + ((v2*2) + v3)))*4) + v4))) && ((3 + ((((v0*8) + ((v1*4) + ((v2*2) + v3)))*4) + v4)) >= (((((v0*8) + ((v1*4) + ((v2*2) + v3)))*4) + 3) + v4))) && ((v5 + v6) <= (v5 + v6))) && ((v5 + v6) >= (v5 + v6))) && (0 <= 0)) && (0 >= 0));1;202;;;;;
 ((((((((v0 + v1) + 15)/16) - (v1/16))*8) + 259)/252) == (((((((v0 + v1) + 15)/16) - (v1/16))*8) + 259)/252));1;81;;;;;
 ((((v0*2) + v1) - min((min(v1 + 14, v2) + (v3*-16)) + 45, v1)) == (((v0*2) + v1) - min((min(v1 + 14, v2) + (v3*-16)) + 45, v1)));1;56;;;;;
 (min(((v0*64) + 176)/12, max(min(((((((v1 + v2) + 62)/63) - (v2/63))*64) + 164)/12, ((((((v1 + v2) + 62)/63) - (v2/63))*16) + 41)/3), ((((((v1 + v2) + 62)/63) - (v2/63))*64) + 169)/12) + 1) == min(((v0*64) + 176)/12, max(min(((((((v1 + v2) + 62)/63) - (v2/63))*64) + 164)/12, ((((((v1 + v2) + 62)/63) - (v2/63))*16) + 41)/3), ((((((v1 + v2) + 62)/63) - (v2/63))*64) + 169)/12) + 1));1;155;;;;;
 (((((((uint1)1 && ((max(v0 + 6, (v1*125) + v2) + -4) <= (v0 + -4))) && ((v0 + 2) >= (v0 + 2))) && ((min(v3, 0) + -14) <= (-4 + (min(v3, 0) + -10)))) && (((min(v3, 0) + (((v4 + 15)/16)*16)) + 9) >= (2 + ((min(v3, 0) + (((v4 + 15)/16)*16)) + 7)))) && (((v5*4) + 0) <= ((v5*4) + 0))) && (((v5*4) + 3) >= ((v5*4) + 3)));0;259;;;;;
 ((((((v0 + v1) + 15)/16) - (v2*32)) - (v1/16)) == (((((v0 + v1) + 15)/16) - (v2*32)) - (v1/16)));1;52;;;;;
 (((v0*84) + (((v1*20) + v2)*8)) == ((v0*84) + (((v1*20) + v2)*8)));1;63;;;;;
 ((min((((v0 + v1) + -1)/4) - (v2*252), (v1/4) + 251) - ((v1/4) + (v3*4))) == (min((((v0 + v1) + -1)/4) - (v2*252), (v1/4) + 251) - ((v1/4) + (v3*4))));1;93;;;;;
 (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16)) + 3)/2) >= 0);1;94;;;;;
 (min((v0/2) + (((min((v1*64) + 56, v2) + 9)/2)*2), v3 + 8) == min((v0/2) + (((min((v1*64) + 56, v2) + 9)/2)*2), v3 + 8));1;94;;;;;
 (min(((v0*44) + v1) + 38, v2) == min(((v0*44) + v1) + 38, v2));1;992;;;;;
 (((((((uint1)1 && ((((v0 + v1) + 0) + 2) <= ((v0 + v1) + 2))) && ((((v0 + v1) + 3) + 2) >= ((v0 + v1) + 2))) && ((((v2/4)*4) + -8) <= (((((v2/4) + 0)*4) + 0) + -8))) && ((((v2/4)*4) + 147) >= (((((v2/4) + 38)*4) + 3) + -8))) && (0 <= 0)) && (5 >= 5));1;214;;;;;
 (min(max(min((v0*8) + v1, 1117), 118) + (((v2 + 3)/2)*2), v3 + 2) == min(max(min((v0*8) + v1, 1117), 118) + (((v2 + 3)/2)*2), v3 + 2));1;71;;;;;
 (min(((((v0 + v1) - (v2*128)) - (v3*16)) - (v4*8)) - v1, min(((v0 + v1) - (v2*128)) - ((((v3*2) + v4)*8) + v1), 8) + 3) == min(((((v0 + v1) - (v2*128)) - (v3*16)) - (v4*8)) - v1, min(((v0 + v1) - (v2*128)) - ((((v3*2) + v4)*8) + v1), 8) + 3));1;119;;;;;
 (min((v0*32) + v1, v2 + 16) == min((v0*32) + v1, v2 + 16));1;35;;;;;
 (((max(min((v0*-500) + v1, 500), 252)/4)*4) == max(min((v0*-500) + v1, 500), 252));0;576;;;;;
 (((((max(min((v0*-16) + ((((v1 + v2) + -1)/65) - (v2/65)), 15)/8, -1)*-8) + (v0*-16))/2)*2) == ((max(min((v0*-16) + ((((v1 + v2) + -1)/65) - (v2/65)), 15)/8, -1)*-8) + (v0*-16)));1;145;;;;;
 ((max(v0*8, (v1*8) + 5) + (v2*3)) == (max(v0*8, (v1*8) + 5) + (v2*3)));1;54;;;;;
 (((max(min(((v0 + v1) + 7)/8, 249), 0)*2) - ((v2*2) + ((v3*63) + v4))) == ((max(min(((v0 + v1) + 7)/8, 249), 0)*2) - ((v2*2) + ((v3*63) + v4))));1;90;;;;;
 ((((((v0 + v1) + -1)/250) - (v2*4)) - (v1/250)) == (((((v0 + v1) + -1)/250) - (v2*4)) - (v1/250)));1;56;;;;;
 (((min(v0*8, 119) + ((v1*2) + v2)) + v3) < ((min(v0*8, 119) + ((v1*2) + (v2 + 1))) + v3));1;91;;;;;
 (((((v0 - v1)*8) + 1326)/1220) != 0);0;553;;;;;
 ((max(min(v0*16, 1997), -2) + (v1*8)) == (max(min(v0*16, 1997), -2) + (v1*8)));1;65;;;;;
 (((v0/32) + (v1*48)) == ((v0/32) + (v1*48)));1;38;;;;;
 ((min(v0, 0) + (((v1*3) + v2)*2)) == (min(v0, 0) + (((v1*3) + v2)*2)));1;48;;;;;
 (((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((0*4) + ((v0/8) + (v1*4))) + 0) <= (0 + ((v0/8) + (v1*4))))) && ((((0*4) + ((v0/8) + (v1*4))) + 3) >= (((4 + 0) - 1) + ((v0/8) + (v1*4))))) && (((v2*2) + 0) <= ((v2*2) + 0))) && (((v2*2) + ((2 + 0) - 1)) >= ((v2*2) + ((2 + 0) - 1))));1;185;;;;;
 (max((min((((v0 + v1) + 15)/8) - (v1/8), v2 + 1) + 7)/8, max(v3/8, -1) + 1) == max((min((((v0 + v1) + 15)/8) - (v1/8), v2 + 1) + 7)/8, max(v3/8, -1) + 1));1;103;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -16) <= ((((0*4) + v0) + 0) + -16))) && (((((((min((max(min(v1*2, 1991), -8) - (v2*128)) - max(min(v3, 1005)*2, 11), 105) + 27)/4)*4) + v0) + 3) + -16) >= ((((((min((max(min(v1*2, 1991), -8) - (v2*128)) - max(min(v3, 1005)*2, 11), 105) + 27)/4)*4) + v0) + 3) + -16))) && (max(max(min(v4, 2000), 1) + -6, v5) <= max(max(min(v4, 2000), 1) + -6, v5))) && (v5 >= v5)) && (0 <= 0)) && (0 >= 0));1;339;;;;;
 (min(((v0 + v1) + -64)/63, v2) == min(((v0 + v1) + -64)/63, v2));1;55;;;;;
 ((((v0 + v1)/4) + (v2*68)) == (((v0 + v1)/4) + (v2*68)));1;43;;;;;
 (((0 - ((v0*4) + v1)) - (v2/8)) == ((0 - ((v0*4) + v1)) - (v2/8)));1;47;;;;;
 (((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))*8) + 235)/12) == ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))*8) + 235)/12));1;250;;;;;
 (((((((v0 + v1) + -1)/32) - (v1/32))/2) + 1) == ((((((v0 + v1) + -1)/32) - (v1/32))/2) + 1));1;185;;;;;
 (max(min(63 - v0, (0 + 5) - 1) + 1, min(max(1 - v0, 0), 5 + 0)) <= min(max(1 - v0, 0), 5 + 0));0;882;;;;;
 (min(max(min(((v0 + v1) + 3)/4, 499), 0), (max(min(v1/4, 499), 0) + (v2*32)) + 28) == min(max(min(((v0 + v1) + 3)/4, 499), 0), (max(min(v1/4, 499), 0) + (v2*32)) + 28));1;101;;;;;
 (min(((v0 + v1) + -1)/2, v2 + 499) == min(((v0 + v1) + -1)/2, v2 + 499));1;1502;;;;;
 (min(((v0 + v1) + -1)/16, ((v2*32) + v3) + 15) == min(((v0 + v1) + -1)/16, ((v2*32) + v3) + 15));1;51;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 773)/667) == (((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 773)/667));1;236;;;;;
 (((v0 + v1) + 56) == ((((v0 + v1) + 56) + 69) - 1));0;55;;;;;
 (min(min(((((min(v0*125, v1 + -125) + v2) % 8) + 132)/8) - (v3*4), 3) + v4, v5) == min(min(((((min(v0*125, v1 + -125) + v2) % 8) + 132)/8) - (v3*4), 3) + v4, v5));1;105;;;;;
 (((v0*2) + ((v1*76) + v2)) == ((v0*2) + ((v1*76) + v2)));1;24;;;;;
 ((((max(v0, 0) - v1) + 11)/10) == (((max(v0, 0) - v1) + 11)/10));1;66;;;;;
 ((min(((((v0 + v1) + 13)/2) - (v2*507)) - (v1/2), -21) + ((v1/2) + ((((min((v2*-507) + v3, 499) + 22)/58)*58) + (v2*507)))) == (min(((((v0 + v1) + 13)/2) - (v2*507)) - (v1/2), -21) + ((v1/2) + ((((min((v2*-507) + v3, 499) + 22)/58)*58) + (v2*507)))));1;120;;;;;
 (((max(min((v0*3) + v1, 1244), 245)*2) + -494) == ((((max(min((v0*3) + v1, 1244), 245)*2) + -494) + ((v2*2) + 10)) - 1));0;172;;;;;
 (min((v0*125) + 125, v1) == min((v0*125) + 125, v1));1;28;;;;;
 (max((min(v0 - v1, 127) + 6)/68, 0) >= ((max((min(v0 - v1, 127) + 6)/68, 0) + (((min(v0 - v1, 127) + 73)/68) - max((min(v0 - v1, 127) + 6)/68, 0))) - 1));1;163;;;;;
 (((((min(((v0*19) + v1)*4, (v2*4) + 33) + 77)/2) + (v0*-38)) - (v1*2)) == ((((min(((v0*19) + v1)*4, (v2*4) + 33) + 77)/2) + (v0*-38)) - (v1*2)));1;53;;;;;
 (min(((v0 + v1) + 507)/8, ((v2*16) + (((v0 + v1)/8) + (v3*32))) + 15) == min(((v0 + v1) + 507)/8, ((v2*16) + (((v0 + v1)/8) + (v3*32))) + 15));1;98;;;;;
 (min(max(min(v0, 1912), -87), max(min(v0, 1915), -84) + (v1*4)) == min(max(min(v0, 1912), -87), max(min(v0, 1915), -84) + (v1*4)));1;64;;;;;
 (0 == ((0 + (110 - max(v0*7, 103))) - 1));0;53;;;;;
 (min(((v0 + v1) + -1)/63, min(v2, 3) + min(((v0 + v1) + -1)/63, (v1/63) + ((v2/4)*4))) == min(((v0 + v1) + -1)/63, min(v2, 3) + min(((v0 + v1) + -1)/63, (v1/63) + ((v2/4)*4))));1;87;;;;;
 (((((((uint1)1 && ((((v0*126) + v1) + 1) <= ((v1 + (v0*126)) + 1))) && (((min(v0*126, 125) + v1) + 126) >= ((v1 + (min(v0*126, 125) + 125)) + 1))) && ((max(v2 + 12, v3) + -4) <= (-4 + v2))) && ((v2 + 8) >= (((13 + -4) - 1) + v2))) && (((0*4) + 0) <= ((0*4) + 0))) && (((5*4) + 3) >= ((5*4) + ((4 + 0) - 1))));0;283;;;;;
 (((v0*4) + ((v1*8) + (min(v2*16, v3 + -16) + v4))) == ((v0*4) + ((v1*8) + (min(v2*16, v3 + -16) + v4))));1;75;;;;;
 (max(min(max(((v0 - (((v1 + -5)/63)*64)) + 1103)/1088, 0), (v2/17) + 1), min(min((((v3 + v0) - (((v1 + -5)/63)*64)) + 15)/1088, ((((v4 + v1) + 62)/63) - ((v1 + 1003)/63))/17), v2/17) + 1) == max(min(max(((v0 - (((v1 + -5)/63)*64)) + 1103)/1088, 0), (v2/17) + 1), min(min((((v3 + v0) - (((v1 + -5)/63)*64)) + 15)/1088, ((((v4 + v1) + 62)/63) - ((v1 + 1003)/63))/17), v2/17) + 1));1;171;;;;;
 (min(max(max(((v0 - v1) + 753)/4, min(((min(v2 + v0, (v3*16) + 168) - v1) + 746)/4, ((914 - v1)/4) + (v3*4)) + 1), 0), v4) == min(max(max(((v0 - v1) + 753)/4, min(((min(v2 + v0, (v3*16) + 168) - v1) + 746)/4, ((914 - v1)/4) + (v3*4)) + 1), 0), v4));1;140;;;;;
 (min(max(((v0 - v1) + 6)/4, 0), (v2*2) + 3) == min(max(((v0 - v1) + 6)/4, 0), (v2*2) + 3));1;63;;;;;
 (((max(min(min(v0, 3)*8, 22), -7)*2) - ((max(min(v0*8, 36), 5)*2) + v1)) == ((max(min(min(v0, 3)*8, 22), -7)*2) - ((max(min(v0*8, 36), 5)*2) + v1)));1;87;;;;;
 (((((v0 % (((v1*8) + 45)/38))*-38)/19)*19) == ((v0 % (((v1*8) + 45)/38))*-38));1;53;;;;;
 (min(max(max(min(((min((v0*8) + 102, v1 + v2) + 59)/4) - (v3*2), min(((v1 + v2)/4) - (v3*2), ((v0 - v3)*2) + 26) + 14), ((v2 + 59)/4) - (v3*2)), -1), (min((((((v4 + v5) + 249)/250)*32) - (v6*20)) - ((v5/250)*32), -34)*2) + 109) == min(max(max(min(((min((v0*8) + 102, v1 + v2) + 59)/4) - (v3*2), min(((v1 + v2)/4) - (v3*2), ((v0 - v3)*2) + 26) + 14), ((v2 + 59)/4) - (v3*2)), -1), (min((((((v4 + v5) + 249)/250)*32) - (v6*20)) - ((v5/250)*32), -34)*2) + 109));1;248;;;;;
 (0 == ((0 + ((max(min(v0, 31), 29)*-2) + 64)) - 1));0;54;;;;;
 (((v0 + 670)/668) == ((v0 + 670)/668));1;25;;;;;
 ((min(((v0 + v1) + -1017)/8, (v1/8) + (v2*128)) + (v3*32)) == (min(((v0 + v1) + -1017)/8, (v1/8) + (v2*128)) + (v3*32)));1;59;;;;;
 ((max(min(v0 + v1, 2000), 1) - min(max(min(v1, 1999), 0) + (v2*64), v3)) == (max(min(v0 + v1, 2000), 1) - min(max(min(v1, 1999), 0) + (v2*64), v3)));1;73;;;;;
 ((((v0*8) - max(min(((v1 + v2) + -1)/8, 249), 0)) + ((v3*32) + v4)) == (((v0*8) - max(min(((v1 + v2) + -1)/8, 249), 0)) + ((v3*32) + v4)));1;67;;;;;
 (min((v0*4) + v1, max(min((v2*4) + v3, 1999), 0) + -3) == min((v0*4) + v1, max(min((v2*4) + v3, 1999), 0) + -3));1;90;;;;;
 (min((v0*60) + v1, v2 + 440) == min((v0*60) + v1, v2 + 440));1;35;;;;;
 (((((((uint1)1 && ((((((v0*2) + v1)*2) + 0) + -33) <= ((((v0*2) + v1)*2) + -33))) && ((((((v0*2) + v1)*2) + 3) + -33) >= (((((v0*2) + v1)*2) + 3) + -33))) && (0 <= 0)) && (0 >= 0)) && (v2 <= v2)) && (v2 >= v2));1;141;;;;;
 ((((max(min(v0, 2002), 3) + -3)/16) + (v1*4)) == (((max(min(v0, 2002), 3) + -3)/16) + (v1*4)));1;67;;;;;
 (max((min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2) + 9)/4, v3) == max((min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2) + 9)/4, v3));1;143;;;;;
 ((((v0 - v1) + 88)/76) != 0);0;441;;;;;
 ((v0 + 21) != 0);0;231;;;;;
 (min(max(v0, 0), (min(v1, 249) + (v2*4)) + 3) == min(max(v0, 0), (min(v1, 249) + (v2*4)) + 3));1;45;;;;;
 ((((min(v0*125, v1 + -125) + v2)/4) + (v3*4)) == (((min(v0*125, v1 + -125) + v2)/4) + (v3*4)));1;45;;;;;
 (((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2/2)*33)) - max(min(v1/8, 249), 0)) == ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2/2)*33)) - max(min(v1/8, 249), 0)));1;109;;;;;
 (min(max(min(v0, 36), 5), max(min(v0, 25), -6) + 12) == min(max(min(v0, 36), 5), max(min(v0, 25), -6) + 12));1;135;;;;;
 ((min(((v0/4) + v1)*4, (((v0/4) + (v2*127))*4) + 501) - (((v2*127) + ((v0/4) + v3))*4)) == (min(((v0/4) + v1)*4, (((v0/4) + (v2*127))*4) + 501) - (((v2*127) + ((v0/4) + v3))*4)));1;84;;;;;
 ((((v0 + 2)/4) - (v1*2)) == (((v0 + 2)/4) - (v1*2)));1;42;;;;;
 ((v0 + -1883) >= (((v0 + -1883) + (min((((min(((v1*2) + v2)*4, ((v3*8) - (v4*54)) + 104) - (v2*4)) - (v1*8))*8) + v5, -27) + 28)) - 1));1;258;;;;;
 ((((v0 - v1) + 141)/136) == (((v0 - v1) + 141)/136));1;86;;;;;
 (min((((v0/63)*16) + v1)*4, (v2*8) + 148) == min((((v0/63)*16) + v1)*4, (v2*8) + 148));1;86;;;;;
 ((min(v0, 1999) + (v1*1000)) == (min(v0, 1999) + (v1*1000)));1;54;;;;;
 (min((((v0 + v1) + 63)/32) - (v1/32), v2 + 15) == min((((v0 + v1) + 63)/32) - (v1/32), v2 + 15));1;40;;;;;
 ((max((v0*32) - max(min(min((v1/16)*8, 4) + v2, 990), -9), -20) + (v3*2)) == (max((v0*32) - max(min(min((v1/16)*8, 4) + v2, 990), -9), -20) + (v3*2)));1;93;;;;;
 (((max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*16)) - max(min(v1/8, 249), 0)) == ((max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*16)) - max(min(v1/8, 249), 0)));1;82;;;;;
 (min(143 - ((v0*2) + (v1*29)), 28 - (v0*2)) == min(143 - ((v0*2) + (v1*29)), 28 - (v0*2)));1;47;;;;;
 (min(v0/2, ((v1*-16) + (min((min(v2*128, 380) + (v0/2)) + 119, (((v3 + v0) + 5)/2) + (v4*-504)) + (v2*-128))) + 8) == min(v0/2, ((v1*-16) + (min((min(v2*128, 380) + (v0/2)) + 119, (((v3 + v0) + 5)/2) + (v4*-504)) + (v2*-128))) + 8));1;111;;;;;
 (((((min((v0*125) + v1, (v2 + v1) + -125)/63)*-8)/4)*4) == ((min((v0*125) + v1, (v2 + v1) + -125)/63)*-8));1;106;;;;;
 (((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37))*2) + 418)/251) == ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37))*2) + 418)/251));1;224;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((0*4) + v1) + 0) <= (((0*4) + v1) + 0))) && ((((31*4) + v1) + 3) >= (((31*4) + v1) + 3))) && (0 <= 0)) && (2 >= 2));1;135;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (403 >= 403));1;75;;;;;
 (max((min((((v0 + v1) + 62)/63) - (v1/63), v2)*2) + 1, v3) == max((min((((v0 + v1) + 62)/63) - (v1/63), v2)*2) + 1, v3));1;69;;;;;
 (((max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125)) - (v3*36)) == ((max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125)) - (v3*36)));1;175;;;;;
 ((min((v0 + v1) - (v2*500), (min(v3*132, 384) + v1) + 116) - (v3*132)) == (min((v0 + v1) - (v2*500), (min(v3*132, 384) + v1) + 116) - (v3*132)));1;74;;;;;
 ((((v0*8) + 78)/12) != 0);0;441;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*253)) == (max(min(v0 + v1, 1999), 0) + (v2*253)));1;53;;;;;
 (((((((v0 + v1) + 31)/32) - (v1/32)) + 34)/33) == ((((((v0 + v1) + 31)/32) - (v1/32)) + 34)/33));1;61;;;;;
 ((max(min(v0/8, 258), 9) + (v1*64)) == (max(min(v0/8, 258), 9) + (v1*64)));1;47;;;;;
 (((max(min(v0*8, 113), -11) - (v1*63)) - max(min((v2/125)*8, 125), 1)) == ((max(min(v0*8, 113), -11) - (v1*63)) - max(min((v2/125)*8, 125), 1)));1;100;;;;;
 (min(max(min(v0 + v1, 1999), 0) + (((v2 + 131)/4)*4), max(min(v0 + v1, 1875), -124) + 128) == min(max(min(v0 + v1, 1999), 0) + (((v2 + 131)/4)*4), max(min(v0 + v1, 1875), -124) + 128));1;87;;;;;
 (min((494 + 21)/4, max(((9 - v0)/4) + (v1*-126), -1) + 1) == min((494 + 21)/4, max(((9 - v0)/4) + (v1*-126), -1) + 1));1;151;;;;;
 (min(max(min(v0, 31), 0)*8, ((max(min(v1, 31), 0) + v2)*8) + 3) == min(max(min(v0, 31), 0)*8, ((max(min(v1, 31), 0) + v2)*8) + 3));1;98;;;;;
 ((max(min(v0, 1009), 10) - (((v1*3) + v2)*4)) == (max(min(v0, 1009), 10) - (((v1*3) + v2)*4)));1;61;;;;;
 (min(max(((v0 - v1) + 1006)/1004, 0), (v2 + 1011)/1004) == min(max(((v0 - v1) + 1006)/1004, 0), (v2 + 1011)/1004));1;79;;;;;
 (0 == ((0 + (max(min(((max(((v0 + v1) + 7)/8, 255)/16) - v2)*4, 14), -10) + 10)) - 1));0;167;;;;;
 ((max((((max(v0*16, 236)/4)*-4) + ((v0*16) + v1)) - (min(v0*16, 236) + v1), -234) + 254) <= 1024);0;1114;;;;;
 (0 == ((0 + (40 - (max(min((((-133 - ((v0 + v1) % 8))/8)*2) + v2, 10), 9)*4))) - 1));0;136;;;;;
 (((v0/2) + 1) != 0);0;305;;;;;
 (min(((v0 + v1) + 188)/8, (((v0 + v1)/8) + (v2*8)) + 22) == min(((v0 + v1) + 188)/8, (((v0 + v1)/8) + (v2*8)) + 22));1;87;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 723)/669) == ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 723)/669));1;291;;;;;
 ((((((((v0 + v1) + -1)/32) - (v1/32))*32) + 139)/68) == (((((((v0 + v1) + -1)/32) - (v1/32))*32) + 139)/68));1;57;;;;;
 ((((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 146)/126) == (((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 146)/126));1;261;;;;;
 (min((((((min((v0*-16) + v1, 16)/6)*6) + (v0*16)) + v2)*2) - max(max((v0*16) - v1, -16)*2, -3), (((((min((v0*-16) + v1, 16)/6)*6) + (v0*16)) + v2)*2) + 3) == min((((((min((v0*-16) + v1, 16)/6)*6) + (v0*16)) + v2)*2) - max(max((v0*16) - v1, -16)*2, -3), (((((min((v0*-16) + v1, 16)/6)*6) + (v0*16)) + v2)*2) + 3));1;156;;;;;
 (((v0*60) + (v1 - v2)) == ((v0*60) + (v1 - v2)));1;29;;;;;
 (((((v0/((v1/16) + 1))*-33)/3)*3) == ((v0/((v1/16) + 1))*-33));1;68;;;;;
 (((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32) - v2) - ((min((v1/65)*64, 4) + -6)/32)) == ((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32) - v2) - ((min((v1/65)*64, 4) + -6)/32)));1;98;;;;;
 ((((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*8) + 257)/250) == (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*8) + 257)/250));1;88;;;;;
 ((min(max(v0 - v1, 3)*16, 72) + -77) == (((min(max(v0 - v1, 3)*16, 72) + -77) + (83 - min(max(v0 - v1, 3)*16, 72))) - 1));0;113;;;;;
 ((min(v0*4, 14) + (((v1/63)*8) + (v2*18))) == (min(v0*4, 14) + (((v1/63)*8) + (v2*18))));1;62;;;;;
 ((((-1016 - ((min((v0*1000) + 1000, v1) + v2) % 8))/8) + (v3*4)) == (((-1016 - ((min((v0*1000) + 1000, v1) + v2) % 8))/8) + (v3*4)));1;74;;;;;
 (min((min(v0, 1005)*2) + -11, v1) == min((min(v0, 1005)*2) + -11, v1));1;70;;;;;
 (((min((((v0 + v1) + 501)/2) - (v2*64), (min(v3*24, 40) + ((v0 + v1)/2)) + 23) + (v3*-24)) - ((v4*2) + (((v0 + v1)/2) + (v5*4)))) == ((min((((v0 + v1) + 501)/2) - (v2*64), (min(v3*24, 40) + ((v0 + v1)/2)) + 23) + (v3*-24)) - ((v4*2) + (((v0 + v1)/2) + (v5*4)))));1;136;;;;;
 ((max(v0*64, -6) + ((v1*128) + ((v2/8) + (v3*16)))) == (max(v0*64, -6) + ((v1*128) + ((v2/8) + (v3*16)))));1;56;;;;;
 (max(6 - (max(min(((v0 + 120)/64) + (v1*4), v2) - (((v0 + -136)/64) + (v1*4)), 1)*8), (max(min(v3 - v2, -1), -4)*8) + 6) == max(6 - (max(min(((v0 + 120)/64) + (v1*4), v2) - (((v0 + -136)/64) + (v1*4)), 1)*8), (max(min(v3 - v2, -1), -4)*8) + 6));1;138;;;;;
 ((((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/125) + 1) == (((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/125) + 1));1;280;;;;;
 (((v0 + 7)/4) == ((v0 + 7)/4));1;27;;;;;
 (((((max(v0, 249) - min(v1, 0))*8) + 131)/36) == ((((max(v0, 249) - min(v1, 0))*8) + 131)/36));1;72;;;;;
 (min((((v0 + v1)/63) + (v2*12))*8, (v3*8) + 22) == min((((v0 + v1)/63) + (v2*12))*8, (v3*8) + 22));1;61;;;;;
 (((max(min(v0*4, 9), 6)*4) + -37) >= ((((max(min(v0*4, 9), 6)*4) + -37) + (43 - (max(min(v0*4, 9), 6)*4))) - 1));0;95;;;;;
 (max(min((34 - v0)/4, (0 + 3) - 1) + 1, min(max(2 - (v0/4), 0), 3 + 0)) <= min(max(2 - (v0/4), 0), 3 + 0));0;851;;;;;
 ((((v0*128)/32)*32) == (v0*128));1;41;;;;;
 (min(45 - ((((((v0*8) + v1)*2) + (((v2 + v3)/2) + (v4*74))) - min((((v2 + v3) + 507)/2) - (v5*131), ((v2 + v3)/2) + 123))*2), 147 - (((v0*8) + v1)*4)) == min(45 - ((((((v0*8) + v1)*2) + (((v2 + v3)/2) + (v4*74))) - min((((v2 + v3) + 507)/2) - (v5*131), ((v2 + v3)/2) + 123))*2), 147 - (((v0*8) + v1)*4)));1;167;;;;;
 ((((max((((v0 + v1) + 64)/65)*64, 1975) - min((v1/65)*64, 4)) + 1012)/1000) >= 0);1;84;;;;;
 (min((v0 + v1)*4, (v2*4) + 2) == min((v0 + v1)*4, (v2*4) + 2));1;61;;;;;
 (((v0/(((v1*8) + 87)/68))/((v2 + 64)/63)) == ((v0/(((v1*8) + 87)/68))/((v2 + 64)/63)));1;73;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -5) <= ((((0*4) + 0) + v0) + -5))) && (((((2*4) + v0) + 3) + -5) >= ((((2*4) + ((4 + 0) - 1)) + v0) + -5))) && ((max(v1 + 8, v2) + -1) <= (-1 + v1))) && ((v1 + 7) >= (((9 + -1) - 1) + v1))) && (0 <= 0)) && (0 >= 0));0;205;;;;;
 (((v0 + 31)/24) != 0);0;387;;;;;
 ((max(min((v0*16) + v1, min(v2 + v1, 2000) + -16), -15) - (max(min((v0*16) + v1, min(v2 + v1, 2015) + -16), 0) + (v3*4))) == (max(min((v0*16) + v1, min(v2 + v1, 2000) + -16), -15) - (max(min((v0*16) + v1, min(v2 + v1, 2015) + -16), 0) + (v3*4))));1;129;;;;;
 (((max(min(v0, 2), -3)*32) + -68) >= ((((max(min(v0, 2), -3)*32) + -68) + (72 - (max(min(v0, 2), -3)*32))) - 1));0;99;;;;;
 ((min(v0*4, 123) + min((min(v1*127, 380) + ((v2/2) + (v3*501))) + 119, v4)) == (min(v0*4, 123) + min((min(v1*127, 380) + ((v2/2) + (v3*501))) + 119, v4)));1;73;;;;;
 (min(((v0 + v1) + 15)/16, ((v1 + 190)/16) + (v2*16)) == min(((v0 + v1) + 15)/16, ((v1 + 190)/16) + (v2*16)));1;1624;;;;;
 ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5)*8) - (v2*17)) - (max(min((v1/500)*8, 67), 36)*8)) == (((max(min((((v0 + v1) + 499)/500)*8, 26), -5)*8) - (v2*17)) - (max(min((v1/500)*8, 67), 36)*8)));1;105;;;;;
 ((min((((v0/63) + v1)*8) - (v2*132), ((v0/63)*8) + 132) - ((((v0/63)*2) + v3)*4)) == (min((((v0/63) + v1)*8) - (v2*132), ((v0/63)*8) + 132) - ((((v0/63)*2) + v3)*4)));1;97;;;;;
 (min(7 - (((max(min(v0/2, 999), 0) + (((v1*9) + v2)*2)) - min(max(min(((v3 + v0) + -1)/2, 999), 0) - (v4*64), max(min(v0/2, 999), 0) + 63))*2), 67 - (((v1*9) + v2)*4)) == min(7 - (((max(min(v0/2, 999), 0) + (((v1*9) + v2)*2)) - min(max(min(((v3 + v0) + -1)/2, 999), 0) - (v4*64), max(min(v0/2, 999), 0) + 63))*2), 67 - (((v1*9) + v2)*4)));1;185;;;;;
 (((((v0 + v1) + 127)/32) - v2) == ((((v0 + v1) + 127)/32) - v2));1;63;;;;;
 (min(max((1021 - v0)/1009, 0), (v1 + 1025)/1009) == min(max((1021 - v0)/1009, 0), (v1 + 1025)/1009));1;73;;;;;
 ((((max(((v0 + v1) + 7)/8, 0) - min(v1/8, 249)) + 9)/8) == (((max(((v0 + v1) + 7)/8, 0) - min(v1/8, 249)) + 9)/8));1;78;;;;;
 (min(((v0 + v1) + -1)/65, v2 + 1) == min(((v0 + v1) + -1)/65, v2 + 1));1;73;;;;;
 (((v0*127) + (((max(min(v1, 2002), 3) + -3)/16)*16)) == ((v0*127) + (((max(min(v1, 2002), 3) + -3)/16)*16)));1;65;;;;;
 (((((v0 + v1) + 73)/2) - ((v2*2) + (((v0 + v1)/2) + (v3*6)))) == ((((v0 + v1) + 73)/2) - ((v2*2) + (((v0 + v1)/2) + (v3*6)))));1;79;;;;;
 ((((v0 + v1)/4) + (v2*130)) == (((v0 + v1)/4) + (v2*130)));1;50;;;;;
 (min((v0*28) + v1, max(min(v2*8, 1994), -5) + 2) == min((v0*28) + v1, max(min(v2*8, 1994), -5) + 2));1;80;;;;;
 ((v0*2) == (((v0*2) + 2) - 1));0;22;;;;;
 ((max(min(v0 + v1, 1999), 0) + (((v2 + 7)/4)*4)) == (max(min(v0 + v1, 1999), 0) + (((v2 + 7)/4)*4)));1;66;;;;;
 (((((v0 + v1) + 71)/64) - (v1/64)) == ((((v0 + v1) + 71)/64) - (v1/64)));1;102;;;;;
 ((min(v0, 18) + -20) >= (((min(v0, 18) + -20) + (25 - min(v0, 18))) - 1));0;78;;;;;
 ((((((((v0 + v1) + 15)/16) - ((v1 + -2)/16))*2) + 72)/65) == (((((((v0 + v1) + 15)/16) - ((v1 + -2)/16))*2) + 72)/65));1;75;;;;;
 (min(max(max(v0, v1), v2 + v0), (v3*8) + 20) == min(max(max(v0, v1), v2 + v0), (v3*8) + 20));1;54;;;;;
 (min(((v0*2) + v1)*2, (v2*2) + 3) == min(((v0*2) + v1)*2, (v2*2) + 3));1;50;;;;;
 ((((((v0 + v1) + 251)/63)*32) - ((v2*4) + v3)) == (((((v0 + v1) + 251)/63)*32) - ((v2*4) + v3)));1;63;;;;;
 (min(max(v0, 0), v1 + 2) == min(max(v0, 0), v1 + 2));1;40;;;;;
 (min(min(v0*12, 32) + v1, (((v2*31) + v3)*8) + 237) == min(min(v0*12, 32) + v1, (((v2*31) + v3)*8) + 237));1;84;;;;;
 (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 19)/16) == ((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 19)/16));1;105;;;;;
 (min(v0 + 41, v1) == min(v0 + 41, v1));1;29;;;;;
 ((((min((v0*64) + (((v1/8) + (v2*8)) + (v3*125)), ((v1 + min((v3*1000) + 1000, v4)) + 7)/8)*-8)/8)*8) == (min((v0*64) + (((v1/8) + (v2*8)) + (v3*125)), ((v1 + min((v3*1000) + 1000, v4)) + 7)/8)*-8));1;99;;;;;
 (min((v0*8) + ((v1*16) + v2), v3 + -8) == min((v0*8) + ((v1*16) + v2), v3 + -8));1;45;;;;;
 (max(min((v2 + v3) + -1, (((v4*8) + -5) + ((min((max(min(((v5 + v6) + 7)/8, 249), 0) - (v7*12)) - max(min(v6/8, 249), 0), 10)*8) + 17)) - 1) + 1, min(max(v3, (v4*8) + -5), ((min((max(min(((v5 + v6) + 7)/8, 249), 0) - (v7*12)) - max(min(v6/8, 249), 0), 10)*8) + 17) + ((v4*8) + -5))) <= min(max(v3, (v4*8) + -5), ((min((max(min(((v5 + v6) + 7)/8, 249), 0) - (v7*12)) - max(min(v6/8, 249), 0), 10)*8) + 17) + ((v4*8) + -5)));0;3825;;;;;
 (min(225 - (((v0*29) + ((v1*15) + v2))*4), 115 - (((v1*15) + v2)*4)) == min(225 - (((v0*29) + ((v1*15) + v2))*4), 115 - (((v1*15) + v2)*4)));1;112;;;;;
 ((((((v0 + v1)*4) + v2)*2) + -10) == (((((((v0 + v1)*4) + v2)*2) + -10) + 2) - 1));0;126;;;;;
 (max((min(min(v0*8, 244) + ((v1*252) + (v2 + v3)), (v2 + v3) + 492) + v4) + 10, v5) == max((min(min(v0*8, 244) + ((v1*252) + (v2 + v3)), (v2 + v3) + 492) + v4) + 10, v5));1;97;;;;;
 ((((v0 - ((v1*116) + v2)) + 3)/4) == (((v0 - ((v1*116) + v2)) + 3)/4));1;48;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 124) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;170;;;;;
 ((v0 - (v1 + v2)) == (v0 - (v1 + v2)));1;1187;;;;;
 (((v0*8) + ((((v1 + v2)/8)*2) + v3)) == ((v0*8) + ((((v1 + v2)/8)*2) + v3)));1;48;;;;;
 ((min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2) + 3) == (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2) + 3));1;145;;;;;
 (min((((v0 + v1) + -1)/500)*64, (((v1/500) + v2)*64) + 3) == min((((v0 + v1) + -1)/500)*64, (((v1/500) + v2)*64) + 3));1;121;;;;;
 (((v0*17) + ((v1*34) + (((v2/63)*2) + v3))) == ((v0*17) + ((v1*34) + (((v2/63)*2) + v3))));1;49;;;;;
 (min(max(v0, 1997) + 16, v1) == min(max(v0, 1997) + 16, v1));1;24;;;;;
 (min(max(max(min((min((v0*4) + 41, v1 + v2) + 31)/4, min((v1 + v2)/4, v0 + 11) + 7), (v2 + 31)/4) - v3, -1), min(((((v4 + v5) + 3)/4) - (v6*32)) - (v5/4), 31) + 18) == min(max(max(min((min((v0*4) + 41, v1 + v2) + 31)/4, min((v1 + v2)/4, v0 + 11) + 7), (v2 + 31)/4) - v3, -1), min(((((v4 + v5) + 3)/4) - (v6*32)) - (v5/4), 31) + 18));1;224;;;;;
 ((max(min((v0*255) + v1, 1499), 500) + (v2*4)) == (max(min((v0*255) + v1, 1499), 500) + (v2*4)));1;55;;;;;
 (v0 == ((v0 + 33) - 1));0;18;;;;;
 (min(((((v0 + v1) + 1)/2) - (v2*63)) - (v1/2), min(v3, 62) + 1) == min(((((v0 + v1) + 1)/2) - (v2*63)) - (v1/2), min(v3, 62) + 1));1;65;;;;;
 (min((((v0 + v1) + -1)/8) - ((v2*4) + v3), 62 - (v2*4)) == min((((v0 + v1) + -1)/8) - ((v2*4) + v3), 62 - (v2*4)));1;77;;;;;
 (((((v0/65) + v1)*2) - (((v0/65)*2) + v2)) == ((((v0/65) + v1)*2) - (((v0/65)*2) + v2)));1;55;;;;;
 (((((v0 % ((v1 + 31)/20))*-20)/4)*4) == ((v0 % ((v1 + 31)/20))*-20));1;48;;;;;
 (min(((v0 + v1) + 127)/32, ((v2*4) + v3) + -5) == min(((v0 + v1) + 127)/32, ((v2*4) + v3) + -5));1;69;;;;;
 (min(((v0*8) + v1)*8, (v2*8) + 233) == min(((v0*8) + v1)*8, (v2*8) + 233));1;80;;;;;
 (((((v0 % ((((max(v1, 0) - v2)*8) + 167)/156))*156)/4)*4) == ((v0 % ((((max(v1, 0) - v2)*8) + 167)/156))*156));1;77;;;;;
 (min(v0*4, (((v1*4) + v2)*4) + 15) == min(v0*4, (((v1*4) + v2)*4) + 15));1;66;;;;;
 ((((v0 - v1) + 68)/65) != 0);0;486;;;;;
 ((((v0*8) - (v1*1115)) - ((v2/125)*128)) == (((v0*8) - (v1*1115)) - ((v2/125)*128)));1;53;;;;;
 ((v0 + v1) >= (((v0 - 1) + v1) + 1));1;144;;;;;
 (min(max(max(max(max(max((290 - (v0*8))/292, (569 - (v0*16))/584), (573 - (v0*16))/584), (577 - (v0*16))/584), (581 - (v0*16))/584), 0), (((v1 - v0)*8) + 291)/292) == min(max(max(max(max(max((290 - (v0*8))/292, (569 - (v0*16))/584), (573 - (v0*16))/584), (577 - (v0*16))/584), (581 - (v0*16))/584), 0), (((v1 - v0)*8) + 291)/292));1;179;;;;;
 ((min((((v0 + v1) + 3)/2) - (v2*63), v3 + 27) - ((v4*4) + v3)) == (min((((v0 + v1) + 3)/2) - (v2*63), v3 + 27) - ((v4*4) + v3)));1;79;;;;;
 (((v0*504) + (max(min(v1, 2998), 999) - max(min(v1, 1914), -85))) == ((v0*504) + (max(min(v1, 2998), 999) - max(min(v1, 1914), -85))));1;148;;;;;
 ((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 1) == (((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 1));1;86;;;;;
 (((v0*125) + ((v1/4) + (v2*250))) == ((v0*125) + ((v1/4) + (v2*250))));1;53;;;;;
 (((min(v0*32, 93) + ((v1*16) + v2)) + v3) < ((min(v0*32, 93) + ((v1*16) + (v2 + 1))) + v3));1;103;;;;;
 ((((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 17)/16) == (((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 17)/16));1;283;;;;;
 (max(min(v0/8, 249), (max(min(v0/8, 249), 0) + v1) + v2) == max(min(v0/8, 249), (max(min(v0/8, 249), 0) + v1) + v2));1;77;;;;;
 (((((v0*18) + v1)*2) + ((v2*4) + v3)) == ((((v0*18) + v1)*2) + ((v2*4) + v3)));1;40;;;;;
 ((((max(min(min(v0*32, 223) + v1, 1213), 214) - max(min(min(v0*32, 223) + v1, 1244), 245))/3) + (v2*-4)) == (((max(min(min(v0*32, 223) + v1, 1213), 214) - max(min(min(v0*32, 223) + v1, 1244), 245))/3) + (v2*-4)));1;304;;;;;
 (min((((v0 + v1) + 87)/8)*8, (((v1/8) + (v2*136))*8) + 999) == min((((v0 + v1) + 87)/8)*8, (((v1/8) + (v2*136))*8) + 999));1;78;;;;;
 (min((v0*96) + 92, v1) == min((v0*96) + 92, v1));1;41;;;;;
 ((0 - (v0 % 667)) < 0);0;277;;;;;
 (min((v0*14) + ((v1*55) + ((v2/63)*8)), min(v3*8, ((v1*55) + ((v2/63)*8)) + 9) + 5) == min((v0*14) + ((v1*55) + ((v2/63)*8)), min(v3*8, ((v1*55) + ((v2/63)*8)) + 9) + 5));1;125;;;;;
 ((((((((v0 + v1) + 63)/8) - (v1/8))*8) + 328)/268) == (((((((v0 + v1) + 63)/8) - (v1/8))*8) + 328)/268));1;74;;;;;
 (min(v0*8, min(((min(v1*8, (v2*84) + 72)/4) + (((v3*20) + v4)*2))*4, ((v2*84) + (((v3*20) + v4)*8)) + 70) + 2) == min(v0*8, min(((min(v1*8, (v2*84) + 72)/4) + (((v3*20) + v4)*2))*4, ((v2*84) + (((v3*20) + v4)*8)) + 70) + 2));1;127;;;;;
 (((max(min(v0, 31), 0)*16) - ((max(min(v1/63, 31), 0)*16) + v2)) == ((max(min(v0, 31), 0)*16) - ((max(min(v1/63, 31), 0)*16) + v2)));1;73;;;;;
 ((((v0 + v1)/63) + (v2*2)) == (((v0 + v1)/63) + (v2*2)));1;62;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 83)/68) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 83)/68));1;85;;;;;
 (min(((((v0 + v1) + -1)/2) - (v1/2)) + -335, v2) == min(((((v0 + v1) + -1)/2) - (v1/2)) + -335, v2));1;54;;;;;
 (max(min(max(((v0 - (v1*2)) + 219)/128, 0), ((v2 - v1) + 113)/64), min(((v2 - v1) + -14)/64, (((v3 + v0) - (v1*2)) + 91)/128) + 1) == max(min(max(((v0 - (v1*2)) + 219)/128, 0), ((v2 - v1) + 113)/64), min(((v2 - v1) + -14)/64, (((v3 + v0) - (v1*2)) + 91)/128) + 1));1;180;;;;;
 ((((v0 + v1)*8) + v2) >= (((((v0 - 1) + v1)*8) + v2) + 1));1;101;;;;;
 (min((v0*4) + v1, v2 + -49) == min((v0*4) + v1, v2 + -49));1;60;;;;;
 ((v0 - (v1*8)) == (v0 - (v1*8)));1;70;;;;;
 (min(max(((v0 + 31)/4) - (v1*2), -1), v2) == min(max(((v0 + 31)/4) - (v1*2), -1), v2));1;63;;;;;
 (min(((v0 + v1) + 7)/8, ((v2*4) + ((v1/8) + (v3*12))) + 3) == min(((v0 + v1) + 7)/8, ((v2*4) + ((v1/8) + (v3*12))) + 3));1;71;;;;;
 (((max(min(v0, 53), 45)*8) + -428) >= ((((max(min(v0, 53), 45)*8) + -428) + (434 - (max(min(v0, 53), 45)*8))) - 1));0;81;;;;;
 (((((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10))*4) + 306)/251) == ((((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10))*4) + 306)/251));1;225;;;;;
 (min(((v0*4) + v1)*8, (v2*8) + 18) == min(((v0*4) + v1)*8, (v2*8) + 18));1;58;;;;;
 (max(0, min(((v0 % 4) + 207)/48, (0 + 6) - 1) + 1) <= 0);0;55;;;;;
 (min(min(max(min(((v0 + v1) + 71)/8, 249), 0), v2 + 10)*8, (((v3*9) + v2)*8) + 13) == min(min(max(min(((v0 + v1) + 71)/8, 249), 0), v2 + 10)*8, (((v3*9) + v2)*8) + 13));1;94;;;;;
 (((((v0 % (((max(v1, 0) - v2) + 33)/20))*-160)/32)*32) == ((v0 % (((max(v1, 0) - v2) + 33)/20))*-160));1;77;;;;;
 (((min((((v0/32) + v1) - v2)*4, 63)*-8) + -36) == ((((min((((v0/32) + v1) - v2)*4, 63)*-8) + -36) + ((min((((v0/32) + v1) - v2)*4, 63)*8) + 40)) - 1));0;178;;;;;
 (min(max(min(v0, 999), 0) + (((v1 + 7)/4)*4), max(min(v0, 996), -3) + 4) == min(max(min(v0, 999), 0) + (((v1 + 7)/4)*4), max(min(v0, 996), -3) + 4));1;88;;;;;
 (((min(v0*16, 109) + ((v1*8) + v2)) + v3) < ((min(v0*16, 109) + ((v1*8) + (v2 + 1))) + v3));1;102;;;;;
 ((((max(min((((v0 + v1) + 47)/8)*8, 1994), -5) - max(min((v1/8)*8, 2100), 101)) + 1106)/1000) == (((max(min((((v0 + v1) + 47)/8)*8, 1994), -5) - max(min((v1/8)*8, 2100), 101)) + 1106)/1000));1;251;;;;;
 (min((((v0 + v1) + -1)/63)*8, ((v2*132) + ((v1/63)*8)) + 120) == min((((v0 + v1) + -1)/63)*8, ((v2*132) + ((v1/63)*8)) + 120));1;50;;;;;
 ((((((((v0 + v1) + -1)/32) - (v1/32))*32) + 1105)/1030) == (((((((v0 + v1) + -1)/32) - (v1/32))*32) + 1105)/1030));1;74;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 689)/670) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 689)/670));1;139;;;;;
 (((v0 - (v1*8)) - ((v2*152) + v3)) == ((v0 - (v1*8)) - ((v2*152) + v3)));1;41;;;;;
 (((((((v0 + v1) + 64)/65) - (v1/65)) + 17)/10) == ((((((v0 + v1) + 64)/65) - (v1/65)) + 17)/10));1;67;;;;;
 (((v0*497) + (((v1*186) + v2)*8)) == ((v0*497) + (((v1*186) + v2)*8)));1;41;;;;;
 ((v0 + -41) >= (((v0 + -41) + 79) - 1));0;36;;;;;
 ((((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1624)/1003) == (((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1624)/1003));1;220;;;;;
 (min((v0*4) + v1, v2 + -3) == min((v0*4) + v1, v2 + -3));1;63;;;;;
 (((((((v0 + v1) + 31)/32) - (v1/32)) + 40)/36) == ((((((v0 + v1) + 31)/32) - (v1/32)) + 40)/36));1;64;;;;;
 (((((((uint1)1 && ((((((((v0*32) + v1) + v2)*8) + v3) + -32) % 16) <= (((((((v0*32) + v1) + v2)*8) + v3) + -32) % 16))) && ((((((((v0*32) + v1) + v2)*8) + v3) + -32) % 16) >= (((((((v0*32) + v1) + v2)*8) + v3) + -32) % 16))) && (((v4*8) + v5) <= ((v4*8) + v5))) && (((v4*8) + v5) >= ((v4*8) + v5))) && (((v6*4) + 0) <= ((v6*4) + 0))) && (((v6*4) + 3) >= ((v6*4) + ((4 + 0) - 1))));1;225;;;;;
 (((((v0*2) + v1)*2) + ((v2*63) + v3)) == ((((v0*2) + v1)*2) + ((v2*63) + v3)));1;54;;;;;
 (((((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37))*4) + 682)/338) == ((((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37))*4) + 682)/338));1;300;;;;;
 ((((v0*64) + 3544)/728) != 0);0;426;;;;;
 (max(min((((v0 + v1) + 17)/2) - (v1/2), v2 + 5) + 120, v3) == max(min((((v0 + v1) + 17)/2) - (v1/2), v2 + 5) + 120, v3));1;86;;;;;
 (((((((uint1)1 && ((-4 + v0) <= (-4 + v0))) && ((((6 + -4) - 1) + v0) >= (((6 + -4) - 1) + v0))) && ((0 + ((v1/32) + -4)) <= ((0 + (v1/32)) + -4))) && ((3 + (((v1/32) + (((v2 + -1)/4)*4)) + 1)) >= ((((4 + 0) - 1) + ((v1/32) + (((v2 + -1)/4)*4))) + ((6 + -4) - 1)))) && (v3 <= v3)) && (v3 >= v3));1;193;;;;;
 (max(min(max(((v0 - ((v1*32) + v2)) + 43)/4, 0), v3 + 8), min(((min((v4 + v0) + 8, v5) - v2)/4) + (v1*-8), v3) + 8) == max(min(max(((v0 - ((v1*32) + v2)) + 43)/4, 0), v3 + 8), min(((min((v4 + v0) + 8, v5) - v2)/4) + (v1*-8), v3) + 8));1;135;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 63) == min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 63));1;63;;;;;
 ((((min(((v0*2) + v1)*64, 186)*8) + v2) + 506) == (((min(((v0*2) + v1)*64, 186)*8) + v2) + 506));1;81;;;;;
 (((v0*8) + (v1*17)) == ((v0*8) + (v1*17)));1;43;;;;;
 ((min(v0*512, 505) + (min(v1*1000, v2 + -1000) + v3)) == (min(v0*512, 505) + (min(v1*1000, v2 + -1000) + v3)));1;55;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 18)/17) == ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 18)/17));1;128;;;;;
 (((((v0 % ((v1/32) + 1))*-32)/16)*16) == ((v0 % ((v1/32) + 1))*-32));1;83;;;;;
 (min(max((152 - ((v0/125)*64))/122, 0), ((v1*64) + 193)/122) == min(max((152 - ((v0/125)*64))/122, 0), ((v1*64) + 193)/122));1;88;;;;;
 ((((max(((v0 + v1) + 7)/8, 249) - min(v1/8, 0))/126) + 1) == (((max(((v0 + v1) + 7)/8, 249) - min(v1/8, 0))/126) + 1));1;163;;;;;
 ((v0 - (((v1*64) + ((v2*8) + v3))*4)) == (v0 - (((v1*64) + ((v2*8) + v3))*4)));1;47;;;;;
 (((v0 + 512)/503) != 0);0;340;;;;;
 ((((v0*8) + 35)/23) != 0);0;422;;;;;
 ((v0 + -28) == (((v0 + -28) + 8) - 1));0;33;;;;;
 (min(v0*8, (((v1*2) + v2)*4) + -57) == min(v0*8, (((v1*2) + v2)*4) + -57));1;52;;;;;
 ((((((((v0 + v1) + 47)/8) - (v1/8))*8) + 819)/716) == (((((((v0 + v1) + 47)/8) - (v1/8))*8) + 819)/716));1;78;;;;;
 (((v0*32) + (((v1*64) - min((((min(v2 - v3, (v1*64) + 54) + 13)/4)*4) + v3, min(((v1*64) + v3) + 54, v2) + 10)) + v3)) == ((v0*32) + (((v1*64) - min((((min(v2 - v3, (v1*64) + 54) + 13)/4)*4) + v3, min(((v1*64) + v3) + 54, v2) + 10)) + v3)));1;110;;;;;
 (((min(v0 + 19, v1)*-8) + ((((v2*3) + v3)*4) + ((v0*8) + (v4*84)))) == ((min(v0 + 19, v1)*-8) + ((((v2*3) + v3)*4) + ((v0*8) + (v4*84)))));1;84;;;;;
 ((min((v0/32)*32, 36) + (v1*131)) == (min((v0/32)*32, 36) + (v1*131)));1;48;;;;;
 (min((max(min((v0/8)*8, 2082), 83) + (v1*4)) + 1, v2) == min((max(min((v0/8)*8, 2082), 83) + (v1*4)) + 1, v2));1;80;;;;;
 (max((v0 + 36)/8, ((v0 + 68)/64)*8) == max((v0 + 36)/8, ((v0 + 68)/64)*8));1;47;;;;;
 (((min(v0, 127) + 15)/4) == ((min(v0, 127) + 15)/4));1;86;;;;;
 (((v0*8) + (((((min((v1*-16) + (max(v2, 0) - v0), 15)*8) + 11)/12)*12) + (v1*128))) == ((v0*8) + (((((min((v1*-16) + (max(v2, 0) - v0), 15)*8) + 11)/12)*12) + (v1*128))));1;90;;;;;
 (((v0*34) + (max(min(v1/2, 999), 0) + (v2*64))) == ((v0*34) + (max(min(v1/2, 999), 0) + (v2*64))));1;68;;;;;
 ((((v0 - v1) + 96)/65) != 0);0;465;;;;;
 (((v0*8) + (min((v1*128) + 111, v2) + v3)) == ((v0*8) + (min((v1*128) + 111, v2) + v3)));1;868;;;;;
 (((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - ((v2/4)*63)) - max(min((v1/63)*8, 258), 9)) == ((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - ((v2/4)*63)) - max(min((v1/63)*8, 258), 9)));1;111;;;;;
 (min(min(((v0 + v1) + 15)/4, v2 + 251)*4, (((v3*64) + v2)*4) + 245) == min(min(((v0 + v1) + 15)/4, v2 + 251)*4, (((v3*64) + v2)*4) + 245));1;67;;;;;
 (min((v0*42) + v1, v2 + 102) == min((v0*42) + v1, v2 + 102));1;50;;;;;
 (((((((v0 + v1) + 249)/250) - (v1/250)) + 6)/5) == ((((((v0 + v1) + 249)/250) - (v1/250)) + 6)/5));1;74;;;;;
 (min(max(((v0 + -1)/4) - (v1*2), -1), ((v2 - v1)*2) + 1) == min(max(((v0 + -1)/4) - (v1*2), -1), ((v2 - v1)*2) + 1));1;88;;;;;
 (min(max(max(v0 + 31, v1)/32, 0), (v1/32) + v2) == min(max(max(v0 + 31, v1)/32, 0), (v1/32) + v2));1;81;;;;;
 (((v0 + v1) + -3) >= (((v0 - 1) + v1) + 1));0;66;;;;;
 (min((v0*4) + (max(v1*16, -2) + (v2*4)), (((v1*4) + v2)*4) + 12) == min((v0*4) + (max(v1*16, -2) + (v2*4)), (((v1*4) + v2)*4) + 12));1;93;;;;;
 (((v0*64) + (((((min((min(v0*64, 936) + v1) + 64, (v2*-1000) + (v3 + v1)) - (v0*64)) - v1)/12)*12) + (v2*1000))) == ((v0*64) + (((((min((min(v0*64, 936) + v1) + 64, (v2*-1000) + (v3 + v1)) - (v0*64)) - v1)/12)*12) + (v2*1000))));1;109;;;;;
 (((v0*64) + (min(v1*128, 127) + v2)) == ((v0*64) + (min(v1*128, 127) + v2)));1;41;;;;;
 (((v0*4) + (max(min(v1 + v2, 1937), -62) + (v3*4))) == ((v0*4) + (max(min(v1 + v2, 1937), -62) + (v3*4))));1;90;;;;;
 (((v0*125) + ((v1*500) + v2)) == ((v0*125) + ((v1*500) + v2)));1;58;;;;;
 (min(max(min(v0, 999), 0) + 128, v1) == min(max(min(v0, 999), 0) + 128, v1));1;52;;;;;
 ((max(min((v0 + v1)/16, 90), -34) - (max(min((v0 + v1)/16, 126), 2) + (((v2*3) + v3)*4))) == (max(min((v0 + v1)/16, 90), -34) - (max(min((v0 + v1)/16, 126), 2) + (((v2*3) + v3)*4))));1;101;;;;;
 (min(min(v0 + 60, v1), ((v2*8) + v0) + 2) == min(min(v0 + 60, v1), ((v2*8) + v0) + 2));1;58;;;;;
 ((v0 + 2) <= (((v0 - 1) + -2) - 1));0;41;;;;;
 ((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - ((v2*3) + v3)) == (max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - ((v2*3) + v3)));1;100;;;;;
 ((((-1000 - ((min(v0*1000, v1 + -1000) + v2) % 8))/8) + (((v3*2) + v4)*4)) == (((-1000 - ((min(v0*1000, v1 + -1000) + v2) % 8))/8) + (((v3*2) + v4)*4)));1;74;;;;;
 (((((((uint1)1 && (((v0*2) + v1) <= (((v0*2) + 0) + v1))) && ((((v0*2) + v1) + 1) >= (((v0*2) + ((2 + 0) - 1)) + v1))) && ((((v2*5) + v3) + v4) <= (((v2*5) + v3) + v4))) && ((((v2*5) + v3) + v4) >= (((v2*5) + v3) + v4))) && ((((((v5 % 2)*53) + 0)*4) + 0) <= ((v5 % 2)*212))) && ((((((v5 % 2)*53) + 52)*4) + 3) >= (((v5 % 2)*212) + 211)));1;237;;;;;
 (((min(((((v0 + v1) + 124)/125)*16) - (v2*139), ((v1/125)*16) + 117)*-2) + (((((v1/125)*2) + v3)*16) + ((v4*8) + v5))) == ((min(((((v0 + v1) + 124)/125)*16) - (v2*139), ((v1/125)*16) + 117)*-2) + (((((v1/125)*2) + v3)*16) + ((v4*8) + v5))));1;116;;;;;
 (((((v0 + v1) + 39)/32) - (v2*12)) == ((((v0 + v1) + 39)/32) - (v2*12)));1;56;;;;;
 (((((v0*3) + v1)*8) + -56) == ((((((v0*3) + v1)*8) + -56) + 20) - 1));0;65;;;;;
 (min(v0*8, v1 + 16) == min(v0*8, v1 + 16));1;68;;;;;
 (((v0 + 263)/256) != 0);0;338;;;;;
 (min(min(((v0 + v1) + 3)/4, v2 + 250)*4, (((v3*127) + v2)*4) + 497) == min(min(((v0 + v1) + 3)/4, v2 + 250)*4, (((v3*127) + v2)*4) + 497));1;78;;;;;
 (((v0 + 26)/19) != 0);0;364;;;;;
 (min(max(((v0 - (max(min((v1/63)*8, 285), 36)*8)) + 1304)/1004, 0), ((v2*8) + 1005)/1004) == min(max(((v0 - (max(min((v1/63)*8, 285), 36)*8)) + 1304)/1004, 0), ((v2*8) + 1005)/1004));1;140;;;;;
 (((v0*126) + (max(min(v1/2, 999), 0) + (((v2*32) + v3)*2))) == ((v0*126) + (max(min(v1/2, 999), 0) + (((v2*32) + v3)*2))));1;75;;;;;
 (min(((((v0*4) + v1)*2) + v2)*4, (min(max(v3, 249) + 8, min(v4, 0) + (min(v0*4, 23) + (v5*16)))*8) + 32) == min(((((v0*4) + v1)*2) + v2)*4, (min(max(v3, 249) + 8, min(v4, 0) + (min(v0*4, 23) + (v5*16)))*8) + 32));1;112;;;;;
 (min((v0/2) + ((((((min((v0/2) + (((min((v1*64) + 63, v2) + 10)/4)*4), min(((v3 + v0) + 1)/2, ((v0/2) + (v1*64)) + 63) + 7) - (v1*64)) - (v0/2)) + 18)/15)*15) + (v1*64)), v4 + 4) == min((v0/2) + ((((((min((v0/2) + (((min((v1*64) + 63, v2) + 10)/4)*4), min(((v3 + v0) + 1)/2, ((v0/2) + (v1*64)) + 63) + 7) - (v1*64)) - (v0/2)) + 18)/15)*15) + (v1*64)), v4 + 4));1;159;;;;;
 ((0 - max(v0, 1)) >= (((0 - max(v0, 1)) + (max(v0, 1) + 2)) - 1));0;69;;;;;
 (max(min(max(((v0 - (min(v1/2, 2)*2)) + 7)/4, 0), (v2/2) + 2), min(min((min(v3 + v0, min(max((v1/2) + v4, 999)*2, (v3 + v0) + 1) + 2) - (min(v1/2, 2)*2))/4, ((max((v1/2) + v4, 999) - min(v1/2, 2)) + 1)/2), (v2/2) + 1) + 1) == max(min(max(((v0 - (min(v1/2, 2)*2)) + 7)/4, 0), (v2/2) + 2), min(min((min(v3 + v0, min(max((v1/2) + v4, 999)*2, (v3 + v0) + 1) + 2) - (min(v1/2, 2)*2))/4, ((max((v1/2) + v4, 999) - min(v1/2, 2)) + 1)/2), (v2/2) + 1) + 1));1;243;;;;;
 ((max((((v0 + v1) + 7)/8)*8, 1994) - (v2*126)) == (max((((v0 + v1) + 7)/8)*8, 1994) - (v2*126)));1;70;;;;;
 (((v0*8) + ((max(min((v1 + v2)/63, 31), 0)*16) + v3)) == ((v0*8) + ((max(min((v1 + v2)/63, 31), 0)*16) + v3)));1;93;;;;;
 ((((max(((v0 + v1) + 3)/4, 499) - min(v1/4, 0))/64) + 1) == (((max(((v0 + v1) + 3)/4, 499) - min(v1/4, 0))/64) + 1));1;103;;;;;
 ((max(min((v0/16)*32, 4044), 45) + (v1*1991)) == (max(min((v0/16)*32, 4044), 45) + (v1*1991)));1;74;;;;;
 (min(((v0 + v1) + 1)/2, (min((v2*128) + ((v1/2) + (v3*253)), (min(v3*253, 252) + (v1/2)) + 128) + (v4*501)) + 120) == min(((v0 + v1) + 1)/2, (min((v2*128) + ((v1/2) + (v3*253)), (min(v3*253, 252) + (v1/2)) + 128) + (v4*501)) + 120));1;92;;;;;
 ((((((v0 + v1) + 7)/8)*8) - ((v2*12) + v3)) == (((((v0 + v1) + 7)/8)*8) - ((v2*12) + v3)));1;50;;;;;
 ((max(min(((v0 + v1) + 255)/32, 62), 0) - (v2*5)) == (max(min(((v0 + v1) + 255)/32, 62), 0) - (v2*5)));1;60;;;;;
 (((v0*8) + -24) == ((((v0*8) + -24) + (((v1 - v0)*8) + 6)) - 1));0;60;;;;;
 (((v0*4) - (((v1 + v2) + 188)/63)) == ((v0*4) - (((v1 + v2) + 188)/63)));1;41;;;;;
 ((min(v0*2, 253) + v1) == (min(v0*2, 253) + v1));1;46;;;;;
 (min(1 - ((v0*4000) + (((min((v1 + v2) - (v3*1000), ((v4*250) + ((v0*500) + v2)) + 250) + (v4*-250))*-8) + ((((v5*16) + v6)*4) + ((v7*1004) + (v2*8))))), 1003 - (((v5*16) + v6)*4)) == min(1 - ((v0*4000) + (((min((v1 + v2) - (v3*1000), ((v4*250) + ((v0*500) + v2)) + 250) + (v4*-250))*-8) + ((((v5*16) + v6)*4) + ((v7*1004) + (v2*8))))), 1003 - (((v5*16) + v6)*4)));1;162;;;;;
 ((v0 - (((v1*4) + ((v2*2) + v3))*4)) == (v0 - (((v1*4) + ((v2*2) + v3))*4)));1;27;;;;;
 (min(((v0 + v1) + 5)/2, ((v1/2) + (v2*252)) + 246) == min(((v0 + v1) + 5)/2, ((v1/2) + (v2*252)) + 246));1;76;;;;;
 (((v0*30) + (max(min(v1, 288), 39) - max(min(v1, 204), -45))) == ((v0*30) + (max(min(v1, 288), 39) - max(min(v1, 204), -45))));1;155;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 5)/2) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 5)/2));1;268;;;;;
 ((v0*149) == (((v0*149) + 149) - 1));0;30;;;;;
 ((v0 + -1) == (((v0 + -1) + 2) - 1));0;21;;;;;
 (min(((v0 + v1) + 7)/4, ((v1/4) + ((v2/32)*32)) + 31) == min(((v0 + v1) + 7)/4, ((v1/4) + ((v2/32)*32)) + 31));1;69;;;;;
 (min(max(max(((v0*126) + v1) + -11, v2), v3 + v2), (min(v4, 120) + ((v0*126) + v1)) + 7) == min(max(max(((v0*126) + v1) + -11, v2), v3 + v2), (min(v4, 120) + ((v0*126) + v1)) + 7));1;91;;;;;
 (((v0 + v1) - min(v1 + v2, 2007)) == ((v0 + v1) - min(v1 + v2, 2007)));1;60;;;;;
 (((((((v0 + v1) + -1)/500) - (v1/500))*2) + 3) == ((((((v0 + v1) + -1)/500) - (v1/500))*2) + 3));1;163;;;;;
 ((((v0/250)*32) + (((((min(((v1/5)*-13) + (v2*4), 7)*8) + 53)/55)*55) + ((v1/5)*104))) == (((v0/250)*32) + (((((min(((v1/5)*-13) + (v2*4), 7)*8) + 53)/55)*55) + ((v1/5)*104))));1;96;;;;;
 ((((v0*244)/4)*4) == (v0*244));1;42;;;;;
 ((max(min((v0 + v1)/2, 1006), 7) + (v2*15)) == (max(min((v0 + v1)/2, 1006), 7) + (v2*15)));1;643;;;;;
 (((v0*2) + (v1 - v2)) == ((v0*2) + (v1 - v2)));1;73;;;;;
 ((max(min((v0/63)*8, 285), 36) + (v1*84)) == (max(min((v0/63)*8, 285), 36) + (v1*84)));1;80;;;;;
 (min(((((v0 + v1) + -1)/8) - (v1/8)) + -31, v2) == min(((((v0 + v1) + -1)/8) - (v1/8)) + -31, v2));1;75;;;;;
 (((((((v0 + v1) + 1999)/2000) - (v1/2000))*4) + 8) == ((((((v0 + v1) + 1999)/2000) - (v1/2000))*4) + 8));1;76;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 57)/16) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 57)/16));1;1268;;;;;
 (((((((v0 + v1) + 127)/32)*4) - (v2*19)) - ((v1/32)*4)) == ((((((v0 + v1) + 127)/32)*4) - (v2*19)) - ((v1/32)*4)));1;84;;;;;
 ((max(min(v0, 1999), 9) + (((v1 + 11)/4)*4)) == (max(min(v0, 1999), 9) + (((v1 + 11)/4)*4)));1;53;;;;;
 (max(-792 - (v0*64), (v0*64) + 95) >= 0);0;504;;;;;
 ((max(min(v0 + v1, 2000), 1) - (v2*125)) == (max(min(v0 + v1, 2000), 1) - (v2*125)));1;65;;;;;
 (((((((v0 + v1) + 188)/63) - (v1/63)) + 25)/20) == ((((((v0 + v1) + 188)/63) - (v1/63)) + 25)/20));1;86;;;;;
 ((max(min(v0, 7), -6) + -9) >= (((max(min(v0, 7), -6) + -9) + (11 - max(min(v0, 7), -6))) - 1));0;80;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*2) - (((max(min(v1/8, 249), 0)/8)*2) + v2)) == (((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*2) - (((max(min(v1/8, 249), 0)/8)*2) + v2)));1;96;;;;;
 (((v0*140) + ((v1/63)*8)) == ((v0*140) + ((v1/63)*8)));1;53;;;;;
 ((((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 1012)/1004) == (((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 1012)/1004));1;83;;;;;
 (min(max(min(((v0*16) + v1)*8, 2012), 13) + -16, v2) == min(max(min(((v0*16) + v1)*8, 2012), 13) + -16, v2));1;102;;;;;
 (min(((v0 + v1) + 13)/2, ((v1/2) + (v2*64)) + 55) == min(((v0 + v1) + 13)/2, ((v1/2) + (v2*64)) + 55));1;46;;;;;
 (max(-920 - (v0*64), (v0*64) + 193) >= 0);0;580;;;;;
 (((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((((0*2) + v2)*2) + -6) + 0) <= (-6 + (v2*2)))) && ((((((8*2) + v2)*2) + ((11 + -6) - 1)) + 3) >= (((11 + -6) - 1) + ((v2*2) + 35)))) && (((v3*15) + v4) <= ((v3*15) + v4))) && (((v3*15) + v4) >= ((v3*15) + v4)));1;195;;;;;
 (((v0 + v1) + -5) >= ((((v0 - 1) + v1) + 4) + 1));0;81;;;;;
 ((min(((v0 + v1) + -225)/32, (v1/32) + (v2*8)) + (v3*2)) == (min(((v0 + v1) + -225)/32, (v1/32) + (v2*8)) + (v3*2)));1;79;;;;;
 ((max(min(v0, 1053), 54) + (v1*4)) == (max(min(v0, 1053), 54) + (v1*4)));1;28;;;;;
 ((((v0 - ((v1*8) + v2)) + 3)/4) == (((v0 - ((v1*8) + v2)) + 3)/4));1;46;;;;;
 (max(max(min((v0*32) + (max(min(v1/8, 249), 0) - max(min(((v2 + v1) + -1)/8, 249), 0)), 0), -31) + min(max(min(((v2 + v1) + -1)/8, 249), 0), (max(min(v1/8, 249), 0) + (v0*32)) + 31), max(min(v1/8, 249), 0) + (v0*32)) == max(max(min((v0*32) + (max(min(v1/8, 249), 0) - max(min(((v2 + v1) + -1)/8, 249), 0)), 0), -31) + min(max(min(((v2 + v1) + -1)/8, 249), 0), (max(min(v1/8, 249), 0) + (v0*32)) + 31), max(min(v1/8, 249), 0) + (v0*32)));1;352;;;;;
 ((((min(v0 + 19, v1)*8) - (v2*82)) - (v0*8)) == (((min(v0 + 19, v1)*8) - (v2*82)) - (v0*8)));1;56;;;;;
 ((max(min(v0/8, 256), 7) + (v1*32)) == (max(min(v0/8, 256), 7) + (v1*32)));1;44;;;;;
 (((((v0 % (((v1*64) + 433)/272))*-68)/17)*17) == ((v0 % (((v1*64) + 433)/272))*-68));1;60;;;;;
 (max(min(0 - min(v0/512, 0), (v1/64) + 1), (min(((((v2 + v0) + 7)/8) - (v0/8)) + -63, v1)/64) + 1) == max(min(0 - min(v0/512, 0), (v1/64) + 1), (min(((((v2 + v0) + 7)/8) - (v0/8)) + -63, v1)/64) + 1));1;133;;;;;
 (((min(v0 - v1, 104) + 13)/2) == ((min(v0 - v1, 104) + 13)/2));1;66;;;;;
 (((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1))*32) + 444)/20) == ((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1))*32) + 444)/20));1;290;;;;;
 (((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((((v1*8) + v2) + v3) <= (((v1*8) + v2) + v3))) && ((((v1*8) + v2) + v3) >= (((v1*8) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4));1;127;;;;;
 (((((v0 % (((v1*32) + 723)/300))*-300)/4)*4) == ((v0 % (((v1*32) + 723)/300))*-300));1;52;;;;;
 ((((v0 + v1)/4) + (v2*64)) == (((v0 + v1)/4) + (v2*64)));1;45;;;;;
 (max(min((v2 + v3) + -1, ((v4*2) + ((min(((((v5 + v6) + -1)/2) - (v7*504)) - (v6/2), 503)*2) + 2)) - 1) + 1, min(max(v3, v4*2), ((min(((((v5 + v6) + -1)/2) - (v7*504)) - (v6/2), 503)*2) + 2) + (v4*2))) <= min(max(v3, v4*2), ((min(((((v5 + v6) + -1)/2) - (v7*504)) - (v6/2), 503)*2) + 2) + (v4*2)));0;2603;;;;;
 (min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65) == min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65));1;206;;;;;
 ((max((v0 - v1)/4, -8) + 8) >= (((max((v0 - v1)/4, -8) + 8) + (((((v0 - v1) + 35)/4) - max((v0 - v1)/4, -8)) + -8)) - 1));1;188;;;;;
 (min(v0*8, ((v1/63)*8) + (min(min(((((v2 + v1) + -1)/63) + (v3*-12)) - (v1/63), 11)*8, 38) + (((min((((v2 + v1) + -1)/63) - (v1/63), (v3*12) + 11) + 1)/6)*48))) == min(v0*8, ((v1/63)*8) + (min(min(((((v2 + v1) + -1)/63) + (v3*-12)) - (v1/63), 11)*8, 38) + (((min((((v2 + v1) + -1)/63) - (v1/63), (v3*12) + 11) + 1)/6)*48))));1;156;;;;;
 ((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 15)/4) == (((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 15)/4));1;301;;;;;
 (max(-1117 - (v0*32), (v0*32) + 82) >= 0);0;510;;;;;
 (max(0, min(63 - (max(min(min(max(min(min(v0*12, 11) + v1, 31), 0) + (v2*2), max(min(min(v0*12, 11) + v1, 20), -11) + 12), 31), 30)*2), (0 + ((max(min(v3, 31), 30)*-2) + 64)) - 1) + 1) <= 0);0;197;;;;;
 ((((max((v0*-4) + ((v1 + v2)/2), ((v1 + v2) + 1)/2)*-2)/2)*2) == (max((v0*-4) + ((v1 + v2)/2), ((v1 + v2) + 1)/2)*-2));1;85;;;;;
 ((((((((v0 + v1) + -1)/8) - (v1/8))*8) + 678)/668) == (((((((v0 + v1) + -1)/8) - (v1/8))*8) + 678)/668));1;69;;;;;
 (min(((((v0 - v1) + 9)/4)*4) + v1, v0 + 6) == min(((((v0 - v1) + 9)/4)*4) + v1, v0 + 6));1;69;;;;;
 (min(max((v0/63)*8, 61), (((v0/63) + v1)*8) + 121) == min(max((v0/63)*8, 61), (((v0/63) + v1)*8) + 121));1;53;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 108)/92) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 108)/92));1;241;;;;;
 ((((v0*32) + (v1 + v2)) + -4) == (((((v0*32) + (v1 + v2)) + -4) + (510 - max(v0*32, 471))) - 1));0;97;;;;;
 ((((max(v0, 0) - v1)/20) + 1) != 0);0;500;;;;;
 (((v0*4004) + ((v1*8000) + (min(v2*2004, 2000) + (v3*8)))) == ((v0*4004) + ((v1*8000) + (min(v2*2004, 2000) + (v3*8)))));1;82;;;;;
 ((((((v0 + v1)*4) + v2)*2) + -10) == (((((((v0 + v1)*4) + v2)*2) + -10) + 2) - 1));0;75;;;;;
 (min((v0*16) + v1, v2 + 106) == min((v0*16) + v1, v2 + 106));1;55;;;;;
 ((max(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 3, min(v0*128, v2 + -128) + v1) - (min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -1, (v0*128) + v1), (v2 + v1) + -128) + (v3*65))) == (max(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 3, min(v0*128, v2 + -128) + v1) - (min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -1, (v0*128) + v1), (v2 + v1) + -128) + (v3*65))));1;190;;;;;
 (min(((v0*32) + v1) + -2, v2) == min(((v0*32) + v1) + -2, v2));1;40;;;;;
 ((((v0/65)*8) + -9) == (((((v0/65)*8) + -9) + ((v1*8) + 20)) - 1));0;83;;;;;
 (min(max(min(v0, 1001), 2) + 32, v1) == min(max(min(v0, 1001), 2) + 32, v1));1;44;;;;;
 (((v0 + 87)/32) != 0);0;342;;;;;
 (min(max(((v0 - ((v1*64) + v2)) + 17)/4, (((v0 - v2)/4) + (v1*-16)) + 5), v3 + 5) == min(max(((v0 - ((v1*64) + v2)) + 17)/4, (((v0 - v2)/4) + (v1*-16)) + 5), v3 + 5));1;105;;;;;
 (((((v0 - v1)*8) + 1052)/756) != 0);0;572;;;;;
 (min(v0 + 53, v1) == min(v0 + 53, v1));1;54;;;;;
 ((((max(min(v0/8, 256), 7) + v1)*8) + ((v2*3) + v3)) == (((max(min(v0/8, 256), 7) + v1)*8) + ((v2*3) + v3)));1;102;;;;;
 (((((((uint1)1 && (((min(v0*24, 104) + (v1*8)) + v2) <= (0 + ((min(v0*24, 104) + (v1*8)) + v2)))) && ((((min(v0*24, 104) + (v1*8)) + v2) + 7) >= (3 + (((min(v0*24, 104) + (v1*8)) + v2) + 4)))) && ((0 + ((v3*126) + v4)) <= ((v3*126) + v4))) && ((3 + (((v3*126) + v4) + 122)) >= (((v3*126) + v4) + 125))) && (0 <= 0)) && (2 >= 2));1;202;;;;;
 ((min(max(v0*8, 995), (min((v1/16)*8, 4) + (v2*508)) + 375) + (v3*28)) == (min(max(v0*8, 995), (min((v1/16)*8, 4) + (v2*508)) + 375) + (v3*28)));1;116;;;;;
 (min(((v0*12) + v1) + 12, v2) == min(((v0*12) + v1) + 12, v2));1;38;;;;;
 ((max(min(v0/8, 254), 5) + (v1*4)) == (max(min(v0/8, 254), 5) + (v1*4)));1;74;;;;;
 (min(max(max(((v0 - v1) + 3)/4, min(min(((-159 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min(v2*8, (v3 + v0) + 158) - v1) + -159)/4) + 1), 0), v4) == min(max(max(((v0 - v1) + 3)/4, min(min(((-159 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min(v2*8, (v3 + v0) + 158) - v1) + -159)/4) + 1), 0), v4));1;197;;;;;
 (min(v0*2, v1 + 23) == min(v0*2, v1 + 23));1;32;;;;;
 ((min(max(v0, -2)*2, -3) + 2) == (((min(max(v0, -2)*2, -3) + 2) + (0 - min(max(v0, -2)*2, -3))) - 1));0;125;;;;;
 ((((v0/8)*4) - ((v1*4) + v2)) == (((v0/8)*4) - ((v1*4) + v2)));1;53;;;;;
 (((((v0*16) + v1)*2) + -33) == ((((((v0*16) + v1)*2) + -33) + ((min(v2 - v1, 1)*2) + 30)) - 1));0;143;;;;;
 ((min((((v0 + v1) + 7)/8) - (v2*128), (v1/8) + 127) - ((v1/8) + (v3*4))) == (min((((v0 + v1) + 7)/8) - (v2*128), (v1/8) + 127) - ((v1/8) + (v3*4))));1;68;;;;;
 (max(min(22 - (v0*12), (0 + 12) - 1) + 1, min(max(0 - (v0*12), 0), 12 + 0)) <= min(max(0 - (v0*12), 0), 12 + 0));0;824;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*2) - ((v2*2) + v3)) == (((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*2) - ((v2*2) + v3)));1;68;;;;;
 (((v0*12) + (max(min((v1/500)*8, 36), 5)*8)) == ((v0*12) + (max(min((v1/500)*8, 36), 5)*8)));1;80;;;;;
 ((max(((((v0*125) + v1) + ((v2*63) + v3))*2) - max(((v2*63) + ((v0*125) + v1))*2, ((((v2*63) + v3) + ((v0*125) + v1))*2) + 1), 0) + 3) <= 1024);0;1858;;;;;
 (max(min((v0 + 15)/16, 125), min(min(((v1 + v0) + -1)/16, (((22 - (v1 + v0))/4)*-1)/4), 123) + 1) == max(min((v0 + 15)/16, 125), min(min(((v1 + v0) + -1)/16, (((22 - (v1 + v0))/4)*-1)/4), 123) + 1));1;124;;;;;
 (min(((v0/63) + (((v1 + 18)/17)*17))*8, ((((v2 + v0) + 62)/63)*8) + 9) == min(((v0/63) + (((v1 + 18)/17)*17))*8, ((((v2 + v0) + 62)/63)*8) + 9));1;78;;;;;
 (((((((uint1)1 && ((((((((v0/2000)*16) + 0)*16) + 0) + 0) + -235) <= (((((((v0/2000)*16) + 0)*16) + 0) + 0) + -235))) && ((((((((v0/2000)*16) + ((v1*16) + 32))*16) + ((5 + 0) - 1)) + 15) + -235) >= (((((((v0/2000)*16) + ((v1*16) + 32))*16) + ((16 + 0) - 1)) + ((5 + 0) - 1)) + -235))) && ((((v2 + v3) + 0) + -43) <= (((v2 + v3) + 0) + -43))) && ((((v2 + v3) + ((5 + 0) - 1)) + -43) >= (((v2 + v3) + ((5 + 0) - 1)) + -43))) && (v4 <= v4)) && (v4 >= v4));1;333;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2 + 1) == min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2 + 1));1;218;;;;;
 (min(((v0 + v1) + 3)/4, ((v1/4) + (v2*64)) + 63) == min(((v0 + v1) + 3)/4, ((v1/4) + (v2*64)) + 63));1;54;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), max(min(v1/2, 999), 0) + 499) == min(max(min(((v0 + v1) + -1)/2, 999), 0), max(min(v1/2, 999), 0) + 499));1;81;;;;;
 (-4 == ((-4 + (254 - max(min(v0*8, 254), 244))) - 1));0;66;;;;;
 ((((max(min(v0 + v1, 1999), 0)/16)*4) - ((v2*4) + ((v3*16) + v4))) == (((max(min(v0 + v1, 1999), 0)/16)*4) - ((v2*4) + ((v3*16) + v4))));1;79;;;;;
 (((((((uint1)1 && ((((((v0*8) + 0)*4) + v1) + 0) <= ((v0*32) + v1))) && ((((((v0*8) + 7)*4) + v1) + 3) >= (((v0*32) + 31) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4));1;158;;;;;
 (max((v0/2) + ((v1*64) - (((v2 + v0) + 9)/2)), v3) == max((v0/2) + ((v1*64) - (((v2 + v0) + 9)/2)), v3));1;71;;;;;
 (((v0 + v1) + -3) >= ((((v0 - 1) + v1) + 2) + 1));0;100;;;;;
 ((v0 - ((v1*4) + ((v2*8) + v3))) == (v0 - ((v1*4) + ((v2*8) + v3))));1;26;;;;;
 (((v0*16) + (max(min((v1*85) + v2, 1499), 500) - max(min((v1*85) + v2, 1415), 416))) == ((v0*16) + (max(min((v1*85) + v2, 1499), 500) - max(min((v1*85) + v2, 1415), 416))));1;228;;;;;
 (min((((v0 + v1) + 7)/8) - ((v2*32) + v3), 125 - (v2*32)) == min((((v0 + v1) + 7)/8) - ((v2*32) + v3), 125 - (v2*32)));1;77;;;;;
 (max((v0 + v1) + 17, v2) == max((v0 + v1) + 17, v2));1;40;;;;;
 ((min(max(v0*8, 995), (min((v1/16)*8, 4) + (v2*508)) + 375) + (v3*28)) == (min(max(v0*8, 995), (min((v1/16)*8, 4) + (v2*508)) + 375) + (v3*28)));1;100;;;;;
 (min(((v0*33) + v1) + 26, v2) == min(((v0*33) + v1) + 26, v2));1;51;;;;;
 ((v0 - ((v1/6)*251)) == (v0 - ((v1/6)*251)));1;42;;;;;
 ((min(max(v0*64, -10) + (v1*16), (v0*64) + 48) + min(max((((v2 + v3) + 15)/16)*8, 995), (min((v3/16)*8, 4) + (v4*128)) + 119)) == (min(max(v0*64, -10) + (v1*16), (v0*64) + 48) + min(max((((v2 + v3) + 15)/16)*8, 995), (min((v3/16)*8, 4) + (v4*128)) + 119)));1;122;;;;;
 ((((max(min(((v0 + v1) + 71)/8, 249), 0) - max(min(v1/8, 254), 5)) + 9)/4) == (((max(min(((v0 + v1) + 71)/8, 249), 0) - max(min(v1/8, 254), 5)) + 9)/4));1;414;;;;;
 ((v0 + -509) >= (((v0 + -509) + (min(min((min(((v1 - (v2*4)) - (v3*24)) + 65, v4)*8) - ((v4*8) + (v5*17)), -16) + v6, -33) + 34)) - 1));1;239;;;;;
 (min((v0*4) + v1, v2 + -839) == min((v0*4) + v1, v2 + -839));1;41;;;;;
 (((max(min(v0/2, 999), 0)*2) + ((v1*36) - min((min(max(min(((v2 + v0) + -1)/2, 999), 0) - (v3*64), max(min(v0/2, 999), 0) + 63) - (v4*34))*2, (min(v1*36, 32) + (max(min(v0/2, 999), 0)*2)) + 28))) == ((max(min(v0/2, 999), 0)*2) + ((v1*36) - min((min(max(min(((v2 + v0) + -1)/2, 999), 0) - (v3*64), max(min(v0/2, 999), 0) + 63) - (v4*34))*2, (min(v1*36, 32) + (max(min(v0/2, 999), 0)*2)) + 28))));1;206;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 556)/502) == ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 556)/502));1;331;;;;;
 ((((v0*36) - (((v1 + v2) + 7)/8)) + ((v2/8) + (v3*12))) == (((v0*36) - (((v1 + v2) + 7)/8)) + ((v2/8) + (v3*12))));1;69;;;;;
 (((v0*1004) + -6) == ((v0*1004) + -6));1;24;;;;;
 ((max(((v0 + v1) + 23)/8, 249) - v2) == (max(((v0 + v1) + 23)/8, 249) - v2));1;66;;;;;
 (((((((v0/32)*16) + v1)*2) + v2) + -36) < ((((((v0/32)*16) + v1)*2) + (v2 + 1)) + -36));1;108;;;;;
 (min(3 - (max(max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0)), -2)*2), (min((max(min(((v2 + v0) + 7)/8, 249), 0) - (v1*4)) - max(min(v0/8, 249), 0), 2)*2) + 4) == min(3 - (max(max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0)), -2)*2), (min((max(min(((v2 + v0) + 7)/8, 249), 0) - (v1*4)) - max(min(v0/8, 249), 0), 2)*2) + 4));1;193;;;;;
 (min(v0*2, ((max(min((v1 + v2)/2, 999), 0) + (((v0 - max(min((v1 + v2)/2, 999), 0))/2)*2))*2) + 3) == min(v0*2, ((max(min((v1 + v2)/2, 999), 0) + (((v0 - max(min((v1 + v2)/2, 999), 0))/2)*2))*2) + 3));1;115;;;;;
 (max(19 - max((v0 % 10)*2, 17), 18 - (max(v0 % 10, 8)*2)) == max(19 - max((v0 % 10)*2, 17), 18 - (max(v0 % 10, 8)*2)));1;75;;;;;
 (((v0 + 22)/8) != 0);0;384;;;;;
 (((((((uint1)1 && (((-7 + v0) + -294) <= (v0 + -301))) && (((132 + v0) + -294) >= (v0 + -162))) && ((((v1 + v2) + 0) + -294) <= ((v1 + v2) + -301))) && ((((v1 + v2) + 3) + -294) >= ((v1 + v2) + -294))) && (0 <= 0)) && (2 >= 2));0;166;;;;;
 (min(((((v0 + v1) + 1999)/2000) - (v1/2000))*256, (v2*256) + 399) == min(((((v0 + v1) + 1999)/2000) - (v1/2000))*256, (v2*256) + 399));1;86;;;;;
 ((((v0/63)*8) + (((((max(min(((v1/3)*-8) + v2, 5)*-1, ((v1/3)*8) + ((v0/63) - (((v3 + v0) + 314)/63)))*-8) + 28)/35)*35) + ((v1/3)*64))) == (((v0/63)*8) + (((((max(min(((v1/3)*-8) + v2, 5)*-1, ((v1/3)*8) + ((v0/63) - (((v3 + v0) + 314)/63)))*-8) + 28)/35)*35) + ((v1/3)*64))));1;143;;;;;
 (min(((v0*64) + v1) + 61, v2) == min(((v0*64) + v1) + 61, v2));1;54;;;;;
 (((v0*-8) + ((((v1 + v2) + 7)/8) - v3)) == ((v0*-8) + ((((v1 + v2) + 7)/8) - v3)));1;66;;;;;
 ((v0 + -9) == (((v0 + -9) + (-11 + 12)) - 1));1;33;;;;;
 (max(((max(v0, 0) - v1) + 1)/16, 0) >= ((max(((max(v0, 0) - v1) + 1)/16, 0) + ((((max(v0, 0) - v1)/16) - max(((max(v0, 0) - v1) + 1)/16, 0)) + 1)) - 1));1;180;;;;;
 ((((min(v0*143, 857)*4)/4)*4) == (min(v0*143, 857)*4));1;51;;;;;
 (((((v0 + v1) + 63)/32) - ((v1/32) + (v2*32))) == ((((v0 + v1) + 63)/32) - ((v1/32) + (v2*32))));1;60;;;;;
 ((((((v0 % (((max(v1, 0) - v2)/156) + 1))*1248) + (max(min((max(((v0 % (((max(v1, 0) - v2)/156) + 1))*156) + (v2 - max(v1, 0)), -79)*-8) + -116, (min(((v0 % (((max(v1, 0) - v2)/156) + 1))*-156) + (max(v1, 0) - v2), 79)*8) + 11)/124, -1)*124))/4)*4) == (((v0 % (((max(v1, 0) - v2)/156) + 1))*1248) + (max(min((max(((v0 % (((max(v1, 0) - v2)/156) + 1))*156) + (v2 - max(v1, 0)), -79)*-8) + -116, (min(((v0 % (((max(v1, 0) - v2)/156) + 1))*-156) + (max(v1, 0) - v2), 79)*8) + 11)/124, -1)*124)));1;298;;;;;
 ((v0 - ((v1/250)*4)) == (v0 - ((v1/250)*4)));1;29;;;;;
 (max(min(1999, ((min(v1*59, 117) + v2) + 59) - 1) + 1, min(max(0, min(v1*59, 117) + v2), 59 + (min(v1*59, 117) + v2))) <= min(max(0, min(v1*59, 117) + v2), 59 + (min(v1*59, 117) + v2)));0;1458;;;;;
 (((v0/126) + 1) != 0);0;304;;;;;
 ((((max(min(((((((v0 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 13)/4) == (((max(min(((((((v0 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 13)/4));1;330;;;;;
 (min((min(v0*17, 50) + v1) + 8, v2) == min((min(v0*17, 50) + v1) + 8, v2));1;61;;;;;
 (min(max(min(v0 + v1, 2000), 1), ((v2*4) + v3) + 4) == min(max(min(v0 + v1, 2000), 1), ((v2*4) + v3) + 4));1;70;;;;;
 (((v0/8) + ((v1/2)*32)) == ((v0/8) + ((v1/2)*32)));1;150;;;;;
 ((min(v0/8, 0) + (v1*126)) == (min(v0/8, 0) + (v1*126)));1;1003;;;;;
 ((((v0*2) + v1) - min(v1 + 260, v2)) == (((v0*2) + v1) - min(v1 + 260, v2)));1;49;;;;;
 (min(max(min(((v0 + v1) + 127)/8, 249), 0)*8, (max(min((v0 + v1)/8, 249), 0)*8) + -5) == min(max(min(((v0 + v1) + 127)/8, 249), 0)*8, (max(min((v0 + v1)/8, 249), 0)*8) + -5));1;103;;;;;
 (min((v0*8) + v1, ((((v2 + v3) + 249)/250)*32) + 46) == min((v0*8) + v1, ((((v2 + v3) + 249)/250)*32) + 46));1;86;;;;;
 ((max(max((v0 + 70)/8, min((v0 + 54)/8, (v0/8) + ((((v0 % 8) + 70)/24)*3)) + 2) - (v0/8), max(((min(v1*63, 937) + v0) + 70)/8, min(((min(v1*63, 937) + v0) + 54)/8, ((((v1*63) + v0) + 15)/8) + ((((((min(v1*63, 937) + v0) + 70)/8) - ((((v1*63) + v0) + 15)/8))/3)*3)) + 2) - ((min(v1*63, 937) + v0)/8)) + 1) <= 1024);0;4858;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 19)/2) - ((max(min((v1/4)*8, 4012), 13) + -19)/2))/16) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 19)/2) - ((max(min((v1/4)*8, 4012), 13) + -19)/2))/16) + 1));1;136;;;;;
 (((((v0 % (((v1*8) + 45)/36))*-36)/12)*12) == ((v0 % (((v1*8) + 45)/36))*-36));1;62;;;;;
 ((((v0 + -5)/4) + (v1*4)) == (((v0 + -5)/4) + (v1*4)));1;44;;;;;
 (min((v0*9) + v1, v2 + 18) == min((v0*9) + v1, v2 + 18));1;42;;;;;
 (((((v0 + v1) + 63)/16) - v2) == ((((v0 + v1) + 63)/16) - v2));1;70;;;;;
 (((((((v0 + v1) + 124)/125) - (v1/125))*4) + 6) == ((((((v0 + v1) + 124)/125) - (v1/125))*4) + 6));1;60;;;;;
 (((((v0 + v1)/4)*4) + -10) >= ((((((v0 + v1)/4)*4) + -10) + 156) - 1));0;72;;;;;
 (min(((max(min(v0 + v1, 2000), 1) + -5)/4) + (((v2 + 38)/4)*4), (max(min(v0 + v1, 1871), -128)/4) + 35) == min(((max(min(v0 + v1, 2000), 1) + -5)/4) + (((v2 + 38)/4)*4), (max(min(v0 + v1, 1871), -128)/4) + 35));1;129;;;;;
 ((max(min((v0*12) + (max(min((v1*32) + v2, 1245), 246) - max(min((v1*32) + v2, 1214), 215)), 33), 30) + min(max(min((v1*32) + v2, 1214), 215) + 30, v3)) == (max(min((v0*12) + (max(min((v1*32) + v2, 1245), 246) - max(min((v1*32) + v2, 1214), 215)), 33), 30) + min(max(min((v1*32) + v2, 1214), 215) + 30, v3)));1;295;;;;;
 (min(max(((v0 + v1) + 1023)/8, 249), (min((v0 + v1)/8, 4) + (v2*16)) + 11) == min(max(((v0 + v1) + 1023)/8, 249), (min((v0 + v1)/8, 4) + (v2*16)) + 11));1;92;;;;;
 (min(max(max(((v0*64) + v1) + -4, v2), v3 + v2), (min(v4, 61) + ((v0*64) + v1)) + 6) == min(max(max(((v0*64) + v1) + -4, v2), v3 + v2), (min(v4, 61) + ((v0*64) + v1)) + 6));1;92;;;;;
 (min(v0 + 120, v1) == min(v0 + 120, v1));1;30;;;;;
 (min(((v0 + v1) + 7)/8, (v1/8) + (v2*128)) == min(((v0 + v1) + 7)/8, (v1/8) + (v2*128)));1;44;;;;;
 (max(min(max((54 - (v0/2))/48, 0), (v1 + 53)/48), min(min(975 - (v0/2), v1 + 5)/48, 19 - (v0/96)) + 1) == max(min(max((54 - (v0/2))/48, 0), (v1 + 53)/48), min(min(975 - (v0/2), v1 + 5)/48, 19 - (v0/96)) + 1));1;103;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((v1*4) + 0) <= ((v1*4) + 0))) && (((v1*4) + 3) >= ((v1*4) + ((4 + 0) - 1)))) && (v2 <= v2)) && (v2 >= v2));1;96;;;;;
 (min(((v0 + v1) + 108)/8, ((v0 + v1)/8) + (v2*4)) == min(((v0 + v1) + 108)/8, ((v0 + v1)/8) + (v2*4)));1;79;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*251)) == (max(min(v0 + v1, 1999), 0) + (v2*251)));1;41;;;;;
 ((0 - (v0*2)) == (499 - (v0*2)));0;32;;;;;
 (((v0 + 29)/4) == ((v0 + 29)/4));1;31;;;;;
 (min(max((v0*37) + (v1 + v2), 3), ((v0*37) + (v1 + v2)) + 37) == min(max((v0*37) + (v1 + v2), 3), ((v0*37) + (v1 + v2)) + 37));1;51;;;;;
 (((v0 + v1) + -1000) >= ((((v0 + v1) + -1000) + 1002) - 1));0;54;;;;;
 ((((((((((v0 + v1) + -1)/8)*8) + 5)/63) - ((((v1/8)*8) + -5)/63))/7) + 1) == (((((((((v0 + v1) + -1)/8)*8) + 5)/63) - ((((v1/8)*8) + -5)/63))/7) + 1));1;119;;;;;
 (((v0 + 189)/125) != 0);0;376;;;;;
 ((max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*126)) + 125), 249), 0) - max(min((v1/8) + (v2*126), 249), 0)) == (max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*126)) + 125), 249), 0) - max(min((v1/8) + (v2*126), 249), 0)));1;274;;;;;
 (min((((((v0 + v1) + 7)/8) - (v1/8))*2) + 1, v2) == min((((((v0 + v1) + 7)/8) - (v1/8))*2) + 1, v2));1;64;;;;;
 (min(((v0 + v1) + 60)/32, ((v0 + v1)/32) + (v2*4)) == min(((v0 + v1) + 60)/32, ((v0 + v1)/32) + (v2*4)));1;63;;;;;
 (min(max(min(v0, 1994), -5), (max(min(v0, 2245), 246) + ((v1/4)*4)) + 3) == min(max(min(v0, 1994), -5), (max(min(v0, 2245), 246) + ((v1/4)*4)) + 3));1;92;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/128) + 1) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/128) + 1));1;269;;;;;
 ((((min((v0/65)*64, 4) + -6)/32) + (v1*3)) == (((min((v0/65)*64, 4) + -6)/32) + (v1*3)));1;73;;;;;
 ((max(min(v0, 1021), 22) + (v1*2)) == (max(min(v0, 1021), 22) + (v1*2)));1;35;;;;;
 (min(((((v0 + v1)/32)*4) + v2)*4, min((((v0 + v1) + 156)/32)*16, 957) + 79) == min(((((v0 + v1)/32)*4) + v2)*4, min((((v0 + v1) + 156)/32)*16, 957) + 79));1;78;;;;;
 (((v0*44) + (((max(min(min(v1*128, 372) + (v2 + v3), 2002), 3) + -3)/16)*16)) == ((v0*44) + (((max(min(min(v1*128, 372) + (v2 + v3), 2002), 3) + -3)/16)*16)));1;62;;;;;
 (min(((v0*2) + v1)*4, v2 + 41) == min(((v0*2) + v1)*4, v2 + 41));1;70;;;;;
 (((((((v0 + v1) + 15)/8) - (v1/8)) + 35)/32) == ((((((v0 + v1) + 15)/8) - (v1/8)) + 35)/32));1;80;;;;;
 (min((((v0 + v1) + 3)/4) - (v2*8), (v1/4) + 3) == min((((v0 + v1) + 3)/4) - (v2*8), (v1/4) + 3));1;64;;;;;
 (max(min((max(max(min(v0, 2000), v1 + 8), 1) + -5)/4, ((max(min(v0, 2000), 1) + -5)/4) + v2), min(((v3 + v1) + -5)/4, ((max(min(v0, 2000), 1) + -9)/4) + v2) + 1) == max(min((max(max(min(v0, 2000), v1 + 8), 1) + -5)/4, ((max(min(v0, 2000), 1) + -5)/4) + v2), min(((v3 + v1) + -5)/4, ((max(min(v0, 2000), 1) + -9)/4) + v2) + 1));1;150;;;;;
 (min((((v0*4) + v1) + v2)*4, (v3*4) + 2) == min((((v0*4) + v1) + v2)*4, (v3*4) + 2));1;67;;;;;
 (((max(((v0 + v1) + -1)/8, 249) - (v2*4)) - min(v1/8, 0)) == ((max(((v0 + v1) + -1)/8, 249) - (v2*4)) - min(v1/8, 0)));1;84;;;;;
 (((v0*8) + ((v1*24) + ((min(v2/8, 4)*2) + v3))) == ((v0*8) + ((v1*24) + ((min(v2/8, 4)*2) + v3))));1;68;;;;;
 (((((((uint1)1 && (((min(v0, 4) + v1) + -10) <= ((min(v0, 4) + v1) + -10))) && ((min((((max(v0, 4) + 15)/16)*16) + (min(v0, 4) + v1), (v0 + v1) + 4) + 4) >= (min((((max(v0, 4) + 15)/16)*16) + (min(v0, 4) + v1), (v0 + v1) + 4) + 4))) && ((max(v2 + 5, v3) + -1) <= (max(v2 + 5, v3) + -1))) && ((v2 + 4) >= (v2 + 4))) && (((0*16) + 0) <= ((0*16) + 0))) && (((1*16) + 15) >= ((1*16) + 15)));1;219;;;;;
 ((((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 86)/69) == (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 86)/69));1;106;;;;;
 ((max(min(v0/16, 126), 2) + (v1*2)) == (max(min(v0/16, 126), 2) + (v1*2)));1;45;;;;;
 (min(((v0 + v1) + 127)/32, v2 + 29) == min(((v0 + v1) + 127)/32, v2 + 29));1;39;;;;;
 ((min(((min(max(v0, 0), (min(v1*20, 19) + ((v2*39) + v3)) + 19) - (v1*20))*8) - (v4*41), (((v2*39) + v3)*8) + 29) - ((((v2*39) + v3)*8) + (v5*15))) == (min(((min(max(v0, 0), (min(v1*20, 19) + ((v2*39) + v3)) + 19) - (v1*20))*8) - (v4*41), (((v2*39) + v3)*8) + 29) - ((((v2*39) + v3)*8) + (v5*15))));1;168;;;;;
 (min(min(min((min(max(v0, 249) + (v1*-16), min(v2, 0) + 15) + (v3*-4)) + 8, v2) - min(v2, 0), 0)*8, (v4*12) + -20) == min(min(min((min(max(v0, 249) + (v1*-16), min(v2, 0) + 15) + (v3*-4)) + 8, v2) - min(v2, 0), 0)*8, (v4*12) + -20));1;289;;;;;
 ((max(min((v0*64) + ((v1/2) - (((v2 + v1) + 1)/2)), 6), -63) + min((v1/2) + (((min((v0*64) + 63, v3) + 10)/4)*4), min(((v2 + v1) + 1)/2, ((v1/2) + (v0*64)) + 63) + 7)) == (max(min((v0*64) + ((v1/2) - (((v2 + v1) + 1)/2)), 6), -63) + min((v1/2) + (((min((v0*64) + 63, v3) + 10)/4)*4), min(((v2 + v1) + 1)/2, ((v1/2) + (v0*64)) + 63) + 7)));1;172;;;;;
 (((((((v0 + v1) + 62)/63) - (v1/63))/17) + 1) == ((((((v0 + v1) + 62)/63) - (v1/63))/17) + 1));1;90;;;;;
 ((max((((v0/63)*2) + v1)*32, ((v2*8) + v3) + 24) + (v4*4)) == (max((((v0/63)*2) + v1)*32, ((v2*8) + v3) + 24) + (v4*4)));1;83;;;;;
 (max(0, min(((max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) - max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0)) + 476)/24, (0 + ((v3 + 523)/24)) - 1) + 1) <= 0);0;7237;;;;;
 (((v0*23) + ((v1/125)*16)) == ((v0*23) + ((v1/125)*16)));1;52;;;;;
 (((max(min((v1*-24) + (v3 + (v2*-12)), -488), -500)/4)*4) == max(min((v1*-24) + (v3 + (v2*-12)), -488), -500));0;976;;;;;
 (min(v0 + -42, v1) == min(v0 + -42, v1));1;41;;;;;
 (((max(min(v0, 134), 65)*8) + -1075) >= ((((max(min(v0, 134), 65)*8) + -1075) + (1081 - (max(min(v0, 134), 65)*8))) - 1));0;91;;;;;
 (((v0*138) + ((v1*272) + (((v2/63)*64) + ((v3/4)*520)))) == ((v0*138) + ((v1*272) + (((v2/63)*64) + ((v3/4)*520)))));1;91;;;;;
 (((min(v0 + 11, v1)*-2) + ((v0*2) + v2)) == ((min(v0 + 11, v1)*-2) + ((v0*2) + v2)));1;61;;;;;
 (min((v0*24) + v1, v2 + 238) == min((v0*24) + v1, v2 + 238));1;65;;;;;
 (((((v0 + v1) + 31)/32) - ((v2*16) + v3)) == ((((v0 + v1) + 31)/32) - ((v2*16) + v3)));1;53;;;;;
 ((((v0 + 9)/4) - (v1*63)) == (((v0 + 9)/4) - (v1*63)));1;44;;;;;
 (min(((max(min((v0 + v1)/63, 31), 0)*16) + v2)*4, v3 + 161) == min(((max(min((v0 + v1)/63, 31), 0)*16) + v2)*4, v3 + 161));1;75;;;;;
 (((max(v0, 0) - v1) + 7) == ((max(v0, 0) - v1) + 7));1;71;;;;;
 (min((v0*4) + v1, (v2*8) + 29) == min((v0*4) + v1, (v2*8) + 29));1;60;;;;;
 (min((v0*4) + v1, (v2*8) + 9) == min((v0*4) + v1, (v2*8) + 9));1;50;;;;;
 (max(min(max(((v0 - max(v1, 248)) + 251)/4, 0), (min(v1, 248) + 10)/4), (min(min(min(min(((v2 + v0) - max(v1, 248)) + 241, v1), (min(v1 + 4, v2 + v0) - max(v1, 248)) + 244), min(v1, 248) + 3), 248) + 7)/4) == max(min(max(((v0 - max(v1, 248)) + 251)/4, 0), (min(v1, 248) + 10)/4), (min(min(min(min(((v2 + v0) - max(v1, 248)) + 241, v1), (min(v1 + 4, v2 + v0) - max(v1, 248)) + 244), min(v1, 248) + 3), 248) + 7)/4));1;228;;;;;
 (max(min(v0 - v1, 9), min(v0 - v2, -1) + 10) == max(min(v0 - v1, 9), min(v0 - v2, -1) + 10));1;51;;;;;
 (((((((v0 + v1) + 63)/32) - (v1/32)) + 14)/9) == ((((((v0 + v1) + 63)/32) - (v1/32)) + 14)/9));1;53;;;;;
 ((((v0 - v1) + 60)/24) == (((v0 - v1) + 60)/24));1;47;;;;;
 (((v0*258) + (max(min((v1*64) + v2, 249), 0)*8)) == ((v0*258) + (max(min((v1*64) + v2, 249), 0)*8)));1;71;;;;;
 ((((max(((v0 + v1)/4) + ((v2*128) - (((v0 + v1) + 999)/4)), -26)*-1) - 6) + (((v0 + v1)/4) + ((min((min(((((v0 + v1) % 4) + 999)/4) + (v2*-128), 127) + 6)/33, ((max(((-996 - ((v0 + v1) % 4))/4) + (v2*128), -127)*-4) + 27)/132)*33) + (v2*128)))) == (((max(((v0 + v1)/4) + ((v2*128) - (((v0 + v1) + 999)/4)), -26)*-1) - 6) + (((v0 + v1)/4) + ((min((min(((((v0 + v1) % 4) + 999)/4) + (v2*-128), 127) + 6)/33, ((max(((-996 - ((v0 + v1) % 4))/4) + (v2*128), -127)*-4) + 27)/132)*33) + (v2*128)))));1;372;;;;;
 (-79 == ((-79 + (86 - max(v0*4, 3))) - 1));0;64;;;;;
 ((((min(((min(max(min(min(v4*125, v5 + -125) + v3, 1937), -62), max(min(min(v4*125, v5 + -125) + v3, 1875), -124) + 38) + 60)/8)*8, min(max(min(min(v4*125, v5 + -125) + v3, 1937), -62), max(min(min(v4*125, v5 + -125) + v3, 1875), -124) + 38) + 59)*-1)/4)*4) == (min(((min(max(min(min(v4*125, v5 + -125) + v3, 1937), -62), max(min(min(v4*125, v5 + -125) + v3, 1875), -124) + 38) + 60)/8)*8, min(max(min(min(v4*125, v5 + -125) + v3, 1937), -62), max(min(min(v4*125, v5 + -125) + v3, 1875), -124) + 38) + 59)*-1));0;2272;;;;;
 (min(min(v0*8, 2078) + 20, v1) == min(min(v0*8, 2078) + 20, v1));1;51;;;;;
 (((v0*5) + ((v1 % 4)*9)) == ((v0*5) + ((v1 % 4)*9)));1;29;;;;;
 ((min(((((v0 + v1) + 1)/2) - (v2*504)) - (v3*252), (v1/2) + 251) - ((v1/2) + (v4*4))) == (min(((((v0 + v1) + 1)/2) - (v2*504)) - (v3*252), (v1/2) + 251) - ((v1/2) + (v4*4))));1;100;;;;;
 ((max(v0, 0) - (v1*16)) == (max(v0, 0) - (v1*16)));1;48;;;;;
 (max(0, min((((min(v0*1000, v1 + -1000) + v2) % 2) + 497)/4, (0 + 126) - 1) + 1) <= 0);0;72;;;;;
 (min(max(max(((max(v0, -3) - v1) + 3)/4, 0 - (v1/4)), 0), v2) == min(max(max(((max(v0, -3) - v1) + 3)/4, 0 - (v1/4)), 0), v2));1;79;;;;;
 ((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7)) == (max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7)));1;295;;;;;
 (min((v0*9) + v1, v2 + 12) == min((v0*9) + v1, v2 + 12));1;39;;;;;
 ((((v0*4) - (v1*129)) - ((v2/32)*4)) == (((v0*4) - (v1*129)) - ((v2/32)*4)));1;46;;;;;
 (((v0*56) + ((v1*266) + v2)) == ((v0*56) + ((v1*266) + v2)));1;54;;;;;
 (((((v0/((v1 + 11)/9))*-129)/3)*3) == ((v0/((v1 + 11)/9))*-129));1;51;;;;;
 (max(min(min(min(((v4 - v3)*2) + 10, (((v1 + v2) + 59)/4) - (v3*2)), ((min(v4*8, (v1 + v2) + 20) + 42)/4) - (v3*2)), (0 + ((min(v5, -8)*2) + 28)) - 1) + 1, min(max((((v2 + 62)/4) - (v3*2)) + 1, 0), ((min(v5, -8)*2) + 28) + 0)) <= min(max((((v2 + 62)/4) - (v3*2)) + 1, 0), ((min(v5, -8)*2) + 28) + 0));0;3241;;;;;
 (((v0/2) + (v1*3)) == ((v0/2) + (v1*3)));1;36;;;;;
 (min(250 - (v0*4), v1 - ((v2*1000) + ((v0*4) + (v3*250)))) == min(250 - (v0*4), v1 - ((v2*1000) + ((v0*4) + (v3*250)))));1;72;;;;;
 (((v0 + 1017)/1006) == ((v0 + 1017)/1006));1;26;;;;;
 (min((v0*8) + 10, v1) == min((v0*8) + 10, v1));1;37;;;;;
 ((max(min((((v0 + v1) + 87)/8)*8, 1994), -5) - ((((v2*16) + v3)*4) + v4)) == (max(min((((v0 + v1) + 87)/8)*8, 1994), -5) - ((((v2*16) + v3)*4) + v4)));1;91;;;;;
 ((((v0 - v1) + 9)/4) != 0);0;462;;;;;
 ((min(v0*2, 135) + (v1 + v2)) == (min(v0*2, 135) + (v1 + v2)));1;42;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 22)/8) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 22)/8));1;310;;;;;
 ((((min(v0*125, v1 + -125)*4)/2)*2) == (min(v0*125, v1 + -125)*4));1;55;;;;;
 (((((((uint1)1 && (((((((v0*8) + v1)*2) + v2)*16) + -20) <= ((((((v0*8) + v1)*2) + v2)*16) + -20))) && (((((((v0*8) + v1)*2) + v2)*16) + -5) >= ((((((v0*8) + v1)*2) + v2)*16) + -5))) && ((v3*4) <= ((v3*4) + 0))) && (((v3*4) + 3) >= ((v3*4) + 3))) && (((0*4) + 0) <= 0)) && (((2*4) + 3) >= 11));1;228;;;;;
 (min((v0/16) + (v1*4), v2 + -3) == min((v0/16) + (v1*4), v2 + -3));1;24;;;;;
 (((((((v0 + v1) + -1)/63) - (v1/63)) + 24)/19) == ((((((v0 + v1) + -1)/63) - (v1/63)) + 24)/19));1;283;;;;;
 (((((((v0 + v1) + -1)/8) - ((v1 + -1)/8))/8) + 1) == ((((((v0 + v1) + -1)/8) - ((v1 + -1)/8))/8) + 1));1;69;;;;;
 (min(((v0 + v1) + 3)/4, v2 + 26) == min(((v0 + v1) + 3)/4, v2 + 26));1;50;;;;;
 (min((v0*2) + ((v1*4) + v2), v3 + -1) == min((v0*2) + ((v1*4) + v2), v3 + -1));1;72;;;;;
 (((v0 + 95)/96) != 0);0;349;;;;;
 ((min(((v0 + v1) + 55)/8, (min(v2*68, 64) + v3) + 62) + (v2*-68)) == (min(((v0 + v1) + 55)/8, (min(v2*68, 64) + v3) + 62) + (v2*-68)));1;80;;;;;
 ((((((((v0*63) + v1)*8) + 502) + 12)/8) - ((v0*63) + ((v2*4) + v1))) == (((((((v0*63) + v1)*8) + 502) + 12)/8) - ((v0*63) + ((v2*4) + v1))));1;95;;;;;
 (((v0*127) + 106) == ((v0*127) + 106));1;35;;;;;
 (((((((v0 + v1) + -1)/64) - ((v1 + -8)/64))/9) + 1) == ((((((v0 + v1) + -1)/64) - ((v1 + -8)/64))/9) + 1));1;88;;;;;
 (((((v0 + v1) + 5)/2) - ((v1/2) + v2)) == ((((v0 + v1) + 5)/2) - ((v1/2) + v2)));1;55;;;;;
 (0 == ((0 + (16 - (max(min(v0, 8), 7)*2))) - 1));0;62;;;;;
 ((((((((v0 + v1) + 127)/32) - (v1/32))*4) + 54)/19) == (((((((v0 + v1) + 127)/32) - (v1/32))*4) + 54)/19));1;84;;;;;
 (min((((v0 + v1) + -1)/63) - (v1/63), v2 + 12) == min((((v0 + v1) + -1)/63) - (v1/63), v2 + 12));1;78;;;;;
 (((v0 - (v1*516)) + (v2*-2)) == ((v0 - (v1*516)) + (v2*-2)));1;45;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 507)/500) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 507)/500));1;161;;;;;
 (max(min(v0, 2), 0) >= (max(min(v0, 2), 0) + 1));0;127;;;;;
 ((min(v0/8, 249) + (v1*16)) == (min(v0/8, 249) + (v1*16)));1;55;;;;;
 (((v0*4) + (max(min((v1*12) + v2, min(v3 + v2, 2011) + -12), 0) - max(min((v1*12) + v2, min(v3 + v2, 2000) + -12), -11))) == ((v0*4) + (max(min((v1*12) + v2, min(v3 + v2, 2011) + -12), 0) - max(min((v1*12) + v2, min(v3 + v2, 2000) + -12), -11))));1;1110;;;;;
 ((((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 84)/64) == (((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 84)/64));1;176;;;;;
 ((((((((v0 + v1) + -1)/250) - (v1/250))*64) + 244)/140) == (((((((v0 + v1) + -1)/250) - (v1/250))*64) + 244)/140));1;89;;;;;
 ((min((((v0/8) + v1)*8) + 5, v2) - (((v1*2) + (((v0/8)*2) + v3))*4)) == (min((((v0/8) + v1)*8) + 5, v2) - (((v1*2) + (((v0/8)*2) + v3))*4)));1;83;;;;;
 ((v0 + 1) >= (((v0 + 1) + (min(v1 - ((v2 + v3)/2), 24) + -23)) - 1));1;113;;;;;
 (0 == ((0 + ((v0*16) + 448)) - 1));0;57;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((0 + v1)*4) + 0) + -8) <= ((v1*4) + -8))) && (((((1 + v1)*4) + 3) + -8) >= (((v1*4) + 7) + -8))) && (0 <= 0)) && (5 >= ((6 + 0) - 1)));1;132;;;;;
 ((((v0 + -995)/32) + (v1*4)) == (((v0 + -995)/32) + (v1*4)));1;31;;;;;
 (min((v0*36) + (max(v1*64, -9) + v2), ((v1*64) + v2) + 28) == min((v0*36) + (max(v1*64, -9) + v2), ((v1*64) + v2) + 28));1;88;;;;;
 ((v0 - (max((max(min(((v1 + v2)/4)*8, 4004), 5) + -13)/2, 0)/63)) == (v0 - (max((max(min(((v1 + v2)/4)*8, 4004), 5) + -13)/2, 0)/63)));1;99;;;;;
 (((((v0 + v1) + 15)/4) - (((v2*8) + v3) + v4)) == ((((v0 + v1) + 15)/4) - (((v2*8) + v3) + v4)));1;62;;;;;
 (((min(v0, 0)*8) + ((v1*128) + (min((min((v1*-16) + (max(v2, 249) - min(v0, 0)), 15) + (v3*-4))*8, -92) + (v3*32)))) == ((min(v0, 0)*8) + ((v1*128) + (min((min((v1*-16) + (max(v2, 249) - min(v0, 0)), 15) + (v3*-4))*8, -92) + (v3*32)))));1;124;;;;;
 (max(0, min((((min(v0*125, v1 + -125) + v2) % 8) + 108)/32, (0 + 5) - 1) + 1) <= 0);0;81;;;;;
 ((((max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1)) + 20)/8) == (((max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1)) + 20)/8));1;215;;;;;
 ((-125 - max(v0, -124)) >= (((-125 - max(v0, -124)) + (max(v0, -124) + 126)) - 1));0;59;;;;;
 (((((((uint1)1 && ((0 + (min(max((((min(v0, 4) + v1) + -4)/8)*8, (v2*8) + 9), (v2*8) + 13) + -8)) <= ((((((v2*2) + 0)*4) + 0) + -3) + -5))) && ((3 + (min(max((((min(v0, 4) + v1) + -4)/8)*8, (v2*8) + 9) + (((16 - max(((((min(v0, 4) + v1) + -4)/8) - v2)*8, 9))/4)*4), (v2*8) + 13) + -8)) >= ((((((v2*2) + 3)*4) + 3) + 1) + -5))) && ((((v3/8)*8) + -5) <= (((v3/8)*8) + -5))) && (((((v3/8) + (((v3 % 8) + 132)/8))*8) + 7) >= ((((v3/8) + (((v3 % 8) + 132)/8))*8) + 7))) && (0 <= 0)) && (2 >= 2));0;650;;;;;
 ((((v0*8) + 1050)/1001) != 0);0;494;;;;;
 ((((v0*80) - v1) + ((v2*156) + v3)) == (((v0*80) - v1) + ((v2*156) + v3)));1;54;;;;;
 (((min((v0*48) + ((0 - max(min((v1 + v2)/48, 0), -21))*48), 952)/8)*8) == min((v0*48) + ((0 - max(min((v1 + v2)/48, 0), -21))*48), 952));1;136;;;;;
 (((((((v0 + v1) + 15)/8) - (v1/8)) + 20)/16) == ((((((v0 + v1) + 15)/8) - (v1/8)) + 20)/16));1;64;;;;;
 (((v0 + v1) + -14) == ((((v0 + v1) + -14) + 141) - 1));0;47;;;;;
 (((v0/65) + (v1*2)) == ((v0/65) + (v1*2)));1;1000;;;;;
 (min(((v0*64) + v1) + -5, v2) == min(((v0*64) + v1) + -5, v2));1;35;;;;;
 ((((max(v0, 0) - v1) + 21)/8) != 0);0;544;;;;;
 ((max(min(v0, 38), 7) + (v1*4)) == (max(min(v0, 38), 7) + (v1*4)));1;54;;;;;
 (min(max(max(min(min((((v0 + v1) + 43)/4) - (v2*16), ((v3 - v2)*16) + 31), ((min((v3*64) + 78, v0 + v1) + 46)/4) - (v2*16)), ((v1 + 46)/4) - (v2*16)), -1), (min(v4, 3)*16) + 31) == min(max(max(min(min((((v0 + v1) + 43)/4) - (v2*16), ((v3 - v2)*16) + 31), ((min((v3*64) + 78, v0 + v1) + 46)/4) - (v2*16)), ((v1 + 46)/4) - (v2*16)), -1), (min(v4, 3)*16) + 31));1;212;;;;;
 (((v0 + -1)/1008) >= ((((v0 + -1)/1008) + ((((v0 + 1007) % 1008) + 1023)/1008)) - 1));0;405;;;;;
 (((v0*8) + -29) == ((((v0*8) + -29) + ((min(((((v1 + v2) + 7)/8) - (v3*16)) - (v2/8), 15)*8) + 83)) - 1));0;224;;;;;
 ((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 31)/20) == (((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 31)/20));1;293;;;;;
 (((max(min((v1*-500) + (v2 - min(v3, 1999)), 500), 0)/4)*4) == max(min((v1*-500) + (v2 - min(v3, 1999)), 500), 0));0;926;;;;;
 (((((((uint1)1 && ((0 + v0) <= (((0*4) + 0) + v0))) && ((3 + (v0 + 124)) >= (((((32 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)));1;143;;;;;
 (min((((((v0 + v1) + -1)/8) - (v2*128)) - (v3*64)) - (v1/8), 63) == min((((((v0 + v1) + -1)/8) - (v2*128)) - (v3*64)) - (v1/8), 63));1;101;;;;;
 ((((v0 + -995)/32) + (v1*4)) == (((v0 + -995)/32) + (v1*4)));1;46;;;;;
 ((((((v0 + v1) + -1)/8) - (v2*63)) - (v1/8)) == (((((v0 + v1) + -1)/8) - (v2*63)) - (v1/8)));1;58;;;;;
 ((v0 - max(min(v1, 254), 5)) == (v0 - max(min(v1, 254), 5)));1;58;;;;;
 (((((v0 + v1)/8) + (((min(v2*32, 33) + 31)/16)*16)) + (min(((((min(v3*500, v4 + -500) + v0) % 8) + 507)/8) - (v2*32), 3) + (min(min(((((min(v3*500, v4 + -500) + v0) % 8) + 507)/8) - (v2*32), 31)/4, 3)*4))) == ((((v0 + v1)/8) + (((min(v2*32, 33) + 31)/16)*16)) + (min(((((min(v3*500, v4 + -500) + v0) % 8) + 507)/8) - (v2*32), 3) + (min(min(((((min(v3*500, v4 + -500) + v0) % 8) + 507)/8) - (v2*32), 31)/4, 3)*4))));1;177;;;;;
 ((((v0*32) + (v1 + v2)) + -1) >= (((((v0*32) + (v1 + v2)) + -1) + 37) - 1));0;2440;;;;;
 (((v0*64) + ((v1*128) + ((v2*500) + v3))) == ((v0*64) + ((v1*128) + ((v2*500) + v3))));1;68;;;;;
 ((((v0*8) + v1) + -1) >= (((((v0 - 1)*8) + v1) + 1) + 1));1;98;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 356)/250) == (((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 356)/250));1;201;;;;;
 (min(2 - min(v0, 3), (v1 - v0) + 2) == min(2 - min(v0, 3), (v1 - v0) + 2));1;146;;;;;
 (((v0*4) + ((v1*64) + v2)) == ((v0*4) + ((v1*64) + v2)));1;79;;;;;
 ((v0 - max(min((v1 + v2)/8, 258), 9)) == (v0 - max(min((v1 + v2)/8, 258), 9)));1;55;;;;;
 (min(((((v0 + v1) + 251)/63) - (v1/63))*2, (v2*2) + 1) == min(((((v0 + v1) + 251)/63) - (v1/63))*2, (v2*2) + 1));1;69;;;;;
 ((v0 - ((((v1 + v2) + 314)/63)*32)) == (v0 - ((((v1 + v2) + 314)/63)*32)));1;42;;;;;
 (((v0*8) + 1507) == ((((v0*8) + 1507) + 491) - 1));0;42;;;;;
 (0 >= ((0 + (76 - max((v0 % 8)*10, 66))) - 1));0;55;;;;;
 (min((min(v0*256, 762) + ((v1*1008) + v2)) + 246, v3 + v2) == min((min(v0*256, 762) + ((v1*1008) + v2)) + 246, v3 + v2));1;53;;;;;
 (((v0*4) + -87) >= ((((v0*4) + -87) + 13) - 1));0;48;;;;;
 ((((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0)) + 19)/16) == (((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0)) + 19)/16));1;247;;;;;
 ((max(min(min(v0*64, 191) + v1, 1181), 182) - (max(min(min(v0*64, 191) + v1, 1244), 245) + (((v2*3) + v3)*4))) == (max(min(min(v0*64, 191) + v1, 1181), 182) - (max(min(min(v0*64, 191) + v1, 1244), 245) + (((v2*3) + v3)*4))));1;142;;;;;
 ((((max(min((v1*125) + v2, min(v3 + v2, 2000) + -125), -124) + (max(min((v1*125) + v2, min(v3 + v2, 2124) + -125), 0)*-1))/4)*4) == (max(min((v1*125) + v2, min(v3 + v2, 2000) + -125), -124) + (max(min((v1*125) + v2, min(v3 + v2, 2124) + -125), 0)*-1)));0;2489;;;;;
 (((v0*121) + (((375 - ((min(v1*125, v2 + -125) + v3) % 500))/500)*512)) == ((v0*121) + (((375 - ((min(v1*125, v2 + -125) + v3) % 500))/500)*512)));1;65;;;;;
 (((v0*8) + -13) == ((((v0*8) + -13) + ((min(v1, -3)*8) + 165)) - 1));0;93;;;;;
 (min((max(min(v0*8, 3994), -5) + 5)/2, ((max(min(((v1*12) + v2)*8, 4012), 13) + -7)/2) + ((v3/4)*4)) == min((max(min(v0*8, 3994), -5) + 5)/2, ((max(min(((v1*12) + v2)*8, 4012), 13) + -7)/2) + ((v3/4)*4)));1;115;;;;;
 ((max(max(max(min(v0/8, 254), 5)*8, 52) - (max(min(((v1 + v0) + 7)/8, 249), 0)*8), ((max(min(((v1 + v0) + 7)/8, 249), 0)*8) - max(max(min(v0/8, 254), 5)*8, 52)) + 784) + -726) >= 0);0;2201;;;;;
 (min((((v0 + v1) + 62)/63)*64, v2 + 943) == min((((v0 + v1) + 62)/63)*64, v2 + 943));1;81;;;;;
 (min((v0*252) + v1, min(v2 + v1, 1997) + -252) == min((v0*252) + v1, min(v2 + v1, 1997) + -252));1;63;;;;;
 ((v0 - (((v1*4) + v2)*4)) == (v0 - (((v1*4) + v2)*4)));1;33;;;;;
 (max(((v0*9) - ((((v1 + v2) + -1)/250)*32)) + (((v2/250)*32) + (v3*18)), v4) == max(((v0*9) - ((((v1 + v2) + -1)/250)*32)) + (((v2/250)*32) + (v3*18)), v4));1;78;;;;;
 ((((v0 + 25)/16) - (v1*4)) == (((v0 + 25)/16) - (v1*4)));1;287;;;;;
 (min(124 - (v0*63), (max(min(v1*4, 246), -3) - (max(min((v2/32)*4, 285), 36) + (v0*63))) + 39) == min(124 - (v0*63), (max(min(v1*4, 246), -3) - (max(min((v2/32)*4, 285), 36) + (v0*63))) + 39));1;104;;;;;
 (((v0*8) + ((v1*32) + ((v2*64) + ((v3*4) + (v4 + v5))))) == ((v0*8) + ((v1*32) + ((v2*64) + ((v3*4) + (v4 + v5))))));1;70;;;;;
 (((v0*2) + (((v1*4) + ((v2/65) + (v3*2))) - min(((v4 + v2) + 64)/65, min((v0*2) + ((v2/65) + (v1*4)), ((v2/65) + (min(min((v1*4) + 3, v5)/4, v1)*4)) + 2) + 1))) == ((v0*2) + (((v1*4) + ((v2/65) + (v3*2))) - min(((v4 + v2) + 64)/65, min((v0*2) + ((v2/65) + (v1*4)), ((v2/65) + (min(min((v1*4) + 3, v5)/4, v1)*4)) + 2) + 1))));1;171;;;;;
 (((max(min((v0*-24) + v1, -476), -500)/4)*4) == max(min((v0*-24) + v1, -476), -500));0;1014;;;;;
 (min((v0*8) + ((v1*127) + v2), min(((v3 + v4) + 5)/2, ((v1*127) + v2) + 118) + 16) == min((v0*8) + ((v1*127) + v2), min(((v3 + v4) + 5)/2, ((v1*127) + v2) + 118) + 16));1;99;;;;;
 (min(v0 + 9, v1) == min(v0 + 9, v1));1;62;;;;;
 (min((v0*4) + (max(v1*15, -4) + v2), ((v1*15) + v2) + 11) == min((v0*4) + (max(v1*15, -4) + v2), ((v1*15) + v2) + 11));1;62;;;;;
 ((v0 - (((((v1*4) + v2)*8) + (v3*125))*4)) == (v0 - (((((v1*4) + v2)*8) + (v3*125))*4)));1;72;;;;;
 ((((v0 + -1)/500) - (v1*2)) == (((v0 + -1)/500) - (v1*2)));1;43;;;;;
 (min(max(min((((v0 + v1) + 87)/8)*8, 1994), -5), v2 + -62) == min(max(min((((v0 + v1) + 87)/8)*8, 1994), -5), v2 + -62));1;71;;;;;
 (((((((uint1)1 && ((0 + ((min(v1*24, 644) + (((v2*2) + v3)*4)) + v4)) <= ((min(v1*24, 644) + (((v2*2) + v3)*4)) + v4))) && ((3 + ((min(v1*24, 644) + (((v2*2) + v3)*4)) + v4)) >= ((min(v1*24, 644) + ((((v2*2) + v3)*4) + 3)) + v4))) && (((min(v5*8, 117) + v6) + v7) <= ((min(v5*8, 117) + v6) + v7))) && (((min(v5*8, 117) + v6) + v7) >= ((min(v5*8, 117) + v6) + v7))) && (v8 <= v8)) && (v8 >= v8));0;1827;;;;;
 ((((((((v0 + v1) + 499)/500) - (v1/500))*8)/3) + 5) == (((((((v0 + v1) + 499)/500) - (v1/500))*8)/3) + 5));1;71;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*64) + 791)/696) == (((((((v0 + v1) + -1)/63) - (v1/63))*64) + 791)/696));1;222;;;;;
 (((v0/32) + 3) != 0);0;302;;;;;
 (min(max((max(v0, 1) + v1)/2, ((v2*17) + v3) + -7), (min(v4 - v3, 5) + ((v2*17) + v3)) + 5) == min(max((max(v0, 1) + v1)/2, ((v2*17) + v3) + -7), (min(v4 - v3, 5) + ((v2*17) + v3)) + 5));1;100;;;;;
 (min((v0*4) + v1, (v2*8) + -50) == min((v0*4) + v1, (v2*8) + -50));1;44;;;;;
 (((((v0 + v1) + 62) % 504) + 574) >= 0);1;32;;;;;
 (min((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*64, (v2*64) + 1075) == min((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*64, (v2*64) + 1075));1;278;;;;;
 (min(((v0 + v1) + -1)/63, ((v1 + -5)/63) + v2) == min(((v0 + v1) + -1)/63, ((v1 + -5)/63) + v2));1;252;;;;;
 ((max(v0*63, 62) + (((v1*4) + v2)*8)) == (max(v0*63, 62) + (((v1*4) + v2)*8)));1;47;;;;;
 (max((min(((((min((((((v0 + v1) + 62)/63)*8) - (v2*34)) - v3, 25) + 14)/4)*4) + (v2*34)) + v3, v4 + 11) + v5) + 4, (v2*34) + v3) == max((min(((((min((((((v0 + v1) + 62)/63)*8) - (v2*34)) - v3, 25) + 14)/4)*4) + (v2*34)) + v3, v4 + 11) + v5) + 4, (v2*34) + v3));1;125;;;;;
 ((((min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2, 1999) - max((max(min((v1/4)*8, 4012), 13) + -19)/2, 0))/252) + 1) == (((min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2, 1999) - max((max(min((v1/4)*8, 4012), 13) + -19)/2, 0))/252) + 1));1;152;;;;;
 (max(min((((v0 + v1) + 79)/8) - (v1/8), v2 + 2) + 5, v3) == max(min((((v0 + v1) + 79)/8) - (v1/8), v2 + 2) + 5, v3));1;88;;;;;
 (min(v0*2, (min(v1*44, 40) + (((v2*42) + v3)*2)) + 14) == min(v0*2, (min(v1*44, 40) + (((v2*42) + v3)*2)) + 14));1;69;;;;;
 (min(503 - (((v0*8) + v1)*4), (v2 - (((v3*126) + ((v0*8) + v1))*4)) + 4) == min(503 - (((v0*8) + v1)*4), (v2 - (((v3*126) + ((v0*8) + v1))*4)) + 4));1;102;;;;;
 (((((v0 + v1) + -1)/4) - ((((v2*32) + v3)*4) + v4)) == ((((v0 + v1) + -1)/4) - ((((v2*32) + v3)*4) + v4)));1;71;;;;;
 (min(max(min((v0 + v1)/8, 249), 0) + (((v2 + 7)/4)*4), max(min(v3, 250), 1) + 4) == min(max(min((v0 + v1)/8, 249), 0) + (((v2 + 7)/4)*4), max(min(v3, 250), 1) + 4));1;84;;;;;
 (((((v0 + v1) + 255)/32) - ((v2*12) + v3)) == ((((v0 + v1) + 255)/32) - ((v2*12) + v3)));1;59;;;;;
 (((v0 + 338)/336) != 0);0;379;;;;;
 (min(((((v0 + v1) + 31)/32) - (v1/32)) + -3, v2) == min(((((v0 + v1) + 31)/32) - (v1/32)) + -3, v2));1;53;;;;;
 (min(max(min(v0, 2007), 13), (min(v0, 2007) + v1) + 22) == min(max(min(v0, 2007), 13), (min(v0, 2007) + v1) + 22));1;36;;;;;
 (min(((v0*2) + ((v1*8) + v2))*8, (v3*8) + 92) == min(((v0*2) + ((v1*8) + v2))*8, (v3*8) + 92));1;86;;;;;
 (min(max(min(v0, 1999), 0), max(min(v1, 1999), 0) + -2) == min(max(min(v0, 1999), 0), max(min(v1, 1999), 0) + -2));1;63;;;;;
 (((((v0*500) + (v1 + v2))/8) + (v3*12)) == ((((v0*500) + (v1 + v2))/8) + (v3*12)));1;55;;;;;
 (min(min(v0 + 122, v1), (min(v0 + 60, v1) + (v2*8)) + 8) == min(min(v0 + 122, v1), (min(v0 + 60, v1) + (v2*8)) + 8));1;57;;;;;
 (min(((v0*4) + v1) + 2, v2) == min(((v0*4) + v1) + 2, v2));1;70;;;;;
 (min(max(min(v0, 256), 7) + (((v1 + 8)/16)*16), max(min(v2, 248), -1) + 9) == min(max(min(v0, 256), 7) + (((v1 + 8)/16)*16), max(min(v2, 248), -1) + 9));1;74;;;;;
 (min((((v0*2004) + v1) + -13)/8, (v2/64)*8) == min((((v0*2004) + v1) + -13)/8, (v2/64)*8));1;73;;;;;
 (0 >= ((0 + ((((v0 + v1) % 8) + 571)/32)) - 1));0;64;;;;;
 (min((((min(v0 - v1, (v2*64) + 64) + 3)/4)*4) + v1, v3) == min((((min(v0 - v1, (v2*64) + 64) + 3)/4)*4) + v1, v3));1;96;;;;;
 ((max(min(v0/2, 999), 0) + (v1*504)) == (max(min(v0/2, 999), 0) + (v1*504)));1;21;;;;;
 (((v0*128) + ((v1/4) - (((v2 + v1) + 3)/4))) == ((v0*128) + ((v1/4) - (((v2 + v1) + 3)/4))));1;60;;;;;
 (max(min(249, (v2 + (min(((((v3 + v4) + -1)/8) - (v5*32)) - (v4/8), 31) + 1)) - 1) + 1, min(max(0, v2), (min(((((v3 + v4) + -1)/8) - (v5*32)) - (v4/8), 31) + 1) + v2)) <= min(max(0, v2), (min(((((v3 + v4) + -1)/8) - (v5*32)) - (v4/8), 31) + 1) + v2));0;2231;;;;;
 ((((v0/8)*2) + (((10 - max((v0/8)*8, ((((v0/8)*2) + v1)*4) + 3))/4) + v1)) == (((v0/8)*2) + (((10 - max((v0/8)*8, ((((v0/8)*2) + v1)*4) + 3))/4) + v1)));1;83;;;;;
 (((((((v0 + v1) + 124)/125) - (v1/125))*4) + 5) == ((((((v0 + v1) + 124)/125) - (v1/125))*4) + 5));1;65;;;;;
 ((((min(v0*42, 83) + (v1 + v2))/16) + ((((min(v0*42, 83) + (v1 + v2)) % 16) + 41)/16)) == (((min(v0*42, 83) + (v1 + v2))/16) + ((((min(v0*42, 83) + (v1 + v2)) % 16) + 41)/16)));1;81;;;;;
 (min(min(v0*4, 30) + v1, ((((v2 + v3) + 64)/65)*8) + 16) == min(min(v0*4, 30) + v1, ((((v2 + v3) + 64)/65)*8) + 16));1;79;;;;;
 (((v0*4) + (((v1*2) + v2) - (min(((v3 + v4) + -1)/65, ((v0*2) + v1) + 1)*2))) == ((v0*4) + (((v1*2) + v2) - (min(((v3 + v4) + -1)/65, ((v0*2) + v1) + 1)*2))));1;95;;;;;
 (max(((max(v0, 0) - v1) + 1)/62, 0) >= ((max(((max(v0, 0) - v1) + 1)/62, 0) + ((((max(v0, 0) - v1) + 63)/62) - max(((max(v0, 0) - v1) + 1)/62, 0))) - 1));1;145;;;;;
 (((((((uint1)1 && (((((0*64) + v0) + 0) + -1) <= (v0 + -1))) && (((((3*64) + v0) + 63) + -1) >= (v0 + 251))) && (((((v1*2) + v2)*4) + 0) <= (((v1*2) + v2)*4))) && (((((v1*2) + v2)*4) + 3) >= ((((v1*2) + v2)*4) + 3))) && ((v3*3) <= (v3*3))) && (((v3*3) + 2) >= ((3 + (v3*3)) - 1)));1;205;;;;;
 ((((v0 + v1) % 500) + 1999) >= 0);1;26;;;;;
 ((((max(((v0 + v1) + 23)/8, 249) - min(v1/8, 4)) + 69)/65) == (((max(((v0 + v1) + 23)/8, 249) - min(v1/8, 4)) + 69)/65));1;62;;;;;
 ((((max(min(v0 + v1, 1997), -2) - max(min(v1, 2004), 5)) + 39)/32) == (((max(min(v0 + v1, 1997), -2) - max(min(v1, 2004), 5)) + 39)/32));1;152;;;;;
 ((((((v0 + v1) + 447)/32) - (v2*6)) - (v1/32)) == (((((v0 + v1) + 447)/32) - (v2*6)) - (v1/32)));1;58;;;;;
 (((v0*256) + (max(v1*500, -8) + (v2 + v3))) == ((v0*256) + (max(v1*500, -8) + (v2 + v3))));1;61;;;;;
 (min(((v0 + v1) + 7)/8, v2 + 62) == min(((v0 + v1) + 7)/8, v2 + 62));1;58;;;;;
 (max((((v0 + v1) + 15)/8) + v2, ((v0 + v1)/8) + -5) == max((((v0 + v1) + 15)/8) + v2, ((v0 + v1)/8) + -5));1;56;;;;;
 ((min((((v0 + v1) + 5)/2) - (v2*504), ((v1/2) + (v3*128)) + 119) - ((v3*128) + ((v4*4) + ((v1/2) + (v5*72))))) == (min((((v0 + v1) + 5)/2) - (v2*504), ((v1/2) + (v3*128)) + 119) - ((v3*128) + ((v4*4) + ((v1/2) + (v5*72))))));1;132;;;;;
 ((max((v0*126) - v1, -116) + (v2*66)) == (max((v0*126) - v1, -116) + (v2*66)));1;73;;;;;
 ((min(((((v0 + v1) + 7)/8) - (v2*84)) - (v3*12), (v1/8) + 11) - ((v1/8) + (v4*4))) == (min(((((v0 + v1) + 7)/8) - (v2*84)) - (v3*12), (v1/8) + 11) - ((v1/8) + (v4*4))));1;99;;;;;
 (max(-769 - (v0*8), (v0*8) + 60) >= 0);0;496;;;;;
 ((((max(min(v0 + v1, 1996), -3) - max(min(v1, 2000), 1)) + 140)/128) == (((max(min(v0 + v1, 1996), -3) - max(min(v1, 2000), 1)) + 140)/128));1;158;;;;;
 (max((v0/8)*8, (((v0/8) + (v1*4))*8) + 3) == max((v0/8)*8, (((v0/8) + (v1*4))*8) + 3));1;61;;;;;
 (((v0*64) + (max(min(v1/8, 256), 7) + (v2*128))) == ((v0*64) + (max(min(v1/8, 256), 7) + (v2*128))));1;1741;;;;;
 ((max(v0, 0) - ((v1*16) + v2)) == (max(v0, 0) - ((v1*16) + v2)));1;64;;;;;
 ((((v0 + 19)/4) - ((v1 % 63)*8)) == (((v0 + 19)/4) - ((v1 % 63)*8)));1;49;;;;;
 (((((v0/((v1/32) + 1))*126)/63)*63) == ((v0/((v1/32) + 1))*126));1;72;;;;;
 (((v0*6) + ((v1/2) + (v2*126))) == ((v0*6) + ((v1/2) + (v2*126))));1;59;;;;;
 (((v0 + 42)/36) != 0);0;376;;;;;
 (min(max(min((v0/500)*8, 67), 36) + (v1*2), max(min((((v2 + v0) + 499)/500)*8, 26), -5) + 40) == min(max(min((v0/500)*8, 67), 36) + (v1*2), max(min((((v2 + v0) + 499)/500)*8, 26), -5) + 40));1;92;;;;;
 (min(max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7), v2 + 3) == min(max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7), v2 + 3));1;145;;;;;
 (max(min((v2 + v3) + -1, (((v4*8) + -547) + ((min(((min(v5, 31)*8) - (v6*76)) - (min(v7, 36)*8), -76)*8) + 1216)) - 1) + 1, min(max(v3, (v4*8) + -547), ((min(((min(v5, 31)*8) - (v6*76)) - (min(v7, 36)*8), -76)*8) + 1216) + ((v4*8) + -547))) <= min(max(v3, (v4*8) + -547), ((min(((min(v5, 31)*8) - (v6*76)) - (min(v7, 36)*8), -76)*8) + 1216) + ((v4*8) + -547)));0;2904;;;;;
 (((((v0 + v1) + 1)/2) - ((v2*64) + v3)) == ((((v0 + v1) + 1)/2) - ((v2*64) + v3)));1;61;;;;;
 (((v0 + 77)/64) != 0);0;402;;;;;
 (0 == ((0 + (90 - (max(min(v0, 45), 43)*2))) - 1));0;43;;;;;
 ((((((v0 + v1) + -1)/1000)*256) - ((((v2*3) + v3)*16) + v4)) == (((((v0 + v1) + -1)/1000)*256) - ((((v2*3) + v3)*16) + v4)));1;65;;;;;
 (min(max(min(((v0 + v1) + 71)/8, 249), 0), (max(min(v1/8, 254), 5) + (v2*16)) + 10) == min(max(min(((v0 + v1) + 71)/8, 249), 0), (max(min(v1/8, 254), 5) + (v2*16)) + 10));1;84;;;;;
 (((v0 + 68)/64) != 0);0;371;;;;;
 ((((max(v0, 0) - v1)/10) + (v2*-2)) == (((max(v0, 0) - v1)/10) + (v2*-2)));1;50;;;;;
 ((((v0*64) + v1) + 624) < (((v0*64) + (v1 + 1)) + -56));0;63;;;;;
 (((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36))*8) + 838)/501) == ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36))*8) + 838)/501));1;246;;;;;
 ((max(min((v0*16) + v1, min(v2, 1013) + -14), 0) + (v3*4)) == (max(min((v0*16) + v1, min(v2, 1013) + -14), 0) + (v3*4)));1;105;;;;;
 (max(-95 - max((max(min(v0, 1994), -5) - (v1*251)) - max(min(v2, 2082), 83), -93), min(v3, 93) + -95) == max(-95 - max((max(min(v0, 1994), -5) - (v1*251)) - max(min(v2, 2082), 83), -93), min(v3, 93) + -95));1;103;;;;;
 (((v0/4) + 1) != 0);0;1378;;;;;
 (min((v0*76) + v1, v2 + 52) == min((v0*76) + v1, v2 + 52));1;53;;;;;
 ((((v0*2) + v1) + -3) == (((((v0*2) + v1) + -3) + 2) - 1));0;57;;;;;
 (min(((v0*8) + 91)/68, max(min(((v0*8) + 23)/68, ((v0*2) + 5)/17), ((v0*8) + 24)/68) + 1) == min(((v0*8) + 91)/68, max(min(((v0*8) + 23)/68, ((v0*2) + 5)/17), ((v0*8) + 24)/68) + 1));1;107;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((7*4) + v0) + 3) >= (((7*4) + ((4 + 0) - 1)) + v0))) && ((0 + v1) <= (0 + v1))) && ((((8 + 0) - 1) + v1) >= (((8 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;169;;;;;
 ((max(min(v0/2, 999), 2) + ((v1*64) - max(min(((v2 + v0) + 1)/2, 996), 0))) == (max(min(v0/2, 999), 2) + ((v1*64) - max(min(((v2 + v0) + 1)/2, 996), 0))));1;81;;;;;
 (max((min((((v0 + v1) + 3)/2) - (v1/2), v2 + 1) + 3)/4, max(v3/4, -1) + 1) == max((min((((v0 + v1) + 3)/2) - (v1/2), v2 + 1) + 3)/4, max(v3/4, -1) + 1));1;86;;;;;
 (min(((v0*4) + v1)*64, (min(v0*64, 433)*4) + 192) == min(((v0*4) + v1)*64, (min(v0*64, 433)*4) + 192));1;63;;;;;
 ((((min((v0/65)*64, 4) + -6)/32) + (v1 - ((max((((v2 + v0) + 64)/65)*64, 1975) + 40)/32))) == (((min((v0/65)*64, 4) + -6)/32) + (v1 - ((max((((v2 + v0) + 64)/65)*64, 1975) + 40)/32))));1;95;;;;;
 (min((((v0 + v1) + 63)/8) - (v1/8), v2 + 3) == min((((v0 + v1) + 63)/8) - (v1/8), v2 + 3));1;74;;;;;
 ((max(min(v0, 67), 36) + (v1*3)) == (max(min(v0, 67), 36) + (v1*3)));1;40;;;;;
 (((((v0 % ((v1/16) + 1))*-16)/8)*8) == ((v0 % ((v1/16) + 1))*-16));1;108;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 518)/504) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 518)/504));1;167;;;;;
 ((((max(min(v0, 2002), 3) + -3)/16) + (v1*8)) == (((max(min(v0, 2002), 3) + -3)/16) + (v1*8)));1;46;;;;;
 (((min(v0/65, (v1 - (v2*8)) - v3)*-2) + (((v0/65)*2) + v4)) == ((min(v0/65, (v1 - (v2*8)) - v3)*-2) + (((v0/65)*2) + v4)));1;81;;;;;
 ((((v0/8) + (((min((v1*-84) + v2, 83)/16)*16) + (v1*84))) + (min(((((v3 + v0) + 7)/8) - (v1*84)) - (v0/8), 3) + (min(min(((((v3 + v0) + 7)/8) - (v1*84)) - (v0/8), 83)/4, 3)*4))) == (((v0/8) + (((min((v1*-84) + v2, 83)/16)*16) + (v1*84))) + (min(((((v3 + v0) + 7)/8) - (v1*84)) - (v0/8), 3) + (min(min(((((v3 + v0) + 7)/8) - (v1*84)) - (v0/8), 83)/4, 3)*4))));1;160;;;;;
 (((v0/4) + (min(min((v1*4) + 3, v2)/4, v1)*4)) == ((v0/4) + (min(min((v1*4) + 3, v2)/4, v1)*4)));1;48;;;;;
 (min((v0*3) + (v1*2), (v2*2) + 67) == min((v0*3) + (v1*2), (v2*2) + 67));1;64;;;;;
 (max(min(max(max(max(9 - ((v0/63)*8), ((v0/63)*-8) + 11), 12 - ((v0/63)*8))/3, 0), (v1/3) + 3), min(min(((min(v2, 252) - ((v0/63)*8)) + 4)/3, 85 - (((v0/63)*8)/3)), (v1/3) + 2) + 1) == max(min(max(max(max(9 - ((v0/63)*8), ((v0/63)*-8) + 11), 12 - ((v0/63)*8))/3, 0), (v1/3) + 3), min(min(((min(v2, 252) - ((v0/63)*8)) + 4)/3, 85 - (((v0/63)*8)/3)), (v1/3) + 2) + 1));1;217;;;;;
 ((min((((v0 + v1) + 15)/4)*4, (((v1/4) + (v2*253))*4) + 1001) - (((v2*253) + ((v1/4) + v3))*4)) == (min((((v0 + v1) + 15)/4)*4, (((v1/4) + (v2*253))*4) + 1001) - (((v2*253) + ((v1/4) + v3))*4)));1;105;;;;;
 (((((v0*20) - min(max(v1, 0), (min(v0*20, 19) + ((v2*39) + v3)) + 19))*8) + ((v4*4) + ((((v2*39) + v3)*8) + (v5*84)))) == ((((v0*20) - min(max(v1, 0), (min(v0*20, 19) + ((v2*39) + v3)) + 19))*8) + ((v4*4) + ((((v2*39) + v3)*8) + (v5*84)))));1;119;;;;;
 (((min(v0*16, 47) + ((v1*8) + v2)) + v3) < ((min(v0*16, 47) + ((v1*8) + (v2 + 1))) + v3));1;91;;;;;
 ((min((((v0 + v1) + 1)/2) - (v2*252), (v1/2) + 251) - ((v1/2) + (v3*4))) == (min((((v0 + v1) + 1)/2) - (v2*252), (v1/2) + 251) - ((v1/2) + (v3*4))));1;89;;;;;
 (((v0*16) + ((v1*32) + ((v2*132) + (((v3 + v4)/2) + (v5*6))))) == ((v0*16) + ((v1*32) + ((v2*132) + (((v3 + v4)/2) + (v5*6))))));1;72;;;;;
 (((v0/44) + 1) != 0);0;285;;;;;
 (((((v0*8) + v1)*4) + -4) == ((((((v0*8) + v1)*4) + -4) + ((min(v2, 4)*4) + 16)) - 1));0;134;;;;;
 (min(((v0 + v1) + 15)/8, ((v1/8) + (v2*16)) + 11) == min(((v0 + v1) + 15)/8, ((v1/8) + (v2*16)) + 11));1;62;;;;;
 ((max(min((v0/8) + ((v1*4) - (((v2 + v0) + 39)/8)), 0), -3)*8) >= 2);0;69;;;;;
 (min(((v0 + v1) + 3)/4, ((v1/4) + (v2*16)) + 11) == min(((v0 + v1) + 3)/4, ((v1/4) + (v2*16)) + 11));1;59;;;;;
 ((max(min(v0/4, 499), 0) + (v1*4)) == (max(min(v0/4, 499), 0) + (v1*4)));1;34;;;;;
 (((((((uint1)1 && (max(v0 + -1, v1) <= ((((((v1*8) + 0)*4) + 0) + -6)/32))) && (v1 >= ((((((v1*8) + 3)*4) + 3) + -6)/32))) && (((((((v2/63)*2) + 0)*4) + 0) + -6) <= (((v2/63)*8) + -6))) && (((((((v2/63)*2) + (((v3/8)*16) + 17))*4) + 3) + -6) >= ((((v2/63) + ((v3/8)*8))*8) + 65))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) + -1)));0;636;;;;;
 (((v0*8) + -52) == ((((v0*8) + -52) + ((min(v1, 10)*8) + 59)) - 1));0;86;;;;;
 ((((v0*-504)/6)*6) == (v0*-504));1;35;;;;;
 (min(((max(min(v0 + v1, 1997), -2) - max(min(v1, 2001), 2))/4) + 2, v2) == min(((max(min(v0 + v1, 1997), -2) - max(min(v1, 2001), 2))/4) + 2, v2));1;160;;;;;
 (min((v0/2) + (((min((v1*64) + 63, v2) + 10)/4)*4), min(((v3 + v0) + 1)/2, ((v0/2) + (v1*64)) + 63) + 7) == min((v0/2) + (((min((v1*64) + 63, v2) + 10)/4)*4), min(((v3 + v0) + 1)/2, ((v0/2) + (v1*64)) + 63) + 7));1;153;;;;;
 (min(min(v0, 1990) + (((v1 + 11)/4)*4), max(v0, -16) + 8) == min(min(v0, 1990) + (((v1 + 11)/4)*4), max(v0, -16) + 8));1;68;;;;;
 ((max(v0, 0) - ((v1/3)*4)) == (max(v0, 0) - ((v1/3)*4)));1;45;;;;;
 (-5 == ((-5 + (311 - max(v0*8, 302))) - 1));0;64;;;;;
 (min(((v0 + v1) + 7)/8, (min((min((v2*16) + 15, v3)/4)*4, (v2*16) + 12) + (v1/8)) + 3) == min(((v0 + v1) + 7)/8, (min((min((v2*16) + 15, v3)/4)*4, (v2*16) + 12) + (v1/8)) + 3));1;93;;;;;
 ((v0 - max(min(((v1 + 7)/4)*4, v2 + 4), 1)) == (v0 - max(min(((v1 + 7)/4)*4, v2 + 4), 1)));1;57;;;;;
 (max(v0 + v1, ((v2 + v3)/8) + -5) == max(v0 + v1, ((v2 + v3)/8) + -5));1;48;;;;;
 ((v0 - ((min(v1/8, 0)/16)*16)) == (v0 - ((min(v1/8, 0)/16)*16)));1;63;;;;;
 (min((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*16, (v2*16) + 283) == min((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*16, (v2*16) + 283));1;245;;;;;
 ((max(min(min((((v0 + v1) + -1)/16)*4, (((v1/16) + v2)*4) + 3), 499)*4, -3) - (max(min(((v1/16) + v2)*16, 1999), 0) + (v3*4))) == (max(min(min((((v0 + v1) + -1)/16)*4, (((v1/16) + v2)*4) + 3), 499)*4, -3) - (max(min(((v1/16) + v2)*16, 1999), 0) + (v3*4))));1;136;;;;;
 ((((v0*32) + v1)*8) == (((v0*32) + v1)*8));1;43;;;;;
 (min(max(min(v0/16, 126), 2) + (v1*2), max(min(((v2 + v0) + 47)/16, 124), 0) + 1) == min(max(min(v0/16, 126), 2) + (v1*2), max(min(((v2 + v0) + 47)/16, 124), 0) + 1));1;90;;;;;
 (min(((v0 + v1) + -1)/4, ((v2*125) + ((v1/4) + (v3*33))) + 26) == min(((v0 + v1) + -1)/4, ((v2*125) + ((v1/4) + (v3*33))) + 26));1;74;;;;;
 (((min(min((v3*128) + ((v2/4) + 127), ((v1 + v2) + 3)/4)*4, ((((((min((v3*-128) + ((((v1 + v2) + 3)/4) - (v2/4)), 127) + 1)/64)*64) + (v3*128)) + (v2/4))*4) + 250)/4)*4) == min(min((v3*128) + ((v2/4) + 127), ((v1 + v2) + 3)/4)*4, ((((((min((v3*-128) + ((((v1 + v2) + 3)/4) - (v2/4)), 127) + 1)/64)*64) + (v3*128)) + (v2/4))*4) + 250));0;3664;;;;;
 (max(-975 - ((v0 - v1)*16), ((v0 - v1)*16) + 597) >= 0);0;722;;;;;
 (min(((v0 + v1) + 255)/4, v2 + 31) == min(((v0 + v1) + 255)/4, v2 + 31));1;46;;;;;
 (((v0*68) + (((-125 - ((min(v1*125, v2 + -125) + v3) % 8))/8)*8)) == ((v0*68) + (((-125 - ((min(v1*125, v2 + -125) + v3) % 8))/8)*8)));1;74;;;;;
 ((((((v0 + v1) + 1999)/2000)*256) - ((v2*112) + v3)) == (((((v0 + v1) + 1999)/2000)*256) - ((v2*112) + v3)));1;60;;;;;
 (min((((min(((min((v0*12) + ((v1*64) + v2), (min(v1*64, 936) + v2) + 53) + (v3*1000)) - v2) + 11, v4)/4)*4) + v2) + 3, v5) == min((((min(((min((v0*12) + ((v1*64) + v2), (min(v1*64, 936) + v2) + 53) + (v3*1000)) - v2) + 11, v4)/4)*4) + v2) + 3, v5));1;145;;;;;
 (min(v0*8, ((v1*524) + (v2*8)) + 476) == min(v0*8, ((v1*524) + (v2*8)) + 476));1;55;;;;;
 (min(max((41 - (v0*2))/35, 0), ((min(v1, 29)*2) + 46)/35) == min(max((41 - (v0*2))/35, 0), ((min(v1, 29)*2) + 46)/35));1;1295;;;;;
 (((v0 + v1)/16) <= ((((v0 - 1) + v1)/16) - 1));0;69;;;;;
 ((((((v0 + v1) + -1)/1000)*16) - (((((v1/1000)*4) + v2)*4) + v3)) == (((((v0 + v1) + -1)/1000)*16) - (((((v1/1000)*4) + v2)*4) + v3)));1;92;;;;;
 (max((min((((v0 + v1) + 12)/8) - ((v1 + -3)/8), v2 + 1) + 3)/4, max(v3/4, -1) + 1) == max((min((((v0 + v1) + 12)/8) - ((v1 + -3)/8), v2 + 1) + 3)/4, max(v3/4, -1) + 1));1;99;;;;;
 (((((((v0 + v1) + 13)/2) - (v1/2)) + 345)/338) == ((((((v0 + v1) + 13)/2) - (v1/2)) + 345)/338));1;57;;;;;
 ((((((v0 + v1)*4) + v2)*8) + -194) == (((((((v0 + v1)*4) + v2)*8) + -194) + 8) - 1));0;77;;;;;
 (min(((((v0 + v1) + -1)/250) - (v1/250))*32, (v2*32) + 55) == min(((((v0 + v1) + -1)/250) - (v1/250))*32, (v2*32) + 55));1;84;;;;;
 (min(min(v0/65, 0)*8, ((v0/65)*8) + -3) == min(min(v0/65, 0)*8, ((v0/65)*8) + -3));1;69;;;;;
 (min(((v0 + v1) + 63)/8, ((v1/8) + (v2*17)) + 15) == min(((v0 + v1) + 63)/8, ((v1/8) + (v2*17)) + 15));1;102;;;;;
 ((((((v0 + v1) + 1)/2) - (v2*501)) - (v1/2)) == (((((v0 + v1) + 1)/2) - (v2*501)) - (v1/2)));1;57;;;;;
 (((v0*64) + ((v1*32) - min(((v0*2) + v1)*32, min((((((v2 + v3) + 1999)/2000)*256) - (v4*112)) - ((v3/2000)*256), -416) + 496))) == ((v0*64) + ((v1*32) - min(((v0*2) + v1)*32, min((((((v2 + v3) + 1999)/2000)*256) - (v4*112)) - ((v3/2000)*256), -416) + 496))));1;127;;;;;
 (min(v0*8, (v1*4) + v2) == min(v0*8, (v1*4) + v2));1;56;;;;;
 ((((max(min(v0 + v1, 2002), 3) + -3)/16) + (v2*2)) == (((max(min(v0 + v1, 2002), 3) + -3)/16) + (v2*2)));1;61;;;;;
 (((max(min(v0/8, 249), 0)*8) + -6) == ((((max(min(v0/8, 249), 0)*8) + -6) + ((v1*8) + 13)) - 1));0;172;;;;;
 (min((v0*8) + v1, v2 + 102) == min((v0*8) + v1, v2 + 102));1;48;;;;;
 (((v0 + 65)/64) != 0);0;364;;;;;
 (0 == ((0 + (max(v0*4, -6) + 6)) - 1));0;59;;;;;
 ((((max((((v0 + v1) + 7)/8)*8, 1994) - v2) + 275)/252) == (((max((((v0 + v1) + 7)/8)*8, 1994) - v2) + 275)/252));1;104;;;;;
 (((min((v0*36) + ((max(min(v1/18, 13), -1) + 1)*36), 464)/2)*2) == min((v0*36) + ((max(min(v1/18, 13), -1) + 1)*36), 464));1;155;;;;;
 (max(min(min(min(((v3 - ((v4*264) + v5)) + 267)/4, (((v1 + v2) - ((v4*264) + v5)) + 2)/4), ((min(v3 + 262, v1 + v2) - ((v4*264) + v5)) + 5)/4), (0 + ((min(v6, -236) + 510)/4)) - 1) + 1, min(max(((v2 - ((v4*264) + v5)) + 9)/4, 0), ((min(v6, -236) + 510)/4) + 0)) <= min(max(((v2 - ((v4*264) + v5)) + 9)/4, 0), ((min(v6, -236) + 510)/4) + 0));0;2907;;;;;
 (min(125 - (v0*8), v1 - ((v0*8) + (v2*125))) == min(125 - (v0*8), v1 - ((v0*8) + (v2*125))));1;55;;;;;
 (min(max(min(v0 + v1, 1875), -124) + 62, v2) == min(max(min(v0 + v1, 1875), -124) + 62, v2));1;51;;;;;
 (((min(v0 - v1, 0)*8) + -3) == ((((min(v0 - v1, 0)*8) + -3) + ((min(v0 - v1, 0)*-8) + 8)) - 1));0;115;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5)*8) - ((v2/4)*501)) - (max(min((v1/63)*8, 285), 36)*8)) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5)*8) - ((v2/4)*501)) - (max(min((v1/63)*8, 285), 36)*8)));1;97;;;;;
 (min(max(((v0 - v1) + 3)/4, 0), ((v2 - v1) + 3)/4) == min(max(((v0 - v1) + 3)/4, 0), ((v2 - v1) + 3)/4));1;75;;;;;
 (min(max(max(min(min((((v0 + v1) + 51)/4) - ((v2/125)*32), ((v3 - (v2/125))*32) + 45), ((min((v3*128) + 129, v0 + v1) + 54)/4) - ((v2/125)*32)), ((v1 + 54)/4) - ((v2/125)*32)), -1), (v4*32) + 46) == min(max(max(min(min((((v0 + v1) + 51)/4) - ((v2/125)*32), ((v3 - (v2/125))*32) + 45), ((min((v3*128) + 129, v0 + v1) + 54)/4) - ((v2/125)*32)), ((v1 + 54)/4) - ((v2/125)*32)), -1), (v4*32) + 46));1;201;;;;;
 (((max(min(((v0 + v1) + 7)/8, 249), 0)*8) - ((v2*4) + v3)) == ((max(min(((v0 + v1) + 7)/8, 249), 0)*8) - ((v2*4) + v3)));1;84;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (0 <= 0)) && (0 >= 0)) && (((v2*8) + v3) <= ((v2*8) + v3))) && (((v2*8) + v3) >= ((v2*8) + v3)));1;171;;;;;
 (min(1965 - max(min((v0*148) + ((((v1/63) + (v2*8))*64) + (v3*264)), 2044), 45), v4 + 147) == min(1965 - max(min((v0*148) + ((((v1/63) + (v2*8))*64) + (v3*264)), 2044), 45), v4 + 147));1;109;;;;;
 (min(max(min(v0, 1999), 0) + (((v1 + 11)/4)*4), min(v2, 1992) + 8) == min(max(min(v0, 1999), 0) + (((v1 + 11)/4)*4), min(v2, 1992) + 8));1;81;;;;;
 (0 == ((0 + ((min((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - (v2*16)) - max(min((v1/63)*8, 285), 36), -26)*2) + 86)) - 1));0;1137;;;;;
 (min(((v0 + v1) + -1)/63, (v1/63) + v2) == min(((v0 + v1) + -1)/63, (v1/63) + v2));1;82;;;;;
 (min(max(((v0 - v1) + 15)/4, 0), (492 + 22)/4) == min(max(((v0 - v1) + 15)/4, 0), (492 + 22)/4));1;107;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (v2*128)) + 114) == min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (v2*128)) + 114));1;87;;;;;
 (max(min(max(min(min(v0*128, 127) + v1, 1244), 245) + (((v2 + 133)/4)*4), max(min(min(v0*128, 127) + v1, 1117), 118) + 130)*2, (max(min(min(v0*128, 127) + v1, 1244), 245)*2) + 1) == max(min(max(min(min(v0*128, 127) + v1, 1244), 245) + (((v2 + 133)/4)*4), max(min(min(v0*128, 127) + v1, 1117), 118) + 130)*2, (max(min(min(v0*128, 127) + v1, 1244), 245)*2) + 1));1;210;;;;;
 (min(85 - (v0*15), (((v1 + v2) + 63)/8) - ((v0*15) + v3)) == min(85 - (v0*15), (((v1 + v2) + 63)/8) - ((v0*15) + v3)));1;70;;;;;
 ((max(min(v0/2, 999), 0) + (v1*63)) == (max(min(v0/2, 999), 0) + (v1*63)));1;32;;;;;
 (max(min(max(((v0 - v1) + 3)/4, 0), v2 + 2), min(min(((min((v3*8) + 5, v4 + v0) - v1) + -1)/4, min(((v4 + v0) - v1)/4, ((v3*2) - (v1/4)) + 2) + -1), v2 + 1) + 1) == max(min(max(((v0 - v1) + 3)/4, 0), v2 + 2), min(min(((min((v3*8) + 5, v4 + v0) - v1) + -1)/4, min(((v4 + v0) - v1)/4, ((v3*2) - (v1/4)) + 2) + -1), v2 + 1) + 1));1;187;;;;;
 ((max(min((v0/16)*32, 4044), 45) + (v1*32)) == (max(min((v0/16)*32, 4044), 45) + (v1*32)));1;58;;;;;
 ((min((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8, (v3*8) + 7) - (((v3*2) + v4)*4)) == (min((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8, (v3*8) + 7) - (((v3*2) + v4)*4)));1;86;;;;;
 (((((((uint1)1 && ((((((max(min(v0/63, 31), 0)*2) + 0)*4) + 0) + 0) <= (((((max(min(v0/63, 31), 0)*2) + 0)*4) + 0) + 0))) && ((((((max(min(v0/63, 31), 0)*2) + ((v1*2) + 8))*4) + ((9 + 0) - 1)) + 3) >= (((((max(min(v0/63, 31), 0)*2) + ((v1*2) + 8))*4) + ((4 + 0) - 1)) + ((9 + 0) - 1)))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3));1;313;;;;;
 (max(min(9 - (v0*5), (0 + 5) - 1) + 1, min(max(0 - (v0*5), 0), 5 + 0)) <= min(max(0 - (v0*5), 0), 5 + 0));0;917;;;;;
 (((v0*128) + ((v1*1000) + v2)) == ((v0*128) + ((v1*1000) + v2)));1;31;;;;;
 (((v0*63) + ((v1*250) + (v2 + v3))) == ((v0*63) + ((v1*250) + (v2 + v3))));1;60;;;;;
 ((((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 49)/32) == (((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 49)/32));1;164;;;;;
 (min(((v0/2) + ((v1/2)*2)) + 1, v2) == min(((v0/2) + ((v1/2)*2)) + 1, v2));1;55;;;;;
 ((min((((v0 + v1) + -1)/63) - (v2*16), (v1/63) + 15) - ((v1/63) + (v3*4))) == (min((((v0 + v1) + -1)/63) - (v2*16), (v1/63) + 15) - ((v1/63) + (v3*4))));1;93;;;;;
 ((((v0 + -6)/4) - (v1*2)) == (((v0 + -6)/4) - (v1*2)));1;38;;;;;
 (((v0/4) + (((v0 % 4) + 66)/4)) == ((v0/4) + (((v0 % 4) + 66)/4)));1;49;;;;;
 (((((((v0 + v1) + 3)/4) - (v1/4)) + 132)/127) == ((((((v0 + v1) + 3)/4) - (v1/4)) + 132)/127));1;82;;;;;
 (min(v0*184, v1 + -184) == min(v0*184, v1 + -184));1;50;;;;;
 (min(541 - (max(v0 - v1, 65)*8), (min(v1 - v0, -65)*8) + 552) == min(541 - (max(v0 - v1, 65)*8), (min(v1 - v0, -65)*8) + 552));1;96;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*64)) == (max(min(v0/2, 1006), 7) + (v1*64)));1;46;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1947), -52) - max(min((v1/63)*64, 2098), 99)) + 1151)/1000) == (((max(min((((v0 + v1) + -1)/63)*64, 1947), -52) - max(min((v1/63)*64, 2098), 99)) + 1151)/1000));1;222;;;;;
 (min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60), ((v3*64) + (max(min(v1/2, 999), 0) + (v4*34))) + 28) == min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60), ((v3*64) + (max(min(v1/2, 999), 0) + (v4*34))) + 28));1;127;;;;;
 (((v0*3) + ((v1*47) + ((v2*2) + v3))) == ((v0*3) + ((v1*47) + ((v2*2) + v3))));1;52;;;;;
 (((((((v0 + v1) + 63)/8) - (v1/8)) + 133)/132) == ((((((v0 + v1) + 63)/8) - (v1/8)) + 133)/132));1;72;;;;;
 (((v0*8) + v1) >= ((((v0 - 1)*8) + v1) + 1));1;58;;;;;
 (((v0 + v1) + 93) == ((v0 + v1) + 93));1;33;;;;;
 ((((v0 - v1) + 83)/47) != 0);0;481;;;;;
 (((((v0*20) + v1)*8) + (v2*12)) == ((((v0*20) + v1)*8) + (v2*12)));1;49;;;;;
 (min(max(max((v0 + v1)*2, v2), v3 + v2), ((v0 + v1)*2) + 2) == min(max(max((v0 + v1)*2, v2), v3 + v2), ((v0 + v1)*2) + 2));1;66;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 46)/36) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 46)/36));1;228;;;;;
 (max(min(86 - (v0*11), (0 + 11) - 1) + 1, min(max(0 - (v0*11), 0), 11 + 0)) <= min(max(0 - (v0*11), 0), 11 + 0));0;840;;;;;
 (max(min((min((v0 - (v1*1040)) - ((v2/63)*64), 1040) + 14)/4, max((v3 - v4)/4, -11) + 11), (min(min((v5 + v3) + 30, v6) - v4, min((v0 - (v1*1040)) - ((v2/63)*64), 1040) + 3) + 11)/4) == max(min((min((v0 - (v1*1040)) - ((v2/63)*64), 1040) + 14)/4, max((v3 - v4)/4, -11) + 11), (min(min((v5 + v3) + 30, v6) - v4, min((v0 - (v1*1040)) - ((v2/63)*64), 1040) + 3) + 11)/4));1;188;;;;;
 (max(-592 - (v0*64), (v0*64) + 63) >= 0);0;513;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[(((min(v0*8, 388) + 4)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[(((min(v0*8, 388) + 4)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[(((min(v0*8, 388) + 4)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[(((min(v0*8, 388) + 4)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[(((min(v0*8, 388) + 4)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[(((min(v0*8, 388) + 4)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[(((min(v0*8, 388) + 4)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[(((min(v0*8, 388) + 4)*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))));1;222;;;;;
 (min(max((v0/8)*8, v1), (((v0/8) + v2)*8) + 8) == min(max((v0/8)*8, v1), (((v0/8) + v2)*8) + 8));1;53;;;;;
 (min((v0/8) + (min((v1*-32) + v2, 3) + ((min((v1*32) + 31, v2)/4)*4)), v3) == min((v0/8) + (min((v1*-32) + v2, 3) + ((min((v1*32) + 31, v2)/4)*4)), v3));1;90;;;;;
 (((((((v0 + v1) + 13)/2) - (v1/2)) + 134)/127) == ((((((v0 + v1) + 13)/2) - (v1/2)) + 134)/127));1;85;;;;;
 ((max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (((max(min(min(v1/16, 124)*2, 1), -1)*2) + v2)*4)) == (max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (((max(min(min(v1/16, 124)*2, 1), -1)*2) + v2)*4)));1;150;;;;;
 ((max(min(v0*4, 282), 33) - max(min(v1*4, 285), 36)) == (max(min(v0*4, 282), 33) - max(min(v1*4, 285), 36)));1;182;;;;;
 (max((((v0 + v1) + 127)/32) - ((v1/32) + v2), ((((v0 + v1) + 127)/32) - v2) - (v1/32)) == max((((v0 + v1) + 127)/32) - ((v1/32) + v2), ((((v0 + v1) + 127)/32) - v2) - (v1/32)));1;88;;;;;
 (min((v0*49) + v1, (((((v2*3) + v3)*8) + v4)*8) + 48) == min((v0*49) + v1, (((((v2*3) + v3)*8) + v4)*8) + 48));1;79;;;;;
 (min(((((v0 + v1)/8)*2) + v2)*4, v3 + 13) == min(((((v0 + v1)/8)*2) + v2)*4, v3 + 13));1;47;;;;;
 ((((max(((v0 + v1)/4) + ((v2*128) - (((v0 + v1) + 999)/4)), -26)*-1) - 6) + (((v0 + v1)/4) + ((((min(((((v0 + v1) % 4) + 999)/4) + (v2*-128), 127) + 6)/33)*33) + (v2*128)))) == (((max(((v0 + v1)/4) + ((v2*128) - (((v0 + v1) + 999)/4)), -26)*-1) - 6) + (((v0 + v1)/4) + ((((min(((((v0 + v1) % 4) + 999)/4) + (v2*-128), 127) + 6)/33)*33) + (v2*128)))));1;238;;;;;
 ((v0 - ((v1/4)*501)) == (v0 - ((v1/4)*501)));1;45;;;;;
 (min((v0*50) + ((v1/1000)*256), ((((v2 + v1) + -1)/1000)*256) + 482) == min((v0*50) + ((v1/1000)*256), ((((v2 + v1) + -1)/1000)*256) + 482));1;60;;;;;
 (min(max(min(((v0 + v1) + -1)/4, 499), 0) - max(min(v1/4, 499), 0), v2) == min(max(min(((v0 + v1) + -1)/4, 499), 0) - max(min(v1/4, 499), 0), v2));1;235;;;;;
 ((((min((v0*8) + ((v1 + min(v2*128, v3 + -128))/2), ((v1 + min(v2*128, v3 + -128)) + 131)/2)*-2)/2)*2) == (min((v0*8) + ((v1 + min(v2*128, v3 + -128))/2), ((v1 + min(v2*128, v3 + -128)) + 131)/2)*-2));1;116;;;;;
 ((max(min(min(v0*32, 223) + v1, 1244), 245) + (v2*8)) == (max(min(min(v0*32, 223) + v1, 1244), 245) + (v2*8)));1;44;;;;;
 (((((((uint1)1 && ((0 + (v0 + -5)) <= ((((((max(-1, 0)*16) + 0)*4) + v0) + 0) + -5))) && ((3 + (v0 + 124)) >= ((((((1*16) + 15)*4) + v0) + 3) + 0))) && ((v1 + v2) <= ((v1 + v2) + -5))) && ((v1 + v2) >= ((v1 + v2) + 0))) && (0 <= 0)) && (15 >= 15));0;189;;;;;
 (((((v0 + v1) + 7)/4) - ((v2*2) + v3)) == ((((v0 + v1) + 7)/4) - ((v2*2) + v3)));1;45;;;;;
 (((((v0 + v1) + 255)/32) - ((v2*4) + v3)) == ((((v0 + v1) + 255)/32) - ((v2*4) + v3)));1;45;;;;;
 (min(((v0*2) + v1)*2, (v2*4) + 4) == min(((v0*2) + v1)*2, (v2*4) + 4));1;67;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((((0*2) + v1)*2) + 0) + -4) <= ((v1*2) + -4))) && ((((((15*2) + v1)*2) + 3) + -4) >= (((v1*2) + 63) + -4))) && (v2 <= v2)) && (v2 >= v2));1;121;;;;;
 (((v0 + 63)/64) == ((v0 + 63)/64));1;29;;;;;
 (min(((v0 + v1) + -999)/2, ((v1/2) + (v2*503)) + -2) == min(((v0 + v1) + -999)/2, ((v1/2) + (v2*503)) + -2));1;46;;;;;
 ((((((((v0 + v1) + 1)/126) - (v1/126))*8) + 44)/36) == (((((((v0 + v1) + 1)/126) - (v1/126))*8) + 44)/36));1;73;;;;;
 (((min((((v0 + v1) + -1)/8) - (v2*16), (v1/8) + 15)*-2) + (((v1/8)*2) + v3)) == ((min((((v0 + v1) + -1)/8) - (v2*16), (v1/8) + 15)*-2) + (((v1/8)*2) + v3)));1;81;;;;;
 (0 == ((0 + ((v0*2) + 16)) - 1));0;39;;;;;
 (((v0 + v1) + -28) < (((v0 + 1) + v1) + -28));1;49;;;;;
 (((v0*8) - ((v1*4) + ((v2*8) + v3))) == ((v0*8) - ((v1*4) + ((v2*8) + v3))));1;46;;;;;
 (min(((v0 + v1) + 3)/4, v2 + 11) == min(((v0 + v1) + 3)/4, v2 + 11));1;42;;;;;
 (min((v0*8) + v1, min(((v2 + v3) + 499)/4, v1 + 31) + -7) == min((v0*8) + v1, min(((v2 + v3) + 499)/4, v1 + 31) + -7));1;74;;;;;
 (max(((v0 - v1) + 32)/1028, 0) >= ((max(((v0 - v1) + 32)/1028, 0) + max((((v0 - v1) + 1059)/1028) - max(((v0 - v1) + 32)/1028, 0), 0)) - 1));0;985;;;;;
 ((max(min(v0*8, 285), 36) + (v1*4)) == (max(min(v0*8, 285), 36) + (v1*4)));1;49;;;;;
 ((max(min((v0/8)*8, 2100), 101) + (v1*125)) == (max(min((v0/8)*8, 2100), 101) + (v1*125)));1;51;;;;;
 (((((v0 + v1)/8)*8) + -5) == ((((((v0 + v1)/8)*8) + -5) + ((v2*8) + 13)) - 1));0;134;;;;;
 ((((v0*8) + 516)/508) != 0);0;453;;;;;
 (((((((v0 + v1) + 314)/63) - (v1/63))*2) + 7) == ((((((v0 + v1) + 314)/63) - (v1/63))*2) + 7));1;64;;;;;
 ((max(min(((v0 + v1) + 3)/4, 499), 0) - v2) == (max(min(((v0 + v1) + 3)/4, 499), 0) - v2));1;90;;;;;
 (((((max(v0, 0) - v1)*8) + 1246)/1236) == ((((max(v0, 0) - v1)*8) + 1246)/1236));1;64;;;;;
 (((v0 + v1) + 550) == ((v0 + v1) + 550));1;39;;;;;
 (((((min(v0, 442) + v1) + -442)/63) + (v2*16)) == ((((min(v0, 442) + v1) + -442)/63) + (v2*16)));1;50;;;;;
 ((max(min(v0, 999), 0) + (v1*32)) == (max(min(v0, 999), 0) + (v1*32)));1;62;;;;;
 ((((v0*8) + 45)/20) != 0);0;433;;;;;
 ((max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) - (max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + (((v3*16) + ((v4*8) + v5))*4))) == (max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) - (max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + (((v3*16) + ((v4*8) + v5))*4))));1;154;;;;;
 ((((v0 - v1) + 278)/265) != 0);0;484;;;;;
 ((((min(v0*125, v1 + -125) + v2)/2) + (v3*24)) == (((min(v0*125, v1 + -125) + v2)/2) + (v3*24)));1;33;;;;;
 ((v0 - (v1*2)) == (v0 - (v1*2)));1;25;;;;;
 ((min(max((((v0 + v1) + -1)/65)*8, 239), (min((min(max((((v0 + v1) + -1)/65)*8, 239) - v2, (v3*128) + 117)/4)*4, (v3*128) + 114) + v2) + 3) - (min((v3*128) + v2, min(max((((v0 + v1) + -1)/65)*8, 239), ((v3*128) + v2) + 117) + 13) + (v4*4))) == (min(max((((v0 + v1) + -1)/65)*8, 239), (min((min(max((((v0 + v1) + -1)/65)*8, 239) - v2, (v3*128) + 117)/4)*4, (v3*128) + 114) + v2) + 3) - (min((v3*128) + v2, min(max((((v0 + v1) + -1)/65)*8, 239), ((v3*128) + v2) + 117) + 13) + (v4*4))));1;200;;;;;
 ((((max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (max(min(min(v1/16, 124)*2, 1), -1)*8)) + 1061)/1013) >= 0);1;143;;;;;
 ((((v0 + v1)/16) + (v2*3)) == (((v0 + v1)/16) + (v2*3)));1;38;;;;;
 (min(1003 - (((v0*126) + v1)*4), (((((v2 + v3) + -1)/8)*8) - ((((v0*126) + v1)*4) + v4)) + 15) == min(1003 - (((v0*126) + v1)*4), (((((v2 + v3) + -1)/8)*8) - ((((v0*126) + v1)*4) + v4)) + 15));1;107;;;;;
 (min(min(v0*2, 249) + (((v1 + 23)/4)*4), (v2*2) + 2) == min(min(v0*2, 249) + (((v1 + 23)/4)*4), (v2*2) + 2));1;83;;;;;
 ((max(min((v0/32)*16, 1036), 37) + (v1*4)) == (max(min((v0/32)*16, 1036), 37) + (v1*4)));1;63;;;;;
 (max(min(max(((v0 - (min(v1/8, 4)*8)) + 63)/32, 0), (v2/4) + 2), min(min((((v3 + v0) - (min(v1/8, 4)*8)) + 31)/32, ((max(((v4 + v1) + 23)/8, 249) - min(v1/8, 4)) + 1)/4), (v2/4) + 1) + 1) == max(min(max(((v0 - (min(v1/8, 4)*8)) + 63)/32, 0), (v2/4) + 2), min(min((((v3 + v0) - (min(v1/8, 4)*8)) + 31)/32, ((max(((v4 + v1) + 23)/8, 249) - min(v1/8, 4)) + 1)/4), (v2/4) + 1) + 1));1;220;;;;;
 (min(max(max(((max(v0, 0) - ((v1/125)*128)) + 1157)/1096, (289 - ((v1/125)*32))/274), 0), ((v2*128) + 1239)/1096) == min(max(max(((max(v0, 0) - ((v1/125)*128)) + 1157)/1096, (289 - ((v1/125)*32))/274), 0), ((v2*128) + 1239)/1096));1;110;;;;;
 (((v0*64) + (max(min(v1/2, 999), 0) + (v2*18))) == ((v0*64) + (max(min(v1/2, 999), 0) + (v2*18))));1;50;;;;;
 (((v0*4) + ((v1/2) - (((v2 + v1) + 1)/2))) == ((v0*4) + ((v1/2) - (((v2 + v1) + 1)/2))));1;48;;;;;
 ((((v0/125)*16) + (v1*18)) == (((v0/125)*16) + (v1*18)));1;63;;;;;
 (min((max(min(v0/8, 256), 7) + (((min((v1*16) + 8, v2) + 7)/16)*16)) + 8, v3) == min((max(min(v0/8, 256), 7) + (((min((v1*16) + 8, v2) + 7)/16)*16)) + 8, v3));1;104;;;;;
 (((((((uint1)1 && ((((((v0*2) + v1)*4) + 0) + -4) <= ((((v0*2) + v1)*4) + -4))) && ((((((v0*2) + v1)*4) + 3) + -4) >= (((((v0*2) + v1)*4) + 3) + -4))) && (((((v2 + v3) + v4) + -4) % 4) <= ((((v2 + v3) + v4) + -4) % 4))) && (((((v2 + v3) + v4) + -4) % 4) >= ((((v2 + v3) + v4) + -4) % 4))) && (v5 <= v5)) && (v5 >= v5));1;211;;;;;
 (min(max(min(v0*8, 2074), 75), min(v1*8, 1962) + 122) == min(max(min(v0*8, 2074), 75), min(v1*8, 1962) + 122));1;60;;;;;
 (((max(min(v0/16, 126), 2)*2) + ((v1*4) - min(max(v2*2, -1), ((max(min(v0/16, 126), 2) + (v1*2))*2) + -2))) == ((max(min(v0/16, 126), 2)*2) + ((v1*4) - min(max(v2*2, -1), ((max(min(v0/16, 126), 2) + (v1*2))*2) + -2))));1;125;;;;;
 ((((((((v0 + v1) + 1999)/2000) - (v1/2000))*256) + 919)/392) == (((((((v0 + v1) + 1999)/2000) - (v1/2000))*256) + 919)/392));1;88;;;;;
 ((min((v0*8) + 8, v1) + ((v2*4) + v3)) == (min((v0*8) + 8, v1) + ((v2*4) + v3)));1;33;;;;;
 (((v0/15) + 1) != 0);0;300;;;;;
 ((((((v0*257) + v1) + v2)*2) + -14) >= (((((((v0*257) + v1) + v2)*2) + -14) + 2) - 1));0;42;;;;;
 (0 >= ((0 + (41 - max((v0 % 4)*11, 30))) - 1));0;49;;;;;
 ((v0 - (((v1*125) + ((v2*16) + v3))*4)) == (v0 - (((v1*125) + ((v2*16) + v3))*4)));1;52;;;;;
 (((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36))*8) + 844)/502) == ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36))*8) + 844)/502));1;240;;;;;
 ((((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37)) + 213)/127) == (((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37)) + 213)/127));1;248;;;;;
 (((v0*12) + ((v1*4) + (v2 + v3))) == ((v0*12) + ((v1*4) + (v2 + v3))));1;55;;;;;
 (min((v0*4) + -4, v1) == min((v0*4) + -4, v1));1;31;;;;;
 (max(min(v0, 1003)*2, (max(min(v0, 1003)*2, 7) + min(v1, -48)) + 48) == max(min(v0, 1003)*2, (max(min(v0, 1003)*2, 7) + min(v1, -48)) + 48));1;75;;;;;
 (((v0*4) + (((v1 + v2)/16) + (v3*4))) == ((v0*4) + (((v1 + v2)/16) + (v3*4))));1;39;;;;;
 (min(max(min(v0*8, 2311), 312), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7) + 1) == min(max(min(v0*8, 2311), 312), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7) + 1));1;2003;;;;;
 (((((((v0 + v1) + -1)/250) - (v1/250)) + 3)/2) == ((((((v0 + v1) + -1)/250) - (v1/250)) + 3)/2));1;65;;;;;
 (((((v0 + v1) + -1)/63) - v2) == ((((v0 + v1) + -1)/63) - v2));1;73;;;;;
 ((((max(min(((v0 + v1) + 135)/64, 31), 0) - max(min(v1/64, 36), 5)) + 16)/11) == (((max(min(((v0 + v1) + 135)/64, 31), 0) - max(min(v1/64, 36), 5)) + 16)/11));1;307;;;;;
 (max(min(1999, (((v1*4) + v2) + 4) - 1) + 1, min(max(0, (v1*4) + v2), 4 + ((v1*4) + v2))) <= min(max(0, (v1*4) + v2), 4 + ((v1*4) + v2)));0;1310;;;;;
 (min(((v0/8) + v1)*8, v2 + 229) == min(((v0/8) + v1)*8, v2 + 229));1;76;;;;;
 (min(max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45), v2) == min(max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45), v2));1;228;;;;;
 (min(((v0*126) + v1) + 126, v2) == min(((v0*126) + v1) + 126, v2));1;51;;;;;
 ((min(max(v0, -1)*4, -1) + -9) >= (((min(max(v0, -1)*4, -1) + -9) + (12 - min(max(v0, -1)*4, -1))) - 1));0;101;;;;;
 (min(min(v0, 2055) + (v1*4), max(v0, -7) + 65) == min(min(v0, 2055) + (v1*4), max(v0, -7) + 65));1;61;;;;;
 ((((v0*2) + v1)*4) == (((v0*2) + v1)*4));1;80;;;;;
 (min(max(min(v0, 249), 0), v1 + -4) == min(max(min(v0, 249), 0), v1 + -4));1;31;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 128)/126) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 128)/126));1;240;;;;;
 (((((((v0 + v1) + 135)/64) - (v1/64))/5) + 2) == ((((((v0 + v1) + 135)/64) - (v1/64))/5) + 2));1;89;;;;;
 (((max(min(v0/4, 499), 0) + (v1*8)) - min(max(min(((v2 + v0) + 3)/4, 499), 0) - (v3*32), max(min(v0/4, 499), 0) + 28)) == ((max(min(v0/4, 499), 0) + (v1*8)) - min(max(min(((v2 + v0) + 3)/4, 499), 0) - (v3*32), max(min(v0/4, 499), 0) + 28)));1;136;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 666)/667) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 666)/667));1;143;;;;;
 (min((v0*8) + v1, max(v2, 0) + 10) == min((v0*8) + v1, max(v2, 0) + 10));1;34;;;;;
 (((min(v0*29, 56) + (min(v1*15, 14) + (min(v2*2, 13) + v3))) + v4) < ((min(v0*29, 56) + (min(v1*15, 14) + (min(v2*2, 13) + (v3 + 1)))) + v4));1;152;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*8) + v3)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*8) + v3)));1;86;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 13) == min(((v0 + v1) + -1)/8, v2 + 13));1;39;;;;;
 (((((v0 + v1) + 251)/2) - ((v2*4) + (((v0 + v1)/2) + (v3*12)))) == ((((v0 + v1) + 251)/2) - ((v2*4) + (((v0 + v1)/2) + (v3*12)))));1;47;;;;;
 (min(max(max(((v0 - v1) + 3)/4, min(min(((21 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min((v2*8) + 22, v3 + v0) - v1) + -1)/4) + 1), 0), v4) == min(max(max(((v0 - v1) + 3)/4, min(min(((21 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min((v2*8) + 22, v3 + v0) - v1) + -1)/4) + 1), 0), v4));1;208;;;;;
 (max(min(min(min(min(min(min(min(min((max(min(((v2 + v3) + -1)/63, 31), 0) - v4) + 2, 30 - v4), 30 - v4), 30 - v4), min(((v0 + v1) + -25)/64, 30) - v4), min(((v0 + v1) + -25)/64, 30) - v4), min(((v0 + v1) + 31)/64, 31) - v4), min(((v0 + v1) + 31)/64, 31) - v4), (0 + 9) - 1) + 1, min(max(max(max(max(max(max(max(0 - v4, 0 - v4), 1 - v4), 1 - v4), 1 - v4), max((v1 + 95)/64, 1) - v4), max((v1 + 95)/64, 1) - v4), 0), 9 + 0)) <= min(max(max(max(max(max(max(max(0 - v4, 0 - v4), 1 - v4), 1 - v4), 1 - v4), max((v1 + 95)/64, 1) - v4), max((v1 + 95)/64, 1) - v4), 0), 9 + 0));0;2650;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 98)/89) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 98)/89));1;79;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((7*4) + v0) + 3) >= (((7*4) + v0) + 3))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (6 >= 6));1;138;;;;;
 ((max(min(((v0 + v1) + 47)/16, 124), 0) - ((v2*2) + v3)) == (max(min(((v0 + v1) + 47)/16, 124), 0) - ((v2*2) + v3)));1;83;;;;;
 (max(min((v0 + v1)/8, 249), (max(min((v0 + v1)/8, 249), 0) + -18) + 18) == max(min((v0 + v1)/8, 249), (max(min((v0 + v1)/8, 249), 0) + -18) + 18));1;104;;;;;
 (0 == ((0 + ((min((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - (v2*16)) - max(min((v1/63)*8, 285), 36), -26)*2) + 86)) - 1));0;239;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - (v2*32)) - (v3*12)) - min((v1/16)*8, 4)) == (((max((((v0 + v1) + 15)/16)*8, 995) - (v2*32)) - (v3*12)) - min((v1/16)*8, 4)));1;94;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((((v2*125) + v3) + v4) <= (((v2*125) + v3) + v4))) && ((((v2*125) + v3) + v4) >= (((v2*125) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5));1;163;;;;;
 (((v0*126) + ((v1*252) + v2)) == ((v0*126) + ((v1*252) + v2)));1;40;;;;;
 (min(max(min(v0, 249), 0), v1 + -4) == min(max(min(v0, 249), 0), v1 + -4));1;46;;;;;
 (min(v0*4, ((max(((v1 + v2) + 7)/8, 255)/16)*16) + 35) == min(v0*4, ((max(((v1 + v2) + 7)/8, 255)/16)*16) + 35));1;86;;;;;
 (((min(max(v0, 0) - (v1*4), ((v2*64) + v3) + 3)*-2) + ((((v2*64) + v3)*2) + v4)) == ((min(max(v0, 0) - (v1*4), ((v2*64) + v3) + 3)*-2) + ((((v2*64) + v3)*2) + v4)));1;105;;;;;
 ((((((v0 + v1) + 11)/2) - (v2*338)) - (v1/2)) == (((((v0 + v1) + 11)/2) - (v2*338)) - (v1/2)));1;35;;;;;
 (v0 == ((v0 + 2) - 1));0;711;;;;;
 ((((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 267)/250) == (((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 267)/250));1;131;;;;;
 (min(((v0 + v1) + 31)/4, v2 + 13) == min(((v0 + v1) + 31)/4, v2 + 13));1;58;;;;;
 (((v0 - max(min((v1/63)*8, 285), 36))*2) == ((v0 - max(min((v1/63)*8, 285), 36))*2));1;66;;;;;
 ((max(v0, 9) - min(v1, 2007)) == (max(v0, 9) - min(v1, 2007)));1;46;;;;;
 (((v0*131) + ((v1/65)*8)) == ((v0*131) + ((v1/65)*8)));1;69;;;;;
 (((((max(v0, 0) - v1)*8) + 854)/828) == ((((max(v0, 0) - v1)*8) + 854)/828));1;59;;;;;
 ((((v0*128)/32)*32) == (v0*128));1;20;;;;;
 (((v0 - (v1*8)) - (v2/65)) == ((v0 - (v1*8)) - (v2/65)));1;39;;;;;
 (min(((v0 + v1) + 499)/8, v2 + 31) == min(((v0 + v1) + 499)/8, v2 + 31));1;73;;;;;
 ((max(min(v0/2, 1003)*2, 7) + (v1*126)) == (max(min(v0/2, 1003)*2, 7) + (v1*126)));1;81;;;;;
 (min((v0*96) + 92, v1) == min((v0*96) + 92, v1));1;292;;;;;
 (((min(min(v1*8, 4) + (((v2/65)*8) + 72), (v3*-84) + ((((v4 + v2) + -1)/65)*8))/4)*4) == min(min(v1*8, 4) + (((v2/65)*8) + 72), (v3*-84) + ((((v4 + v2) + -1)/65)*8)));0;1574;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 10)/8) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 10)/8));1;193;;;;;
 (min(37 - (max(v0*2, 71)/2), max((72 - max(v0*2, 71))/2, 36 - (max(v0*2, 71)/2)) + 1) == min(37 - (max(v0*2, 71)/2), max((72 - max(v0*2, 71))/2, 36 - (max(v0*2, 71)/2)) + 1));1;108;;;;;
 (min((min((v0*63) + v1, 249)*4) + v2, max(min((((v3 + v4) + 63)/32)*32, 1994), -5) + 196) == min((min((v0*63) + v1, 249)*4) + v2, max(min((((v3 + v4) + 63)/32)*32, 1994), -5) + 196));1;109;;;;;
 ((min(v0*288, v1 + -288) + ((v2*96) + v3)) == (min(v0*288, v1 + -288) + ((v2*96) + v3)));1;49;;;;;
 ((((v0*-128)/16)*16) == (v0*-128));1;45;;;;;
 (((min(v0*2, 123) + v1) + v2) < ((min(v0*2, 123) + (v1 + 1)) + v2));1;877;;;;;
 (((max(min((v2*-252) + max(max(-3 - (min(((v3 + v4) + -1)/4, ((v4/4) + (v5*125)) + 124)*4), (min(((v3 + v4) + -1)/4, ((v4/4) + (v5*125)) + 124)*4) + -2495), 0), -248), -500)/4)*4) == max(min((v2*-252) + max(max(-3 - (min(((v3 + v4) + -1)/4, ((v4/4) + (v5*125)) + 124)*4), (min(((v3 + v4) + -1)/4, ((v4/4) + (v5*125)) + 124)*4) + -2495), 0), -248), -500));0;2574;;;;;
 (((max(min(min((((v0 + v1)/8) + (v2*7)) + 1, v3) + v4, 251), 2)*8) + ((v5*4) + v6)) == ((max(min(min((((v0 + v1)/8) + (v2*7)) + 1, v3) + v4, 251), 2)*8) + ((v5*4) + v6)));1;93;;;;;
 ((max(min(min(v0*8, v1 + 56), 2058), 59) + (((v2 + 69)/4)*4)) == (max(min(min(v0*8, v1 + 56), 2058), 59) + (((v2 + 69)/4)*4)));1;88;;;;;
 ((min((max(min(v0, 2002), 3) + 29)/16, (max(min(v1 + v0, 1999), 0)/16) - (v2*4)) - ((max(min(v0, 2002), 3) + -3)/16)) == (min((max(min(v0, 2002), 3) + 29)/16, (max(min(v1 + v0, 1999), 0)/16) - (v2*4)) - ((max(min(v0, 2002), 3) + -3)/16)));1;137;;;;;
 (min((v0*12) + v1, v2 + 98) == min((v0*12) + v1, v2 + 98));1;41;;;;;
 ((min(v0, 1) + ((v1*3) + v2)) == (min(v0, 1) + ((v1*3) + v2)));1;38;;;;;
 ((max(min(v0, 499), 0) + (v1*4)) == (max(min(v0, 499), 0) + (v1*4)));1;38;;;;;
 (min((min(v0*12, 8) + v1) + 1, v2) == min((min(v0*12, 8) + v1) + 1, v2));1;63;;;;;
 ((((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 456)/251) == (((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 456)/251));1;214;;;;;
 (((((v0*16) + v1)*2) + -558) == ((((((v0*16) + v1)*2) + -558) + ((max(v0*16, 79)*-2) + 194)) - 1));0;131;;;;;
 (((v0*8) + -1) == ((((v0*8) + -1) + (((v1 - v0)*8) + 20)) - 1));0;91;;;;;
 (((v0 + 251)/252) == ((v0 + 251)/252));1;694;;;;;
 (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16)) + 11)/9) == ((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16)) + 11)/9));1;87;;;;;
 ((min((((v0 + v1) + 1)/2) - (v2*504), (v1/2) + 503) - ((v3*4) + ((v1/2) + (v4*252)))) == (min((((v0 + v1) + 1)/2) - (v2*504), (v1/2) + 503) - ((v3*4) + ((v1/2) + (v4*252)))));1;96;;;;;
 ((max((v0*84) - v1, -84) + (v2*4)) == (max((v0*84) - v1, -84) + (v2*4)));1;61;;;;;
 (min(80 - (((v0*5) + ((v1*3) + v2))*4), 19 - (((v1*3) + v2)*4)) == min(80 - (((v0*5) + ((v1*3) + v2))*4), 19 - (((v1*3) + v2)*4)));1;86;;;;;
 (((max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*63)) - max(min(v1/8, 256), 7)) == ((max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*63)) - max(min(v1/8, 256), 7)));1;95;;;;;
 ((((v0*4) + v1) - (((v2 + v3) + -1)/8)) == (((v0*4) + v1) - (((v2 + v3) + -1)/8)));1;51;;;;;
 ((((v0 - v1) + 28)/17) == (((v0 - v1) + 28)/17));1;53;;;;;
 ((((v0 - v1) + 83)/47) != 0);0;469;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 606)/500) == (((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 606)/500));1;243;;;;;
 (((((((v0 + v1)/250) - (v1/250))*64) + 267)/260) == ((((((v0 + v1)/250) - (v1/250))*64) + 267)/260));1;59;;;;;
 (((min(v0 - v1, 2) + 13)/4) == ((min(v0 - v1, 2) + 13)/4));1;55;;;;;
 ((((v0*8000)/8)*8) == (v0*8000));1;62;;;;;
 (min(v0*8, v1 + 383) == min(v0*8, v1 + 383));1;35;;;;;
 (((max(min(((v0 + v1) + 7)/8, 249), 0)*2) - ((v2*2) + ((v3*2) + v4))) == ((max(min(((v0 + v1) + 7)/8, 249), 0)*2) - ((v2*2) + ((v3*2) + v4))));1;92;;;;;
 (((((((uint1)1 && ((max((((min(v0, 4) + v1) + -4)/63)*64, min(v2*-64, 96) + (((((min(v0, 4) + v1) + -4)/63) + v2)*64)) + -45) <= (((((((min(v0, 4) + v1) + -4)/63)*8) + -5)*8) + max(min(v2*-64, 96) + -101, -5)))) && (((((((min(v0, 4) + v1) + -4)/63) + v2)*64) + 61) >= ((((((v2*8) + 13) + (((((min(v0, 4) + v1) + -4)/63)*8) + -5)) - 1)*8) + 5))) && ((max(v3*64, (v4*8) + 43) + -45) <= ((v4*8) + -5))) && (((v4*8) + 5) >= ((v4*8) + ((11 + -5) - 1)))) && (((((v5*2) + v6)*4) + 0) <= (((v5*2) + v6)*4))) && (((((v5*2) + v6)*4) + 3) >= ((((v5*2) + v6)*4) + 3)));0;558;;;;;
 (min(((v0*68) + v1) + 64, v2) == min(((v0*68) + v1) + 64, v2));1;51;;;;;
 ((max(v0 + v1, 2000) - ((((v2*8) + v3)*4) + v4)) == (max(v0 + v1, 2000) - ((((v2*8) + v3)*4) + v4)));1;72;;;;;
 (max((((v0 - v1)*8) + 44)/1044, 0) >= ((max((((v0 - v1)*8) + 44)/1044, 0) + (((((v0 - v1)*8) + 1091)/1044) - max((((v0 - v1)*8) + 44)/1044, 0))) - 1));0;1565;;;;;
 (((v0*4) + v1) == ((((v0*4) + v1) + (63 - max(v0*4, 59))) - 1));0;114;;;;;
 ((min((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*4)) - max(min(v1/2, 999), 0), 3) + 1) == (min((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*4)) - max(min(v1/2, 999), 0), 3) + 1));1;122;;;;;
 ((v0 + -2) >= (((v0 - 1) + 3) + 1));0;50;;;;;
 (min((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1, v2) == min((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1, v2));1;130;;;;;
 (max(-1245 - ((max(v0, 0) - v1)*8), ((max(v0, 0) - v1)*8) + 10) >= 0);0;872;;;;;
 (((max(v0, 0) - v1) + 1) != 0);0;427;;;;;
 (min(((v0 + v1) + 1)/2, (min(v2*64, 440) + v3) + 63) == min(((v0 + v1) + 1)/2, (min(v2*64, 440) + v3) + 63));1;71;;;;;
 (((v0*12) + ((v1*3) + (max(min(min(v2*32, 223) + v3, 1244), 245) - max(min(min(v2*32, 223) + v3, 1213), 214)))) == ((v0*12) + ((v1*3) + (max(min(min(v2*32, 223) + v3, 1244), 245) - max(min(min(v2*32, 223) + v3, 1213), 214)))));1;249;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 999)/1000) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 999)/1000));1;152;;;;;
 (((max(min(v0*8, 1938), -61) - (v1*12)) - max(min(v2*8, 2044), 45)) == ((max(min(v0*8, 1938), -61) - (v1*12)) - max(min(v2*8, 2044), 45)));1;88;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8))/63) + 1) == ((((((v0 + v1) + -1)/8) - (v1/8))/63) + 1));1;182;;;;;
 (((v0*144) + ((v1/500)*512)) == ((v0*144) + ((v1/500)*512)));1;51;;;;;
 ((((((((v0 + v1) + 314)/63) - (v1/63))*8) + 104)/79) == (((((((v0 + v1) + 314)/63) - (v1/63))*8) + 104)/79));1;82;;;;;
 (min(max(min(min(v0*6, 122) + v1, 1117), 118) + 2, v2) == min(max(min(min(v0*6, 122) + v1, 1117), 118) + 2, v2));1;66;;;;;
 ((((min(v0*64, 936) + (v1 + v2))/16) + ((v3/2)*2)) == (((min(v0*64, 936) + (v1 + v2))/16) + ((v3/2)*2)));1;56;;;;;
 ((((v0*8) + 57)/18) != 0);0;414;;;;;
 (((v0 - (v1*128)) - min((v2/16)*8, 4)) == ((v0 - (v1*128)) - min((v2/16)*8, 4)));1;51;;;;;
 ((((v0 - v1) + 27)/16) == (((v0 - v1) + 27)/16));1;66;;;;;
 ((min(v0, 0)*4) == (((min(v0, 0)*4) + ((v1*4) + 4)) - 1));0;80;;;;;
 ((((112 - max(min(max(min(v0, 263), 14) + (((v1 + 23)/4)*4), max(min(v0, 249), 0) + 20)*8, ((max(min(v0, 263), 14)*8) - v2) + 3))/4) + (v3*2)) == (((112 - max(min(max(min(v0, 263), 14) + (((v1 + 23)/4)*4), max(min(v0, 249), 0) + 20)*8, ((max(min(v0, 263), 14)*8) - v2) + 3))/4) + (v3*2)));1;174;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*64) + 885)/734) == (((((((v0 + v1) + 62)/63) - (v1/63))*64) + 885)/734));1;114;;;;;
 ((v0 + -305) >= (((v0 + -305) + 126) - 1));0;33;;;;;
 ((max(max(min(v0/8, 256), 7)*8, 75) + (v1*4)) == (max(max(min(v0/8, 256), 7)*8, 75) + (v1*4)));1;59;;;;;
 (min((((v0 + v1) + 251)/63) - (v1/63), v2) == min((((v0 + v1) + 251)/63) - (v1/63), v2));1;52;;;;;
 (0 == ((0 + ((min(v0, -10)*2) + 42)) - 1));0;44;;;;;
 (((min(v0 + 9, v1)*-8) + ((v2*4) + ((v1*8) + (v3*20)))) == ((min(v0 + 9, v1)*-8) + ((v2*4) + ((v1*8) + (v3*20)))));1;91;;;;;
 (0 == ((0 + ((max(min((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7)*2) - v2, -29), -30)*4) + 120)) - 1));0;190;;;;;
 ((v0 - ((v1*254) + v2)) == (v0 - ((v1*254) + v2)));1;44;;;;;
 (min((max(min(v0/8, 254), 5) + v1)*8, v2 + 951) == min((max(min(v0/8, 254), 5) + v1)*8, v2 + 951));1;55;;;;;
 (min(min(min(v0 + 12, max(min(v1/2, 999), 0) + v2)*2, 1995) + 4, v3) == min(min(min(v0 + 12, max(min(v1/2, 999), 0) + v2)*2, 1995) + 4, v3));1;114;;;;;
 (min(max(max(max(min(v0, 2082), 83) + -83, v1), v2 + v1), (max(min(v0, 2082), 83) + v3) + -80) == min(max(max(max(min(v0, 2082), 83) + -83, v1), v2 + v1), (max(min(v0, 2082), 83) + v3) + -80));1;116;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 51)/36) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 51)/36));1;79;;;;;
 (min(1003 - (((v0*126) + v1)*4), (((((v2 + v3) + -1)/8)*8) - ((((v0*126) + v1)*4) + v4)) + 12) == min(1003 - (((v0*126) + v1)*4), (((((v2 + v3) + -1)/8)*8) - ((((v0*126) + v1)*4) + v4)) + 12));1;112;;;;;
 (((v0*8) + (((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004) + (v1*8000))) == ((v0*8) + (((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004) + (v1*8000))));1;75;;;;;
 (min(((v0*2) + v1)*4, ((((v2 + v3) + 124)/63)*8) + 9) == min(((v0*2) + v1)*4, ((((v2 + v3) + 124)/63)*8) + 9));1;75;;;;;
 (max(min(2006 - (v0*2), (0 + 252) - 1) + 1, min(max(7 - (v0*2), 0), 252 + 0)) <= min(max(7 - (v0*2), 0), 252 + 0));0;1026;;;;;
 ((((29 - min(((v0/8) + (v1*16))*8, (min(((v2 + v0) + 23)/8, ((v0/8) + (v1*16)) + -3)*8) + 26))/4) + (min(((v2 + v0) + 23)/8, ((v0/8) + (v1*16)) + 13)*2)) == (((29 - min(((v0/8) + (v1*16))*8, (min(((v2 + v0) + 23)/8, ((v0/8) + (v1*16)) + -3)*8) + 26))/4) + (min(((v2 + v0) + 23)/8, ((v0/8) + (v1*16)) + 13)*2)));1;151;;;;;
 ((((v0*32) + 354)/276) != 0);0;410;;;;;
 (((((((uint1)1 && (((((((v0*72) + v1)*2) + 0)*4) + 0) <= (((v0*72) + v1)*8))) && (((((((v0*72) + v1)*2) + 142)*4) + 3) >= ((((v0*72) + v1) + 71)*8))) && (((v2 + v3) + -301) <= ((v2 + v3) + -301))) && (((v2 + v3) + -301) >= ((v2 + v3) + -301))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)));1;191;;;;;
 ((56 - ((v0 + v1)*8)) > (305 - ((v0 + v1)*8)));0;46;;;;;
 (((((((v0 + v1) + 31)/32) - (v1/32))/16) + 1) == ((((((v0 + v1) + 31)/32) - (v1/32))/16) + 1));1;71;;;;;
 ((((min((v2*1024) + ((v1/32)*32), (min((v2*32) + ((v1/32) + -1), ((v3 + v1) + -1)/32)*32) + 76)*-1)/4)*4) == (min((v2*1024) + ((v1/32)*32), (min((v2*32) + ((v1/32) + -1), ((v3 + v1) + -1)/32)*32) + 76)*-1));0;3110;;;;;
 (((v0*8) + v1) == ((v0*8) + v1));1;54;;;;;
 ((((((v0 + v1) + 47)/8) - ((v1/8) + (v2*16))) + 2) == (((((v0 + v1) + 47)/8) - ((v1/8) + (v2*16))) + 2));1;66;;;;;
 (((v0*25) + ((v1/1000)*256)) == ((v0*25) + ((v1/1000)*256)));1;37;;;;;
 (max(87 - max((v0 % 8)*11, 76), 86 - max((v0 % 8)*11, 75)) == max(87 - max((v0 % 8)*11, 76), 86 - max((v0 % 8)*11, 75)));1;80;;;;;
 (min(((((v0 + v1) + -1)/1000) - (v1/1000))*16, (v2*16) + 1) == min(((((v0 + v1) + -1)/1000) - (v1/1000))*16, (v2*16) + 1));1;89;;;;;
 (((((((v0 + v1) + 7)/2) - (v1/2)) + 263)/256) == ((((((v0 + v1) + 7)/2) - (v1/2)) + 263)/256));1;71;;;;;
 (((v0*252) + (min(v1*128, 124) + (max(min(v2/2, 999), 0)*2))) == ((v0*252) + (min(v1*128, 124) + (max(min(v2/2, 999), 0)*2))));1;93;;;;;
 ((-4 - max(v0, 0)) == (-4 - max(v0, 0)));1;43;;;;;
 (((max(min(v0 + v1, 249), 0)*8) + -12) == ((((max(min(v0 + v1, 249), 0)*8) + -12) + 19) - 1));0;107;;;;;
 ((v0 - (v1*1009)) == (v0 - (v1*1009)));1;31;;;;;
 (((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/12)*12) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -25)*4))) + 100) == ((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/12)*12) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -25)*4))) + 100));1;162;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*16)) == (max(min(v0/2, 1006), 7) + (v1*16)));1;1042;;;;;
 ((((max(v0*8, -4)*-1)/4)*4) == (max(v0*8, -4)*-1));0;812;;;;;
 (((min((v0*-32) + 0, -32)/4)*4) == min((v0*-32) + 0, -32));1;68;;;;;
 ((min(v0*504, 500) + (min((v1*1004) + 1002, v2) + v3)) == (min(v0*504, 500) + (min((v1*1004) + 1002, v2) + v3)));1;64;;;;;
 (((v0*127) + ((v1/8)*8)) == ((v0*127) + ((v1/8)*8)));1;987;;;;;
 (min(75 - (((v0*3) + v1)*3), (v2 - ((((v0*3) + v1)*3) + ((v3*76) + v4))) + 12) == min(75 - (((v0*3) + v1)*3), (v2 - ((((v0*3) + v1)*3) + ((v3*76) + v4))) + 12));1;95;;;;;
 (((v0*4) + (max(min(min(v1*12, 20) + (v2 + v3), 1999), 0) - max(min(min(v1*12, 20) + (v2 + v3), 1988), -11))) == ((v0*4) + (max(min(min(v1*12, 20) + (v2 + v3), 1999), 0) - max(min(min(v1*12, 20) + (v2 + v3), 1988), -11))));1;197;;;;;
 (((min(max(max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127) + 11, min(v1*128, v3 + -128) + v2) - min(min(max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) + -11, (v1*128) + v2), (v3 + v2) + -128), -96)/4)*4) == min(max(max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127) + 11, min(v1*128, v3 + -128) + v2) - min(min(max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) + -11, (v1*128) + v2), (v3 + v2) + -128), -96));0;2532;;;;;
 ((((v0*2048) + 5045)/789) != 0);0;435;;;;;
 (((((v0 + v1) + 11)/2) - ((((v2*2) + v3)*2) + v4)) == ((((v0 + v1) + 11)/2) - ((((v2*2) + v3)*2) + v4)));1;68;;;;;
 ((((-125 - ((min(v0*125, v1 + -125) + v2) % 32))/32) + (v3*2)) == (((-125 - ((min(v0*125, v1 + -125) + v2) % 32))/32) + (v3*2)));1;77;;;;;
 ((((max((v0*-125) + ((v1 + min(v2*500, v3 + -500))/2), ((v1 + min(v2*500, v3 + -500)) + 3)/2)*-2)/2)*2) == (max((v0*-125) + ((v1 + min(v2*500, v3 + -500))/2), ((v1 + min(v2*500, v3 + -500)) + 3)/2)*-2));1;113;;;;;
 (((v0/12) + 1) != 0);0;257;;;;;
 (((((((v0 + v1) + 71)/8) - (v1/8)) + 137)/132) == ((((((v0 + v1) + 71)/8) - (v1/8)) + 137)/132));1;112;;;;;
 (min((v0*2) + 4, v1) == min((v0*2) + 4, v1));1;31;;;;;
 (((v0*-64) + (((((v1 + v2) + 3)/2) - (v3*252)) - (v2/2))) == ((v0*-64) + (((((v1 + v2) + 3)/2) - (v3*252)) - (v2/2))));1;75;;;;;
 (max(min(max(((v0 - ((v1/8)*8)) + 51)/32, 0), (v2 + 6)/4), min((((v3 + v0) - ((v1/8)*8)) + -14)/32, (((((v4 + v1) + 23)/8) - (v1/8)) + -1)/4) + 1) == max(min(max(((v0 - ((v1/8)*8)) + 51)/32, 0), (v2 + 6)/4), min((((v3 + v0) - ((v1/8)*8)) + -14)/32, (((((v4 + v1) + 23)/8) - (v1/8)) + -1)/4) + 1));1;160;;;;;
 (max(-333 - (v0*32), (v0*32) + 71) >= 0);0;770;;;;;
 (((((((uint1)1 && (((v2*8) + v3) <= ((v2*8) + v3))) && ((((v2*8) + v3) + 7) >= (((v2*8) + v3) + 7))) && ((((0*4) + 0) + (v1/8)) <= (v1/8))) && ((((15*4) + 3) + ((v1/8) + ((((((v0 + v1) + 7)/8) - (v1/8))/64)*64))) >= (((v0 + v1) + 7)/8))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)));0;1654;;;;;
 (min((v0*4) + v1, (v2*8) + -54) == min((v0*4) + v1, (v2*8) + -54));1;89;;;;;
 (min((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7)) + 1, v2) == min((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7)) + 1, v2));1;250;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0) + 11, v2) == min(max(min(((v0 + v1) + 7)/8, 249), 0) + 11, v2));1;67;;;;;
 (((v0 + 338)/336) != 0);0;1579;;;;;
 (((v0*8) + -3) >= ((((v0*8) + -3) + 11) - 1));0;44;;;;;
 (-5 == ((-5 + (311 - max(min(((v0*4) + v1)*8, 311), 302))) - 1));0;104;;;;;
 (((v0 + 138)/128) == ((v0 + 138)/128));1;26;;;;;
 (max((min(v0*8, v1 + 437) + v2) + 553, v1) == max((min(v0*8, v1 + 437) + v2) + 553, v1));1;52;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((((0*2) + v1)*2) + 0) + -4) <= ((v1*2) + -4))) && ((((((15*2) + v1)*2) + 3) + -4) >= (((v1*2) + 63) + -4))) && (v2 <= v2)) && (v2 >= v2));1;135;;;;;
 (min(v0*4, ((max(min(((v1 + v2) + 7)/8, 249), 0)/8)*8) + 13) == min(v0*4, ((max(min(((v1 + v2) + 7)/8, 249), 0)/8)*8) + 13));1;82;;;;;
 (((v0*3) + (max(v1*125, -1) + (v2 + v3))) == ((v0*3) + (max(v1*125, -1) + (v2 + v3))));1;58;;;;;
 (min(17 - (((v0/2) - (min((((v1 + v0) + 3)/2) - (v2*63), ((v0/2) + (v3*14)) + 2) + (v3*-14)))*2), (min(v4, 2)*2) + 23) == min(17 - (((v0/2) - (min((((v1 + v0) + 3)/2) - (v2*63), ((v0/2) + (v3*14)) + 2) + (v3*-14)))*2), (min(v4, 2)*2) + 23));1;1254;;;;;
 (((((min(v0, 377) + v1) + -377)/126) + (v2*4)) == ((((min(v0, 377) + v1) + -377)/126) + (v2*4)));1;45;;;;;
 (((v0*1006) + (max(min(((min(v1, 177) + v2) + -177)/8, 249), 0)*8)) == ((v0*1006) + (max(min(((min(v1, 177) + v2) + -177)/8, 249), 0)*8)));1;78;;;;;
 (min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2 + 3) == min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2 + 3));1;206;;;;;
 (max(-1000 - v0, v0 + -1) >= 0);0;428;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 53) == min(((v0*2) + v1)*4, (v2*8) + 53));1;70;;;;;
 ((max(min((v0 + v1)/4, 499), 0) + (v2*16)) == (max(min((v0 + v1)/4, 499), 0) + (v2*16)));1;53;;;;;
 (((((v0 + v1) + 27)/16) - ((v1 + -6)/16)) == ((((v0 + v1) + 27)/16) - ((v1 + -6)/16)));1;73;;;;;
 (min(((v0*128) + v1) + 119, v2) == min(((v0*128) + v1) + 119, v2));1;33;;;;;
 ((min((((v0 + v1) + 7)/8) - (v2*128), (v1/8) + 127) - ((v3*3) + ((v1/8) + (v4*12)))) == (min((((v0 + v1) + 7)/8) - (v2*128), (v1/8) + 127) - ((v3*3) + ((v1/8) + (v4*12)))));1;96;;;;;
 (((v0*251) + ((v1/4) + (v2*63))) == ((v0*251) + ((v1/4) + (v2*63))));1;37;;;;;
 ((((min(((v0 + v1) - (v2*125))*4, (min(v3*128, 372) + (v1*4)) + 131) + (v3*-128))*-8) + ((v4*4) + ((v1*32) + (v5*504)))) == (((min(((v0 + v1) - (v2*125))*4, (min(v3*128, 372) + (v1*4)) + 131) + (v3*-128))*-8) + ((v4*4) + ((v1*32) + (v5*504)))));1;128;;;;;
 (((v0*103) + (((v1 + v2)/4)*8)) == ((v0*103) + (((v1 + v2)/4)*8)));1;1083;;;;;
 (min(max(((max(min(v0/8, 249), 0)/8)*64) + -29, v1), ((((max(min(v0/8, 249), 0)/8)*8) + v2)*8) + 5) == min(max(((max(min(v0/8, 249), 0)/8)*64) + -29, v1), ((((max(min(v0/8, 249), 0)/8)*8) + v2)*8) + 5));1;114;;;;;
 (((v0*4) + -29) == ((((v0*4) + -29) + ((min(v1, 3)*4) + 54)) - 1));0;89;;;;;
 (((v0*8) + ((v1*248) + ((v2*64) - min((v3 - (v4*62))*8, min(min(v2*64, 184) + (((v1*31) + v0)*8), (v0*8) + 434) + 50)))) == ((v0*8) + ((v1*248) + ((v2*64) - min((v3 - (v4*62))*8, min(min(v2*64, 184) + (((v1*31) + v0)*8), (v0*8) + 434) + 50)))));1;123;;;;;
 (min(max((((v0 + v1) + 383)/32) - (v1/32), 0), v2 + 9) == min(max((((v0 + v1) + 383)/32) - (v1/32), 0), v2 + 9));1;79;;;;;
 ((1 - v0) > (63 - v0));0;564;;;;;
 ((-19 - max(v0, -13)) >= (((-19 - max(v0, -13)) + (max(v0, -13) + 27)) - 1));0;61;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), v2 + 499) == min(max(min(((v0 + v1) + -1)/2, 999), 0), v2 + 499));1;40;;;;;
 (min(((v0 + v1) + 127)/32, ((v1/32) + (v2*38)) + 29) == min(((v0 + v1) + 127)/32, ((v1/32) + (v2*38)) + 29));1;57;;;;;
 (((v0 - (v1*4)) - ((v2*68) + v3)) == ((v0 - (v1*4)) - ((v2*68) + v3)));1;67;;;;;
 (((v0*1044) + (v1*8)) == ((v0*1044) + (v1*8)));1;1455;;;;;
 ((((v0*37) + (v1 + v2)) + 71) == (((((v0*37) + (v1 + v2)) + 71) + 37) - 1));0;51;;;;;
 ((min(v0*64, 188) + (v1*4)) == (min(v0*64, 188) + (v1*4)));1;40;;;;;
 ((((((((v0 + v1) + 499)/500) - (v1/500))*8) + 35)/23) == (((((((v0 + v1) + 499)/500) - (v1/500))*8) + 35)/23));1;133;;;;;
 (((((v0 % ((v1 + 127)/126))*-126)/63)*63) == ((v0 % ((v1 + 127)/126))*-126));1;55;;;;;
 (min(((v0*12) + v1) + -1, v2) == min(((v0*12) + v1) + -1, v2));1;48;;;;;
 (min((v0*128) + 128, v1) == min((v0*128) + 128, v1));1;62;;;;;
 (min(min(v0, 512)*8, v1 + 84) == min(min(v0, 512)*8, v1 + 84));1;60;;;;;
 (((v0 - (v1/8))*8) == ((v0 - (v1/8))*8));1;49;;;;;
 ((((((((v0 + v1) + 31)/32) - (v1/32))*16) + 219)/137) == (((((((v0 + v1) + 31)/32) - (v1/32))*16) + 219)/137));1;64;;;;;
 (((((((uint1)1 && ((((0*16) + ((v0*16) + ((v1*32) + v2))) + 0) <= ((v0*16) + ((v1*32) + v2)))) && ((((0*16) + ((v0*16) + ((v1*32) + v2))) + 15) >= (((v0*16) + ((v1*32) + v2)) + 15))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5));1;143;;;;;
 (((v0*128) + (v1*65)) == ((v0*128) + (v1*65)));1;30;;;;;
 ((((v0 - v1) + 14)/8) == (((v0 - v1) + 14)/8));1;51;;;;;
 (min(max(min(v0, 999), 0) - max(min(v1/2, 999), 0), v2) == min(max(min(v0, 999), 0) - max(min(v1/2, 999), 0), v2));1;150;;;;;
 (max(min((((v0 + v1) + v2) + 3)/2, 999), min(max(min((((v0 + v1) + v3) + 5)/2, 999), 0), (max(min((((v0 + v1) + v2) + 3)/2, 999), 0) + ((v4/4)*4)) + 3) - max(v4, 0)) == max(min((((v0 + v1) + v2) + 3)/2, 999), min(max(min((((v0 + v1) + v3) + 5)/2, 999), 0), (max(min((((v0 + v1) + v2) + 3)/2, 999), 0) + ((v4/4)*4)) + 3) - max(v4, 0)));1;197;;;;;
 (((v0/8) + (v1*64)) == ((v0/8) + (v1*64)));1;900;;;;;
 (min((v0*4) + v1, v2 + -4) == min((v0*4) + v1, v2 + -4));1;86;;;;;
 (((v0*2) + v1) >= ((((v0*2) + v1) + ((-1*2) + 4)) - 1));0;68;;;;;
 (min(((v0*8) + ((v1*62) + v2))*8, (v3*8) + 489) == min(((v0*8) + ((v1*62) + v2))*8, (v3*8) + 489));1;67;;;;;
 (min(v0*32, min((v0*32) + 16, v1) + -8) == min(v0*32, min((v0*32) + 16, v1) + -8));1;71;;;;;
 (min(v0 + 37, v1) == min(v0 + 37, v1));1;28;;;;;
 ((((((v0*18) + v1)*2) + v2) + -7) >= (((((((v0*18) + v1)*2) + v2) + -7) + 3) - 1));0;80;;;;;
 (min(max(min(v0 + v1, 1999), 0) + (v2*32), max(min(v0 + v1, 1936), -63) + 33) == min(max(min(v0 + v1, 1999), 0) + (v2*32), max(min(v0 + v1, 1936), -63) + 33));1;80;;;;;
 (min((((v0/63)*2) + v1)*32, (v2*8) + 32) == min((((v0/63)*2) + v1)*32, (v2*8) + 32));1;64;;;;;
 ((((v0*-21)/3)*3) == (v0*-21));1;43;;;;;
 (((((v0 + v1) + -1)/4) - ((v2*8) + v3)) == ((((v0 + v1) + -1)/4) - ((v2*8) + v3)));1;32;;;;;
 (((v0*3) + (((v1/16) + (v2*8))*8)) == ((v0*3) + (((v1/16) + (v2*8))*8)));1;68;;;;;
 (max(218 - max(v0*8, 212), -56 - max(min(v0*8, -52), -62)) == max(218 - max(v0*8, 212), -56 - max(min(v0*8, -52), -62)));1;65;;;;;
 (max(v0*8, ((v1*8) + v2) + 69) == max(v0*8, ((v1*8) + v2) + 69));1;37;;;;;
 (((v0 + -3927)/4) == ((((v0 + -3927)/4) + ((((v0 + 1) % 4) + 11)/4)) - 1));0;99;;;;;
 (((v0*4) + ((v1*32) + v2)) == ((v0*4) + ((v1*32) + v2)));1;62;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 689)/670) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 689)/670));1;234;;;;;
 (min((v0*128) + v1, min(v2 + v1, 2126) + -128) == min((v0*128) + v1, min(v2 + v1, 2126) + -128));1;456;;;;;
 ((((v0 - v1) + 60)/8) != 0);0;471;;;;;
 ((max(v0*6, -2) + (v1*42)) == (max(v0*6, -2) + (v1*42)));1;63;;;;;
 (min(max(v0 + v1, max(min(v0 + v1, 2000), 1) + 11) - min(max(min((v2*500) + v0, 1999), 0), ((v2*500) + v0) + 11), (v3*132) + 121) == min(max(v0 + v1, max(min(v0 + v1, 2000), 1) + 11) - min(max(min((v2*500) + v0, 1999), 0), ((v2*500) + v0) + 11), (v3*132) + 121));1;129;;;;;
 (((v0*8) - ((v1*4) + v2)) == ((v0*8) - ((v1*4) + v2)));1;40;;;;;
 ((max(v0*8, 995) - min((v1/16)*8, 4)) == (max(v0*8, 995) - min((v1/16)*8, 4)));1;89;;;;;
 (((min((((((v0 + v1) + 3)/2) - (v2*504)) - (v3*127)) - (v1/2), min(v4*44, 86) + 32)/2) - (v4*22)) == ((min((((((v0 + v1) + 3)/2) - (v2*504)) - (v3*127)) - (v1/2), min(v4*44, 86) + 32)/2) - (v4*22)));1;147;;;;;
 (max(min(max(((v0 - ((v1/8)*8)) + 60)/32, 0), (v2 + 7)/4), min(min((((v3 + v0) - ((v1/8)*8)) + -6)/32, ((((v4 + v1) + 55)/8) - (v1/8))/4), (v2 + 3)/4) + 1) == max(min(max(((v0 - ((v1/8)*8)) + 60)/32, 0), (v2 + 7)/4), min(min((((v3 + v0) - ((v1/8)*8)) + -6)/32, ((((v4 + v1) + 55)/8) - (v1/8))/4), (v2 + 3)/4) + 1));1;156;;;;;
 (((v0*-64) + ((((v1 + v2) + 1)/2) - v3)) == ((v0*-64) + ((((v1 + v2) + 1)/2) - v3)));1;52;;;;;
 (0 == ((0 + ((max(v0, -4)*2) + 8)) - 1));0;68;;;;;
 (((v0*3) + (max(min(v1/8, 250), 1)*8)) == ((v0*3) + (max(min(v1/8, 250), 1)*8)));1;35;;;;;
 (min((v0*20) + ((v1/63)*8), ((((v2 + v1) + 251)/63)*8) + 9) == min((v0*20) + ((v1/63)*8), ((((v2 + v1) + 251)/63)*8) + 9));1;68;;;;;
 (((v0*125) + (v1*4)) == ((v0*125) + (v1*4)));1;33;;;;;
 (min(max(((v0 - ((v1/8)*8)) + 1017)/1004, 0), ((v2*8) + 1019)/1004) == min(max(((v0 - ((v1/8)*8)) + 1017)/1004, 0), ((v2*8) + 1019)/1004));1;81;;;;;
 ((6 - ((v0*252) + v1)) > (2005 - ((v0*252) + v1)));0;67;;;;;
 ((((v0 + v1)/63) + (((v2 + 10)/4)*4)) == (((v0 + v1)/63) + (((v2 + 10)/4)*4)));1;46;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((7*4) + v0) + 3) >= (((7*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)));1;157;;;;;
 ((((v0 + 7)/4) - ((max(min(v1/8, 249), 0)/8)*2)) == (((v0 + 7)/4) - ((max(min(v1/8, 249), 0)/8)*2)));1;64;;;;;
 ((max(min(v0, 1999), 0) + ((v1*8) - max(min(v2 + v0, 2000), 1))) == (max(min(v0, 1999), 0) + ((v1*8) - max(min(v2 + v0, 2000), 1))));1;74;;;;;
 ((((max(min((min(v0*252, v1 + -252) + v2)/2, 999), 0)*8)/4)*4) == (max(min((min(v0*252, v1 + -252) + v2)/2, 999), 0)*8));1;104;;;;;
 (min(max(max(((v0 + v1)*8) + -41, v2), v3 + v2), ((v0 + v1)*8) + -22) == min(max(max(((v0 + v1)*8) + -41, v2), v3 + v2), ((v0 + v1)*8) + -22));1;87;;;;;
 (max(min(v0 + v1, 1999), (min(max(min(v0 + v1, 1999), 0) + (((v2 + 503)/4)*4), max(min(v0 + v1, 1500), -499) + 500) - max(v2, -499)) + -500) == max(min(v0 + v1, 1999), (min(max(min(v0 + v1, 1999), 0) + (((v2 + 503)/4)*4), max(min(v0 + v1, 1500), -499) + 500) - max(v2, -499)) + -500));1;143;;;;;
 (((v0*3) + (v1*41)) == ((v0*3) + (v1*41)));1;26;;;;;
 (max(v0*8, (min(v0*8, (max(min(v1, 30), -1)*8) + 9) + v2) + 15) == max(v0*8, (min(v0*8, (max(min(v1, 30), -1)*8) + 9) + v2) + 15));1;95;;;;;
 (min(max(min(v0*4, 282), 33), max(min((v1/32)*4, 285), 36) + 8) == min(max(min(v0*4, 282), 33), max(min((v1/32)*4, 285), 36) + 8));1;80;;;;;
 (((v0 + 21)/16) != 0);0;573;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/63) + 1) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/63) + 1));1;231;;;;;
 (((min(v0 - v1, 9) + 6)/4) == ((min(v0 - v1, 9) + 6)/4));1;62;;;;;
 (((v0*4) + ((v1*8) + (min(v2*128, v3 + -128) + v4))) == ((v0*4) + ((v1*8) + (min(v2*128, v3 + -128) + v4))));1;63;;;;;
 (min(max(552 - (max(v0 - ((v1*-4) + (v2 - (v3*24))), 65)*8), (min(((v2 - (v1*4)) - (v3*24)) - v0, -65)*8) + 554), (min(v4, -65)*8) + 552) == min(max(552 - (max(v0 - ((v1*-4) + (v2 - (v3*24))), 65)*8), (min(((v2 - (v1*4)) - (v3*24)) - v0, -65)*8) + 554), (min(v4, -65)*8) + 552));1;144;;;;;
 (((v0 + 508)/504) == ((v0 + 508)/504));1;18;;;;;
 (((((min(v0*16, 984)/8)*-8)/4)*4) == ((min(v0*16, 984)/8)*-8));1;53;;;;;
 (min(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 123, v3) == min(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 123, v3));1;38;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))/2) + 2) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))/2) + 2));1;211;;;;;
 ((((min(((v3 % (((v4*16) + 460)/284))*284) + ((max(min(v2/65, 34), 3)*16) + 107), max(min(((v1 + v2) + 64)/65, 27), -4)*16)*-1)/8)*8) == (min(((v3 % (((v4*16) + 460)/284))*284) + ((max(min(v2/65, 34), 3)*16) + 107), max(min(((v1 + v2) + 64)/65, 27), -4)*16)*-1));0;2197;;;;;
 ((min((((v0 + v1) + 125)/63) - (v2*4), v3 + -1) - ((v4*4) + v3)) == (min((((v0 + v1) + 125)/63) - (v2*4), v3 + -1) - ((v4*4) + v3)));1;91;;;;;
 (min(max(min(v0, 113), -11) - max(min(v1, 124), 0), min(v2, 52) + 1) == min(max(min(v0, 113), -11) - max(min(v1, 124), 0), min(v2, 52) + 1));1;109;;;;;
 (max((min((((v0 + v1) + 7)/8) - (v1/8), v2 + 1) + 3)/4, max(v3/4, -1) + 1) == max((min((((v0 + v1) + 7)/8) - (v1/8), v2 + 1) + 3)/4, max(v3/4, -1) + 1));1;90;;;;;
 (max(-96 - max(min(((((v0 + v1) + -1)/63)*2) - (((v1/63)*2) + v2), -2)*32, -95), min(v3*-8, 31) + -32) == max(-96 - max(min(((((v0 + v1) + -1)/63)*2) - (((v1/63)*2) + v2), -2)*32, -95), min(v3*-8, 31) + -32));1;74;;;;;
 (min(max(min(v0*2, 497), -2), (max(min(v1*2, 509), 10) + (v2*32)) + 19) == min(max(min(v0*2, 497), -2), (max(min(v1*2, 509), 10) + (v2*32)) + 19));1;79;;;;;
 ((((max(min(v0/8, 249), 0)/8)*8) + ((v1*9) - ((max(min(((v2 + v0) + 7)/8, 249), 0)/8)*8))) == (((max(min(v0/8, 249), 0)/8)*8) + ((v1*9) - ((max(min(((v2 + v0) + 7)/8, 249), 0)/8)*8))));1;109;;;;;
 ((min((((v0 + v1)/4) + (v2*8))*4, 1999) + (v3*4)) == (min((((v0 + v1)/4) + (v2*8))*4, 1999) + (v3*4)));1;60;;;;;
 ((v0 - max(min((v1 + v2)/2, 999), 0)) == (v0 - max(min((v1 + v2)/2, 999), 0)));1;452;;;;;
 ((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3)) + 13)/4) == (((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3)) + 13)/4));1;225;;;;;
 (((((((uint1)1 && ((-4 + v0) <= (-4 + v0))) && ((((8 + -4) - 1) + v0) >= (((8 + -4) - 1) + v0))) && ((0 + v1) <= (0 + v1))) && ((3 + v1) >= (((4 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;132;;;;;
 (min(((v0/63) - (v1/63))*2, (v2*2) + 1) == min(((v0/63) - (v1/63))*2, (v2*2) + 1));1;48;;;;;
 (min((v0*4) + v1, ((max(min((v2/500)*8, 67), 36) + v3)*8) + 349) == min((v0*4) + v1, ((max(min((v2/500)*8, 67), 36) + v3)*8) + 349));1;82;;;;;
 (min(((((v0 + v1) + 1999)/2000) - (v1/2000))*256, (v2*256) + 463) == min(((((v0 + v1) + 1999)/2000) - (v1/2000))*256, (v2*256) + 463));1;524;;;;;
 (((v0/62) + (v1*11)) == ((v0/62) + (v1*11)));1;54;;;;;
 (((v0*256) + ((v1*1008) + (max(v2*128, -5) + v3))) == ((v0*256) + ((v1*1008) + (max(v2*128, -5) + v3))));1;79;;;;;
 ((0 - (((min(v0*4, 3) + v1) + v2)*8)) > (249 - (((min(v0*4, 3) + v1) + v2)*8)));0;80;;;;;
 (((v0*32) + (v1*132)) == ((v0*32) + (v1*132)));1;32;;;;;
 (((v0*132) + ((v1*251) + v2)) == ((v0*132) + ((v1*251) + v2)));1;30;;;;;
 ((max(v0, 0) + max(min((v1 + v2)/8, 249), 0)) == (max(v0, 0) + max(min((v1 + v2)/8, 249), 0)));1;76;;;;;
 (min((v0*9) + v1, v2 + 9) == min((v0*9) + v1, v2 + 9));1;58;;;;;
 (((v0*15) + (v1*4)) == ((v0*15) + (v1*4)));1;43;;;;;
 (max(v0*16, (((v1*2) + v0)*16) + 17) == max(v0*16, (((v1*2) + v0)*16) + 17));1;48;;;;;
 (min(((((v0 + -1)/1040)*1040) + ((v1/63)*64)) + 1040, v2) == min(((((v0 + -1)/1040)*1040) + ((v1/63)*64)) + 1040, v2));1;64;;;;;
 (((((((uint1)1 && (((((v0*15) + v1) + -3) + 0) <= (((v0*15) + v1) + -3))) && (((((v0*15) + v1) + 14) + 3) >= (((v0*15) + v1) + 14))) && ((((v2*17) + v3) + v4) <= ((((v2*17) + v3) + v4) + -3))) && ((((v2*17) + v3) + v4) >= (((v2*17) + v3) + v4))) && (0 <= 0)) && (2 >= 2));0;202;;;;;
 (min(max(((v0 - ((v1*32) + v2)) + 3)/4, 0), (32 + 3)/4) == min(max(((v0 - ((v1*32) + v2)) + 3)/4, 0), (32 + 3)/4));1;93;;;;;
 (min(v0*128, v1 + -128) == min(v0*128, v1 + -128));1;63;;;;;
 (((max(max(min((v0*668) + v1, min(v2 + v1, 2000) + -668), -667) + 11, min(v0*668, v2 + -668) + v1) - (v3*63)) - min(min(max(min((v0*668) + v1, min(v2 + v1, 2667) + -668), 0) + -11, (v0*668) + v1), (v2 + v1) + -668)) == ((max(max(min((v0*668) + v1, min(v2 + v1, 2000) + -668), -667) + 11, min(v0*668, v2 + -668) + v1) - (v3*63)) - min(min(max(min((v0*668) + v1, min(v2 + v1, 2667) + -668), 0) + -11, (v0*668) + v1), (v2 + v1) + -668)));1;127;;;;;
 ((min(max(v0, -1)*2, 1) + -1) == (((min(max(v0, -1)*2, 1) + -1) + (3 - min(max(v0, -1)*2, 1))) - 1));0;106;;;;;
 (((((min(v0*8, 117) + v1) + v2)/16) + 1) < (((min(v0*8, 117) + (v1 + 1)) + v2)/16));0;118;;;;;
 (max((v0 + 23)/516, 0) >= ((max((v0 + 23)/516, 0) + max(((v0 + 538)/516) - max((v0 + 23)/516, 0), 0)) - 1));0;683;;;;;
 ((max(v0*63, -6) + (v1/8)) == (max(v0*63, -6) + (v1/8)));1;40;;;;;
 (v0 >= ((v0 + (min(v1 - (((((min(v2, 969) + v3) + -1009)/8) - min(((min(v2, 969) + v3) + 15)/8, v4 - (v5*128)))*2), 2) + -1)) - 1));1;193;;;;;
 (((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/16)*16) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -24)*4))) + 96) == ((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/16)*16) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -24)*4))) + 96));1;156;;;;;
 (((((((v0 + v1) + -1)/1000)*-16) + v2)*-1) == ((((((v0 + v1) + -1)/1000)*-16) + v2)*-1));1;68;;;;;
 (min(max((min(v0/8, 0)*8) + -4, v1), ((min(v0/8, 0) + v2)*8) + 5) == min(max((min(v0/8, 0)*8) + -4, v1), ((min(v0/8, 0) + v2)*8) + 5));1;80;;;;;
 (((v0*500) + ((v1*4) + ((v2*1000) + v3))) == ((v0*500) + ((v1*4) + ((v2*1000) + v3))));1;50;;;;;
 ((((((v0 + v1) + -1)/4) - (v2*3)) - (v1/4)) == (((((v0 + v1) + -1)/4) - (v2*3)) - (v1/4)));1;67;;;;;
 (max(min(min(min((((v2 + v3) - max(v1, 0))/4) + -1, (min(max(min(v1, 1996), -3), (v2 + v3) + -1) - max(v1, 0))/4), (max(min(v1, 1996), -3) - max(v1, 0))/4), (0 + ((v4 + 7)/4)) - 1) + 1, min(max(((v3 - max(v1, 0)) + 3)/4, 0), ((v4 + 7)/4) + 0)) <= min(max(((v3 - max(v1, 0)) + 3)/4, 0), ((v4 + 7)/4) + 0));0;2363;;;;;
 (((((((uint1)1 && ((v4 + -1010) <= (v4 + -1010))) && ((min((v5*8) + 764, v4) + -759) >= (min((v5*8) + 764, v4) + -759))) && ((((((max(min(v2/8, 249), 0)*2) + 0)*4) + 0) + -2) <= ((max(min(v2/8, 249), 0)*8) + -2))) && ((((((max(min(v2/8, 249), 0)*2) + ((min(v1 - max(min(v2/8, 249), 0), v3)*2) + 1))*4) + 3) + -2) >= (min(v1*8, (min((v1 - max(min(v2/8, 249), 0))*8, -4) + (min(max(min(v2/8, 249), 0) + v3, v1)*8)) + 4) + 5))) && (v6 <= v6)) && (v6 >= v6));0;2580;;;;;
 ((((v0/2)*33) + ((max(min(v1/8, 249), 0)/8)*8)) == (((v0/2)*33) + ((max(min(v1/8, 249), 0)/8)*8)));1;1149;;;;;
 (((v0 + 128)/126) != 0);0;392;;;;;
 ((max(((v0 + v1) + 3)/4, 499) - ((((v2*2) + v3)*4) + v4)) == (max(((v0 + v1) + 3)/4, 499) - ((((v2*2) + v3)*4) + v4)));1;71;;;;;
 ((((v0*2) + (max(min(v1/16, 126), 2) + (v2*32))) - min(max(min(((v3 + v1) + 47)/16, 124), 0), max(min(v1/16, 126), 2) + 61)) == (((v0*2) + (max(min(v1/16, 126), 2) + (v2*32))) - min(max(min(((v3 + v1) + 47)/16, 124), 0), max(min(v1/16, 126), 2) + 61)));1;130;;;;;
 (((min(max(min(v0 + v1, 2000), 1) - (v2*126), (max(min(v1, 1999), 0) + min(v3*32, 94)) + 27) - (v3*32)) - max(min(v1, 1999), 0)) == ((min(max(min(v0 + v1, 2000), 1) - (v2*126), (max(min(v1, 1999), 0) + min(v3*32, 94)) + 27) - (v3*32)) - max(min(v1, 1999), 0)));1;133;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*4) + v3)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*4) + v3)));1;102;;;;;
 ((((max(min(((v0 + v1)/4)*8, 4012), 13) + -13)/2) + (v2*68)) == (((max(min(((v0 + v1)/4)*8, 4012), 13) + -13)/2) + (v2*68)));1;104;;;;;
 (((v0*4) + -1) >= ((((v0*4) + -1) + 66) - 1));0;33;;;;;
 (min(16 - (v0*9), (((((v1 + v2) + 64)/65)*8) - ((v0*9) + v3)) + 23) == min(16 - (v0*9), (((((v1 + v2) + 64)/65)*8) - ((v0*9) + v3)) + 23));1;79;;;;;
 ((((((v0 + v1) + -1)/4) - (v2*252)) - (v1/4)) == (((((v0 + v1) + -1)/4) - (v2*252)) - (v1/4)));1;87;;;;;
 (max((v0*8) + v1, (((v2*2) + v3)*32) + 5) == max((v0*8) + v1, (((v2*2) + v3)*32) + 5));1;71;;;;;
 (min((min(v0*32, 233) + v1) + 29, v2) == min((min(v0*32, 233) + v1) + 29, v2));1;44;;;;;
 (max((min((((v0 + v1) + 7)/8) - (v1/8), v2)*2) + 1, v3) == max((min((((v0 + v1) + 7)/8) - (v1/8), v2)*2) + 1, v3));1;74;;;;;
 (((((((uint1)1 && ((((max(-2*4, -5) + v0) + 0) + 2) <= (-3 + v0))) && ((((max(18*4, -5) + v0) + 3) + 2) >= (2 + (v0 + 75)))) && (((max(v1*4, -5) + v2) + 2) <= (-3 + ((v1*4) + v2)))) && ((((v1*4) + v2) + 5) >= (2 + (((v1*4) + v2) + 3)))) && (((0*3) + 0) <= 0)) && (((1*3) + 2) >= 5));0;174;;;;;
 ((v0 - ((((v1*2) + v2)*4) + ((v3*64) + v4))) == (v0 - ((((v1*2) + v2)*4) + ((v3*64) + v4))));1;66;;;;;
 (min(max(v0, 0) + (v1*12), max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) + 488) == min(max(v0, 0) + (v1*12), max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) + 488));1;99;;;;;
 (((v0*76) + (((v1*18) + v2)*8)) == ((v0*76) + (((v1*18) + v2)*8)));1;41;;;;;
 (min((v0*4) + v1, (v2 + v3) + 4) == min((v0*4) + v1, (v2 + v3) + 4));1;55;;;;;
 (min(max(min(v0*8, 2044), 45) + (v1*28), max(min(v2*8, 1938), -61) + 79) == min(max(min(v0*8, 2044), 45) + (v1*28), max(min(v2*8, 1938), -61) + 79));1;101;;;;;
 (min((((((v0 + v1) + -1)/8) - (v2*32)) - (v3*128)) - (v1/8), 31) == min((((((v0 + v1) + -1)/8) - (v2*32)) - (v3*128)) - (v1/8), 31));1;100;;;;;
 (max(((((v0 + v1) + 167)/8)*8) + v2, (((v0 + v1)/8)*8) + 163) == max(((((v0 + v1) + 167)/8)*8) + v2, (((v0 + v1)/8)*8) + 163));1;91;;;;;
 (((v0*-4) + ((min((v1/2) + (((min((v2*64) + 56, v3) + 9)/2)*2), min(((v4 + v1) + 11)/2, ((v1/2) + (v2*64)) + 56) + 8) - (v2*64)) - (v1/2))) == ((v0*-4) + ((min((v1/2) + (((min((v2*64) + 56, v3) + 9)/2)*2), min(((v4 + v1) + 11)/2, ((v1/2) + (v2*64)) + 56) + 8) - (v2*64)) - (v1/2))));1;153;;;;;
 (((((min(((v0*62) + v1)*8, (v2*8) + 57) + 501)/4) + (v0*-124)) - (v1*2)) == ((((min(((v0*62) + v1)*8, (v2*8) + 57) + 501)/4) + (v0*-124)) - (v1*2)));1;101;;;;;
 (max((v0*2) + v1, (v2*256) + 16) == max((v0*2) + v1, (v2*256) + 16));1;46;;;;;
 ((((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0)) + 5)/4) == (((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0)) + 5)/4));1;213;;;;;
 (((v0*8) + -13) == ((((v0*8) + -13) + ((min(((max(min(min(((v1 + v2) + -1)/63, ((v2/63) + (v3*2)) + 1), 31), 0) - max(min((v2/63) + (v3*2), 31), 0))*8) - (v4*14), -6)*8) + 165)) - 1));0;2260;;;;;
 ((min(v0*2, 251) + (v1*4)) == (min(v0*2, 251) + (v1*4)));1;34;;;;;
 (((((v0 + v1) + 15)/8) - ((((v2*2) + v3)*8) + v4)) == ((((v0 + v1) + 15)/8) - ((((v2*2) + v3)*8) + v4)));1;77;;;;;
 (((((min(v0*336, 664)/4)*4)/4)*4) == ((min(v0*336, 664)/4)*4));1;60;;;;;
 (((((v0 - v1)/4) + (v2*-8)) + 2) == ((((v0 - v1)/4) + (v2*-8)) + 2));1;58;;;;;
 (min(((((max(min(v0 + v1, 2002), 3) + -3)/16)*4) + v2)*4, v3 + 22) == min(((((max(min(v0 + v1, 2002), 3) + -3)/16)*4) + v2)*4, v3 + 22));1;73;;;;;
 ((max(v0*4, 7) + (((min(v1 + 31, v2)*-2) + ((v1*2) + v3))*4)) == (max(v0*4, 7) + (((min(v1 + 31, v2)*-2) + ((v1*2) + v3))*4)));1;85;;;;;
 (((v0*24) + ((v1/17) + (v2*4))) == ((v0*24) + ((v1/17) + (v2*4))));1;60;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 300)/251) == ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 300)/251));1;274;;;;;
 (max(((v0*4) + v1)*16, ((v2*16) + v3) + 61) == max(((v0*4) + v1)*16, ((v2*16) + v3) + 61));1;57;;;;;
 ((((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 1025)/1012) == (((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 1025)/1012));1;74;;;;;
 (((min((v0 + 30)/16, (((v1 + v0) + 15)/16) - (v2*6))*-16) + ((v3*4) + ((((v0 + -2)/16)*16) + (v4*52)))) == ((min((v0 + 30)/16, (((v1 + v0) + 15)/16) - (v2*6))*-16) + ((v3*4) + ((((v0 + -2)/16)*16) + (v4*52)))));1;118;;;;;
 ((((max(((v0 + v1) + -1)/8, 0) - min(v1/8, 249)) + 6)/4) == (((max(((v0 + v1) + -1)/8, 0) - min(v1/8, 249)) + 6)/4));1;82;;;;;
 (min(((v0*2) + v1)*8, (v1*8) + 49) == min(((v0*2) + v1)*8, (v1*8) + 49));1;52;;;;;
 (min(((v0 + v1) + 124)/16, v2 + 3) == min(((v0 + v1) + 124)/16, v2 + 3));1;53;;;;;
 ((((max((((v0 + v1) + 31)/32)*32, 1964) - min((v1/32)*32, 36)) + 209)/132) >= 0);1;86;;;;;
 (min(max(min((((v0 + v1) + 47)/8)*8, 1994), -5), (max(min((v1/8)*8, 2100), 101) + (v2*125)) + 18) == min(max(min((((v0 + v1) + 47)/8)*8, 1994), -5), (max(min((v1/8)*8, 2100), 101) + (v2*125)) + 18));1;57;;;;;
 (((v0*63) + (max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) - max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127))) == ((v0*63) + (max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) - max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127))));1;1072;;;;;
 (min(((-51 - v0)/4) + ((((v1*4) + v2) + v3)*2), v4 + -15) == min(((-51 - v0)/4) + ((((v1*4) + v2) + v3)*2), v4 + -15));1;86;;;;;
 (max(min(min(min((((v2 + v3) - max(min(v1, 1999), 0))/4) + -1, (min(max(min(v1, 1996), -3), (v2 + v3) + -1) - max(min(v1, 1999), 0))/4), (max(min(v1, 1996), -3) - max(min(v1, 1999), 0))/4), (0 + ((v4 + 7)/4)) - 1) + 1, min(max(((v3 - max(min(v1, 1999), 0)) + 3)/4, 0), ((v4 + 7)/4) + 0)) <= min(max(((v3 - max(min(v1, 1999), 0)) + 3)/4, 0), ((v4 + 7)/4) + 0));0;2414;;;;;
 (((((v0 + v1) + v2)/2) + ((min((v3 + 15)/2, ((min(v4*32, 93) + ((v5*16) + (min(v6*125, v7 + -125) + v0))) % 2) + 7)/4)*4)) == ((((v0 + v1) + v2)/2) + ((min((v3 + 15)/2, ((min(v4*32, 93) + ((v5*16) + (min(v6*125, v7 + -125) + v0))) % 2) + 7)/4)*4)));1;133;;;;;
 ((((v0*8) + 1025)/673) != 0);0;441;;;;;
 (min(max(min(v0, 29), 0) + 11, v1) == min(max(min(v0, 29), 0) + 11, v1));1;62;;;;;
 (((((v0 % ((v1 + 261)/254))*-254)/2)*2) == ((v0 % ((v1 + 261)/254))*-254));1;69;;;;;
 (min(v0*125, v1 + -125) == min(v0*125, v1 + -125));1;536;;;;;
 (min(v0 + 499, v1) == min(v0 + 499, v1));1;39;;;;;
 (((max(min((v0*-1004) + v1, 1000), -4)/4)*4) == max(min((v0*-1004) + v1, 1000), -4));0;638;;;;;
 (max(min(v0, 0), -1) >= ((max(min(v0, 0), -1) + (5 - max(min(v0, 0), -1))) - 1));0;72;;;;;
 ((v0 - ((v1*4) + ((v2*16) + v3))) == (v0 - ((v1*4) + ((v2*16) + v3))));1;45;;;;;
 (((v0*2) + -4) == ((((v0*2) + -4) + 6) - 1));0;31;;;;;
 ((((max(min(((((((v0 + v1) + -1)/8)*8) + 5)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 17)/8) == (((max(min(((((((v0 + v1) + -1)/8)*8) + 5)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 17)/8));1;304;;;;;
 ((min((v0 % 125)*4, 493) - (((v0 % 125)*4) + v1)) == (min((v0 % 125)*4, 493) - (((v0 % 125)*4) + v1)));1;61;;;;;
 ((max(max(min((v0*252) + v1, min(v2 + v1, 2000) + -252), -251) + 11, min(v0*252, v2 + -252) + v1) - (min(min(max(min((v0*252) + v1, min(v2 + v1, 2251) + -252), 0) + -11, (v0*252) + v1), (v2 + v1) + -252) + (((v3*17) + v4)*4))) == (max(max(min((v0*252) + v1, min(v2 + v1, 2000) + -252), -251) + 11, min(v0*252, v2 + -252) + v1) - (min(min(max(min((v0*252) + v1, min(v2 + v1, 2251) + -252), 0) + -11, (v0*252) + v1), (v2 + v1) + -252) + (((v3*17) + v4)*4))));1;198;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 64)/63) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 64)/63));1;246;;;;;
 (((v0 + 261)/252) != 0);0;414;;;;;
 ((min((max(min(v0/2, 999), 0) + (v1*126)) + 60, v2) + (v3*8)) == (min((max(min(v0/2, 999), 0) + (v1*126)) + 60, v2) + (v3*8)));1;92;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 136)/125) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 136)/125));1;146;;;;;
 (((((v0 + v1) + 31)/32) - ((((v2*2) + v3)*4) + v4)) == ((((v0 + v1) + 31)/32) - ((((v2*2) + v3)*4) + v4)));1;52;;;;;
 (min(max(((v0 + 3)/2) - v1, -1), min(v2, 61) + 2) == min(max(((v0 + 3)/2) - v1, -1), min(v2, 61) + 2));1;70;;;;;
 (((v0*6) + (v1*8)) == ((v0*6) + (v1*8)));1;34;;;;;
 ((max(min((v0*32) - max(min(min((v1/16)*8, 4) + v2, 990), -9), 11), -20) + min(max(min(min((v1/16)*8, 4) + v2, 990), -9), (v0*32) + 20)) == (max(min((v0*32) - max(min(min((v1/16)*8, 4) + v2, 990), -9), 11), -20) + min(max(min(min((v1/16)*8, 4) + v2, 990), -9), (v0*32) + 20)));1;145;;;;;
 ((((max(v0*4, -2)*-1)/2)*2) == (max(v0*4, -2)*-1));0;778;;;;;
 (min(max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7), v2 + 503) == min(max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7), v2 + 503));1;169;;;;;
 (((v0*12) + ((v1*3) + (max(min(min(v2*32, 223) + v3, 1244), 245) - max(min(min(v2*32, 223) + v3, 1213), 214)))) == ((v0*12) + ((v1*3) + (max(min(min(v2*32, 223) + v3, 1244), 245) - max(min(min(v2*32, 223) + v3, 1213), 214)))));1;312;;;;;
 (((max(min(v0, 10), 7)*8) + -83) >= ((((max(min(v0, 10), 7)*8) + -83) + (89 - (max(min(v0, 10), 7)*8))) - 1));0;87;;;;;
 (((max(min((v0*-42) + (((v2/16) + v1) - (v2/16)), 42), 0)/2)*2) == max(min((v0*-42) + (((v2/16) + v1) - (v2/16)), 42), 0));0;669;;;;;
 (((v0 + v1) + -5) >= ((((v0 + v1) + -5) + 130) - 1));0;86;;;;;
 (min((((min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, 7914)/4) - (max(max(min(v1/2, 1006), 7)*8, 115)/4)) + 59)/4, v2) == min((((min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, 7914)/4) - (max(max(min(v1/2, 1006), 7)*8, 115)/4)) + 59)/4, v2));1;117;;;;;
 (max(-346 - (v0*8), (v0*8) + 8) >= 0);0;497;;;;;
 (min(((v0 + v1) + -1)/8, ((v2*128) + v3) + 63) == min(((v0 + v1) + -1)/8, ((v2*128) + v3) + 63));1;63;;;;;
 (((((v0 + v1) + -1)/16) - ((v2*4) + v3)) == ((((v0 + v1) + -1)/16) - ((v2*4) + v3)));1;73;;;;;
 (((v0*4) + ((v1*32) + ((v2*2) + v3))) == ((v0*4) + ((v1*32) + ((v2*2) + v3))));1;1842;;;;;
 (min(min((((min(((v0*64) + (v1*252)) + 64, v2) + -3)/4)*4) + v3, ((v1*252) + ((v0*64) + v3)) + 58) + 6, v2 + v3) == min(min((((min(((v0*64) + (v1*252)) + 64, v2) + -3)/4)*4) + v3, ((v1*252) + ((v0*64) + v3)) + 58) + 6, v2 + v3));1;111;;;;;
 ((v0 - max(min(min(((v1 + v2) + 499)/500, 3)*8, 22), -7)) == (v0 - max(min(min(((v1 + v2) + 499)/500, 3)*8, 22), -7)));1;77;;;;;
 (((v0*1120) + ((min(v1/8, 0)/16)*128)) == ((v0*1120) + ((min(v1/8, 0)/16)*128)));1;52;;;;;
 (((((v0*10) + v1) + ((v2/4) + (v3*19))) - min((((v4 + v2) + -1)/4) - (v5*32), (v2/4) + 31)) == ((((v0*10) + v1) + ((v2/4) + (v3*19))) - min((((v4 + v2) + -1)/4) - (v5*32), (v2/4) + 31)));1;107;;;;;
 (min(((v0*16) + v1) + 15, v2) == min(((v0*16) + v1) + 15, v2));1;46;;;;;
 (((v0*15) + ((((v1/500)*32) + v2)*16)) == ((v0*15) + ((((v1/500)*32) + v2)*16)));1;49;;;;;
 ((((((v0 + v1) + -1)/250)*64) - ((v2*17) + v3)) == (((((v0 + v1) + -1)/250)*64) - ((v2*17) + v3)));1;60;;;;;
 (min(v0*1000, v1 + -1000) == min(v0*1000, v1 + -1000));1;276;;;;;
 (((max(min((v2*-504) + max(v1, 16), 500), -4)/4)*4) == max(min((v2*-504) + max(v1, 16), 500), -4));0;856;;;;;
 (min((((v0 + v1) + -1)/32)*4, (v2*4) + 27) == min((((v0 + v1) + -1)/32)*4, (v2*4) + 27));1;56;;;;;
 (min(min(min((min(max(v0, 249) + (v1*-128), min(v2, 0) + 127) + (v3*-4)) + 8, v2) - min(v2, 0), 0)*8, (v4*12) + -20) == min(min(min((min(max(v0, 249) + (v1*-128), min(v2, 0) + 127) + (v3*-4)) + 8, v2) - min(v2, 0), 0)*8, (v4*12) + -20));1;285;;;;;
 ((((max(min((min(v3*1000, v4 + -1000) + (v2 + 1001))/2, 999) - max(min((min(v3*1000, v4 + -1000) + v2)/2, 999), 0), 0)*8)/252)*252) == (max(min((min(v3*1000, v4 + -1000) + (v2 + 1001))/2, 999) - max(min((min(v3*1000, v4 + -1000) + v2)/2, 999), 0), 0)*8));0;1775;;;;;
 (((v0*130) + ((v1/32)*4)) == ((v0*130) + ((v1/32)*4)));1;39;;;;;
 (((((((uint1)1 && (((((0*4) + 0) + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((((62*4) + 3) + ((((max(v0, 4) + -1)/252)*252) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && ((0 + (min(v2*63, 62) + v3)) <= ((min(v2*63, 62) + 0) + v3))) && ((31 + ((min(v2*63, 62) + v3) + 32)) >= ((min(v2*63, 62) + ((63 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4));0;1305;;;;;
 (min(max(min((v0*4) + (v1 + v2), 1993), -6), (max(min((v0*4) + (v1 + v2), 2001), 2) + ((v3/4)*4)) + 3) == min(max(min((v0*4) + (v1 + v2), 1993), -6), (max(min((v0*4) + (v1 + v2), 2001), 2) + ((v3/4)*4)) + 3));1;108;;;;;
 (min(((v0 + v1) + 999)/4, (((v0 + v1)/4) + (v2*36)) + 222) == min(((v0 + v1) + 999)/4, (((v0 + v1)/4) + (v2*36)) + 222));1;77;;;;;
 ((((max(((v0 + v1) + 7)/8, 255)/16)*4) - (((min(v1/8, 0)/16)*4) + v2)) == (((max(((v0 + v1) + 7)/8, 255)/16)*4) - (((min(v1/8, 0)/16)*4) + v2)));1;2200;;;;;
 (((min(max(min((((v0 + v1) + -1)/125)*8, 113), -11), ((v2*16) + v3) + 3)*2) - min(((v2*16) + v3)*2, 251)) == ((min(max(min((((v0 + v1) + -1)/125)*8, 113), -11), ((v2*16) + v3) + 3)*2) - min(((v2*16) + v3)*2, 251)));1;119;;;;;
 (((((v0 + v1) + 7)/8) - (v2*128)) == ((((v0 + v1) + 7)/8) - (v2*128)));1;42;;;;;
 ((((max(v0, 1) - v1) + 35)/36) != 0);0;564;;;;;
 ((((v0*33) + (v1*8)) + 31) < ((max((v0 + 1)*33, -9) + (v1*8)) + -1));1;141;;;;;
 (min(max(max(v0, v1), 0), (v2*4) + 5) == min(max(max(v0, v1), 0), (v2*4) + 5));1;53;;;;;
 (((v0 + 15)/16) != 0);0;389;;;;;
 (min(v0 + 242, v1 + v2) == min(v0 + 242, v1 + v2));1;36;;;;;
 ((((max(max(min(((v3 % ((v4 + 41)/36))*36) + ((v2/8) + -5), min(((v1 + v2) + -209)/8, 249)), 0)*8, 12)*-1)/4)*4) == (max(max(min(((v3 % ((v4 + 41)/36))*36) + ((v2/8) + -5), min(((v1 + v2) + -209)/8, 249)), 0)*8, 12)*-1));0;4084;;;;;
 (min(max(min((v0/63)*8, 258), 9) + (((v1 + 19)/4)*4), max(min((((v2 + v0) + 62)/63)*8, 243), -6) + 16) == min(max(min((v0/63)*8, 258), 9) + (((v1 + 19)/4)*4), max(min((((v2 + v0) + 62)/63)*8, 243), -6) + 16));1;111;;;;;
 (((v0/17) + (v1*15)) == ((v0/17) + (v1*15)));1;32;;;;;
 (min(((v0*32) + v1) + 15, v2) == min(((v0*32) + v1) + 15, v2));1;55;;;;;
 (max(-707 - (max(min((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*16, 107), -176)*4), (max(min(v2, 11)*16, -107)*4) + -707) == max(-707 - (max(min((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*16, 107), -176)*4), (max(min(v2, 11)*16, -107)*4) + -707));1;270;;;;;
 ((((v0 - v1) + 66)/17) == (((v0 - v1) + 66)/17));1;43;;;;;
 (min((max(min(((v0 + v1)/4)*8, 3746), -253) + 269)/2, ((max(min(((v0 + v1)/4)*8, 4012), 13) + 39)/2) + ((v2/29)*29)) == min((max(min(((v0 + v1)/4)*8, 3746), -253) + 269)/2, ((max(min(((v0 + v1)/4)*8, 4012), 13) + 39)/2) + ((v2/29)*29)));1;133;;;;;
 ((996 - (v0*504)) == (996 - (v0*504)));1;25;;;;;
 (max(-1481 - (v0*512), (v0*512) + 724) >= 0);0;552;;;;;
 ((((max(((v0 + v1) + 7)/8, 249) - min(v1/8, 0))/84) + 1) >= 0);1;72;;;;;
 (((v0*28) + ((v1*84) + ((v2/8) + (v3*4)))) == ((v0*28) + ((v1*84) + ((v2/8) + (v3*4)))));1;51;;;;;
 (((((((v0 + v1) + 265)/133) - (v1/133)) + 17)/12) == ((((((v0 + v1) + 265)/133) - (v1/133)) + 17)/12));1;60;;;;;
 (((v0/65) + (((min((v1*16) + 15, v2)/8)*8) + (min((v1*-16) + v2, 3) + (min(min((v1*-16) + v2, 15)/4, 1)*4)))) == ((v0/65) + (((min((v1*16) + 15, v2)/8)*8) + (min((v1*-16) + v2, 3) + (min(min((v1*-16) + v2, 15)/4, 1)*4)))));1;114;;;;;
 ((((v0/4) - ((v1/8)*2)) + 8) == (((v0/4) - ((v1/8)*2)) + 8));1;49;;;;;
 (min((v0*4) + v1, (v2*4) + -880) == min((v0*4) + v1, (v2*4) + -880));1;51;;;;;
 (max((min(max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0), v2)*2) + 2, v3) == max((min(max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0), v2)*2) + 2, v3));1;293;;;;;
 ((((((v0 + v1) + -1)/16) - ((v2/4)*32)) - (v1/16)) == (((((v0 + v1) + -1)/16) - ((v2/4)*32)) - (v1/16)));1;67;;;;;
 (max(((v0 - v1) + 13)/16, 0) >= ((max(((v0 - v1) + 13)/16, 0) + max((((v0 - v1) + 28)/16) - max(((v0 - v1) + 13)/16, 0), 0)) - 1));0;973;;;;;
 (min((((v0*2) + v1)*4) + -13, v2) == min((((v0*2) + v1)*4) + -13, v2));1;118;;;;;
 (((max(min(v0, 2), -3)*32) + -68) == ((((max(min(v0, 2), -3)*32) + -68) + (72 - (max(min(v0, 2), -3)*32))) - 1));0;91;;;;;
 (((v0 + 21)/1012) == ((((v0 + 21)/1012) + ((((v0 + 21) % 1012) + 1011)/1012)) - 1));0;539;;;;;
 (((v0 + 275)/256) == ((v0 + 275)/256));1;23;;;;;
 (min(max(min(v0*8, 2100), 101) + (v1*4), max(min(v0*8, 2050), 51) + 47) == min(max(min(v0*8, 2100), 101) + (v1*4), max(min(v0*8, 2050), 51) + 47));1;69;;;;;
 (((v0*8) + -12) == ((((v0*8) + -12) + ((min(v1, 1)*8) + 19)) - 1));0;117;;;;;
 (min((((v0 + v1) + 55)/8) - (v1/8), v2 + 3) == min((((v0 + v1) + 55)/8) - (v1/8), v2 + 3));1;64;;;;;
 (min(max((41 - (v0*2))/35, 0), ((min(v1, 29)*2) + 46)/35) == min(max((41 - (v0*2))/35, 0), ((min(v1, 29)*2) + 46)/35));1;78;;;;;
 ((min((((v0 % 3)*6) + v1)*16, 268) - ((((((v0 % 3)*6) + v1)*4) + v2)*4)) == (min((((v0 % 3)*6) + v1)*16, 268) - ((((((v0 % 3)*6) + v1)*4) + v2)*4)));1;92;;;;;
 ((((((v0 + v1) + 505)/2) - (v2*4)) - ((v0 + v1)/2)) == (((((v0 + v1) + 505)/2) - (v2*4)) - ((v0 + v1)/2)));1;71;;;;;
 (min(v0 + v1, v2 + 3) == min(v0 + v1, v2 + 3));1;48;;;;;
 ((((v0*2) + v1) - min(v1 + 4, v2)) == (((v0*2) + v1) - min(v1 + 4, v2)));1;55;;;;;
 (((((((v0*76) + v1)*2) + v2) + v3) - ((min(((((v4*3) + ((v0*76) + v1))*2) + v3)*4, (min(min(v4*3, 73) + ((v0*76) + v1), v5 + 10)*8) + 24)/4) + (v4*-6))) == ((((((v0*76) + v1)*2) + v2) + v3) - ((min(((((v4*3) + ((v0*76) + v1))*2) + v3)*4, (min(min(v4*3, 73) + ((v0*76) + v1), v5 + 10)*8) + 24)/4) + (v4*-6))));1;143;;;;;
 ((v0 - (((v1*500) + v2)*2)) == (v0 - (((v1*500) + v2)*2)));1;45;;;;;
 (((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && ((v1/125) <= ((0 + v1)/125))) && (((v1 + 124)/125) >= ((((125 + 0) - 1) + v1)/125))) && (v2 <= v2)) && (v2 >= v2));1;130;;;;;
 ((min(v0*3, 14) + min((((v1 + v2) + -1)/63)*8, ((v3*17) + ((v2/63)*8)) + 3)) == (min(v0*3, 14) + min((((v1 + v2) + -1)/63)*8, ((v3*17) + ((v2/63)*8)) + 3)));1;86;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 38)/32) == (((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 38)/32));1;174;;;;;
 (((v0*12) + ((v1*4) + (v2 + v3))) == ((v0*12) + ((v1*4) + (v2 + v3))));1;374;;;;;
 ((((v0 + -6)/16) + (v1*16)) == (((v0 + -6)/16) + (v1*16)));1;37;;;;;
 ((v0 + -61) >= (((v0 + -61) + (min(v1 - (max((v2/63) + (((v3/4)*10) - (((v4 + v2) + -1)/63)), -4)*8), -117) + 118)) - 1));1;252;;;;;
 (((max(min((v1*-8) + (max(min(v2 + v3, 2000), 1) - max(min(v3, 1999), 0)), 8), 0)/4)*4) == max(min((v1*-8) + (max(min(v2 + v3, 2000), 1) - max(min(v3, 1999), 0)), 8), 0));0;1375;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 15) == min(((v0 + v1) + -1)/8, v2 + 15));1;282;;;;;
 (((((((v0 + v1) + 5)/2) - (v1/2)) + 252)/251) == ((((((v0 + v1) + 5)/2) - (v1/2)) + 252)/251));1;65;;;;;
 (((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 412)/67) == ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 412)/67));1;234;;;;;
 (((max(min((v1*-32) + (max(v2*4, -255) - v3), -224), -256)/4)*4) == max(min((v1*-32) + (max(v2*4, -255) - v3), -224), -256));0;1027;;;;;
 (((((((uint1)1 && ((0 + ((v0*8) + v1)) <= (0 + ((v0*8) + v1)))) && ((3 + (((v0*8) + v1) + 4)) >= (3 + (((v0*8) + v1) + 4)))) && (((min(v2*32, 93) + v3)/8) <= (((min(v2*32, 93) + 0) + v3)/8))) && ((((min(v2*32, 93) + v3) + 31)/8) >= (((min(v2*32, 93) + ((32 + 0) - 1)) + v3)/8))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)));1;300;;;;;
 (max(min(max(((v0 - (v1*8)) + 11)/12, 0), ((min(((((v2 + v3) + 7)/8) - (v4*4)) - (v3/8), 3)*8) + 20)/12), (min(min(min(min((v5 + v0) - (v1*8), ((v6 - v1)*8) + 5), min((v5 + v0) - (v1*8), ((v6 - v1)*8) + 2) + 3), min((v6 - v1)*8, ((v5 + v0) - (v1*8)) + 2) + 5), (min(((((v2 + v3) + 7)/8) - (v4*4)) - (v3/8), 3)*8) + 16) + 4)/12) == max(min(max(((v0 - (v1*8)) + 11)/12, 0), ((min(((((v2 + v3) + 7)/8) - (v4*4)) - (v3/8), 3)*8) + 20)/12), (min(min(min(min((v5 + v0) - (v1*8), ((v6 - v1)*8) + 5), min((v5 + v0) - (v1*8), ((v6 - v1)*8) + 2) + 3), min((v6 - v1)*8, ((v5 + v0) - (v1*8)) + 2) + 5), (min(((((v2 + v3) + 7)/8) - (v4*4)) - (v3/8), 3)*8) + 16) + 4)/12));1;313;;;;;
 ((min(max((((v0 + v1) + -1)/65)*8, 239), (((min(max((((v0 + v1) + -1)/65)*8, 239) - v2, (v3*4) + -13)/4)*4) + v2) + 3) - (v3*4)) == (min(max((((v0 + v1) + -1)/65)*8, 239), (((min(max((((v0 + v1) + -1)/65)*8, 239) - v2, (v3*4) + -13)/4)*4) + v2) + 3) - (v3*4)));1;142;;;;;
 ((v0 + -8) >= (((v0 + -8) + (min((v1 - v2) + v3, -16) + 17)) - 1));1;105;;;;;
 ((((v0/2000)*256) + (v1*112)) == (((v0/2000)*256) + (v1*112)));1;56;;;;;
 ((v0 - max(min(v1, 250), 1)) == (v0 - max(min(v1, 250), 1)));1;303;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + 1314)/63) - (v2*12)) - ((v0 + v1)/63), 9)*16) + 60)) - 1));0;164;;;;;
 ((((max(min(v0 + v1, 1998), -1) - max(min(v1, 1999), 0)) + 1004)/1001) == (((max(min(v0 + v1, 1998), -1) - max(min(v1, 1999), 0)) + 1004)/1001));1;83;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5)) + 91)/84) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5)) + 91)/84));1;306;;;;;
 (min(max(max((v0*8) + -83, v1), 0), ((min((((max(((v2 + v3) + 7)/8, 255)/16)*16) - (v4*9)) - ((min(v3/8, 0)/16)*16), -30) + v0)*8) + 230) == min(max(max((v0*8) + -83, v1), 0), ((min((((max(((v2 + v3) + 7)/8, 255)/16)*16) - (v4*9)) - ((min(v3/8, 0)/16)*16), -30) + v0)*8) + 230));1;159;;;;;
 ((((v0*-155)/31)*31) == (v0*-155));1;42;;;;;
 (((v0*32) + (min(v1*500, v2 + -500) + v3)) == ((v0*32) + (min(v1*500, v2 + -500) + v3)));1;53;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 118) == min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 118));1;72;;;;;
 ((((v0 + v1)/2) + (v2*4)) == (((v0 + v1)/2) + (v2*4)));1;57;;;;;
 (min(((((v0 + v1) + -1)/2) - (v1/2)) + -62, v2) == min(((((v0 + v1) + -1)/2) - (v1/2)) + -62, v2));1;48;;;;;
 (((((((uint1)1 && (((v0*2) + v1) <= (((v0*2) + 0) + v1))) && ((((v0*2) + v1) + 1) >= (((v0*2) + ((2 + 0) - 1)) + v1))) && ((((0*4) + v2) + 0) <= (((0*4) + 0) + v2))) && ((((1*4) + v2) + 3) >= (((((2 + 0) - 1)*4) + ((4 + 0) - 1)) + v2))) && (0 <= 0)) && (451 >= ((452 + 0) - 1)));1;212;;;;;
 ((((max(((v0 + v1) + 3)/4, 499) - min(v1/4, 0))/32) + 1) == (((max(((v0 + v1) + 3)/4, 499) - min(v1/4, 0))/32) + 1));1;92;;;;;
 ((((v0 + 12)/96) + ((((v0 + 12) % 96) + 95)/96)) == (((v0 + 12)/96) + ((((v0 + 12) % 96) + 95)/96)));1;58;;;;;
 (min(max(min(v0 + v1, 2000), 1), max(min(v1, 1999), 0) + 998) == min(max(min(v0 + v1, 2000), 1), max(min(v1, 1999), 0) + 998));1;68;;;;;
 (min((((v0 + v1) + 447)/32)*4, (v2*4) + -53) == min((((v0 + v1) + 447)/32)*4, (v2*4) + -53));1;73;;;;;
 ((v0 + -4) >= (((v0 - 1) + 3) + 1));0;40;;;;;
 (min(((v0*63) + v1) + 62, v2) == min(((v0*63) + v1) + 62, v2));1;47;;;;;
 ((((min(((v0 + v1) - (v2*125))*4, (((v3*32) + v1)*4) + 131) + (v3*-128))*-8) + ((v4*4) + ((v1*32) + (v5*504)))) == (((min(((v0 + v1) - (v2*125))*4, (((v3*32) + v1)*4) + 131) + (v3*-128))*-8) + ((v4*4) + ((v1*32) + (v5*504)))));1;126;;;;;
 (((max(v0, 0) - (v1*20)) - ((v2*10) + v3)) == ((max(v0, 0) - (v1*20)) - ((v2*10) + v3)));1;68;;;;;
 (min(v0 + -7, v1) == min(v0 + -7, v1));1;44;;;;;
 (max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min((((((v7 + v5) + -10)/4) - (v6*8)) + 13)/3, (((((v7 + v5) + -10)/4) - (v6*8)) + 13)/3), (((((v7 + v5) + -10)/4) - (v6*8)) + 13)/3), (((((v7 + v5) + -6)/4) - (v6*8)) + 13)/3), (((((v7 + v5) + -6)/4) - (v6*8)) + 13)/3), (((((v7 + v5) + -6)/4) - (v6*8)) + 13)/3), (((((v7 + v5) + -2)/4) - (v6*8)) + 13)/3), (((((v7 + v5) + -2)/4) - (v6*8)) + 13)/3), (((((v7 + v5) + -2)/4) - (v6*8)) + 13)/3), min((((((v7 + v5) + -6)/4) - (v6*8)) + 13)/3, 15)), min((((((v7 + v5) + -6)/4) - (v6*8)) + 13)/3, 15)), min((((((v7 + v5) + -6)/4) - (v6*8)) + 13)/3, 15)), min((((((v7 + v5) + -2)/4) - (v6*8)) + 13)/3, 15)), min((((((v7 + v5) + -2)/4) - (v6*8)) + 13)/3, 15)), min((((((v7 + v5) + -2)/4) - (v6*8)) + 13)/3, 15)), min((((((v7 + v5) + 2)/4) - (v6*8)) + 13)/3, 15)), min((((((v7 + v5) + 2)/4) - (v6*8)) + 13)/3, 15)), min((((((v7 + v5) + 2)/4) - (v6*8)) + 13)/3, 15)), (0 + 17) - 1) + 1, min(max(max(max(((((v5 + -2)/4) - (v6*8))/3) + 5, ((((v5 + 2)/4) - (v6*8))/3) + 5), ((((v5 + 6)/4) - (v6*8))/3) + 5), 0), 17 + 0)) <= min(max(max(max(((((v5 + -2)/4) - (v6*8))/3) + 5, ((((v5 + 2)/4) - (v6*8))/3) + 5), ((((v5 + 6)/4) - (v6*8))/3) + 5), 0), 17 + 0));0;5622;;;;;
 (((max(min((v0*-48) + ((max(min(v2/2, 999), 0) + v1) - max(min(v2/2, 999), 0)), 44), -6)/2)*2) == max(min((v0*-48) + ((max(min(v2/2, 999), 0) + v1) - max(min(v2/2, 999), 0)), 44), -6));0;673;;;;;
 (((((((v0 + v1) + 15)/16)*2) - (v2*17)) - (((v1 + -2)/16)*2)) == ((((((v0 + v1) + 15)/16)*2) - (v2*17)) - (((v1 + -2)/16)*2)));1;78;;;;;
 (((max(min((v0*-12) + v1, 12), 0)/4)*4) == max(min((v0*-12) + v1, 12), 0));0;611;;;;;
 (min(((v0 + v1) + 43)/4, v2 + -5) == min(((v0 + v1) + 43)/4, v2 + -5));1;62;;;;;
 ((((v0*63) + v1) + v2) < (((v0*63) + v1) + (v2 + 1)));1;66;;;;;
 ((max(min((v0 + v1)*64, 2896), 897) + ((((max(min((v0 + v1)*64, 2862), 863) - max(min((v0 + v1)*64, 2928), 929)) + 66)/4)*4)) == (max(min((v0 + v1)*64, 2896), 897) + ((((max(min((v0 + v1)*64, 2862), 863) - max(min((v0 + v1)*64, 2928), 929)) + 66)/4)*4)));1;262;;;;;
 (min((v0*4) + (v1 + v2), (v2 + v3) + -4) == min((v0*4) + (v1 + v2), (v2 + v3) + -4));1;58;;;;;
 (min(max(min(min(((v0/8) + v1)*8, (v2*8) + 463), 2002), 3) + 409, v3) == min(max(min(min(((v0/8) + v1)*8, (v2*8) + 463), 2002), 3) + 409, v3));1;63;;;;;
 (min(((min((((v0 + v1) + -1)/65) - (v2*4), (v1/65) + 3)*8) - (v3*12)) - ((v1/65)*8), v4) == min(((min((((v0 + v1) + -1)/65) - (v2*4), (v1/65) + 3)*8) - (v3*12)) - ((v1/65)*8), v4));1;103;;;;;
 (((v0/4) + (v1*4)) == ((v0/4) + (v1*4)));1;62;;;;;
 ((v0 - (v1*128)) == (v0 - (v1*128)));1;46;;;;;
 (min(max(min((v0 + v1)/2, 999), 0) + (((v2 + 67)/2)*2), max(min((v0 + v1)/2, 937), -62) + 66) == min(max(min((v0 + v1)/2, 999), 0) + (((v2 + 67)/2)*2), max(min((v0 + v1)/2, 937), -62) + 66));1;68;;;;;
 (min((min(((v0*-4) + (min(((v1 + v0) - (v2*125))*4, (min(v3*128, 372) + (v0*4)) + 131) + (v3*-128)))*8, 25) + (min(((v0*-4) + (min(((v1 + v0) - (v2*125))*4, (min(v3*128, 372) + (v0*4)) + 131) + (v3*-128)))*2, 131)*4)) + v4, (v5*8) + 24) == min((min(((v0*-4) + (min(((v1 + v0) - (v2*125))*4, (min(v3*128, 372) + (v0*4)) + 131) + (v3*-128)))*8, 25) + (min(((v0*-4) + (min(((v1 + v0) - (v2*125))*4, (min(v3*128, 372) + (v0*4)) + 131) + (v3*-128)))*2, 131)*4)) + v4, (v5*8) + 24));1;194;;;;;
 ((min(v0 + 5, v1) + (v2*4)) == (min(v0 + 5, v1) + (v2*4)));1;40;;;;;
 (((v0 - (v1*125)) - (v2*8)) == ((v0 - (v1*125)) - (v2*8)));1;44;;;;;
 (max(((v0 - v1) + 32)/1028, 0) >= ((max(((v0 - v1) + 32)/1028, 0) + max((((v0 - v1) + 1059)/1028) - max(((v0 - v1) + 32)/1028, 0), 0)) - 1));0;921;;;;;
 (max(min(ramp(v0 + -5, 8, 4), x4(4007)), x4(8)) == x4(1));0;133;;;;;
 ((((max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1))/4) + 4) == (((max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1))/4) + 4));1;255;;;;;
 (max(((v0 - v1) + 8)/64, 0) >= ((max(((v0 - v1) + 8)/64, 0) + max((((v0 - v1) + 71)/64) - max(((v0 - v1) + 8)/64, 0), 0)) - 1));0;1076;;;;;
 (min((v0*4) + v1, (v2*16) + 914) == min((v0*4) + v1, (v2*16) + 914));1;63;;;;;
 (min(124 - (v0*63), (max(min(v1*4, 246), -3) - ((v0*63) + v2)) + 39) == min(124 - (v0*63), (max(min(v1*4, 246), -3) - ((v0*63) + v2)) + 39));1;89;;;;;
 (min(((v0*6) + v1)*32, (v2*8) + 552) == min(((v0*6) + v1)*32, (v2*8) + 552));1;58;;;;;
 (min(v0*2, max(max(v1/4, 0) - (max(min((v2/32)*4, 281), 32)*2), -66) + 65) == min(v0*2, max(max(v1/4, 0) - (max(min((v2/32)*4, 281), 32)*2), -66) + 65));1;101;;;;;
 ((((v0*12) + (v1*8)) - min(min(v0*12, 20) + (v1*8), ((max(min((((v2 + v3) + -1)/63)*8, 244), -5) - (v4*4))*8) + 326)) == (((v0*12) + (v1*8)) - min(min(v0*12, 20) + (v1*8), ((max(min((((v2 + v3) + -1)/63)*8, 244), -5) - (v4*4))*8) + 326)));1;127;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 98)/88) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 98)/88));1;264;;;;;
 ((v0*4) == (((v0*4) + ((min(v1, 31)*4) + 4)) - 1));0;69;;;;;
 ((((((((v0 + v1) + -1)/500) - (v1/500))*8) + 29)/20) == (((((((v0 + v1) + -1)/500) - (v1/500))*8) + 29)/20));1;68;;;;;
 (((max(((v0 + v1) + 23)/8, 249) - (v2*8)) - min(v1/8, 4)) == ((max(((v0 + v1) + 23)/8, 249) - (v2*8)) - min(v1/8, 4)));1;100;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*256) + 1268)/832) == (((((((v0 + v1) + 249)/250) - (v1/250))*256) + 1268)/832));1;73;;;;;
 ((((((v0 + v1) + 249)/250)*32) - ((((v2*2) + v3)*4) + v4)) == (((((v0 + v1) + 249)/250)*32) - ((((v2*2) + v3)*4) + v4)));1;86;;;;;
 (min(v0*8, (((v1/8) + v2)*8) + 3) == min(v0*8, (((v1/8) + v2)*8) + 3));1;44;;;;;
 ((((max(min(((v0 + v1) + -1)/2, 996), 0) - max(min(v1/2, 999), 2)) + 131)/126) == (((max(min(((v0 + v1) + -1)/2, 996), 0) - max(min(v1/2, 999), 2)) + 131)/126));1;325;;;;;
 ((max(min(v0, 999), 0) + (((v1 + 3)/2)*2)) == (max(min(v0, 999), 0) + (((v1 + 3)/2)*2)));1;54;;;;;
 (((((((v0 + v1) + -1)/63) - (v1/63))*4) + 1) == ((((((v0 + v1) + -1)/63) - (v1/63))*4) + 1));1;59;;;;;
 ((((((v0 + v1) + 64)/65)*2) - ((v2*2) + ((v3*11) + ((v4*4) + v5)))) == (((((v0 + v1) + 64)/65)*2) - ((v2*2) + ((v3*11) + ((v4*4) + v5)))));1;76;;;;;
 (((((min(v0, 969) + v1) + -1009)/8) + (v2*128)) == ((((min(v0, 969) + v1) + -1009)/8) + (v2*128)));1;59;;;;;
 ((v0 + 3) < (min(max(v1*8, (v0 + 1) + 92), (v0 + 1) + 87) + -89));0;98;;;;;
 (min(((v0 + v1) + -17)/16, (v1/16) + (v2*2)) == min(((v0 + v1) + -17)/16, (v1/16) + (v2*2)));1;69;;;;;
 (((((((uint1)1 && (((0 + v0) + -257) <= ((0 + v0) + -257))) && (((3 + (v0 + 252)) + -257) >= ((3 + (v0 + 252)) + -257))) && ((v1 + -12) <= (-7 + (v1 + -5)))) && ((v1 + 132) >= (0 + (v1 + 132)))) && (v2 <= v2)) && (v2 >= v2));1;126;;;;;
 (((v0/63) + ((v1/4)*4)) == ((v0/63) + ((v1/4)*4)));1;33;;;;;
 ((((max(min(v0, 36), 5)*16) + v1)*4) == (((max(min(v0, 36), 5)*16) + v1)*4));1;71;;;;;
 (((v0*33) + ((v1*64) + v2)) == ((v0*33) + ((v1*64) + v2)));1;49;;;;;
 (min(((v0*41) + v1) + v2, min(((v0*41) + v1) + v2, v3)) <= (max((((v0 - 1)*41) + v1) + v4, max((((v0 - 1)*41) + v1) + v4, v5)) - 1));0;1197;;;;;
 (((v0*4) + 9) != 0);1;28;;;;;
 (((((((v0 + v1) + 188)/63) - (v1/63)) + 25)/20) == ((((((v0 + v1) + 188)/63) - (v1/63)) + 25)/20));1;804;;;;;
 (((((v0*17) + v1)*4) + ((v2*4) + v3)) == ((((v0*17) + v1)*4) + ((v2*4) + v3)));1;45;;;;;
 ((((max(((v0 + v1) + 7)/8, 255)/16)*16) - ((v2*9) + v3)) == (((max(((v0 + v1) + 7)/8, 255)/16)*16) - ((v2*9) + v3)));1;73;;;;;
 (max(-952 - (v0*32), (v0*32) + 199) >= 0);0;486;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 255)/251) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 255)/251));1;149;;;;;
 ((((v0 - v1) + 562)/525) == (((v0 - v1) + 562)/525));1;45;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && ((v2/32) <= ((0 + v2)/32))) && (((v2 + 124)/32) >= ((((125 + 0) - 1) + v2)/32))) && (v3 <= v3)) && (v3 >= v3));1;180;;;;;
 (((((max(v0, 0) - v1)*8) + 627)/617) != 0);0;636;;;;;
 ((((min((((v0 + v1) + 64)/65) - (v2*4), ((v1/65) + (v3*8)) + 3) + (v3*-8))*-2) + (((v1/65)*2) + v4)) == (((min((((v0 + v1) + 64)/65) - (v2*4), ((v1/65) + (v3*8)) + 3) + (v3*-8))*-2) + (((v1/65)*2) + v4)));1;133;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= (0 + v2))) && ((v2 + 124) >= (((125 + 0) - 1) + v2))) && (0 <= 0)) && (0 >= 0));1;164;;;;;
 ((min(v0*252, 748) + (v1 + v2)) == (min(v0*252, 748) + (v1 + v2)));1;39;;;;;
 (((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (v2 <= v2)) && (v2 >= v2));1;79;;;;;
 (((min((((min((v2*128) + ((v3*4) + 131), ((v4 + v3) - (v5*125))*4)*8) - (v2*1024)) - (max((min(((v2*-128) + min((v2*128) + ((v3*4) + 131), ((v4 + v3) - (v5*125))*4)) + (v3*-4), (min((v2*128) + ((v3*4) + 131), ((v4 + v3) - (v5*125))*4) + (v2*-128)) + (63 - (v3*4))) + -3)/63, 0)*504)) - (v3*32), 525)/4)*4) == min((((min((v2*128) + ((v3*4) + 131), ((v4 + v3) - (v5*125))*4)*8) - (v2*1024)) - (max((min(((v2*-128) + min((v2*128) + ((v3*4) + 131), ((v4 + v3) - (v5*125))*4)) + (v3*-4), (min((v2*128) + ((v3*4) + 131), ((v4 + v3) - (v5*125))*4) + (v2*-128)) + (63 - (v3*4))) + -3)/63, 0)*504)) - (v3*32), 525));0;3424;;;;;
 ((((min(v0, 10)*8) + 84)/55) == (((min(v0, 10)*8) + 84)/55));1;74;;;;;
 ((-3 - max((((v0 - v1) + 25)/4)*4, 1)) >= (((-3 - max((((v0 - v1) + 25)/4)*4, 1)) + (max((((v0 - v1) + 25)/4)*4, 1) + 6)) - 1));0;104;;;;;
 (((((v0 % ((v1/8) + 1))*-8)/4)*4) == ((v0 % ((v1/8) + 1))*-8));1;88;;;;;
 ((((((v0 + v1) + -1)/250)*32) - ((v2*4) + v3)) == (((((v0 + v1) + -1)/250)*32) - ((v2*4) + v3)));1;53;;;;;
 ((((v0 + v1) + v2)/2) >= ((((((v0 - 1) + v1) + v2)/2) + 1) + 1));0;123;;;;;
 (min((max(min(((v0*2) + v1)*8, 2007), 8) + (v2*4)) + 4, v3) == min((max(min(((v0*2) + v1)*8, 2007), 8) + (v2*4)) + 4, v3));1;88;;;;;
 ((((max(((v0 + v1) + 7)/8, 255) - min(v1/8, 0))/4) + 1) >= 0);1;77;;;;;
 ((((v0*252) + v1) - max(min(v2*2, 1995), -4)) == (((v0*252) + v1) - max(min(v2*2, 1995), -4)));1;51;;;;;
 (min(max(min(v0, 556), 57), max(min(v0, 497), -2) + 60) == min(max(min(v0, 556), 57), max(min(v0, 497), -2) + 60));1;87;;;;;
 (min((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126) - (max((max(min((v1/4)*8, 4004), 5) + -13)/2, 0)/63)) + -11, v2) == min((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126) - (max((max(min((v1/4)*8, 4004), 5) + -13)/2, 0)/63)) + -11, v2));1;132;;;;;
 (min(v0*8, (v1*12) + (v2*8)) == min(v0*8, (v1*12) + (v2*8)));1;58;;;;;
 ((max(min((((v0 + v1)/32) + v2)*32, 1996), -3) - max(min(((v0 + v1)/32)*32, 1999), 0)) == (max(min((((v0 + v1)/32) + v2)*32, 1996), -3) - max(min(((v0 + v1)/32)*32, 1999), 0)));1;230;;;;;
 ((((((v0 + v1)/4) + v2)*4) + 1000) >= (((((((v0 + v1)/4) + v2)*4) + 1000) + 4) - 1));0;94;;;;;
 (((max(min((v1*-1000) + ((v2*-1000) + v3), 1000), 0)/4)*4) == max(min((v1*-1000) + ((v2*-1000) + v3), 1000), 0));0;959;;;;;
 ((max(min(v0/2, 999), 0) + (v1*128)) == (max(min(v0/2, 999), 0) + (v1*128)));1;46;;;;;
 (min((((v0 + v1) + 1999)/500) - (v1/500), v2 + 3) == min((((v0 + v1) + 1999)/500) - (v1/500), v2 + 3));1;59;;;;;
 ((v0 + -499) == (((v0 + -499) + 506) - 1));0;47;;;;;
 (((v0*4) - min(min(v0*4, 86) + v1, ((max(min(min(((v2 + v3) + 499)/500, 3)*8, 22), -7)*8) - (v4*90)) + 220)) == ((v0*4) - min(min(v0*4, 86) + v1, ((max(min(min(((v2 + v3) + 499)/500, 3)*8, 22), -7)*8) - (v4*90)) + 220)));1;328;;;;;
 ((min(max(v0*64, -9) + (v1*36), (v0*64) + 28) + (min(v2*128, 872) + (v3 + v4))) == (min(max(v0*64, -9) + (v1*36), (v0*64) + 28) + (min(v2*128, 872) + (v3 + v4))));1;96;;;;;
 ((v0 + -5) == (((v0 + -5) + (11 - max((((v1 + v2)/8) - v3)*8, 3))) - 1));0;132;;;;;
 ((((((((v0 + v1) + 39)/8) - (v1/8))*8) + 115)/68) == (((((((v0 + v1) + 39)/8) - (v1/8))*8) + 115)/68));1;67;;;;;
 (max(min(v0, 36), (max(min(v0, 36), 5) + (v1*4)) + 2) == max(min(v0, 36), (max(min(v0, 36), 5) + (v1*4)) + 2));1;63;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 98)/88) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 98)/88));1;275;;;;;
 (min((((v0 + v1) + -1)/8) - ((v2*8) + v3), 124 - (v2*8)) == min((((v0 + v1) + -1)/8) - ((v2*8) + v3), 124 - (v2*8)));1;41;;;;;
 ((((v0 % 2)*44) + ((v1*4) + v2)) == (((v0 % 2)*44) + ((v1*4) + v2)));1;26;;;;;
 (((v0*12) + ((v1*3) + (max(min(min(v2*32, 223) + v3, 1244), 245) - max(min(min(v2*32, 223) + v3, 1213), 214)))) == ((v0*12) + ((v1*3) + (max(min(min(v2*32, 223) + v3, 1244), 245) - max(min(min(v2*32, 223) + v3, 1213), 214)))));1;348;;;;;
 (min(max(min(v0*8, 1994), -5) + -19, v1) == min(max(min(v0*8, 1994), -5) + -19, v1));1;43;;;;;
 (min(max(min(v0 + v1, 1500), -499) + 378, v2) == min(max(min(v0 + v1, 1500), -499) + 378, v2));1;61;;;;;
 ((v0 - (((v1*32) + (v2*250))*4)) == (v0 - (((v1*32) + (v2*250))*4)));1;51;;;;;
 ((min(max(v0, 249) - (v1*16), min(v2, 0) + 15) - ((v3*3) + (min(v2, 0) + (v4*9)))) == (min(max(v0, 249) - (v1*16), min(v2, 0) + 15) - ((v3*3) + (min(v2, 0) + (v4*9)))));1;111;;;;;
 ((max(min(v0, 316), 158) + -318) >= (((max(min(v0, 316), 158) + -318) + (322 - max(min(v0, 316), 158))) - 1));0;90;;;;;
 (((v0 + 9)/4) != 0);0;380;;;;;
 (((v0/32) + ((v1/31)*9)) == ((v0/32) + ((v1/31)*9)));1;39;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 42)/15) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 42)/15));1;254;;;;;
 (((((v0 + v1) + 64)/65) - v2) == ((((v0 + v1) + 64)/65) - v2));1;59;;;;;
 (((v0*33) + (v1*16)) == ((v0*33) + (v1*16)));1;34;;;;;
 ((min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + (min(v2*125, v3 + -125) + v4)) == (min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + (min(v2*125, v3 + -125) + v4)));1;84;;;;;
 (min(min(v0 + v1, 1992) + 14, v2) == min(min(v0 + v1, 1992) + 14, v2));1;40;;;;;
 (((v0*28) + ((v1*7) + v2)) < ((v0*28) + ((v1*7) + (v2 + 1))));1;52;;;;;
 (((((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0))*8) + 139)/124) == ((((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0))*8) + 139)/124));1;212;;;;;
 ((((v0 + v1)/2) + (v2*131)) == (((v0 + v1)/2) + (v2*131)));1;81;;;;;
 (((((v0*2) + v1)*8) + ((v2*63) + v3)) == ((((v0*2) + v1)*8) + ((v2*63) + v3)));1;51;;;;;
 (min(((v0*35) + v1) + 19, v2) == min(((v0*35) + v1) + 19, v2));1;45;;;;;
 (0 == ((0 + (32 - (max(min((v0*2) + v1, 8), 7)*4))) - 1));0;81;;;;;
 ((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - ((v2*4) + v3)) == (max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - ((v2*4) + v3)));1;80;;;;;
 (((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*32)) - max(min(v1/2, 1006), 7)) == ((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*32)) - max(min(v1/2, 1006), 7)));1;84;;;;;
 (((((((uint1)1 && ((0 + ((min(max(v0*500, -11), (v0*500) + 244) + v1) + 1)) <= ((0 + ((v0*500) + v1)) + -10))) && ((255 + (min((((min(v0*500, -11) + 510)/256)*256) + (max(v0*500, -11) + v1), ((v0*500) + v1) + 244) + 1)) >= ((3 + (((v0*500) + v1) + 496)) + 1))) && (v2 <= v2)) && ((v2 + 124) >= (v2 + 124))) && (0 <= 0)) && (0 >= 0));0;406;;;;;
 (((((v0*3) + v1)*8) + -701) >= ((((((v0*3) + v1)*8) + -701) + 27) - 1));0;73;;;;;
 ((v0 - max(min(((v1 + v2) + -1)/4, 499), 0)) == (v0 - max(min(((v1 + v2) + -1)/4, 499), 0)));1;61;;;;;
 ((max(min(((v0 + v1) + 1)*4, 1995), -4) - max(min(((v0 + v1) + 1)*4, 1998), -1)) == (max(min(((v0 + v1) + 1)*4, 1995), -4) - max(min(((v0 + v1) + 1)*4, 1998), -1)));1;267;;;;;
 ((((v0 + v1) + v2)/63) >= ((((((v0 - 1) + v1) + v2)/63) + 1) + 1));0;137;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*64) + 1135)/1040) == (((((((v0 + v1) + -1)/63) - (v1/63))*64) + 1135)/1040));1;68;;;;;
 ((((((v0 + v1) + 7)/504)*2) - (((v1/504)*2) + v2)) == (((((v0 + v1) + 7)/504)*2) - (((v1/504)*2) + v2)));1;33;;;;;
 (min(max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10), v2) == min(max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10), v2));1;193;;;;;
 ((((v0*32) + 114)/49) != 0);0;403;;;;;
 (min(((v0*12) + ((v1/65)*8)) + 2, v2) == min(((v0*12) + ((v1/65)*8)) + 2, v2));1;47;;;;;
 (((((v0 % ((v1/32) + 1))*32)/2)*2) == ((v0 % ((v1/32) + 1))*32));1;66;;;;;
 ((((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 71)/2) == (((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 71)/2));1;226;;;;;
 (0 == ((0 + (1002 - max(((v0*16) + v1)*4, 998))) - 1));0;77;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0)*8) - max(max(min(v1/8, 254), 5)*8, 52)) + 725)/667) == ((((max(min(((v0 + v1) + 7)/8, 249), 0)*8) - max(max(min(v1/8, 254), 5)*8, 52)) + 725)/667));1;134;;;;;
 (0 == ((0 + (44 - (max(min(v0, 11), 10)*4))) - 1));0;85;;;;;
 (((v0 + 78)/64) != 0);0;362;;;;;
 (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16)) + 10)/9) >= 0);1;89;;;;;
 ((min(v0, 0) + (v1*32)) == (min(v0, 0) + (v1*32)));1;956;;;;;
 (max(v0*8, ((v0 + v1)*8) + 1) == max(v0*8, ((v0 + v1)*8) + 1));1;45;;;;;
 (((((((uint1)1 && (((v0 + 0) + -2) <= ((0 + v0) + -2))) && (((v0 + 3) + -2) >= ((((4 + 0) - 1) + v0) + -2))) && (v1 <= v1)) && ((((((max(v2, 10)*-3) + 30) + 3) + v1) - 1) >= (((((max(v2, 10)*-3) + 30) + 3) + v1) - 1))) && (v3 <= v3)) && (v3 >= v3));1;196;;;;;
 (((v0*142) + ((v1/500)*512)) == ((v0*142) + ((v1/500)*512)));1;44;;;;;
 (min(v0 + 23, v1) == min(v0 + 23, v1));1;45;;;;;
 (min((v0 + v1)*8, (v2*8) + 6) == min((v0 + v1)*8, (v2*8) + 6));1;48;;;;;
 (((((((uint1)1 && (((0 + (v0 + -5)) + 3) <= ((0 + v0) + -2))) && (((3 + (v0 + 124)) + 3) >= ((3 + (v0 + 124)) + 3))) && ((max(v1 + 6, v2) + -3) <= (v1 + -2))) && ((v1 + 3) >= (v1 + 3))) && (v3 <= v3)) && (v3 >= v3));0;153;;;;;
 (min(((v0 + v1) + -1)/65, ((v1/65) + ((v2/16)*16)) + 15) == min(((v0 + v1) + -1)/65, ((v1/65) + ((v2/16)*16)) + 15));1;67;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 52)/43) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 52)/43));1;80;;;;;
 ((((v0*8) + 408)/66) != 0);0;426;;;;;
 (min((min(((v0 + v1) + 3)/2, ((v2*63) + v3) + 58) + ((v2*-63) - (v4*4))) + -24, v3) == min((min(((v0 + v1) + 3)/2, ((v2*63) + v3) + 58) + ((v2*-63) - (v4*4))) + -24, v3));1;97;;;;;
 (((((min((v0*-128) + (v1 - v2), 127) + 5)/68)*68) + (v0*128)) == ((((min((v0*-128) + (v1 - v2), 127) + 5)/68)*68) + (v0*128)));1;77;;;;;
 ((max(min(v0*2, 1995), -4) - ((((v1*63) + v2)*4) + v3)) == (max(min(v0*2, 1995), -4) - ((((v1*63) + v2)*4) + v3)));1;70;;;;;
 ((min(max(v0, 5)*4, 27) + -30) >= (((min(max(v0, 5)*4, 27) + -30) + (33 - min(max(v0, 5)*4, 27))) - 1));0;90;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 169)/63) == (((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 169)/63));1;206;;;;;
 ((((((v0*18) + v1)*2) + v2) + -7) == (((((((v0*18) + v1)*2) + v2) + -7) + 3) - 1));0;90;;;;;
 ((((v0*2) + ((v1*540) + v2)) - min((v3 - (v4*4)) + 57, (v1*540) + v2)) == (((v0*2) + ((v1*540) + v2)) - min((v3 - (v4*4)) + 57, (v1*540) + v2)));1;73;;;;;
 ((min((((v0 + v1) + 31)/32) - (v2*32), (v1/32) + 31) - ((v3*4) + ((v1/32) + (v4*12)))) == (min((((v0 + v1) + 31)/32) - (v2*32), (v1/32) + 31) - ((v3*4) + ((v1/32) + (v4*12)))));1;99;;;;;
 ((v0 + -115) >= (((v0 + -115) + (min(((max(min((v1 + v2)/2, 1006), 7) + v3)*8) + (v4 - (max(min((v1 + v2)/2, 1006), 7)*8)), -699) + 700)) - 1));1;279;;;;;
 (min(max(min(v0, 270), 21), v1 + 24) == min(max(min(v0, 270), 21), v1 + 24));1;44;;;;;
 ((max(max(min(v0/2, 1006), 7)*8, 115) + (v1*131)) == (max(max(min(v0/2, 1006), 7)*8, 115) + (v1*131)));1;54;;;;;
 ((min(max(min((((v0/125)*8) + v1)*8, min((((v2 + v0) + 124)/125)*64, 959) + 64)*2, 47), (v3 + v4) + 46) - max(min((((v0/125)*8) + v1)*16, 2061), 62)) == (min(max(min((((v0/125)*8) + v1)*8, min((((v2 + v0) + 124)/125)*64, 959) + 64)*2, 47), (v3 + v4) + 46) - max(min((((v0/125)*8) + v1)*16, 2061), 62)));1;164;;;;;
 ((((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 19)/4) == (((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 19)/4));1;235;;;;;
 (min(v0*8, (v1*8) + 9) == min(v0*8, (v1*8) + 9));1;54;;;;;
 ((((v0*2) + v1) - min(v2 + 57, v1)) == (((v0*2) + v1) - min(v2 + 57, v1)));1;49;;;;;
 ((((v0*-26)/13)*13) == (v0*-26));1;28;;;;;
 ((((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 518)/504) == (((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 518)/504));1;149;;;;;
 (min((((v0 + v1) + 31)/32)*4, v2 + 8) == min((((v0 + v1) + 31)/32)*4, v2 + 8));1;48;;;;;
 (((((((v0 + v1) + 11)/2) - (v1/2)) + 508)/505) == ((((((v0 + v1) + 11)/2) - (v1/2)) + 508)/505));1;78;;;;;
 (((v0*-4) + ((((v1 + v2) + -1)/32) - v3)) == ((v0*-4) + ((((v1 + v2) + -1)/32) - v3)));1;55;;;;;
 (((v0 + 136)/12) == ((v0 + 136)/12));1;26;;;;;
 ((((v0 - v1) + 141)/130) == (((v0 - v1) + 141)/130));1;45;;;;;
 (((((v0 % (((v1 - v2) + 93)/88))*-88)/8)*8) == ((v0 % (((v1 - v2) + 93)/88))*-88));1;70;;;;;
 ((((max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (max(min(min(v1/16, 124)*2, 1), -1)*8)) + 175)/127) == (((max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (max(min(min(v1/16, 124)*2, 1), -1)*8)) + 175)/127));1;123;;;;;
 (min(((v0*252) + ((v1*500) + v2)) + 244, v3) == min(((v0*252) + ((v1*500) + v2)) + 244, v3));1;56;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 5)/2) - ((max(min((v1/4)*8, 4012), 13) + -13)/2))/16) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 5)/2) - ((max(min((v1/4)*8, 4012), 13) + -13)/2))/16) + 1));1;136;;;;;
 (min((max(min((((v0 + v1) + -1)/63)*8, 244), -5)*8) + 338, v2) == min((max(min((((v0 + v1) + -1)/63)*8, 244), -5)*8) + 338, v2));1;73;;;;;
 (min(((v0/8) + (((v1 + 128)/126)*126))*8, ((((v2 + v0) + -1)/8)*8) + 23) == min(((v0/8) + (((v1 + 128)/126)*126))*8, ((((v2 + v0) + -1)/8)*8) + 23));1;56;;;;;
 (((max(v0*500, -8)/4)*4) == max(v0*500, -8));1;45;;;;;
 (((v0 + 46)/32) != 0);0;354;;;;;
 (min(max((((v0 + v1) + 64)/65)*64, 1975), (min((v1/65)*64, 4) + (v2*252)) + 239) == min(max((((v0 + v1) + 64)/65)*64, 1975), (min((v1/65)*64, 4) + (v2*252)) + 239));1;88;;;;;
 (min(124 - (v0*63), max(min(((v1 + v2) + 7)/8, 249), 0) - ((v0*63) + v3)) == min(124 - (v0*63), max(min(((v1 + v2) + 7)/8, 249), 0) - ((v0*63) + v3)));1;99;;;;;
 ((((v0*16) + (((v1/4)*64) + ((v2*8) + v3))) - max((((v4 + v5) + -1)/65)*8, 239)) == (((v0*16) + (((v1/4)*64) + ((v2*8) + v3))) - max((((v4 + v5) + -1)/65)*8, 239)));1;82;;;;;
 ((v0 + 2) != 0);0;261;;;;;
 ((max(min(v0, 1996), -3) + (v1*4)) == (max(min(v0, 1996), -3) + (v1*4)));1;63;;;;;
 (((v0*252) + (((max(min(v1, 2002), 3) + -3)/16)*16)) == ((v0*252) + (((max(min(v1, 2002), 3) + -3)/16)*16)));1;57;;;;;
 (min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2) == min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2));1;199;;;;;
 (max((v0/4) + 4, v1) == max((v0/4) + 4, v1));1;41;;;;;
 (((v0/8) + (((v1/4)*64) - (((v2 + v0) + 31)/8))) == ((v0/8) + (((v1/4)*64) - (((v2 + v0) + 31)/8))));1;77;;;;;
 ((((max((v0*32) + ((v1/4) - (((v2 + v1) + 3)/4)), 7)*-4)/4)*4) == (max((v0*32) + ((v1/4) - (((v2 + v1) + 3)/4)), 7)*-4));1;115;;;;;
 (((v0*92) + (min(v1*32, 60) + ((v2/63)*8))) == ((v0*92) + (min(v1*32, 60) + ((v2/63)*8))));1;53;;;;;
 (min(((v0 + v1) + 15)/16, ((v1/16) + ((v2/32)*32)) + 31) == min(((v0 + v1) + 15)/16, ((v1/16) + ((v2/32)*32)) + 31));1;81;;;;;
 ((max(v0, 0) - ((((v1*20) + v2)*4) + ((v3*156) + v4))) == (max(v0, 0) - ((((v1*20) + v2)*4) + ((v3*156) + v4))));1;74;;;;;
 (max(((v0 - v1)*8)/126, 0) >= ((max(((v0 - v1)*8)/126, 0) + max(((((v0 - v1)*8) + 125)/126) - max(((v0 - v1)*8)/126, 0), 0)) - 1));0;2210;;;;;
 ((max(min((v0/32)*4, 285), 36) + (v1*2)) == (max(min((v0/32)*4, 285), 36) + (v1*2)));1;77;;;;;
 (min((v0*2) + v1, min(max(((v2 + v3) + 23)/8, 249), v1 + -1) + 3) == min((v0*2) + v1, min(max(((v2 + v3) + 23)/8, 249), v1 + -1) + 3));1;95;;;;;
 (min((v0*16) + v1, (v2*8) + -11) == min((v0*16) + v1, (v2*8) + -11));1;44;;;;;
 (((v0 + 10)/504) == ((((v0 + 10)/504) + ((((v0 + 10) % 504) + 503)/504)) - 1));0;463;;;;;
 ((((v0/2000)*256) + ((v1*112) - ((((v2 + v0) + 1999)/2000)*256))) == (((v0/2000)*256) + ((v1*112) - ((((v2 + v0) + 1999)/2000)*256))));1;63;;;;;
 ((((max(min(v0 + v1, 2000), 1) - (v2*126)) - (v3*8)) - max(min(v1, 1999), 0)) == (((max(min(v0 + v1, 2000), 1) - (v2*126)) - (v3*8)) - max(min(v1, 1999), 0)));1;79;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 106)/63) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 106)/63));1;242;;;;;
 ((((max(min(v0, 2002), 3) + -3)/16) + ((v1/4)*4)) == (((max(min(v0, 2002), 3) + -3)/16) + ((v1/4)*4)));1;56;;;;;
 (((v0*12) + (v1*8)) == ((v0*12) + (v1*8)));1;15;;;;;
 (min(((v0/63)*8) + ((((min((v1*-17) + (v2*8), 8) + 10)/4)*4) + (v1*17)), v3 + 11) == min(((v0/63)*8) + ((((min((v1*-17) + (v2*8), 8) + 10)/4)*4) + (v1*17)), v3 + 11));1;85;;;;;
 (min((v0*2) + v1, v2 + 2) == min((v0*2) + v1, v2 + 2));1;61;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 14)/8) == (((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 14)/8));1;179;;;;;
 (max(min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), (min(v4, 250) - v0) + -8)/8) + 1) == max(min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), (min(v4, 250) - v0) + -8)/8) + 1));1;204;;;;;
 ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36)) + 45)/4) == (((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36)) + 45)/4));1;224;;;;;
 ((((v0*2) + (max(min(v1/2, 999), 0) + (v2*6))) - min(max(min(((v3 + v1) + -1)/2, 999), 0), max(min(v1/2, 999), 0) + 499)) == (((v0*2) + (max(min(v1/2, 999), 0) + (v2*6))) - min(max(min(((v3 + v1) + -1)/2, 999), 0), max(min(v1/2, 999), 0) + 499)));1;126;;;;;
 ((v0 - (max(min(v1, 31), 0)*8)) == (v0 - (max(min(v1, 31), 0)*8)));1;57;;;;;
 ((((max(min((v2*-64) + (max(min(v5 + min((v3*128) + 128, v4), 2000), 1) - max(min((v3*128) + v5, 1999), 0)), 32), 0) + (max(min((v2*-2) + (((max(min(v5 + min((v3*128) + 128, v4), 2000), 1) - max(min((v3*128) + v5, 1999), 0)) + -1)/32), 1), -1)*32))/4)*4) == (max(min((v2*-64) + (max(min(v5 + min((v3*128) + 128, v4), 2000), 1) - max(min((v3*128) + v5, 1999), 0)), 32), 0) + (max(min((v2*-2) + (((max(min(v5 + min((v3*128) + 128, v4), 2000), 1) - max(min((v3*128) + v5, 1999), 0)) + -1)/32), 1), -1)*32)));0;2678;;;;;
 (min((max((((v0 + v1) + 127)/124) - ((v1 + 368)/124), max((((v0 + v1) + 251)/124) - ((v1 + -4)/124), (((v0 + v1) + 127)/124) - ((v1 + -252)/124)) + -1)/4) + 1, v2) == min((max((((v0 + v1) + 127)/124) - ((v1 + 368)/124), max((((v0 + v1) + 251)/124) - ((v1 + -4)/124), (((v0 + v1) + 127)/124) - ((v1 + -252)/124)) + -1)/4) + 1, v2));1;164;;;;;
 (min(((v0 + v1) + 1)/2, ((v1/2) + (v2*251)) + 250) == min(((v0 + v1) + 1)/2, ((v1/2) + (v2*251)) + 250));1;88;;;;;
 ((max(min(v0, 10), 7) + -12) >= (((max(min(v0, 10), 7) + -12) + (17 - max(min(v0, 10), 7))) - 1));0;79;;;;;
 (((((max(min(((v0 + v1) + 135)/64, 31), 0) - max(min(v1/64, 36), 5))*8) + 165)/125) == ((((max(min(((v0 + v1) + 135)/64, 31), 0) - max(min(v1/64, 36), 5))*8) + 165)/125));1;270;;;;;
 ((((v0 + v1)/8) + (v2*65)) == (((v0 + v1)/8) + (v2*65)));1;40;;;;;
 (((max(min(((v0 + v1) + 1007)/63, 31), 0) - max(min(v1/63, 35), 4)) + 5) == ((max(min(((v0 + v1) + 1007)/63, 31), 0) - max(min(v1/63, 35), 4)) + 5));1;284;;;;;
 (min(v0*8, ((min(min((((max(min(((v1 + v2) + -1)/63, 31), 0)*2) - v3)*4) - v4, -16)*8, -158) + (max(v4 - (((max(min(((v1 + v2) + -1)/63, 31), 0)*2) - v3)*4), 18)*-8)) + v5) + 288) == min(v0*8, ((min(min((((max(min(((v1 + v2) + -1)/63, 31), 0)*2) - v3)*4) - v4, -16)*8, -158) + (max(v4 - (((max(min(((v1 + v2) + -1)/63, 31), 0)*2) - v3)*4), 18)*-8)) + v5) + 288));1;206;;;;;
 (((((v0 + v1) + 43)/4) - (v2*4)) == ((((v0 + v1) + 43)/4) - (v2*4)));1;32;;;;;
 ((-3 - (((138 - max(v0*36, 97))/4)*4)) == (((-3 - (((138 - max(v0*36, 97))/4)*4)) + ((((138 - max(v0*36, 97))/4)*4) + 6)) - 1));0;127;;;;;
 ((v0 + 3) < min(max(v1/4, (v0 + 1) + 3), v0 + 1));0;101;;;;;
 (((v0*65) + ((v1/63)*8)) == ((v0*65) + ((v1/63)*8)));1;41;;;;;
 ((((v0*502) + v1) + 501) < (((v0 + 1)*502) + v1));1;60;;;;;
 (min((max(min(v0 + v1, 1999), 0)/16)*16, ((((max(min(v1, 2002), 3) + -3)/16) + (v2*16))*16) + 217) == min((max(min(v0 + v1, 1999), 0)/16)*16, ((((max(min(v1, 2002), 3) + -3)/16) + (v2*16))*16) + 217));1;86;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && ((v2/4) <= (v2/4))) && (((v2/4) + 32) >= ((v2/4) + 32))) && (v3 <= v3)) && (v3 >= v3));1;134;;;;;
 (((max(min((v0*-504) + v1, 500), -4)/4)*4) == max(min((v0*-504) + v1, 500), -4));0;598;;;;;
 (((v0/4) - (v1*168)) == ((v0/4) - (v1*168)));1;31;;;;;
 (min(v0*8, v1 + 25) == min(v0*8, v1 + 25));1;30;;;;;
 ((264 - (((v0*4) + v1)*8)) > (2287 - (((v0*4) + v1)*8)));0;55;;;;;
 (min((v0 + v1)*4, (v2*4) + 21) == min((v0 + v1)*4, (v2*4) + 21));1;66;;;;;
 (min((v0 + v1) + 1, v2) == min((v0 + v1) + 1, v2));1;58;;;;;
 ((((max(min((v0/4)*8, 4012), 13) + -19)/2) + (v1*252)) == (((max(min((v0/4)*8, 4012), 13) + -19)/2) + (v1*252)));1;66;;;;;
 (((((max(v0, 0) - v1)*8) + 1244)/1234) != 0);0;617;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9)) + 46)/32) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9)) + 46)/32));1;301;;;;;
 ((v0*37) == (((v0*37) + 37) - 1));0;27;;;;;
 ((((v0*8)/8)*8) == (v0*8));1;23;;;;;
 ((((((v0 + -128)/124) + v1)*2) - ((((v0 + -4)/124)*2) + v2)) == (((((v0 + -128)/124) + v1)*2) - ((((v0 + -4)/124)*2) + v2)));1;68;;;;;
 ((((v0*8) + 511)/503) != 0);0;443;;;;;
 (max(min(min(min(((v3 + 487)/4) - (((v4*124) + v5)*2), (((v1 + v2) + 505)/4) - (((v4*124) + v5)*2)), ((min((v1 + v2) + 21, v3) + 487)/4) - (((v4*124) + v5)*2)), (0 + v6) - 1) + 1, min(max(((v2/4) - (((v4*124) + v5)*2)) + 128, 0), v6 + 0)) <= min(max(((v2/4) - (((v4*124) + v5)*2)) + 128, 0), v6 + 0));0;2449;;;;;
 (((min(v0*32, ((v1*220) + (v2*32)) + 104)*2) - ((v1*440) + (v2*64))) == ((min(v0*32, ((v1*220) + (v2*32)) + 104)*2) - ((v1*440) + (v2*64))));1;98;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + (((((v2*3) + v3) + -5)*v4) + ((v5*v6) + ((v7*32) + v8)))) - ((v9*v1) + ((v10*v4) + ((v11*v6) + v12)))]))));1;191;;;;;
 ((((min(max(min((v2*508) + (v3*4), 2007), 8) + ((((max(min((v2*508) + ((v3*4) + 497), min(v4, 498)*4), -7) - max(min((v2*508) + (v3*4), 2007), 8)) + 19)/4)*4), max(min((v2*508) + ((v3*4) + 497), min(v4*4, 1992)), -7) + 16) + (min(max(min((v2*508) + (v3*4), 2007), 8), max(min((v2*508) + ((v3*4) + 497), min(v4*4, 1992)), -7) + 12)*-1))/4)*4) == (min(max(min((v2*508) + (v3*4), 2007), 8) + ((((max(min((v2*508) + ((v3*4) + 497), min(v4, 498)*4), -7) - max(min((v2*508) + (v3*4), 2007), 8)) + 19)/4)*4), max(min((v2*508) + ((v3*4) + 497), min(v4*4, 1992)), -7) + 16) + (min(max(min((v2*508) + (v3*4), 2007), 8), max(min((v2*508) + ((v3*4) + 497), min(v4*4, 1992)), -7) + 12)*-1)));0;10788;;;;;
 (((v0*4) + (max(min((v1/8) + (v2*128), 249), 0) - max(min(min(((v3 + v1) + -1)/8, ((v1/8) + (v2*128)) + 127), 249), 0))) == ((v0*4) + (max(min((v1/8) + (v2*128), 249), 0) - max(min(min(((v3 + v1) + -1)/8, ((v1/8) + (v2*128)) + 127), 249), 0))));1;288;;;;;
 (min(((v0*64) + ((v1*126) + v2)) + 53, v3 + v2) == min(((v0*64) + ((v1*126) + v2)) + 53, v3 + v2));1;54;;;;;
 ((v0 - (((v1 + v2) + 3)/4)) == (v0 - (((v1 + v2) + 3)/4)));1;49;;;;;
 (((v0*24) + (max(v1, 0) + (v2*256))) == ((v0*24) + (max(v1, 0) + (v2*256))));1;56;;;;;
 (max((min(max(min((v0*128) + v1, min(v2 + v1, 1997) + -128), -127) - max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 9), v3) + 143)/4, max(v4/4, -35) + 35) == max((min(max(min((v0*128) + v1, min(v2 + v1, 1997) + -128), -127) - max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 9), v3) + 143)/4, max(v4/4, -35) + 35));1;969;;;;;
 ((((48 - v0)/4) + ((((v1 + v2) + 7)/8)*2)) == (((48 - v0)/4) + ((((v1 + v2) + 7)/8)*2)));1;77;;;;;
 (max(min(1999, (((v1*125) + v2) + 127) - 1) + 1, min(max(0, (v1*125) + v2), 127 + ((v1*125) + v2))) <= min(max(0, (v1*125) + v2), 127 + ((v1*125) + v2)));0;1254;;;;;
 (min(max(min((v0 + v1)/8, 258), 9), max(min((v0 + v1)/8, 259), 10)) == min(max(min((v0 + v1)/8, 258), 9), max(min((v0 + v1)/8, 259), 10)));1;752;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + -10) <= (((v0*4) + v1) + -10))) && (((((v0*4) + v1) + 3) + -10) >= (((v0*4) + v1) + -7))) && (((((v2*126) + v3) + -5)/4) <= ((((v2*126) + v3) + -5)/4))) && (((((v2*126) + v3)/4) + 31) >= ((((v2*126) + v3)/4) + 31))) && (0 <= 0)) && (0 >= 0));1;219;;;;;
 (max(((v0 - ((v1*36) + v2)) + 65)/4, (((v0 - v2)/4) + (v1*-9)) + 17) == max(((v0 - ((v1*36) + v2)) + 65)/4, (((v0 - v2)/4) + (v1*-9)) + 17));1;87;;;;;
 (min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2) == min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2));1;235;;;;;
 (min(((v0*4) + ((v1*24) + v2)) + 2, v3) == min(((v0*4) + ((v1*24) + v2)) + 2, v3));1;44;;;;;
 (max(min(max(((v0 - v1) + 1048)/1028, 0), ((v2 - v1) + 1059)/1028), ((min(min(v3 + v0, v2 + 8) + 1016, v2) - v1) + 32)/1028) == max(min(max(((v0 - v1) + 1048)/1028, 0), ((v2 - v1) + 1059)/1028), ((min(min(v3 + v0, v2 + 8) + 1016, v2) - v1) + 32)/1028));1;122;;;;;
 (min(((v0 + v1) + -1)/8, (min((v1/8) + 49, v2) + (v3*64)) + 14) == min(((v0 + v1) + -1)/8, (min((v1/8) + 49, v2) + (v3*64)) + 14));1;83;;;;;
 (min(max(min((v0*128) + v1, min(v2 + v1, 1997) + -128), -127) - max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 9), v3 + 3) == min(max(min((v0*128) + v1, min(v2 + v1, 1997) + -128), -127) - max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 9), v3 + 3));1;1905;;;;;
 (max(v0 - ((v1*16) + v2), v3 - v2) == max(v0 - ((v1*16) + v2), v3 - v2));1;43;;;;;
 ((max(min((v0 + v1)/2, 951), -48) + (v2*8)) == (max(min((v0 + v1)/2, 951), -48) + (v2*8)));1;68;;;;;
 ((v0 - (((v1*63) + ((v2*4) + v3))*4)) == (v0 - (((v1*63) + ((v2*4) + v3))*4)));1;61;;;;;
 (((((v0 + v1) + 95)/32) - ((v1/32) + (v2*4))) == ((((v0 + v1) + 95)/32) - ((v1/32) + (v2*4))));1;60;;;;;
 (max((min(v0, 1008) + 13)/4, (v1 + 5)/4) == max((min(v0, 1008) + 13)/4, (v1 + 5)/4));1;80;;;;;
 ((v0 - ((v1*108) + ((v2*36) + v3))) == (v0 - ((v1*108) + ((v2*36) + v3))));1;46;;;;;
 ((((v0 + v1) - (v2*1000)) - ((((v3*2) + v4)*250) + v1)) == (((v0 + v1) - (v2*1000)) - ((((v3*2) + v4)*250) + v1)));1;68;;;;;
 (((v0*1032) + ((max(min(v1/8, 249), 0)/8)*64)) == ((v0*1032) + ((max(min(v1/8, 249), 0)/8)*64)));1;56;;;;;
 (max(min(v0, 9), min(v1 - v2, 2) + 7) == max(min(v0, 9), min(v1 - v2, 2) + 7));1;46;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 332)/250) == (((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 332)/250));1;199;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((((v1*32) + v2) + v3) + 0) + 31) <= (v3 + ((v1*32) + v2)))) && ((((((v1*32) + v2) + v3) + 3) + 31) >= (v3 + (((v1*32) + v2) + 31)))) && (v4 <= v4)) && (v4 >= v4));0;141;;;;;
 (((((((uint1)1 && ((v0 + -4) <= (v0 + -4))) && (((min(v1*16, 984) + v2) + 22) >= ((min(v1*16, 984) + v2) + 22))) && ((((v3 + v4) + 0) + 3) <= ((v3 + v4) + -4))) && ((((v3 + v4) + 3) + 3) >= ((v3 + v4) + 3))) && (0 <= 0)) && (2 >= 2));0;196;;;;;
 ((((v0/4) + (v1*250)) + 250) < (((v0/4) + ((v1 + 1)*250)) + -1));0;79;;;;;
 (min((((v0/65) + (v1*8))*2) + 1, v2) == min((((v0/65) + (v1*8))*2) + 1, v2));1;63;;;;;
 (min(((v0 + v1) + 23)/8, ((v1/8) + (v2*64)) + 61) == min(((v0 + v1) + 23)/8, ((v1/8) + (v2*64)) + 61));1;55;;;;;
 (min(max(v0, 1997) - min(v1, 0), v2 + 31) == min(max(v0, 1997) - min(v1, 0), v2 + 31));1;75;;;;;
 (max(min(max(max((289 - ((v0/125)*32))/274, (578 - ((v0/125)*64))/548), 0), ((v1*64) + 619)/548), (min(((((v2 + v0) + 124)/125) - (v0/125))*64, (v1*64) + 547) + 72)/548) == max(min(max(max((289 - ((v0/125)*32))/274, (578 - ((v0/125)*64))/548), 0), ((v1*64) + 619)/548), (min(((((v2 + v0) + 124)/125) - (v0/125))*64, (v1*64) + 547) + 72)/548));1;166;;;;;
 ((min(v0*64, 936) + (v1 + v2)) == (min(v0*64, 936) + (v1 + v2)));1;68;;;;;
 (((v0*32) + ((v1*2) + v2)) == ((v0*32) + ((v1*2) + v2)));1;58;;;;;
 (((v0*14) + ((max(min((v1 + v2)/8, 250), 1)*2) + ((v3*2) + v4))) == ((v0*14) + ((max(min((v1 + v2)/8, 250), 1)*2) + ((v3*2) + v4))));1;78;;;;;
 ((((((min(v0/8, 0)/16)*2) + v1)*8) + ((v2*4) + v3)) == (((((min(v0/8, 0)/16)*2) + v1)*8) + ((v2*4) + v3)));1;85;;;;;
 ((max(min(v0*16, 1999), 0) + (v1*4)) == (max(min(v0*16, 1999), 0) + (v1*4)));1;56;;;;;
 ((max((v0*4) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 497) + (v4*3)) == (max((v0*4) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 497) + (v4*3)));1;1981;;;;;
 (min(max(min((v0/32)*4, 281), 32) + v1, v2 + -28) == min(max(min((v0/32)*4, 281), 32) + v1, v2 + -28));1;58;;;;;
 (max((min((((v0 + v1) + 188)/63) - (v1/63), v2 + 1) + 3)/4, max(v3/4, -1) + 1) == max((min((((v0 + v1) + 188)/63) - (v1/63), v2 + 1) + 3)/4, max(v3/4, -1) + 1));1;111;;;;;
 (((min(v0, -126) + 261)/4) == ((min(v0, -126) + 261)/4));1;54;;;;;
 (min(max(min(v0/8, 249), 0) + (((v1 + 6)/4)*4), max(min(((v2 + v0) + -1)/8, 249), 0) + 3) == min(max(min(v0/8, 249), 0) + (((v1 + 6)/4)*4), max(min(((v2 + v0) + -1)/8, 249), 0) + 3));1;117;;;;;
 ((min(v0*4, 3) + (min(v1*52, 45)*4)) == (min(v0*4, 3) + (min(v1*52, 45)*4)));1;53;;;;;
 ((((110 - min(((v0/63) + (v1*11))*64, (min(((v0/63) + (v1*11))*8, ((((v2 + v0) + -1)/63)*8) + 12)*8) + 11))/4) + (min((((v2 + v0) + -1)/63)*8, (((v0/63) + (v1*11))*8) + 76)*2)) == (((110 - min(((v0/63) + (v1*11))*64, (min(((v0/63) + (v1*11))*8, ((((v2 + v0) + -1)/63)*8) + 12)*8) + 11))/4) + (min((((v2 + v0) + -1)/63)*8, (((v0/63) + (v1*11))*8) + 76)*2)));1;207;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 5)) + 1007)/1003) == (((max(v0 + v1, 2000) - min(v1, 5)) + 1007)/1003));1;61;;;;;
 (((v0*256) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499))) == ((v0*256) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499))));1;1087;;;;;
 (min(((v0*126) + v1) + 126, v2) == min(((v0*126) + v1) + 126, v2));1;378;;;;;
 (((((((v0 + v1) + -1)/17) - (v1/17))/40) + 1) == ((((((v0 + v1) + -1)/17) - (v1/17))/40) + 1));1;78;;;;;
 (min(v0*8, (min(v1*124, 1096) + v2) + 16) == min(v0*8, (min(v1*124, 1096) + v2) + 16));1;59;;;;;
 (min(((((v0 + v1) + -1)/8) - (v2*16)) - (v1/8), min(((((v0 + v1) + -1)/8) - (v2*16)) - (v1/8), 15) + -3) == min(((((v0 + v1) + -1)/8) - (v2*16)) - (v1/8), min(((((v0 + v1) + -1)/8) - (v2*16)) - (v1/8), 15) + -3));1;240;;;;;
 (min(v0*8, (((v1*16) + ((v2*32) + v3))*8) + 21) == min(v0*8, (((v1*16) + ((v2*32) + v3))*8) + 21));1;59;;;;;
 (min((v0*4) + v1, max(min(v2*8, 1938), -61) + 64) == min((v0*4) + v1, max(min(v2*8, 1938), -61) + 64));1;71;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60) == min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60));1;67;;;;;
 (((max(min(v0 + v1, 1991), -8)/4) - ((v2*4) + v3)) == ((max(min(v0 + v1, 1991), -8)/4) - ((v2*4) + v3)));1;57;;;;;
 ((((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 31)/16) == (((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 31)/16));1;247;;;;;
 (((((v0 + v1) + -1)/2) - ((((v2*4) + v3)*4) + v4)) == ((((v0 + v1) + -1)/2) - ((((v2*4) + v3)*4) + v4)));1;64;;;;;
 (((v0*12) + ((v1*128) + ((v2/2) + (v3*2)))) == ((v0*12) + ((v1*128) + ((v2/2) + (v3*2)))));1;59;;;;;
 (((v0*32) + (v1 + v2)) == ((v0*32) + (v1 + v2)));1;193;;;;;
 (min(max(v0*4, -3), (min((v1/4)*4, 1999) + (v2*1000)) + 996) == min(max(v0*4, -3), (min((v1/4)*4, 1999) + (v2*1000)) + 996));1;1089;;;;;
 ((((((v0*4) + v1) + v2)*8) + -116) >= (((((((v0*4) + v1) + v2)*8) + -116) + 8) - 1));0;72;;;;;
 ((max(min(v0*32, 2044), 45) + (v1*4)) == (max(min(v0*32, 2044), 45) + (v1*4)));1;47;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8))/125) + 1) == ((((((v0 + v1) + -1)/8) - (v1/8))/125) + 1));1;79;;;;;
 ((((v0*500)/2)*2) == (v0*500));1;47;;;;;
 (max(min((494 + 21)/4, max(((9 - v0)/4) + (v1*-126), -1) + 1), min((min(min(v2 - (v1*504), 494 + 3), 494) + 14)/4, ((2006 - v0)/4) + (v1*-126)) + 1) == max(min((494 + 21)/4, max(((9 - v0)/4) + (v1*-126), -1) + 1), min((min(min(v2 - (v1*504), 494 + 3), 494) + 14)/4, ((2006 - v0)/4) + (v1*-126)) + 1));1;291;;;;;
 ((((v0*-1044)/4)*4) == (v0*-1044));1;27;;;;;
 ((((v0*-32) + ((v1*-64) + ((((v2 + v3) + 7)/8) - (v4*128)))) - (v3/8)) == (((v0*-32) + ((v1*-64) + ((((v2 + v3) + 7)/8) - (v4*128)))) - (v3/8)));1;104;;;;;
 ((v0 - ((v1*4) + ((v2*68) + v3))) == (v0 - ((v1*4) + ((v2*68) + v3))));1;42;;;;;
 (((v0 - (v1/125))*4) == ((v0 - (v1/125))*4));1;38;;;;;
 (max(0, min((((min(v0*125, v1 + -125) + v2) % 65) + 124)/130, (0 + 2) - 1) + 1) <= 0);0;76;;;;;
 (((((v0*1000) + v1) + v2) + 2) < ((((v0*1000) + v1) + (v2 + 1)) + -2));0;84;;;;;
 ((min((v0*8) - (v1*153), (v2*8) + 45) - (((((v3*2) + v2)*2) + v4)*4)) == (min((v0*8) - (v1*153), (v2*8) + 45) - (((((v3*2) + v2)*2) + v4)*4)));1;79;;;;;
 (v0 != 0);0;1742;;;;;
 ((max(min(v0, 1999), 9) - max(min(v1 + v0, 1997), 1)) == (max(min(v0, 1999), 9) - max(min(v1 + v0, 1997), 1)));1;125;;;;;
 ((v0 + -28) == (((v0 + -28) + 37) - 1));0;47;;;;;
 ((max(min(min(v0*12, 11) + v1, 46), 15) - max(min(min(v0*12, 11) + v1, 33), 4)) == (max(min(min(v0*12, 11) + v1, 46), 15) - max(min(min(v0*12, 11) + v1, 33), 4)));1;253;;;;;
 (((((((v0 + v1)/250) - (v1/250))*64) + 40)/33) == ((((((v0 + v1)/250) - (v1/250))*64) + 40)/33));1;83;;;;;
 (((((v0 + v1) + 121)/2) - (((v0 + v1)/2) + (v2*4))) == ((((v0 + v1) + 121)/2) - (((v0 + v1)/2) + (v2*4))));1;61;;;;;
 (((v0*33) + (((v1/125) + (v2*4))*16)) == ((v0*33) + (((v1/125) + (v2*4))*16)));1;58;;;;;
 (min(max(min((v0 + v1)/2, 999), 0) + (((v2 + 35)/4)*4), max(min((v0 + v1)/2, 968), -31) + 32) == min(max(min((v0 + v1)/2, 999), 0) + (((v2 + 35)/4)*4), max(min((v0 + v1)/2, 968), -31) + 32));1;109;;;;;
 ((v0 - ((((v1 + v2)/63) + (v3*5))*8)) == (v0 - ((((v1 + v2)/63) + (v3*5))*8)));1;53;;;;;
 (min(max(v0, 1) - min(v1, 1999), v2 + 3) == min(max(v0, 1) - min(v1, 1999), v2 + 3));1;47;;;;;
 (max(min((278 - v0)/8, (0 + 2) - 1) + 1, min(max((43 - v0)/8, 0), 2 + 0)) <= min(max((43 - v0)/8, 0), 2 + 0));0;854;;;;;
 (min(min(((v0 + v1) + 5)/2, ((v1/2) + (v2*32)) + 29)*2, ((v3*35) + (((v1/2) + (v2*32))*2)) + 23) == min(min(((v0 + v1) + 5)/2, ((v1/2) + (v2*32)) + 29)*2, ((v3*35) + (((v1/2) + (v2*32))*2)) + 23));1;117;;;;;
 (((v0*4) + (((v1/65)*2) + v2)) == ((v0*4) + (((v1/65)*2) + v2)));1;40;;;;;
 (min((v0 + -899)/32, ((v0 + 40)/32) + (v1*-4)) == min((v0 + -899)/32, ((v0 + 40)/32) + (v1*-4)));1;50;;;;;
 (((v0*4) + ((v1/4) + v2)) == ((v0*4) + ((v1/4) + v2)));1;36;;;;;
 ((((min((v0*125) + v1, (v2 + v1) + -125)*16)/16)*16) == (min((v0*125) + v1, (v2 + v1) + -125)*16));1;84;;;;;
 ((min(v0 + 114, v1) - ((v2*3) + v0)) == (min(v0 + 114, v1) - ((v2*3) + v0)));1;45;;;;;
 (((v0*-64) + (((((v1 + v2) + 999)/4) - (v3*128)) - ((v1 + v2)/4))) == ((v0*-64) + (((((v1 + v2) + 999)/4) - (v3*128)) - ((v1 + v2)/4))));1;84;;;;;
 (min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*63))*16) + 994, v2) == min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*63))*16) + 994, v2));1;77;;;;;
 ((((min((v1*1056) + (v2*8), (min((v1*132) + v2, v3 + 6)*8) + 4)*-1)/4)*4) == (min((v1*1056) + (v2*8), (min((v1*132) + v2, v3 + 6)*8) + 4)*-1));0;1536;;;;;
 (((((v0*2) + v1) + v2) + 129) < ((((v0*2) + (v1 + 1)) + v2) + -10));0;71;;;;;
 (((max(min((v0*-88) + (max(v1, 249) - min(v2, 0)), 31), 30)/4)*4) == max(min((v0*-88) + (max(v1, 249) - min(v2, 0)), 31), 30));0;106;;;;;
 ((((max(((v0 + v1) + 23)/8, 249) - min(v1/8, 4))/4) + 2) >= 0);1;58;;;;;
 (((v0 + v1)/8) == ((v0 + v1)/8));1;31;;;;;
 ((min(min(((v0*32) + v1) + 19, v2)*8, (((v3*16) + ((v0*32) + v1))*8) + 21) - ((v3*128) + ((v0*256) + ((v4*4) + ((v1*8) + (v5*12)))))) == (min(min(((v0*32) + v1) + 19, v2)*8, (((v3*16) + ((v0*32) + v1))*8) + 21) - ((v3*128) + ((v0*256) + ((v4*4) + ((v1*8) + (v5*12)))))));1;135;;;;;
 ((max((v0*128) + (min((v1*1000) + v2, 1999) - max(min((v1*1000) + 1000, v3) + v2, 1)), -128) + (v4*4)) == (max((v0*128) + (min((v1*1000) + v2, 1999) - max(min((v1*1000) + 1000, v3) + v2, 1)), -128) + (v4*4)));1;102;;;;;
 (((((v0 + v1) + -1)/2) - ((v2*12) + v3)) == ((((v0 + v1) + -1)/2) - ((v2*12) + v3)));1;46;;;;;
 (min(523 - (((v0/8) + (v1*32))*2), (min(v2, 19)*2) + 25) == min(523 - (((v0/8) + (v1*32))*2), (min(v2, 19)*2) + 25));1;80;;;;;
 ((((v0*1012) + v1) + ((v2*4) + v3)) == (((v0*1012) + v1) + ((v2*4) + v3)));1;42;;;;;
 ((max(min(v0, 249), 0) + (v1*32)) == (max(min(v0, 249), 0) + (v1*32)));1;85;;;;;
 (min(((v0 + v1) + 39)/8, ((v1/8) + (v2*4)) + 3) == min(((v0 + v1) + 39)/8, ((v1/8) + (v2*4)) + 3));1;68;;;;;
 ((max(min((v0*8) + v1, 1110), 111) - (max(min((v0*8) + v1, 1117), 118) + (v2*4))) == (max(min((v0*8) + v1, 1110), 111) - (max(min((v0*8) + v1, 1117), 118) + (v2*4))));1;78;;;;;
 ((max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125)) == (max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125)));1;173;;;;;
 (((v0*3) + ((min((((v1 + v2) + 15)/16) - v3, min(v0*12, 20) + 11)/4) + (v0*-3))) == ((v0*3) + ((min((((v1 + v2) + 15)/16) - v3, min(v0*12, 20) + 11)/4) + (v0*-3))));1;97;;;;;
 ((max((v0*63) + (max(min((v1*125) + v2, min(v3 + v2, 2124) + -125), 0) - max(min((v1*125) + v2, min(v3 + v2, 2000) + -125), -124)), 62) + (v4*4)) == (max((v0*63) + (max(min((v1*125) + v2, min(v3 + v2, 2124) + -125), 0) - max(min((v1*125) + v2, min(v3 + v2, 2000) + -125), -124)), 62) + (v4*4)));1;1008;;;;;
 (max(min(1999, ((((v2*1000) + v3) + -3) + (min(v1, 1000) + 11)) - 1) + 1, min(max(0, ((v2*1000) + v3) + -3), (min(v1, 1000) + 11) + (((v2*1000) + v3) + -3))) <= min(max(0, ((v2*1000) + v3) + -3), (min(v1, 1000) + 11) + (((v2*1000) + v3) + -3)));0;1748;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 332)/250) == (((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 332)/250));1;235;;;;;
 (max(min((v0 + 9)/8, max((0 - v1)/8, -1) + 1), (min(1993 - v1, v0 + -6)/8) + 1) == max(min((v0 + 9)/8, max((0 - v1)/8, -1) + 1), (min(1993 - v1, v0 + -6)/8) + 1));1;1222;;;;;
 ((((max(min(((min(v3*125, v4 + -125) + (v2 + 124))/8)*8, 1994), -5) - max(min(((min(v3*125, v4 + -125) + v2)/8)*8, 2002), 3))/4)*4) == (max(min(((min(v3*125, v4 + -125) + (v2 + 124))/8)*8, 1994), -5) - max(min(((min(v3*125, v4 + -125) + v2)/8)*8, 2002), 3)));0;2068;;;;;
 (min(v0*8, (((v1*2) + v2)*4) + 2) == min(v0*8, (((v1*2) + v2)*4) + 2));1;58;;;;;
 ((((max(min(v0 + v1, 1999), 0) - max(min(v1, 2002), 3)) + 1003)/1000) == (((max(min(v0 + v1, 1999), 0) - max(min(v1, 2002), 3)) + 1003)/1000));1;96;;;;;
 (min((((v0*2004) + v1) + -13)/8, (v2/64)*8) == min((((v0*2004) + v1) + -13)/8, (v2/64)*8));1;95;;;;;
 (min(max(min(v0*4, v1 + 13) + v2, 5) - min((v0*4) + v2, min(v1 + v2, 1994) + 13), v3 + 3) == min(max(min(v0*4, v1 + 13) + v2, 5) - min((v0*4) + v2, min(v1 + v2, 1994) + 13), v3 + 3));1;95;;;;;
 (((v0*2) + ((v1*6) + (v2 + v3))) == ((v0*2) + ((v1*6) + (v2 + v3))));1;44;;;;;
 (((max(min((v1*-64) + ((max(min(min((v3*128) + 128, v4) + v5, 2000), 1) - max(min((v3*128) + v5, 1999), 0)) + (v2*-32)), 32), 0)/4)*4) == max(min((v1*-64) + ((max(min(min((v3*128) + 128, v4) + v5, 2000), 1) - max(min((v3*128) + v5, 1999), 0)) + (v2*-32)), 32), 0));0;2290;;;;;
 ((((max(min(v0 + v1, 1999), 0)/16)*4) - (((((max(min(v1, 2002), 3) + -3)/16) + v2)*4) + v3)) == (((max(min(v0 + v1, 1999), 0)/16)*4) - (((((max(min(v1, 2002), 3) + -3)/16) + v2)*4) + v3)));1;99;;;;;
 (((v0*1115) + ((v1/125)*128)) == ((v0*1115) + ((v1/125)*128)));1;56;;;;;
 (min(((v0*4) + (((v1/63)*2) + v2))*4, (v3*8) + 4) == min(((v0*4) + (((v1/63)*2) + v2))*4, (v3*8) + 4));1;76;;;;;
 (((min((((v0 + v1) + 64)/65) - (v2*4), (v1/65) + 3)*-2) + ((((v1/65) + (v3*2))*2) + v4)) == ((min((((v0 + v1) + 64)/65) - (v2*4), (v1/65) + 3)*-2) + ((((v1/65) + (v3*2))*2) + v4)));1;108;;;;;
 (((((((v0 + v1) + -1)/64) - ((v1 + -8)/64))/7) + 1) == ((((((v0 + v1) + -1)/64) - ((v1 + -8)/64))/7) + 1));1;79;;;;;
 (((((((v0 + v1) + -1)/63) - (v1/63)) + 25)/20) == ((((((v0 + v1) + -1)/63) - (v1/63)) + 25)/20));1;73;;;;;
 (((((v0 + v1) + 1)/2) + (v2*-8)) == ((((v0 + v1) + 1)/2) + (v2*-8)));1;63;;;;;
 (((v0/8) + (v1*16)) == ((v0/8) + (v1*16)));1;1418;;;;;
 (((v0 + v1)/8) == ((v0 + v1)/8));1;46;;;;;
 (((min((((v0 + v1) + 314)/63) - (v2*8), (v1/63) + 5)*-8) + ((v3*4) + ((v4*36) + ((v1/63)*8)))) == ((min((((v0 + v1) + 314)/63) - (v2*8), (v1/63) + 5)*-8) + ((v3*4) + ((v4*36) + ((v1/63)*8)))));1;104;;;;;
 (min(((v0 + v1) + 31)/8, v2 + 1) == min(((v0 + v1) + 31)/8, v2 + 1));1;54;;;;;
 (((v0*128) + ((v1*1008) + v2)) == ((v0*128) + ((v1*1008) + v2)));1;40;;;;;
 ((max(min(((v0*2) + v1)*2, 2007), 8) + (v2*4)) == (max(min(((v0*2) + v1)*2, 2007), 8) + (v2*4)));1;70;;;;;
 (min(min(10 - (max((v0/63) + ((v1*2) - (((v2 + v0) + -1)/63)), -1)*8), 252 - (v3*8)), (min(((((v2 + v0) + -1)/63) - (v1*2)) - (v0/63), 1)*8) + 12) == min(min(10 - (max((v0/63) + ((v1*2) - (((v2 + v0) + -1)/63)), -1)*8), 252 - (v3*8)), (min(((((v2 + v0) + -1)/63) - (v1*2)) - (v0/63), 1)*8) + 12));1;156;;;;;
 (0 == ((0 + ((min(v0, -661)*2) + 1326)) - 1));0;75;;;;;
 ((v0 + -45) == (((v0 + -45) + (((v1*32) + ((v2*64) - max(v1*32, (((v2*2) + v1)*32) + 27))) + 91)) - 1));0;189;;;;;
 ((min((((v0 + v1) + 1)/2) - (v2*32), (v1/2) + 31) - ((v3*4) + ((v1/2) + (v4*16)))) == (min((((v0 + v1) + 1)/2) - (v2*32), (v1/2) + 31) - ((v3*4) + ((v1/2) + (v4*16)))));1;107;;;;;
 (((v0*4) + ((max(min((v1 + v2)/8, 249), 0)*8) + v3)) == ((v0*4) + ((max(min((v1 + v2)/8, 249), 0)*8) + v3)));1;68;;;;;
 ((((-24 - ((v0 + v1) % 8))/8) + (v2*4)) == (((-24 - ((v0 + v1) % 8))/8) + (v2*4)));1;47;;;;;
 (((v0*1008) + ((v1*256) + v2)) == ((v0*1008) + ((v1*256) + v2)));1;36;;;;;
 (((((((v0 + v1) + 15)/16) - (v1/16))/16) + 1) == ((((((v0 + v1) + 15)/16) - (v1/16))/16) + 1));1;75;;;;;
 (((min((v0*-4) + 0, -28)/4)*4) == min((v0*-4) + 0, -28));1;78;;;;;
 ((min(max(min(((v0 + v1) + -1)/2, 999), 0), max(min(v1/2, 999), 0) + 499) - (max(min(v1/2, 999), 0) + (v2*6))) == (min(max(min(((v0 + v1) + -1)/2, 999), 0), max(min(v1/2, 999), 0) + 499) - (max(min(v1/2, 999), 0) + (v2*6))));1;119;;;;;
 (max((((v0/63)*16) + v1)*4, ((((v0/63) + v2)*64) + ((v1*4) + v3)) + 144) == max((((v0/63)*16) + v1)*4, ((((v0/63) + v2)*64) + ((v1*4) + v3)) + 144));1;96;;;;;
 ((((min(v0/8, 0) + v1)*8) - ((v2*4) + v3)) == (((min(v0/8, 0) + v1)*8) - ((v2*4) + v3)));1;56;;;;;
 (((((((v0 + v1)/250) - (v1/250))*256) + 67)/36) == ((((((v0 + v1)/250) - (v1/250))*256) + 67)/36));1;75;;;;;
 (max(min((((v0 + v1) + 151)/8) - (v1/8), v2 + 13), v3 + 10) == max(min((((v0 + v1) + 151)/8) - (v1/8), v2 + 13), v3 + 10));1;60;;;;;
 (((v0*8) + (((v1/500)*8) + (v2*15))) == ((v0*8) + (((v1/500)*8) + (v2*15))));1;54;;;;;
 (((((v0/65) + v1)*2) - (v2/4)) == ((((v0/65) + v1)*2) - (v2/4)));1;42;;;;;
 (((v0 - (v1/63))*32) == ((v0 - (v1/63))*32));1;40;;;;;
 (((min(v0 - v1, 6)*8) + -53) == ((((min(v0 - v1, 6)*8) + -53) + (58 - (min(v0 - v1, 6)*8))) - 1));0;98;;;;;
 (min(max(min(v0, 249), 0), v0 + -4) == min(max(min(v0, 249), 0), v0 + -4));1;29;;;;;
 (((((((uint1)1 && (((0 + (min(v0*64, 188) + v1)) + -5) <= ((min(v0*64, 188) + v1) + -5))) && (((3 + ((min(v0*64, 188) + v1) + 68)) + -5) >= ((min(v0*64, 188) + v1) + 63))) && (((v2 + -5)/63) <= ((v2 + -5)/63))) && (((v2 + 1062)/63) >= ((v2 + 1062)/63))) && (v3 <= v3)) && (v3 >= v3));1;229;;;;;
 ((((v0 - v1) + 88)/32) != 0);0;453;;;;;
 (((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 378)/36) == ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 378)/36));1;266;;;;;
 (((((((v0 + v1) + 1)/2) - (v2*32)) - (v3*16)) - (v1/2)) == ((((((v0 + v1) + 1)/2) - (v2*32)) - (v3*16)) - (v1/2)));1;71;;;;;
 (((((((v0 + v1) + 755)/63) - (v1/63)) + 43)/29) == ((((((v0 + v1) + 755)/63) - (v1/63)) + 43)/29));1;68;;;;;
 (((((((v0 + v1) + 31)/8) - (v1/8))/64) + 1) == ((((((v0 + v1) + 31)/8) - (v1/8))/64) + 1));1;75;;;;;
 (((min((((v0 + v1) + 64)/65) - (v2*4), (v1/65) + 3)*2) - (((v1/65)*2) + v3)) == ((min((((v0 + v1) + 64)/65) - (v2*4), (v1/65) + 3)*2) - (((v1/65)*2) + v3)));1;88;;;;;
 (min((v0*18) + ((v1/250)*32), ((((v2 + v1) + -1)/250)*32) + 36) == min((v0*18) + ((v1/250)*32), ((((v2 + v1) + -1)/250)*32) + 36));1;87;;;;;
 ((max(v0, 0) - ((v1*20) + v2)) == (max(v0, 0) - ((v1*20) + v2)));1;52;;;;;
 ((((v0*-12)/2)*2) == (v0*-12));1;27;;;;;
 (0 == ((0 + ((max(min(v0, 1), -1)*2) + 2)) - 1));0;63;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*128, 372) + (v1*4)) + v2)) <= ((min(v0*128, 372) + (v1*4)) + v2))) && ((3 + ((min(v0*128, 372) + (v1*4)) + v2)) >= (((min(v0*128, 372) + (v1*4)) + 3) + v2))) && (((min(v3*63, 62) + (min(v4*2, 61) + v5)) + v6) <= ((min(v3*63, 62) + (min(v4*2, 61) + v5)) + v6))) && (((min(v3*63, 62) + (min(v4*2, 61) + v5)) + v6) >= ((min(v3*63, 62) + (min(v4*2, 61) + v5)) + v6))) && (v7 <= v7)) && (v7 >= v7));1;187;;;;;
 (((max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*126)) + 125), 249), 0) - max(min((v1/8) + (v2*126), 249), 0)) - (v3*32)) == ((max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*126)) + 125), 249), 0) - max(min((v1/8) + (v2*126), 249), 0)) - (v3*32)));1;357;;;;;
 ((max(min((v0*4) - v1, -1), -4) + -2) >= (((max(min((v0*4) - v1, -1), -4) + -2) + (4 - max(min((v0*4) - v1, -1), -4))) - 1));0;104;;;;;
 ((v0 - (((v1*32) + ((v2*8) + ((v3*3) + v4)))*4)) == (v0 - (((v1*32) + ((v2*8) + ((v3*3) + v4)))*4)));1;54;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1004)/1002) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1004)/1002));1;132;;;;;
 (((((((v0 + v1) + 64)/65) - (v2*4)) - (v1/65)) - (v3*8)) == ((((((v0 + v1) + 64)/65) - (v2*4)) - (v1/65)) - (v3*8)));1;78;;;;;
 (min(max(min(v0/2, 999), 0) + ((v1*6) + ((v2*32) + ((min((v1*-3) + ((min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), (v2*32) + 31)/2) + (v2*-16)), 2)*2) - max(max(max(min(v0/2, 999), 0) + ((v2*32) - max(min(((v3 + v0) + -1)/2, 999), 0)), -31) + (v1*6), -1)))), v4 + 4) == min(max(min(v0/2, 999), 0) + ((v1*6) + ((v2*32) + ((min((v1*-3) + ((min(max(min(((v3 + v0) + -1)/2, 999), 0) - max(min(v0/2, 999), 0), (v2*32) + 31)/2) + (v2*-16)), 2)*2) - max(max(max(min(v0/2, 999), 0) + ((v2*32) - max(min(((v3 + v0) + -1)/2, 999), 0)), -31) + (v1*6), -1)))), v4 + 4));1;426;;;;;
 (min(max(((v0 - ((v1*8) + v2)) + 9)/4, 0), (min(v3 - v2, 8) + 10)/4) == min(max(((v0 - ((v1*8) + v2)) + 9)/4, 0), (min(v3 - v2, 8) + 10)/4));1;100;;;;;
 (min(((v0*4) + ((v1*64) + v2)) + 4, v3) == min(((v0*4) + ((v1*64) + v2)) + 4, v3));1;58;;;;;
 (min((v0*500) + ((v1*1000) + v2), v3 + v2) == min((v0*500) + ((v1*1000) + v2), v3 + v2));1;51;;;;;
 ((((max((((v0 + v1) + -1)/4)*4, -3) - min((v1/4)*4, 1999)) + 19)/16) == (((max((((v0 + v1) + -1)/4)*4, -3) - min((v1/4)*4, 1999)) + 19)/16));1;98;;;;;
 (min((v0*128) + v1, min(v2 + v1, 1997) + -128) == min((v0*128) + v1, min(v2 + v1, 1997) + -128));1;63;;;;;
 ((v0 - (v1*16)) == (v0 - (v1*16)));1;63;;;;;
 (((max(min((v0*-16) + v1, -112), -128)/4)*4) == max(min((v0*-16) + v1, -112), -128));0;578;;;;;
 (min((v0*4) + v1, ((((v2 + v3) + -1)/500)*64) + 85) == min((v0*4) + v1, ((((v2 + v3) + -1)/500)*64) + 85));1;91;;;;;
 (((v0 + 332)/250) != 0);0;336;;;;;
 (min(max(min((v0 + v1)/2, 999), 0) + (((max(v2, 0) + 5)/2)*2), max(min(((v0 + v1) + 501)/2, 999), 0) + 4) == min(max(min((v0 + v1)/2, 999), 0) + (((max(v2, 0) + 5)/2)*2), max(min(((v0 + v1) + 501)/2, 999), 0) + 4));1;141;;;;;
 ((min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + ((v2*42) + (min(v3*125, v4 + -125) + v5))) == (min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + ((v2*42) + (min(v3*125, v4 + -125) + v5))));1;54;;;;;
 (min(min(max(v0, 0), ((v1*20) + v2) + 19)*8, v3 + 70) == min(min(max(v0, 0), ((v1*20) + v2) + 19)*8, v3 + 70));1;67;;;;;
 (max(-39 - max(v0*4, -35), min(v0*-4, 35) + -39) == max(-39 - max(v0*4, -35), min(v0*-4, 35) + -39));1;71;;;;;
 (max(v0*8, (v1*8) + 1) == max(v0*8, (v1*8) + 1));1;41;;;;;
 ((((((v0 + 40)/32) - (v1*4)) - (v2*2)) - ((v0 + -995)/32)) == (((((v0 + 40)/32) - (v1*4)) - (v2*2)) - ((v0 + -995)/32)));1;103;;;;;
 (min(((min(v0*32, 93) + (v1 + v2)) + 31)/8, (((min(v0*32, 93) + (v1 + v2))/8) + (((((min(v0*32, 93) + (v1 + v2)) % 8) + 63)/32)*4)) + -1) == min(((min(v0*32, 93) + (v1 + v2)) + 31)/8, (((min(v0*32, 93) + (v1 + v2))/8) + (((((min(v0*32, 93) + (v1 + v2)) % 8) + 63)/32)*4)) + -1));1;116;;;;;
 ((((v0 - v1) + 287)/272) == (((v0 - v1) + 287)/272));1;59;;;;;
 (((max(min(min(((v0 + v1) + -1)/8, ((v1/8) + (v2*128)) + 127)*8, 1994), -5) - max(min(((v1/8) + (v2*128))*8, 2012), 13)) - (v3*127)) == ((max(min(min(((v0 + v1) + -1)/8, ((v1/8) + (v2*128)) + 127)*8, 1994), -5) - max(min(((v1/8) + (v2*128))*8, 2012), 13)) - (v3*127)));1;284;;;;;
 (min((((min(v0/8, 0)/16)*2) + v1)*8, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 35) == min((((min(v0/8, 0)/16)*2) + v1)*8, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 35));1;105;;;;;
 (((v0*2) + -14) == ((((v0*2) + -14) + ((v1*2) + 4)) - 1));0;81;;;;;
 (((v0 + 34)/32) != 0);0;372;;;;;
 (((((v0 + v1) + 31)/32) - ((v2*12) + v3)) == ((((v0 + v1) + 31)/32) - ((v2*12) + v3)));1;53;;;;;
 (min(((((v0 + v1) + 62)/63) - (v1/63))*64, (v2*64) + 11) == min(((((v0 + v1) + 62)/63) - (v1/63))*64, (v2*64) + 11));1;76;;;;;
 (((max(min(v0, 0), -6)*8) + -5) == ((((max(min(v0, 0), -6)*8) + -5) + (11 - (max(min(v0, 0), -6)*8))) - 1));0;125;;;;;
 (((v0/8) + (v1*16)) == ((v0/8) + (v1*16)));1;237;;;;;
 ((min((((min(v0*500, v1 + -500) + v2) % 8) + 499)/8, (v3*32) + 31) - (((v3*8) + v4)*4)) == (min((((min(v0*500, v1 + -500) + v2) % 8) + 499)/8, (v3*32) + 31) - (((v3*8) + v4)*4)));1;88;;;;;
 (((v0*32) + ((v1/8) + (v2*64))) == ((v0*32) + ((v1/8) + (v2*64))));1;45;;;;;
 (v0 >= ((v0 + (min(v1 - (max(((v2*4) - (((v3 + v4) + 87)/8)) + v5, 7)*8), -83) + 84)) - 1));1;153;;;;;
 ((v0 - ((v1*4) + ((v2*128) + v3))) == (v0 - ((v1*4) + ((v2*128) + v3))));1;26;;;;;
 ((max(v0*125, -5) + (v1*250)) == (max(v0*125, -5) + (v1*250)));1;48;;;;;
 ((((v0*4) + v1)*2) >= (((((v0*4) + v1)*2) + 2) - 1));0;61;;;;;
 (min((v0*7) + v1, (v2*8) + 61) == min((v0*7) + v1, (v2*8) + 61));1;72;;;;;
 (((min((((v0 + v1) + 64)/65) - (v2*4), ((v1/65) + (v3*2)) + 1) + (v3*-2)) - (v1/65)) == ((min((((v0 + v1) + 64)/65) - (v2*4), ((v1/65) + (v3*2)) + 1) + (v3*-2)) - (v1/65)));1;96;;;;;
 (min(((min(v0*32, 93) + (v1 + v2)) + 31)/8, (((min(v0*32, 93) + (v1 + v2))/8) + (((((min(v0*32, 93) + (v1 + v2)) % 8) + 63)/32)*4)) + -1) == min(((min(v0*32, 93) + (v1 + v2)) + 31)/8, (((min(v0*32, 93) + (v1 + v2))/8) + (((((min(v0*32, 93) + (v1 + v2)) % 8) + 63)/32)*4)) + -1));1;100;;;;;
 ((v0/((v1 + 19)/16)) == (v0/((v1 + 19)/16)));1;35;;;;;
 ((((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 52)/35) == (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 52)/35));1;110;;;;;
 (v0 == ((v0 + (((v1 + 255)/136) - ((v1 + 119)/136))) - 1));1;50;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((2 - 1) >= 1)) && (((0 + ((v0*8) + v1)) + -18) <= (((v0*8) + v1) + -18))) && (((3 + (((v0*8) + v1) + 4)) + -18) >= (((v0*8) + v1) + -11))) && (0 <= 0)) && (24 >= 24));1;179;;;;;
 (((((((v0 + v1) + 15)/4) - (v1/4)) + 11)/8) == ((((((v0 + v1) + 15)/4) - (v1/4)) + 11)/8));1;79;;;;;
 (min(((max(v0*16, 10)*-8) + 280)/60, max(((max(v0*16, 10)*-2) + 55)/15, ((max(v0*16, 10)*-8) + 225)/60) + 1) == min(((max(v0*16, 10)*-8) + 280)/60, max(((max(v0*16, 10)*-2) + 55)/15, ((max(v0*16, 10)*-8) + 225)/60) + 1));1;130;;;;;
 (min((((v0 + v1) + -1)/2) - (v1/2), v2) == min((((v0 + v1) + -1)/2) - (v1/2), v2));1;64;;;;;
 (((v0*-8) + (((((v1 + v2) + 15)/8) - (v3*16)) - (v2/8))) == ((v0*-8) + (((((v1 + v2) + 15)/8) - (v3*16)) - (v2/8))));1;73;;;;;
 (((v0*64) + -29) == ((((v0*64) + -29) + ((v1*8) + 34)) - 1));0;89;;;;;
 (((((v0/((v1 + 64)/63))*-126)/63)*63) == ((v0/((v1 + 64)/63))*-126));1;61;;;;;
 (0 == ((0 + (18 - (max(v0, 1)*9))) - 1));0;55;;;;;
 (min((((v0 + v1) + 15)/4) - (v1/4), v2 + 3) == min((((v0 + v1) + 15)/4) - (v1/4), v2 + 3));1;68;;;;;
 (((((((v0 + v1) + -1)/32) - (v1/32))/2) + 1) == ((((((v0 + v1) + -1)/32) - (v1/32))/2) + 1));1;176;;;;;
 (min(251 - (v0*16), ((((v1 + v2) + 5)/2) - ((v0*16) + v3)) + 2) == min(251 - (v0*16), ((((v1 + v2) + 5)/2) - ((v0*16) + v3)) + 2));1;78;;;;;
 ((min(((v0 + v1) + -113)/8, ((v1/8) + (v2*16)) + -5) + (v3*4)) == (min(((v0 + v1) + -113)/8, ((v1/8) + (v2*16)) + -5) + (v3*4)));1;69;;;;;
 ((min(v0*32, 468) + (min((v1*500) + 500, v2) + v3)) == (min(v0*32, 468) + (min((v1*500) + 500, v2) + v3)));1;58;;;;;
 (((max(min((((v0 + v1) + 127)/32)*4, 246), -3) - (v2*4)) - max(min((v1/32)*4, 281), 32)) == ((max(min((((v0 + v1) + 127)/32)*4, 246), -3) - (v2*4)) - max(min((v1/32)*4, 281), 32)));1;134;;;;;
 (((((((v0 + v1) + 188)/63) - (v1/63)) + 13)/8) == ((((((v0 + v1) + 188)/63) - (v1/63)) + 13)/8));1;61;;;;;
 ((0 - ((v0 + v1)*8)) > (249 - ((v0 + v1)*8)));0;60;;;;;
 (((v0*8) + -56) == ((((v0*8) + -56) + ((min(v1, 13)*8) + 100)) - 1));0;93;;;;;
 (min(max(((v0 + 7)/4) - (v1/4), -1) + 1, v2) == min(max(((v0 + 7)/4) - (v1/4), -1) + 1, v2));1;58;;;;;
 (min(960 - (((v0*121) + ((v1*61) + v2))*4), 483 - (((v1*61) + v2)*4)) == min(960 - (((v0*121) + ((v1*61) + v2))*4), 483 - (((v1*61) + v2)*4)));1;95;;;;;
 ((min(v0, 1962) + (v1*4)) == (min(v0, 1962) + (v1*4)));1;75;;;;;
 (((v0 + v1) + -6) < (((v0 + 1) + v1) + -6));1;44;;;;;
 ((min((((v0 + v1) + 7)/8) - (v2*126), (v1/8) + 125) - ((v1/8) + (v3*4))) == (min((((v0 + v1) + 7)/8) - (v2*126), (v1/8) + 125) - ((v1/8) + (v3*4))));1;101;;;;;
 (min(v0*8, (v1*8) + 29) == min(v0*8, (v1*8) + 29));1;37;;;;;
 (min(min((((((v0 - v1) + 12)/64)*64) + v1) + 51, v0)*8, min(min(v0 - v1, 51)*8, -103) + ((min(26 - (max(v1 - v0, -51)*2), (min(v0 - v1, 51)*2) + 26) + ((((((v0 - v1) + 12)/64)*64) + v1)*2))*4)) == min(min((((((v0 - v1) + 12)/64)*64) + v1) + 51, v0)*8, min(min(v0 - v1, 51)*8, -103) + ((min(26 - (max(v1 - v0, -51)*2), (min(v0 - v1, 51)*2) + 26) + ((((((v0 - v1) + 12)/64)*64) + v1)*2))*4)));1;239;;;;;
 ((((v0 + v1)/2) + (v2*2)) == (((v0 + v1)/2) + (v2*2)));1;47;;;;;
 (max(min(1999, ((v2*4) + ((min(v1, 15)*4) + 4)) - 1) + 1, min(max(0, v2*4), ((min(v1, 15)*4) + 4) + (v2*4))) <= min(max(0, v2*4), ((min(v1, 15)*4) + 4) + (v2*4)));0;1399;;;;;
 ((max(v0*64, -10) + min(v1*128, 872)) == (max(v0*64, -10) + min(v1*128, 872)));1;30;;;;;
 ((min(v0*32, 93) + (min(v1*125, v2 + -125) + v3)) == (min(v0*32, 93) + (min(v1*125, v2 + -125) + v3)));1;638;;;;;
 (min(125 - (v0*8), (v1 - ((v0*8) + (v2*126))) + 2) == min(125 - (v0*8), (v1 - ((v0*8) + (v2*126))) + 2));1;57;;;;;
 (0 >= ((0 + (((33 - max((v0*8) - v1, (v2*8) + 29))/4) + (v2*2))) - 1));0;936;;;;;
 (max(min(v0, 221), 0) >= (max(min(v0, 221), 0) + 1));0;61;;;;;
 (((v0*8) + (v1*5)) == ((v0*8) + (v1*5)));1;56;;;;;
 (((((max(min(v0 + v1, 1991), -8)/4) - ((max(min(v1, 2005), 6) + -10)/4)) + 67)/64) == ((((max(min(v0 + v1, 1991), -8)/4) - ((max(min(v1, 2005), 6) + -10)/4)) + 67)/64));1;106;;;;;
 (min(((min(((((v0 + v1) + -1)/4) - (v2*32)) - (v1/4), 31)*4) + 70)/65, max((max(v3, 0) - (v4*4))/65, -1) + 1) == min(((min(((((v0 + v1) + -1)/4) - (v2*32)) - (v1/4), 31)*4) + 70)/65, max((max(v3, 0) - (v4*4))/65, -1) + 1));1;130;;;;;
 (((((((v0 + v1) + 125)/63) - (v1/63)) + 12)/8) == ((((((v0 + v1) + 125)/63) - (v1/63)) + 12)/8));1;58;;;;;
 (min(min((((v0 + v1) - (v2*8)) + 10)/32, (min((((((v3 + v4) + 64)/65)*8) - (v5*66)) - ((v4/65)*8), 52)/4) + 5), (min((((((v3 + v4) + 64)/65)*8) - (v5*66)) - ((v4/65)*8), 52) + 23)/4) == min(min((((v0 + v1) - (v2*8)) + 10)/32, (min((((((v3 + v4) + 64)/65)*8) - (v5*66)) - ((v4/65)*8), 52)/4) + 5), (min((((((v3 + v4) + 64)/65)*8) - (v5*66)) - ((v4/65)*8), 52) + 23)/4));1;213;;;;;
 ((((((v0 + v1) + 63)/32)*4) - ((v2*9) + v3)) == (((((v0 + v1) + 63)/32)*4) - ((v2*9) + v3)));1;56;;;;;
 ((((((((v0 + v1) + -1)/62) - (v1/62))*8) + 43)/36) == (((((((v0 + v1) + -1)/62) - (v1/62))*8) + 43)/36));1;82;;;;;
 (((v0/8) + (v1*16)) == ((v0/8) + (v1*16)));1;420;;;;;
 (((max(min(((v0*2) + v1) + v2, 499), 0)*2) + ((v3*2) + v4)) == ((max(min(((v0*2) + v1) + v2, 499), 0)*2) + ((v3*2) + v4)));1;75;;;;;
 ((v0 - (v1*127)) == (v0 - (v1*127)));1;152;;;;;
 (((v0 + 9)/5) != 0);0;339;;;;;
 ((max(min(v0/63, 31), 0) + ((v1/39)*8)) == (max(min(v0/63, 31), 0) + ((v1/39)*8)));1;63;;;;;
 ((((max(min(v0*8, 3994), -5) + 19)/2) - ((max(min(v0*8, 4012), 13) + -19)/2)) == (((max(min(v0*8, 3994), -5) + 19)/2) - ((max(min(v0*8, 4012), 13) + -19)/2)));1;109;;;;;
 (((v0*14) + ((v1*32) + (((v2/8)*2) + v3))) == ((v0*14) + ((v1*32) + (((v2/8)*2) + v3))));1;46;;;;;
 (max(min((max(min(v0, 252), 3) - max(min(v0, 263), 14))*2, ((((v1 + v2) + -1)/4) - (max(min(v0, 263), 14)*2)) + 5), min(v3*2, max(max((v2 + 6)/4, 1) - (max(min(v0, 263), 14)*2), -28) + 3) + 1) == max(min((max(min(v0, 252), 3) - max(min(v0, 263), 14))*2, ((((v1 + v2) + -1)/4) - (max(min(v0, 263), 14)*2)) + 5), min(v3*2, max(max((v2 + 6)/4, 1) - (max(min(v0, 263), 14)*2), -28) + 3) + 1));1;288;;;;;
 (min(((v0*250) + ((v1*1000) + v2)) + 250, v2 + v3) == min(((v0*250) + ((v1*1000) + v2)) + 250, v2 + v3));1;69;;;;;
 ((min(v0*8, 1962) - ((v1*4) + v2)) == (min(v0*8, 1962) - ((v1*4) + v2)));1;49;;;;;
 (min((v0*4) + ((v1*32) + v2), v3 + 28) == min((v0*4) + ((v1*32) + v2), v3 + 28));1;45;;;;;
 (max(min(249, (v2 + (min(v1, 62) + 1)) - 1) + 1, min(max(0, v2), (min(v1, 62) + 1) + v2)) <= min(max(0, v2), (min(v1, 62) + 1) + v2));0;655;;;;;
 (min((((v0 + v1) + 151)/8) - (v1/8), v2 + 13) == min((((v0 + v1) + 151)/8) - (v1/8), v2 + 13));1;58;;;;;
 ((v0 + v1) >= (((v0 - 1) + v1) + 1));1;49;;;;;
 (((((((uint1)1 && ((((0*4) + (((min(v0, 4) + v1) + -4)/63)) + 0) <= (0 + (((min(v0, 4) + v1) + -4)/63)))) && ((((0*4) + ((((min(v0, 4) + v1) + -4)/63) + ((v2/4)*4))) + 3) >= (((4 + 0) - 1) + ((((min(v0, 4) + v1) + -4)/63) + ((v2/4)*4))))) && (v3 <= v3)) && (v3 >= v3)) && (((v4*28) + 0) <= ((v4*28) + 0))) && (((v4*28) + ((28 + 0) - 1)) >= ((v4*28) + ((28 + 0) - 1))));1;226;;;;;
 (min(max(max(v0 + -40, v1), v2 + v1), (min((((((v3 + v4) + -1)/63)*64) - ((v5/2)*260)) - ((v4/63)*64), 164) + v0) + 56) == min(max(max(v0 + -40, v1), v2 + v1), (min((((((v3 + v4) + -1)/63)*64) - ((v5/2)*260)) - ((v4/63)*64), 164) + v0) + 56));1;121;;;;;
 (max((v0 + -12)/500, 0) >= ((max((v0 + -12)/500, 0) + max(((v0 + 499)/500) - max((v0 + -12)/500, 0), 0)) - 1));0;715;;;;;
 ((((((((v0 + v1) + -1)/250) - (v1/250))*8) + 29)/22) == (((((((v0 + v1) + -1)/250) - (v1/250))*8) + 29)/22));1;75;;;;;
 (max(0, min(115 - ((v0 % 8)*15), (0 + 15) - 1) + 1) <= 0);0;79;;;;;
 ((max(v0*32, -9) + ((v1*1008) + v2)) == (max(v0*32, -9) + ((v1*1008) + v2)));1;43;;;;;
 (((v0*8) + ((v1*34) + v2)) == ((v0*8) + ((v1*34) + v2)));1;36;;;;;
 ((-4 - max(v0, 0)) == (((-4 - max(v0, 0)) + (max(v0, 0) + 7)) - 1));0;81;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7), v2 + 127) == min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7), v2 + 127));1;287;;;;;
 (min(v0 + 39, v1) == min(v0 + 39, v1));1;52;;;;;
 ((min(v0*504, 502) + ((v1*1000) + v2)) == (min(v0*504, 502) + ((v1*1000) + v2)));1;39;;;;;
 (min(((((v0 + v1) + 7)/8) - (v1/8))*8, (v2*8) + 62) == min(((((v0 + v1) + 7)/8) - (v1/8))*8, (v2*8) + 62));1;76;;;;;
 (((((v0 % ((v1 + 66)/64))*-64)/16)*16) == ((v0 % ((v1 + 66)/64))*-64));1;47;;;;;
 (((((((v0 + v1) + 191)/64) - ((v1 + -136)/64))/13) + 1) == ((((((v0 + v1) + 191)/64) - ((v1 + -136)/64))/13) + 1));1;70;;;;;
 (((((v0 + v1) + 135)/128) - ((v2*2) + v3)) == ((((v0 + v1) + 135)/128) - ((v2*2) + v3)));1;56;;;;;
 ((((min(v0*125, v1 + -125) + v2)/8) + (v3*4)) == (((min(v0*125, v1 + -125) + v2)/8) + (v3*4)));1;70;;;;;
 ((((((((v0 + v1) + 1999)/2000) - (v1/2000))*2048) + 4652)/396) == (((((((v0 + v1) + 1999)/2000) - (v1/2000))*2048) + 4652)/396));1;75;;;;;
 ((max(min((v0*4) + v1, min(v2, 990) + 15), 6) - (max(min((v0*4) + v1, min(v2, 993) + 15), 9) + (v3*4))) == (max(min((v0*4) + v1, min(v2, 990) + 15), 6) - (max(min((v0*4) + v1, min(v2, 993) + 15), 9) + (v3*4))));1;121;;;;;
 (((((((uint1)1 && ((((v0*7) + v1) + -3) <= ((((v0*7) + 0) + v1) + -3))) && ((((v0*7) + v1) + 3) >= ((((v0*7) + ((7 + 0) - 1)) + v1) + -3))) && ((((v2*4) + v3) + 0) <= (((v2*4) + 0) + v3))) && ((((v2*4) + v3) + 3) >= (((v2*4) + ((4 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4));1;213;;;;;
 (min(v0*8, ((v1*252) + v2) + 250) == min(v0*8, ((v1*252) + v2) + 250));1;83;;;;;
 (((v0/2) + (v1*336)) == ((v0/2) + (v1*336)));1;46;;;;;
 (((((((max(v0*8, -3) + (v0*-8)) + ((min(v1*16, 109) + (v2 + min(v3*125, v4 + -125))) + 3))/2)*-2)/2)*2) == ((((max(v0*8, -3) + (v0*-8)) + ((min(v1*16, 109) + (v2 + min(v3*125, v4 + -125))) + 3))/2)*-2));1;151;;;;;
 ((v0 + 1) != 0);0;266;;;;;
 ((min((min(v0*8, 4) + ((v1/65)*8)) + 72, (v2*-84) + ((((v3 + v1) + -1)/65)*8)) - (v0*8)) == (min((min(v0*8, 4) + ((v1/65)*8)) + 72, (v2*-84) + ((((v3 + v1) + -1)/65)*8)) - (v0*8)));1;108;;;;;
 ((max(min(v0, 499), 0) + (v1*16)) == (max(min(v0, 499), 0) + (v1*16)));1;1524;;;;;
 ((min(v0*4, 21) + (v1*8)) == (min(v0*4, 21) + (v1*8)));1;38;;;;;
 ((((v0*8) + 144)/131) != 0);0;463;;;;;
 ((((max(v0*8, -2)*-1)/2)*2) == (max(v0*8, -2)*-1));0;758;;;;;
 (min((((v0/63)*64) + (min(((v1/2)*-260) + (((((v2 + v0) + -1)/63) - (v0/63))*64), -92) + ((min(v3*64, ((v1/2)*260) + 164)/4)*4))) + 92, v4) == min((((v0/63)*64) + (min(((v1/2)*-260) + (((((v2 + v0) + -1)/63) - (v0/63))*64), -92) + ((min(v3*64, ((v1/2)*260) + 164)/4)*4))) + 92, v4));1;141;;;;;
 (((((((uint1)1 && ((((((v5*2) + v6)*2) + 0) + -8) <= ((((v5*2) + v6)*2) + -8))) && ((((((v5*2) + v6)*2) + 3) + -8) >= (((((v5*2) + v6)*2) + 3) + -8))) && (((((v1*4) + v2)*2) + ((v3*16) + v4)) <= (((v3*16) + v4) + (((v1*4) + v2)*2)))) && ((((((v1*4) + v2)*2) + ((v3*16) + v4)) + 1) >= (((v3*16) + v4) + ((((v1*4) + v2)*2) + 1)))) && (v7 <= v7)) && (v7 >= v7));0;2546;;;;;
 ((min(v0*68, 64) + (min(v1*36, 32) + v2)) == (min(v0*68, 64) + (min(v1*36, 32) + v2)));1;49;;;;;
 (((v0 + v1) + -2) < (((v0 + 1) + v1) + -2));1;43;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 0)) + 529)/506) >= 0);1;54;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + 15)/8) - (v2*4)) - (v1/8), -1)*2) + 10)) - 1));0;138;;;;;
 (min(max(min(min(v0*128, 127) + v1, 1117), 118) - max(min(min(v0*128, 127) + v1, 1244), 245), v2) == min(max(min(min(v0*128, 127) + v1, 1117), 118) - max(min(min(v0*128, 127) + v1, 1244), 245), v2));1;250;;;;;
 (min(max(max(min(v0, 250), 1)*8, 10) + (v1*4), max(v2*8, -285) + 297) == min(max(max(min(v0, 250), 1)*8, 10) + (v1*4), max(v2*8, -285) + 297));1;75;;;;;
 ((((v0 - v1) + 22)/17) == (((v0 - v1) + 22)/17));1;65;;;;;
 (((((((uint1)1 && ((((((v0*16) + v1) + v2)*2) + -4) <= (((((v0*16) + v1) + v2)*2) + -4))) && ((((((v0*16) + v1) + v2)*2) + ((6 + -4) - 1)) >= (((((v0*16) + v1) + v2)*2) + ((6 + -4) - 1)))) && ((0 + ((v3*2) + -4)) <= (((((0*4) + v3) + 0)*2) + -4))) && ((3 + ((v3*2) + 60)) >= (((((7*4) + v3) + ((4 + 0) - 1))*2) + ((6 + -4) - 1)))) && (v4 <= v4)) && (v4 >= v4));1;263;;;;;
 ((max(min(((v0 + v1) + 71)/8, 249), 0) - ((v2*4) + v3)) == (max(min(((v0 + v1) + 71)/8, 249), 0) - ((v2*4) + v3)));1;87;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 773)/667) == (((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 773)/667));1;226;;;;;
 (((v0*8) + -312) == ((((v0*8) + -312) + 64) - 1));0;52;;;;;
 (min(max(min(min(v0*63, 62) + (v1 + v2), 1937), -62) + 60, v3) == min(max(min(min(v0*63, 62) + (v1 + v2), 1937), -62) + 60, v3));1;76;;;;;
 (min(max(min(((((((v0 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5), (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4) + (v2*12)) + 2) == min(max(min(((((((v0 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5), (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4) + (v2*12)) + 2));1;127;;;;;
 (min(max(min(v0, 250), 1) - max(min((v1 + v2)/8, 249), 0), v3) == min(max(min(v0, 250), 1) - max(min((v1 + v2)/8, 249), 0), v3));1;151;;;;;
 (((((v0 % (((v1*8) + 40)/33))*-33)/11)*11) == ((v0 % (((v1*8) + 40)/33))*-33));1;60;;;;;
 (0 == ((0 + (128 - (max(min((v0*2) + v1, 32), 31)*4))) - 1));0;78;;;;;
 (min(((v0*12) + v1) + 3, v2) == min(((v0*12) + v1) + 3, v2));1;62;;;;;
 (max(min(((v0 + v1) + 132)/8, 249), ((((v0 + v1) + 260)/128)*16) + 9) == max(min(((v0 + v1) + 132)/8, 249), ((((v0 + v1) + 260)/128)*16) + 9));1;79;;;;;
 (max(((v0 - v1) + 13)/152, 0) >= ((max(((v0 - v1) + 13)/152, 0) + max((((v0 - v1) + 164)/152) - max(((v0 - v1) + 13)/152, 0), 0)) - 1));0;936;;;;;
 ((256 - ((((v0*5) + v1) + v2)*8)) >= (2255 - ((((v0*5) + v1) + v2)*8)));0;73;;;;;
 (min(((v0 + v1) + 3)/2, ((v2*17) + ((v3*63) + v4)) + 8) == min(((v0 + v1) + 3)/2, ((v2*17) + ((v3*63) + v4)) + 8));1;71;;;;;
 ((((((v0 + v1) + 314)/63)*2) - (((v1/63)*2) + v2)) == (((((v0 + v1) + 314)/63)*2) - (((v1/63)*2) + v2)));1;51;;;;;
 ((min(v0*128, 380) + (v1/2)) == (min(v0*128, 380) + (v1/2)));1;52;;;;;
 (min((v0*4) + v1, v2 + -68) == min((v0*4) + v1, v2 + -68));1;59;;;;;
 (((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))*2) + 26)/17) == ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))*2) + 26)/17));1;228;;;;;
 (((((v0/8) + ((((min((v1*-16) + v2, 14) + 6)/7)*7) + (v1*16)))*8) + (min(min(((((v3 + v0) + 63)/8) - (v1*16)) - (v0/8), 14)*8, -52) + (max((v0/8) + ((v1*16) - (((v3 + v0) + 63)/8)), 0)*-8))) == ((((v0/8) + ((((min((v1*-16) + v2, 14) + 6)/7)*7) + (v1*16)))*8) + (min(min(((((v3 + v0) + 63)/8) - (v1*16)) - (v0/8), 14)*8, -52) + (max((v0/8) + ((v1*16) - (((v3 + v0) + 63)/8)), 0)*-8))));1;203;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 259)/252) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 259)/252));1;138;;;;;
 (((((((uint1)1 && ((((v0*8) + -125) + 96) <= ((((0 + v0)*8) + max(-125, -5)) + -24))) && ((((v0*8) + 3) + 96) >= ((((((16 + 0) - 1) + v0)*8) + 3) + -24))) && (((((v1*8) + v2) + 0) + 920) <= ((((((0*4) + 0) + v1)*8) + v2) + -96))) && (((((v1*8) + v2) + 3) + 920) >= ((((((((32 + 0) - 1)*4) + ((4 + 0) - 1)) + v1)*8) + v2) + -96))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)));0;338;;;;;
 (((min(v0*16, 109) + v1) + v2) < ((min(v0*16, 109) + (v1 + 1)) + v2));1;87;;;;;
 ((v0 + v1) >= ((v0 + (v1 - 1)) + 1));1;130;;;;;
 ((((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*16) + 178)/140) >= 0);1;453;;;;;
 (((v0*2) + -48) == ((((v0*2) + -48) + 4) - 1));0;61;;;;;
 (((881 - max(v0*332, 661)) - (v1*112)) == ((881 - max(v0*332, 661)) - (v1*112)));1;37;;;;;
 (min(max(min(v0, 1996), -3), max(min(v0, 1999), 0) + (v1*4)) == min(max(min(v0, 1996), -3), max(min(v0, 1999), 0) + (v1*4)));1;94;;;;;
 ((min(max(((v0 + v1) + 7)/8, 249), (min(v1/8, 0) + (v2*128)) + 122) + (v3*64)) == (min(max(((v0 + v1) + 7)/8, 249), (min(v1/8, 0) + (v2*128)) + 122) + (v3*64)));1;107;;;;;
 ((max(min(v0/2, 999), 0) + (v1*16)) == (max(min(v0/2, 999), 0) + (v1*16)));1;48;;;;;
 (((((v0 + v1) + -1)/63) - ((v1/63) + (v2*11))) == ((((v0 + v1) + -1)/63) - ((v1/63) + (v2*11))));1;65;;;;;
 ((min(((v0*-4) + v1) + 8, v2) - min(v2, 0)) == (min(((v0*-4) + v1) + 8, v2) - min(v2, 0)));1;108;;;;;
 (min(v0 - (v1/8), v2) == min(v0 - (v1/8), v2));1;32;;;;;
 (((((((v0 + v1) + 314)/63) - (v1/63))/2) + 2) == ((((((v0 + v1) + 314)/63) - (v1/63))/2) + 2));1;39;;;;;
 (max(min(max((152 - ((v0/125)*64))/122, 0), ((v1*64) + 193)/122), (((v2 - (v0/125))*64) + 72)/122) == max(min(max((152 - ((v0/125)*64))/122, 0), ((v1*64) + 193)/122), (((v2 - (v0/125))*64) + 72)/122));1;103;;;;;
 (min(v0*8, (v1*8) + 52) == min(v0*8, (v1*8) + 52));1;38;;;;;
 ((((v0*2) + v1) - min(v1 + 260, v2)) == (((v0*2) + v1) - min(v1 + 260, v2)));1;71;;;;;
 (min(max(min(v0 + v1, 1875), -124) + 131, v2) == min(max(min(v0 + v1, 1875), -124) + 131, v2));1;50;;;;;
 ((min(v0/8, 4) + ((v1*17) - max(((v2 + v0) + 23)/8, 249))) == (min(v0/8, 4) + ((v1*17) - max(((v2 + v0) + 23)/8, 249))));1;66;;;;;
 ((((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61))/32) + 3) == (((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61))/32) + 3));1;215;;;;;
 ((v0 - (((v1*4) + v2)*125)) == (v0 - (((v1*4) + v2)*125)));1;222;;;;;
 (((((((v0 + v1) + 7)/8) - (v1/8)) + 69)/64) == ((((((v0 + v1) + 7)/8) - (v1/8)) + 69)/64));1;96;;;;;
 (((v0 + 39)/32) != 0);0;375;;;;;
 (((max(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 11, min(v0*128, v2 + -128) + v1) - min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128)) - (v3*76)) == ((max(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 11, min(v0*128, v2 + -128) + v1) - min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128)) - (v3*76)));1;1840;;;;;
 (max(0, min(3, (0 + ((((((v0 % 8) + 132)/8)*8) + 38)/28)) - 1) + 1) <= 0);0;80;;;;;
 (((v0*201) + (v1*8)) == ((v0*201) + (v1*8)));1;40;;;;;
 ((((v0*56) + v1) - (v2*32)) == (((v0*56) + v1) - (v2*32)));1;48;;;;;
 ((v0/((v1 + 14)/9)) == (v0/((v1 + 14)/9)));1;41;;;;;
 (((min((v0*8) + ((v1*4)*8), (min(v1, 1)*32) + 24)/2)*2) == min((v0*8) + ((v1*4)*8), (min(v1, 1)*32) + 24));1;100;;;;;
 ((max(min(min(v0*8, (max((((v1 + v2) + 64)/65)*64, 1975) - v3) + 12) + v3, max((((v1 + v2) + 64)/65)*64, 1975) + 12) - ((v0*8) + v3), min(min((v0*8) + v4, (max((((v1 + v2) + 64)/65)*64, 1975) - v3) + 12) + v3, max((((v1 + v2) + 64)/65)*64, 1975) + 12) - (((v0*8) + v4) + v3)) + 3) <= 1024);0;3652;;;;;
 (min(((v0 + v1) + -1025)/16, v2 + -2) == min(((v0 + v1) + -1025)/16, v2 + -2));1;42;;;;;
 ((((v0/63)*8) + (v1*28)) == (((v0/63)*8) + (v1*28)));1;58;;;;;
 (max(((v0 - v1) + 130)/120, v2) == max(((v0 - v1) + 130)/120, v2));1;53;;;;;
 (max(min(max((v0*4) + (v1 + v2), -1), ((v0*4) + (v1 + v2)) + 4), min((v0*4) + (v1 + v2), 1995) + 4) == max(min(max((v0*4) + (v1 + v2), -1), ((v0*4) + (v1 + v2)) + 4), min((v0*4) + (v1 + v2), 1995) + 4));1;78;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 176)/64) == (((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 176)/64));1;219;;;;;
 (((v0/4) + (((min((v1*64) + 63, v2)/32)*32) + (min((v1*-64) + v2, 3) + (min(min((v1*-64) + v2, 63)/4, 7)*4)))) == ((v0/4) + (((min((v1*64) + 63, v2)/32)*32) + (min((v1*-64) + v2, 3) + (min(min((v1*-64) + v2, 63)/4, 7)*4)))));1;137;;;;;
 ((((v0*8) + 1338)/1001) != 0);0;456;;;;;
 (min(251 - (((v0*16) + v1)*4), v2 - ((((v0*16) + v1)*4) + ((v3*252) + v4))) == min(251 - (((v0*16) + v1)*4), v2 - ((((v0*16) + v1)*4) + ((v3*252) + v4))));1;109;;;;;
 (((v0*8) + ((v1*2) + v2)) == ((v0*8) + ((v1*2) + v2)));1;50;;;;;
 (((((max(min(v0, 2002), 3) + -3)/16)*8) + (v1*3)) == ((((max(min(v0, 2002), 3) + -3)/16)*8) + (v1*3)));1;59;;;;;
 (min((((v0 + v1) + 62)/63)*8, ((v2*140) + ((v1/63)*8)) + 121) == min((((v0 + v1) + 62)/63)*8, ((v2*140) + ((v1/63)*8)) + 121));1;71;;;;;
 (((((((v0 + v1) + -1)/17) - (v1/17))/60) + 1) == ((((((v0 + v1) + -1)/17) - (v1/17))/60) + 1));1;73;;;;;
 ((((v0*8) + 516)/508) != 0);0;467;;;;;
 (min((((v0 + v1) + -1)/4) - (v1/4), v2) == min((((v0 + v1) + -1)/4) - (v1/4), v2));1;64;;;;;
 ((((-1016 - ((min(v0*1000, v1 + -1000) + v2) % 8))/8) + (v3*4)) == (((-1016 - ((min(v0*1000, v1 + -1000) + v2) % 8))/8) + (v3*4)));1;87;;;;;
 ((max(min((v0*4) + v1, min(v2 + v1, 1995) + 5), 1) - (max(min((v0*4) + v1, min(v2 + v1, 1998) + 5), 4) + (v3*4))) == (max(min((v0*4) + v1, min(v2 + v1, 1995) + 5), 1) - (max(min((v0*4) + v1, min(v2 + v1, 1998) + 5), 4) + (v3*4))));1;125;;;;;
 (max(v0*64, (((v0*2) + v1)*32) + 3) == max(v0*64, (((v0*2) + v1)*32) + 3));1;61;;;;;
 (((((((v0 + v1) + -1)/65) - (v1/65)) + 17)/16) == ((((((v0 + v1) + -1)/65) - (v1/65)) + 17)/16));1;66;;;;;
 (max(-553 - max(min(((v0*8) - (v1*12)) - (v2*8), -541), -552), max(min(v3, 552), 541) + -553) == max(-553 - max(min(((v0*8) - (v1*12)) - (v2*8), -541), -552), max(min(v3, 552), 541) + -553));1;118;;;;;
 (min(((v0 + v1) + -1)/4, v2 + 63) == min(((v0 + v1) + -1)/4, v2 + 63));1;990;;;;;
 (((((v0 + v1)/8)*8) + 116) == ((((v0 + v1)/8)*8) + 116));1;38;;;;;
 ((max(min(v0/8, 249), 0) + (((v1/8)*130) - max(min(((v2 + v0) + 7)/8, 249), 0))) == (max(min(v0/8, 249), 0) + (((v1/8)*130) - max(min(((v2 + v0) + 7)/8, 249), 0))));1;82;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 124) == min(((v0 + v1) + -1)/8, v2 + 124));1;136;;;;;
 (((((((v0 + v1) + 135)/64) - (v1/64)) + 25)/20) == ((((((v0 + v1) + 135)/64) - (v1/64)) + 25)/20));1;66;;;;;
 (((((((min(v0*125, v1 + -125) + v2) + 12) % 16) + -142)/16) + (v3*2)) == ((((((min(v0*125, v1 + -125) + v2) + 12) % 16) + -142)/16) + (v3*2)));1;74;;;;;
 (min(v0*668, v1 + -668) == min(v0*668, v1 + -668));1;110;;;;;
 ((min(((v0 + v1) + 935)/8, (((v0 + v1)/8) + (((((min(v2*1000, v3 + -1000) + v0) % 8) + 63)/32)*4)) + 112) - (((v0 + v1)/8) + (v4*4))) == (min(((v0 + v1) + 935)/8, (((v0 + v1)/8) + (((((min(v2*1000, v3 + -1000) + v0) % 8) + 63)/32)*4)) + 112) - (((v0 + v1)/8) + (v4*4))));1;137;;;;;
 ((((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 262)/250) == (((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 262)/250));1;220;;;;;
 (max(((v0 - v1) + 13)/152, 0) >= ((max(((v0 - v1) + 13)/152, 0) + max((((v0 - v1) + 164)/152) - max(((v0 - v1) + 13)/152, 0), 0)) - 1));0;966;;;;;
 ((((min(v0*32, v1 + -32)*4)/4)*4) == (min(v0*32, v1 + -32)*4));1;29;;;;;
 ((v0*4) >= (((v0*4) + 4) - 1));0;22;;;;;
 ((((v0 + v1)*8) + -32) == (((((v0 + v1)*8) + -32) + 8) - 1));0;87;;;;;
 (min((v0*4) + 2, v1) == min((v0*4) + 2, v1));1;66;;;;;
 ((((v0*64) + 3542)/726) != 0);0;457;;;;;
 (((v0 + 128)/126) != 0);0;396;;;;;
 ((((v0/32) + v1) - min((v0/32) + -4, (v2*-4) + ((((v3 + v0) + 127)/32) - (v4*40)))) == (((v0/32) + v1) - min((v0/32) + -4, (v2*-4) + ((((v3 + v0) + 127)/32) - (v4*40)))));1;97;;;;;
 (min((v0*334) + 334, v1) == min((v0*334) + 334, v1));1;42;;;;;
 ((max(v0*126, -6) + (v1/8)) == (max(v0*126, -6) + (v1/8)));1;58;;;;;
 (min(v0 + 20, v1) == min(v0 + 20, v1));1;33;;;;;
 (max(-184 - (max(min(((v0/65)*-8) + ((v1*-131) + (min((((v2 + v0) + 64)/65)*8, ((v1*131) + ((v0/65)*8)) + 117) - (v3*4))), -20), -23)*8), (max(min(((((v0/65)*2) + v3)*4) - min(((((v2 + v0) + 64)/65)*8) - (v1*131), ((v0/65)*8) + 117), 23), 20)*8) + -184) == max(-184 - (max(min(((v0/65)*-8) + ((v1*-131) + (min((((v2 + v0) + 64)/65)*8, ((v1*131) + ((v0/65)*8)) + 117) - (v3*4))), -20), -23)*8), (max(min(((((v0/65)*2) + v3)*4) - min(((((v2 + v0) + 64)/65)*8) - (v1*131), ((v0/65)*8) + 117), 23), 20)*8) + -184));1;249;;;;;
 (min((((v0*8) + v1)*8) + 100, v2) == min((((v0*8) + v1)*8) + 100, v2));1;30;;;;;
 ((v0 - max(min((((v1 + v2) + 87)/8)*8, 1994), -5)) == (v0 - max(min((((v1 + v2) + 87)/8)*8, 1994), -5)));1;79;;;;;
 (min(min(v0*4, 1999) + (((v1 + 23)/4)*4), max(v0*4, -15) + 20) == min(min(v0*4, 1999) + (((v1 + 23)/4)*4), max(v0*4, -15) + 20));1;94;;;;;
 ((((max(min((((v0 + v1) + 127)/32)*4, 246), -3) - max(min((v1/32)*4, 281), 32)) + 98)/63) == (((max(min((((v0 + v1) + 127)/32)*4, 246), -3) - max(min((v1/32)*4, 281), 32)) + 98)/63));1;245;;;;;
 (((((v0*2) + v1)*8) + 8) < ((((v0*2) + (v1 + 1))*8) + 1));1;70;;;;;
 (((v0*4) + ((v1*508) + (v2 + v3))) == ((v0*4) + ((v1*508) + (v2 + v3))));1;50;;;;;
 (min((v0*2) + v1, min(max(min(((v2 + v3) + 124)/8, 249), 0), v1 + 1) + 1) == min((v0*2) + v1, min(max(min(((v2 + v3) + 124)/8, 249), 0), v1 + 1) + 1));1;107;;;;;
 ((((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 76)/63) == (((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 76)/63));1;266;;;;;
 (max(min(max(((v0 - (max(min((v1/63)*8, 285), 36)*8)) + 1304)/1004, 0), ((v2*8) + 1005)/1004), (min((v3 - max(min((v1/63)*8, 285), 36))*8, (min(v3*8, (v4 + v0) + 411) - (max(min((v1/63)*8, 285), 36)*8)) + 895) + -2)/1004) == max(min(max(((v0 - (max(min((v1/63)*8, 285), 36)*8)) + 1304)/1004, 0), ((v2*8) + 1005)/1004), (min((v3 - max(min((v1/63)*8, 285), 36))*8, (min(v3*8, (v4 + v0) + 411) - (max(min((v1/63)*8, 285), 36)*8)) + 895) + -2)/1004));1;247;;;;;
 (((v0*68) + ((v1/63)*8)) == ((v0*68) + ((v1/63)*8)));1;47;;;;;
 ((max(min((v0/63)*8, 285), 36) + (v1*16)) == (max(min((v0/63)*8, 285), 36) + (v1*16)));1;267;;;;;
 ((((((v0 + v1) + 7)/8) - (v2*126)) - (v1/8)) == (((((v0 + v1) + 7)/8) - (v2*126)) - (v1/8)));1;78;;;;;
 ((v0 + -1) >= (((v0 + -1) + 2) - 1));0;29;;;;;
 ((((((((v0 + v1) + 63)/32) - (v1/32))*32) + 951)/752) == (((((((v0 + v1) + 63)/32) - (v1/32))*32) + 951)/752));1;78;;;;;
 ((min(max((((v0 + v1) + 15)/16)*8, 995) - (v2*32), (min(v3*12, 20) + min((v1/16)*8, 4)) + 3) - ((v3*12) + (min((v1/16)*8, 4) + (v4*4)))) == (min(max((((v0 + v1) + 15)/16)*8, 995) - (v2*32), (min(v3*12, 20) + min((v1/16)*8, 4)) + 3) - ((v3*12) + (min((v1/16)*8, 4) + (v4*4)))));1;158;;;;;
 (max(((v0 - ((v1*132) + v2)) + 5)/4, (((v0 - v2)/4) + (v1*-33)) + 2) == max(((v0 - ((v1*132) + v2)) + 5)/4, (((v0 - v2)/4) + (v1*-33)) + 2));1;80;;;;;
 ((((v0*8) + 402)/65) != 0);0;414;;;;;
 (min(max(max((v0*8) + -56, v1), v2 + v1), ((min(v3, 13) + v0)*8) + 44) == min(max(max((v0*8) + -56, v1), v2 + v1), ((min(v3, 13) + v0)*8) + 44));1;73;;;;;
 ((min(v0*4, -3) + (max(v0*4, -3) + ((v1 + v2)/4))) == (min(v0*4, -3) + (max(v0*4, -3) + ((v1 + v2)/4))));1;63;;;;;
 ((min((((v0 + v1) + 15)/8) - (v2*128), (v1/8) + 123) - ((v1/8) + (v3*4))) == (min((((v0 + v1) + 15)/8) - (v2*128), (v1/8) + 123) - ((v1/8) + (v3*4))));1;80;;;;;
 ((max(min(((v0 + v1) + 31)/8, 249), 0) - ((((v2*2) + v3)*4) + v4)) == (max(min(((v0 + v1) + 31)/8, 249), 0) - ((((v2*2) + v3)*4) + v4)));1;89;;;;;
 (((v0*14) - ((((v1 + v2) + 124)/125)*16)) == ((v0*14) - ((((v1 + v2) + 124)/125)*16)));1;46;;;;;
 (min(((v0*60) + v1) + 60, v2) == min(((v0*60) + v1) + 60, v2));1;95;;;;;
 (min((v0*4) + ((v1*64) + (v2 + v3)), (min(v1*64, 63) + (v2 + v3)) + 77) == min((v0*4) + ((v1*64) + (v2 + v3)), (min(v1*64, 63) + (v2 + v3)) + 77));1;84;;;;;
 (((v0*8) + -1) >= ((((v0 - 1)*8) + 11) + 1));0;96;;;;;
 (((v0 + 52)/32) != 0);0;410;;;;;
 ((((v0 - v1) + 57)/17) != 0);0;436;;;;;
 (min(min(((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8) - (v3*4), 3) + (((min(((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8) - (v3*4), 16 - max(v3*4, 13))/4)*4) + v4), v5) == min(min(((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8) - (v3*4), 3) + (((min(((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8) - (v3*4), 16 - max(v3*4, 13))/4)*4) + v4), v5));1;159;;;;;
 ((min(v0*4, 7) + (v1*8)) == (min(v0*4, 7) + (v1*8)));1;45;;;;;
 (min(max(min(((v0 + v1) + 47)/16, 124), 0), v2 + 1) == min(max(min(((v0 + v1) + 47)/16, 124), 0), v2 + 1));1;81;;;;;
 (min((281 - (v0/8)) - v1, min((max(min((((v2 + v3) + 127)/32)*4, 246), -3) - (v4*4)) - max(min((v3/32)*4, 281), 32), -32) + 35) == min((281 - (v0/8)) - v1, min((max(min((((v2 + v3) + 127)/32)*4, 246), -3) - (v4*4)) - max(min((v3/32)*4, 281), 32), -32) + 35));1;123;;;;;
 (max(-1 - max(v0, -1), min(((v1*64) + ((v2*252) + v3)) - min(min((((min((min(v1*64, 188) + (v2*252)) + 64, v4) + -3)/4)*4) + v3, (min(v1*64, 188) + ((v2*252) + v3)) + 58) + 6, v4 + v3), 1) + -1) == max(-1 - max(v0, -1), min(((v1*64) + ((v2*252) + v3)) - min(min((((min((min(v1*64, 188) + (v2*252)) + 64, v4) + -3)/4)*4) + v3, (min(v1*64, 188) + ((v2*252) + v3)) + 58) + 6, v4 + v3), 1) + -1));1;196;;;;;
 (((v0/2) + (v1*508)) == ((v0/2) + (v1*508)));1;29;;;;;
 ((min(v0 + 1007, v1) - ((v2*64) + v0)) == (min(v0 + 1007, v1) - ((v2*64) + v0)));1;60;;;;;
 ((max(v0, 28) + (v1*2)) == (max(v0, 28) + (v1*2)));1;41;;;;;
 (((v0 + 266)/252) != 0);0;327;;;;;
 ((1 - min((v0 % 4)*126, 1)) == (((1 - min((v0 % 4)*126, 1)) + ((min((v0 % 4)*126, 1) + (max((v0 % 4)*63, 187)*-2)) + 499)) - 1));0;152;;;;;
 (min((v0*8) + 367, v1) == min((v0*8) + 367, v1));1;38;;;;;
 ((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*2) + 3) == (((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*2) + 3));1;259;;;;;
 (min(v0*8, ((v1*36) + (v2*8)) + 24) == min(v0*8, ((v1*36) + (v2*8)) + 24));1;58;;;;;
 (min(106 - ((v0*7) + (v1*54)), 53 - (v0*7)) == min(106 - ((v0*7) + (v1*54)), 53 - (v0*7)));1;65;;;;;
 ((min((max(v0, 0)*8) - (v1*124), (v2*8) + 112) - (((v2*2) + v3)*4)) == (min((max(v0, 0)*8) - (v1*124), (v2*8) + 112) - (((v2*2) + v3)*4)));1;76;;;;;
 (0 == ((0 + ((v0*32) + 47)) - 1));0;68;;;;;
 ((((v0 + 19)/24) - ((v1 % 4)*21)) == (((v0 + 19)/24) - ((v1 % 4)*21)));1;42;;;;;
 ((min(v0, 0) + -5) >= (((min(v0, 0) + -5) + (7 - min(v0, 0))) - 1));0;71;;;;;
 (((max(min(v0, 134), 65)*8) + -1075) >= ((((max(min(v0, 134), 65)*8) + -1075) + (1081 - (max(min(v0, 134), 65)*8))) - 1));0;94;;;;;
 ((v0 - (v1/2)) == (v0 - (v1/2)));1;22;;;;;
 (min(((((v0 + v1) + 62)/63) - (v1/63)) + -8, v2) == min(((((v0 + v1) + 62)/63) - (v1/63)) + -8, v2));1;56;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 75)/67) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 75)/67));1;87;;;;;
 (min(((v0 + v1) + 127)/32, ((v2*4) + ((v1/32) + (v3*2))) + -8) == min(((v0 + v1) + 127)/32, ((v2*4) + ((v1/32) + (v3*2))) + -8));1;83;;;;;
 ((((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 538)/505) == (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 538)/505));1;98;;;;;
 (((max(min((v0*12) + (max(min(min(v1*64, 191) + v2, 1244), 245) - max(min(min(v1*64, 191) + v2, 1181), 182)), 65), 62) + min(max(min(min(v1*64, 191) + v2, 1181), 182) + 62, v3))*2) == ((max(min((v0*12) + (max(min(min(v1*64, 191) + v2, 1244), 245) - max(min(min(v1*64, 191) + v2, 1181), 182)), 65), 62) + min(max(min(min(v1*64, 191) + v2, 1181), 182) + 62, v3))*2));1;357;;;;;
 (((max(min((v2*-252) + max(v1, 0), -248), -500)/4)*4) == max(min((v2*-252) + max(v1, 0), -248), -500));0;847;;;;;
 (0 == ((0 + ((max(min(max(min(((v0 + v1) + -1)/8, 249), 0) - v2, 14), -2)*2) + 4)) - 1));0;152;;;;;
 (((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*64) + 1272)/564) == ((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*64) + 1272)/564));1;222;;;;;
 ((((v0*4) + 505)/502) != 0);0;424;;;;;
 (min(((v0 + v1) + 499)/8, v2 + 31) == min(((v0 + v1) + 499)/8, v2 + 31));1;95;;;;;
 (((((((v0 + v1) + 5)/2) - (v1/2)) + 263)/256) == ((((((v0 + v1) + 5)/2) - (v1/2)) + 263)/256));1;70;;;;;
 ((((max(min(v0 + v1, 1998), -1) - max(min(v1, 1999), 0)) + 1007)/1004) == (((max(min(v0 + v1, 1998), -1) - max(min(v1, 1999), 0)) + 1007)/1004));1;143;;;;;
 ((((min(((min(v3*125, v4 + -125) + v2)/500)*64, (min(((min(v3*125, v4 + -125) + v2)/500)*8, (((min(v3*125, v4 + -125) + (v2 + 124))/500)*8) + 10)*8) + 5)*-1)/4)*4) == (min(((min(v3*125, v4 + -125) + v2)/500)*64, (min(((min(v3*125, v4 + -125) + v2)/500)*8, (((min(v3*125, v4 + -125) + (v2 + 124))/500)*8) + 10)*8) + 5)*-1));0;2539;;;;;
 ((((v0 + v1)/4) + (v2*4)) == (((v0 + v1)/4) + (v2*4)));1;423;;;;;
 (((((((v0 + v1) + 11)/2) - (v1/2)) + 137)/127) == ((((((v0 + v1) + 11)/2) - (v1/2)) + 137)/127));1;75;;;;;
 (((v0*2) + ((v1*12) + v2)) == ((v0*2) + ((v1*12) + v2)));1;32;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*16)) == (max(min(v0/2, 1006), 7) + (v1*16)));1;1268;;;;;
 (((v0*260) + (max(min(v1, 1003)*2, 7) - max(min(min(((v2 + v3) + 1)/2, v1 + 250)*2, 1991), -8))) == ((v0*260) + (max(min(v1, 1003)*2, 7) - max(min(min(((v2 + v3) + 1)/2, v1 + 250)*2, 1991), -8))));1;173;;;;;
 (min(v0 + 29, v1) == min(v0 + 29, v1));1;40;;;;;
 ((((v0*8) + 1367)/676) != 0);0;424;;;;;
 ((max(v0*32, (((v1*8) + v0)*32) + 3) + (v2*130)) == (max(v0*32, (((v1*8) + v0)*32) + 3) + (v2*130)));1;62;;;;;
 (min(max(((v0 + 6)/4) - v1, -1), min(((((v2 + v3) + 3)/4) - (v4*63)) - (v3/4), 60) + 2) == min(max(((v0 + 6)/4) - v1, -1), min(((((v2 + v3) + 3)/4) - (v4*63)) - (v3/4), 60) + 2));1;115;;;;;
 (min((v0*4) + ((v1*1005) + v2), (v2 + v3) + 11) == min((v0*4) + ((v1*1005) + v2), (v2 + v3) + 11));1;55;;;;;
 (min(v0*1000, v1 + -1000) == min(v0*1000, v1 + -1000));1;63;;;;;
 (min(v0*4, ((((v1 + v2) + -1)/63)*8) + 15) == min(v0*4, ((((v1 + v2) + -1)/63)*8) + 15));1;57;;;;;
 ((max(min(v0, 556), 57) + (v1*4)) == (max(min(v0, 556), 57) + (v1*4)));1;48;;;;;
 ((max(min((((v0 + v1) + 87)/8)*8, 1994), -5) - ((((v2*16) + v3)*4) + v4)) == (max(min((((v0 + v1) + 87)/8)*8, 1994), -5) - ((((v2*16) + v3)*4) + v4)));1;94;;;;;
 ((v0 - (v1*35)) == (v0 - (v1*35)));1;29;;;;;
 ((max(min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*64)) + 63), 499), 0) - max(min((v1/4) + (v2*64), 499), 0)) == (max(min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*64)) + 63), 499), 0) - max(min((v1/4) + (v2*64), 499), 0)));1;334;;;;;
 (max((max(min(v0/8, 249), 0) + (v1*32)) - min(max(min(((v2 + v0) + 7)/8, 249), 0) - (v3*64), max(min(v0/8, 249), 0) + 63), (v1*32) - min((max(min(((v2 + v0) + 7)/8, 249), 0) - (v3*64)) - max(min(v0/8, 249), 0), min(v1*32, 33) + 30)) == max((max(min(v0/8, 249), 0) + (v1*32)) - min(max(min(((v2 + v0) + 7)/8, 249), 0) - (v3*64), max(min(v0/8, 249), 0) + 63), (v1*32) - min((max(min(((v2 + v0) + 7)/8, 249), 0) - (v3*64)) - max(min(v0/8, 249), 0), min(v1*32, 33) + 30)));1;202;;;;;
 (min(((((v0*8) + 145)/132)*132) + ((v1/65)*8), ((((v2 + v1) + 64)/65)*8) + 14) == min(((((v0*8) + 145)/132)*132) + ((v1/65)*8), ((((v2 + v1) + 64)/65)*8) + 14));1;103;;;;;
 ((((((((v0 + v1) + 755)/63) - (v1/63))*64) + 2188)/1236) == (((((((v0 + v1) + 755)/63) - (v1/63))*64) + 2188)/1236));1;87;;;;;
 (max((min((((v0 + v1) + 999)/500) - (v1/500), v2 + 1) + 3)/4, max(v3/4, -1) + 1) == max((min((((v0 + v1) + 999)/500) - (v1/500), v2 + 1) + 3)/4, max(v3/4, -1) + 1));1;102;;;;;
 (min((v0*4) + v1, (v2*8) + 233) == min((v0*4) + v1, (v2*8) + 233));1;56;;;;;
 (((((v0 + v1) + 63)/64) - (v1/64)) == ((((v0 + v1) + 63)/64) - (v1/64)));1;51;;;;;
 (min((v0*4) + ((v1*20) + v2), v3 + 33) == min((v0*4) + ((v1*20) + v2), v3 + 33));1;49;;;;;
 (min(((((v0 + v1) + -1)/16) - (v1/16)) + -3, v2) == min(((((v0 + v1) + -1)/16) - (v1/16)) + -3, v2));1;782;;;;;
 (((v0*-8) + ((((v1 + v2) + -1)/17) - v3)) == ((v0*-8) + ((((v1 + v2) + -1)/17) - v3)));1;46;;;;;
 ((((max(v0, 0)*8) - (v1*155)) - (v2*8)) == (((max(v0, 0)*8) - (v1*155)) - (v2*8)));1;53;;;;;
 (((v0*8) + 371) >= ((((v0*8) + 371) + ((max(min(v1, 102), 98)*8) + -781)) - 1));0;109;;;;;
 (((v0*8) + -194) == ((((v0*8) + -194) + ((min(v1, -26)*8) + 239)) - 1));0;92;;;;;
 ((max(min(min((v0*1000) + 1000, v1) + v2, 2000), 1) - (max(min((v0*1000) + v2, 1999), 0) + (v3*4))) == (max(min(min((v0*1000) + 1000, v1) + v2, 2000), 1) - (max(min((v0*1000) + v2, 1999), 0) + (v3*4))));1;95;;;;;
 (((min(max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*126), (max(min(v1/2, 999), 0) + min(v3*64, 65)) + 60) - (v3*64)) - max(min(v1/2, 999), 0)) == ((min(max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*126), (max(min(v1/2, 999), 0) + min(v3*64, 65)) + 60) - (v3*64)) - max(min(v1/2, 999), 0)));1;157;;;;;
 (((v0*124) + ((v1 - v2)*8)) == ((v0*124) + ((v1 - v2)*8)));1;60;;;;;
 (min(v0 - (v1*16), min(v2, 16) + 3) == min(v0 - (v1*16), min(v2, 16) + 3));1;42;;;;;
 (((v0*8) + ((v1*32) + v2)) == ((v0*8) + ((v1*32) + v2)));1;61;;;;;
 (min(max(min(v0 + v1, 2000), 1) + (v2*16), max(min(v0 + v1, 1871), -128) + 122) == min(max(min(v0 + v1, 2000), 1) + (v2*16), max(min(v0 + v1, 1871), -128) + 122));1;138;;;;;
 (((max(min((v1*-500) + (v2 - min(v3, 1999)), 500), 0)/4)*4) == max(min((v1*-500) + (v2 - min(v3, 1999)), 500), 0));0;1043;;;;;
 (((v0*32) + ((v1*63) + v2)) == ((v0*32) + ((v1*63) + v2)));1;28;;;;;
 (0 == ((0 + ((((((v0 + v1) % 500) + 124)/500)*2) + 3)) - 1));0;104;;;;;
 (((min(((max(min(min(v3*125, v4 + -125) + v2, 2002), 3) + -3)/16)*16, max(((max(min(min(v3*125, v4 + -125) + v2, 1874), -125) + 125)/16)*16, min(min(v3*125, v4 + -125) + v2, 1874) + 116) + 7)/8)*8) == min(((max(min(min(v3*125, v4 + -125) + v2, 2002), 3) + -3)/16)*16, max(((max(min(min(v3*125, v4 + -125) + v2, 1874), -125) + 125)/16)*16, min(min(v3*125, v4 + -125) + v2, 1874) + 116) + 7));0;2195;;;;;
 ((((((v0 + v1) + 63)/32) - ((v2/2)*9)) - (v1/32)) == (((((v0 + v1) + 63)/32) - ((v2/2)*9)) - (v1/32)));1;73;;;;;
 (((((min(((v0/32) + (v1*2))*4, (v2*4) + 97) + -63)/2) - (v1*4)) - ((v0/32)*2)) == ((((min(((v0/32) + (v1*2))*4, (v2*4) + 97) + -63)/2) - (v1*4)) - ((v0/32)*2)));1;115;;;;;
 ((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0)) + 10)/8) == (((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0)) + 10)/8));1;269;;;;;
 (max(v0*4, (v1*4) + 85) == max(v0*4, (v1*4) + 85));1;41;;;;;
 (min(v0*8, (v1*8) + 34) == min(v0*8, (v1*8) + 34));1;53;;;;;
 (((((((v0 + v1) + 64)/65) - (v1/65))*2) + 6) == ((((((v0 + v1) + 64)/65) - (v1/65))*2) + 6));1;65;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2 + 1) == min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2 + 1));1;241;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((((v1 + -1)/4)*4) + v0) + 3) >= (((((((v1 + 3)/4) + 0) - 1)*4) + v0) + ((4 + 0) - 1)))) && (((((v2*4) + v3)*2) + v4) <= ((((v2*4) + v3)*2) + v4))) && ((((((v2*4) + v3)*2) + v4) + 1) >= (((((v2*4) + v3)*2) + 1) + v4))) && (v5 <= v5)) && (v5 >= v5));1;271;;;;;
 (((((((uint1)1 && (((0 + ((((min(v0, 4) + v1) + -4)/63)*64)) + -45) <= (((((((min(v0, 4) + v1) + -4)/63)*8) + -5)*8) + -5))) && (((1045 + (((((v2*64) + 106)/1046)*1046) + ((((min(v0, 4) + v1) + -4)/63)*64))) + -45) >= ((((((v2*8) + 13) + (((((min(v0, 4) + v1) + -4)/63)*8) + -5)) - 1)*8) + ((11 + -5) - 1)))) && (((((((v3/63)*16) + 0)*4) + 0) + -45) <= ((0 + (((v3/63)*64) + 2)) + -47))) && (((((((v3/63)*16) + (((((v3 % 63) + 124)/63)*16) + 32))*4) + 3) + -45) >= ((3 + ((((((v3 % 63) + 124)/63) + ((v3/63) + (((v3 % 63) + 124)/63)))*64) + 221)) + -47))) && (v4 <= v4)) && (v4 >= v4));0;614;;;;;
 (((((((v0 + v1) + 440)/63) - (v1/63)) + 31)/24) == ((((((v0 + v1) + 440)/63) - (v1/63)) + 31)/24));1;76;;;;;
 (min(30 - (v0*16), (((((v1 + v2) + -1)/65)*8) - ((v0*16) + v3)) + 7) == min(30 - (v0*16), (((((v1 + v2) + -1)/65)*8) - ((v0*16) + v3)) + 7));1;91;;;;;
 (((v0*76) + (v1*8)) == ((v0*76) + (v1*8)));1;56;;;;;
 (min((v0*64) + 47, v1) == min((v0*64) + 47, v1));1;37;;;;;
 (((v0*1012) + (((v1 + -3)/8)*8)) == ((v0*1012) + (((v1 + -3)/8)*8)));1;55;;;;;
 ((((v0*4) + 505)/502) != 0);0;448;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 9)/8) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 9)/8));1;242;;;;;
 (min(((v0*2) + v1)*2, ((((v2 + v3) + 62)/63)*8) + 17) == min(((v0*2) + v1)*2, ((((v2 + v3) + 62)/63)*8) + 17));1;77;;;;;
 (0 >= ((0 + (72 - max((v0 % 5)*15, 57))) - 1));0;48;;;;;
 ((((max(min((v1*-64) + (max(min(min((v2*128) + 128, v3) + v4, 2000), 1) - max(min((v2*128) + v4, 1999), 0)), 64), 0) + (v1*64))/4)*4) == (max(min((v1*-64) + (max(min(min((v2*128) + 128, v3) + v4, 2000), 1) - max(min((v2*128) + v4, 1999), 0)), 64), 0) + (v1*64)));0;1952;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 9)/8) == (((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 9)/8));1;153;;;;;
 (min(max(min((v0 + v1)/2, 936), -63) + 72, v2) == min(max(min((v0 + v1)/2, 936), -63) + 72, v2));1;69;;;;;
 (max(-43 - (max(min((((v0 + v1) + 39)/8) - ((v1/8) + (v2*4)), -2), -5)*8), (max(min(v3, 5), 2)*8) + -43) == max(-43 - (max(min((((v0 + v1) + 39)/8) - ((v1/8) + (v2*4)), -2), -5)*8), (max(min(v3, 5), 2)*8) + -43));1;118;;;;;
 (min(max(min((v0/8) + v1, 250), 1) - max(min(v0/8, 256), 7), v2) == min(max(min((v0/8) + v1, 250), 1) - max(min(v0/8, 256), 7), v2));1;179;;;;;
 (min(((v0 + v1) + 7)/8, v2 + 1) == min(((v0 + v1) + 7)/8, v2 + 1));1;56;;;;;
 (min(max(min(v0, 1999), 0), max(min(v1, 1999), 0) + -2) == min(max(min(v0, 1999), 0), max(min(v1, 1999), 0) + -2));1;102;;;;;
 (((v0 - (v1/8))*8) == ((v0 - (v1/8))*8));1;920;;;;;
 (min(max((219 - (v0*8))/137, 0), ((min(((((v1 + v2) + 87)/8) - ((v3/2)*34)) - (v2/8), 23)*8) + 225)/137) == min(max((219 - (v0*8))/137, 0), ((min(((((v1 + v2) + 87)/8) - ((v3/2)*34)) - (v2/8), 23)*8) + 225)/137));1;110;;;;;
 (((v0*63) + ((v1/2)*2)) == ((v0*63) + ((v1/2)*2)));1;37;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 504)/501) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 504)/501));1;151;;;;;
 (min(v0*16, v1 + 25) == min(v0*16, v1 + 25));1;38;;;;;
 (min(((v0 + v1) + 415)/32, (v1/32) + (((v2 + 46)/38)*38)) == min(((v0 + v1) + 415)/32, (v1/32) + (((v2 + 46)/38)*38)));1;57;;;;;
 (min(max(((v0 - max(min(v1, 1999), 0)) + 7)/4, 0), (v2/4) + 1) == min(max(((v0 - max(min(v1, 1999), 0)) + 7)/4, 0), (v2/4) + 1));1;84;;;;;
 ((((v0*8) + 1367)/676) != 0);0;448;;;;;
 ((max(v0*4, 3) + ((((v1*4) - min((((v2/500)*16) + v1)*4, ((((v3 + v2) + -1)/500)*64) + 85)) + (((v2/500)*64) + v4))*4)) == (max(v0*4, 3) + ((((v1*4) - min((((v2/500)*16) + v1)*4, ((((v3 + v2) + -1)/500)*64) + 85)) + (((v2/500)*64) + v4))*4)));1;128;;;;;
 (min(((((v0 - v1) + 353)/342)*342) + v1, v0 + 12) == min(((((v0 - v1) + 353)/342)*342) + v1, v0 + 12));1;71;;;;;
 ((v0 - ((v1*16) + v2)) == (v0 - ((v1*16) + v2)));1;18;;;;;
 (((max(v0*8, -4) + v1) + 4) == ((((max(v0*8, -4) + v1) + 4) + (min(v0*8, -4) + 12)) - 1));0;144;;;;;
 ((((max(min((max((v1*4) + (v2 - v3), 65)*8) + (((min((v1*-4) + (v3 - v2), -65)*8)/12)*12), 3), -11)*-1)/4)*4) == (max(min((max((v1*4) + (v2 - v3), 65)*8) + (((min((v1*-4) + (v3 - v2), -65)*8)/12)*12), 3), -11)*-1));0;1927;;;;;
 ((max(min(v0/2, 999), 0) + (v1*251)) == (max(min(v0/2, 999), 0) + (v1*251)));1;36;;;;;
 ((min(v0*63, 187) + (v1 + v2)) == (min(v0*63, 187) + (v1 + v2)));1;59;;;;;
 (((min(((v0 + v1) - (v2*125))*4, (min(v3*128, 372) + (v1*4)) + 131) - (v3*128)) - (v1*4)) == ((min(((v0 + v1) - (v2*125))*4, (min(v3*128, 372) + (v1*4)) + 131) - (v3*128)) - (v1*4)));1;195;;;;;
 (((min((((max(min(((v0 + v1) + -1)/63, 31), 0)*2) - v2)*4) + 16, v3)*-8) + ((v4*4) + ((v3*8) + (v5*20)))) == ((min((((max(min(((v0 + v1) + -1)/63, 31), 0)*2) - v2)*4) + 16, v3)*-8) + ((v4*4) + ((v3*8) + (v5*20)))));1;132;;;;;
 (((v0*4) + (max(min((v1*8) + v2, min(v3 + v2, 2007) + -8), 0) - max(min((v1*8) + v2, min(v3 + v2, 2000) + -8), -7))) == ((v0*4) + (max(min((v1*8) + v2, min(v3 + v2, 2007) + -8), 0) - max(min((v1*8) + v2, min(v3 + v2, 2000) + -8), -7))));1;1141;;;;;
 (((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -4) <= (0 + ((min(v0, 4) + v1) + -4)))) && (((3 + ((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))) + -4) >= (((4 + 0) - 1) + ((v0 + v1) + -4)))) && (((min(v2*63, 62) + v3) + v4) <= ((min(v2*63, 62) + v3) + v4))) && (((min(v2*63, 62) + v3) + v4) >= ((min(v2*63, 62) + v3) + v4))) && (v5 <= v5)) && (((v6 + v5) + -1) >= ((v6 + v5) - 1)));0;1197;;;;;
 ((max(min(v0, 2001), 2) + (v1*4)) == (max(min(v0, 2001), 2) + (v1*4)));1;44;;;;;
 (min(max(v0, 0), ((v1*156) + v2) + 79) == min(max(v0, 0), ((v1*156) + v2) + 79));1;49;;;;;
 (((max(min((v0*-500) + v1, 500), 0)/4)*4) == max(min((v0*-500) + v1, 500), 0));0;585;;;;;
 ((((v0*-1004)/4)*4) == (v0*-1004));1;61;;;;;
 (((v0*4) + ((v1*60) + v2)) == ((v0*4) + ((v1*60) + v2)));1;63;;;;;
 (min(max(min(v0, 999), 0), v1 + 3) == min(max(min(v0, 999), 0), v1 + 3));1;58;;;;;
 (((v0 + 77)/63) != 0);0;341;;;;;
 ((((max(min(((v0 + v1) + 132)/133, 14), 0) - max(min(v1/133, 14), 0))/2) + 1) == (((max(min(((v0 + v1) + 132)/133, 14), 0) - max(min(v1/133, 14), 0))/2) + 1));1;322;;;;;
 (min(v0*8, ((v1/125)*8) + -1) == min(v0*8, ((v1/125)*8) + -1));1;60;;;;;
 ((max(min(min(((v0 + v1) + -1)/8, (min((min((((v0 + v1) + -1)/8) - v2, (v3*16) + 15)/2)*2, (v3*16) + 14) + v2) + 1), 249), 0) - (max(min(min((v3*16) + v2, min(((v0 + v1) + -1)/8, ((v3*16) + v2) + 15) + -1), 249), 0) + (v4*7))) == (max(min(min(((v0 + v1) + -1)/8, (min((min((((v0 + v1) + -1)/8) - v2, (v3*16) + 15)/2)*2, (v3*16) + 14) + v2) + 1), 249), 0) - (max(min(min((v3*16) + v2, min(((v0 + v1) + -1)/8, ((v3*16) + v2) + 15) + -1), 249), 0) + (v4*7))));1;263;;;;;
 (((((((uint1)1 && (((v0 + v1) + -37) <= ((v0 + v1) + -37))) && (((v0 + v1) + -37) >= ((v0 + v1) + -37))) && (((((((v2*2) + v3)*4) + -5) + 0) + -5) <= ((((((v2*2) + v3)*4) + 0) + -5) + -5))) && (((((((v2*2) + v3)*4) + ((10 + -5) - 1)) + 3) + -5) >= ((((((v2*2) + v3)*4) + ((4 + 0) - 1)) + ((10 + -5) - 1)) + -5))) && (v4 <= v4)) && (v4 >= v4));1;223;;;;;
 ((((v0 - v1) + 10)/8) != 0);0;521;;;;;
 (((v0*17) + ((max(min(v1/8, 249), 0)/8)*8)) == ((v0*17) + ((max(min(v1/8, 249), 0)/8)*8)));1;82;;;;;
 (((((((v0 + v1) + 63)/8) - (v1/8))/33) + 1) == ((((((v0 + v1) + 63)/8) - (v1/8))/33) + 1));1;71;;;;;
 (((v0*64) + ((v1*128) + ((v2*508) + (min((v3/16)*8, 4) + (((v4*8) + v5)*4))))) == ((v0*64) + ((v1*128) + ((v2*508) + (min((v3/16)*8, 4) + (((v4*8) + v5)*4))))));1;78;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + 1) <= ((((v0*4) + 0) + v1) + 1))) && (((((v0*4) + v1) + 3) + 1) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + 1))) && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && (v2 <= v2)) && (v2 >= v2));1;173;;;;;
 ((((min(((v3 % (((v4*64) + 1460)/752))*752) + ((max(min(v2/65, 34), 3)*64) + 43), max(min(((v1 + v2) + 64)/65, 27), -4)*64)*-1)/4)*4) == (min(((v3 % (((v4*64) + 1460)/752))*752) + ((max(min(v2/65, 34), 3)*64) + 43), max(min(((v1 + v2) + 64)/65, 27), -4)*64)*-1));0;2135;;;;;
 ((v0 - max(v1*18, 50)) == (v0 - max(v1*18, 50)));1;39;;;;;
 (min((v0 + v1)*4, (v2*4) + 47) == min((v0 + v1)*4, (v2*4) + 47));1;60;;;;;
 ((max(min(v0, 1499), 500) + (v1*3)) == (max(min(v0, 1499), 500) + (v1*3)));1;49;;;;;
 (max(min(max(((v0 - ((v1/8)*8)) + 36)/32, 0), (v2/4) + 1), min(min((((v3 + v0) - ((v1/8)*8)) + -29)/32, (((((v4 + v1) + 23)/8) - (v1/8)) + -3)/4), v2/4) + 1) == max(min(max(((v0 - ((v1/8)*8)) + 36)/32, 0), (v2/4) + 1), min(min((((v3 + v0) - ((v1/8)*8)) + -29)/32, (((((v4 + v1) + 23)/8) - (v1/8)) + -3)/4), v2/4) + 1));1;147;;;;;
 (((((((v0 + v1) + 1)/2) - (v1/2))/251) + 1) == ((((((v0 + v1) + 1)/2) - (v1/2))/251) + 1));1;75;;;;;
 (0 >= ((0 + ((((v0 + v1) % 8) + 571)/32)) - 1));0;52;;;;;
 (((max(min(v0, -8), -135)*2) + 16) == ((((max(min(v0, -8), -135)*2) + 16) + (-14 - (max(min(v0, -8), -135)*2))) - 1));0;126;;;;;
 (min(max(min(v0*8, 2311), 312), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7) + 1) == min(max(min(v0*8, 2311), 312), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), min(min(min(min(min(min(min(max(min(v0*8, 2310), 311), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7)), max(min(v0*8, 2309), 310) + 1), max(min(v0*8, 2308), 309) + 2), max(min(v0*8, 2307), 308) + 3), max(min(v0*8, 2306), 307) + 4), max(min(v0*8, 2305), 306) + 5), max(min(v0, 288)*8, 305) + 6), max(min(v0*8, 2303), 304) + 7) + 1));1;2127;;;;;
 (((((((uint1)1 && (((((0*2) + ((v0*2) + ((v1*32) + v2)))*2) + 0) <= ((((v0*2) + ((v1*32) + v2))*2) + 0))) && (((((0*2) + ((v0*2) + ((v1*32) + v2)))*2) + 3) >= ((((v0*2) + ((v1*32) + v2))*2) + ((4 + 0) - 1)))) && ((v3 + -2) <= ((0 + v3) + -2))) && ((v3 + 10) >= ((((13 + 0) - 1) + v3) + -2))) && ((v4*8) <= ((v4*8) + 0))) && (((v4*8) + 7) >= ((v4*8) + ((8 + 0) - 1))));1;147;;;;;
 (min(v0*8, (min(((v1*12) + ((v2/8) + (v3*36)))*8, (min(((v4 + v2) + 7)/8, ((v3*36) + ((v2/8) + (v1*12))) + 11)*8) + 9) + (((min(max((v1*12) + ((v3*36) + ((v2/8) - (((v4 + v2) + 7)/8))), -11)*8, 9)*-1)/4)*4)) + 3) == min(v0*8, (min(((v1*12) + ((v2/8) + (v3*36)))*8, (min(((v4 + v2) + 7)/8, ((v3*36) + ((v2/8) + (v1*12))) + 11)*8) + 9) + (((min(max((v1*12) + ((v3*36) + ((v2/8) - (((v4 + v2) + 7)/8))), -11)*8, 9)*-1)/4)*4)) + 3));1;220;;;;;
 (((max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), 0)/4)*4) == max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), 0));0;947;;;;;
 (((v0 + 47)/32) != 0);0;352;;;;;
 (((((((v0 + v1) + 3)/4) - (v1/4)) + 10)/8) == ((((((v0 + v1) + 3)/4) - (v1/4)) + 10)/8));1;67;;;;;
 (min((v0*5) + v1, (v2*8) + 29) == min((v0*5) + v1, (v2*8) + 29));1;49;;;;;
 (min(max(min(v0*8, 66), 35), ((v1*4) + v2) + 2) == min(max(min(v0*8, 66), 35), ((v1*4) + v2) + 2));1;237;;;;;
 (((max(min(v0, 14), -4)*8) + -117) >= ((((max(min(v0, 14), -4)*8) + -117) + (121 - (max(min(v0, 14), -4)*8))) - 1));0;92;;;;;
 (min(max((v0*2) + -17, v1), ((-10 + v0)*2) + 5) == min(max((v0*2) + -17, v1), ((-10 + v0)*2) + 5));1;55;;;;;
 (min(max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 62), 0), v2) == min(max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 62), 0), v2));1;236;;;;;
 (((((((v0 + v1) + 127)/32) - (v1/32))/2) + 5) == ((((((v0 + v1) + 127)/32) - (v1/32))/2) + 5));1;89;;;;;
 (min(max((v0 + 11)/8, v1 + -77), v1 + 19) == min(max((v0 + 11)/8, v1 + -77), v1 + 19));1;59;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*8, 244) + (v1*4)) + v2)) <= ((min(v0*8, 244) + (v1*4)) + v2))) && ((3 + ((min(v0*8, 244) + (v1*4)) + v2)) >= (((min(v0*8, 244) + (v1*4)) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5));1;159;;;;;
 (min(((v0 + v1) + 7)/4, v2 + 167) == min(((v0 + v1) + 7)/4, v2 + 167));1;58;;;;;
 ((((v0*68)/4)*4) == (v0*68));1;34;;;;;
 (((((((uint1)1 && ((((((v0*4) + v1) + -2) + 0) + -1) <= (-2 + (((v0*4) + v1) + -1)))) && ((((((v0*4) + v1) + ((6 + -2) - 1)) + 3) + -1) >= (((6 + -2) - 1) + (min(((v0*4) + v1) - max(v0*4, 33), v1) + 35)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (v2 <= v2)) && (v2 >= v2));0;1250;;;;;
 (((v0 + 76)/63) != 0);0;341;;;;;
 (((((((v0 + v1) + 1)/2) - (v2*504)) - (v3*64)) - (v1/2)) == ((((((v0 + v1) + 1)/2) - (v2*504)) - (v3*64)) - (v1/2)));1;81;;;;;
 ((max(min((v0 + v1)/2, 1006), 7) + (v2*15)) == (max(min((v0 + v1)/2, 1006), 7) + (v2*15)));1;57;;;;;
 ((((min(((min(v3*125, v4 + -125) + v2)/4)*4, (((min(v3*125, v4 + -125) + v2)/8)*8) + 4)*-1)/4)*4) == (min(((min(v3*125, v4 + -125) + v2)/4)*4, (((min(v3*125, v4 + -125) + v2)/8)*8) + 4)*-1));0;1838;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), min((v2*6) + (max(min(v1/2, 999), 0) + (v3*32)), v4 + 26) + 5) == min(max(min(((v0 + v1) + -1)/2, 999), 0), min((v2*6) + (max(min(v1/2, 999), 0) + (v3*32)), v4 + 26) + 5));1;119;;;;;
 ((((v0*4) + v1) - max(min((((v2 + v3) + 5)/2)*2, 1995), -4)) == (((v0*4) + v1) - max(min((((v2 + v3) + 5)/2)*2, 1995), -4)));1;89;;;;;
 ((((v0 - v1) + 528)/520) != 0);0;465;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 18)/16) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 18)/16));1;234;;;;;
 (min((v0 + v1)*32, min(v2*8, 2034) + 64) == min((v0 + v1)*32, min(v2*8, 2034) + 64));1;51;;;;;
 (min((v0*4) + v1, v2 + 5) == min((v0*4) + v1, v2 + 5));1;42;;;;;
 ((min(max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*64), max(min(v1/8, 249), 0) + 63) - (max(min(v1/8, 249), 0) + (v3*4))) == (min(max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*64), max(min(v1/8, 249), 0) + 63) - (max(min(v1/8, 249), 0) + (v3*4))));1;117;;;;;
 (((v0 + 76)/32) != 0);0;372;;;;;
 (((((v0 + v1) + 62)/63) - ((v2*2) + v3)) == ((((v0 + v1) + 62)/63) - ((v2*2) + v3)));1;55;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*64, 188) + (v1*4)) + v2)) <= ((min(v0*64, 188) + (v1*4)) + v2))) && ((3 + ((min(v0*64, 188) + (v1*4)) + v2)) >= (((min(v0*64, 188) + (v1*4)) + 3) + v2))) && (((min(v3*4, 121) + v4) + v5) <= ((min(v3*4, 121) + v4) + v5))) && (((min(v3*4, 121) + v4) + v5) >= ((min(v3*4, 121) + v4) + v5))) && (v6 <= v6)) && (v6 >= v6));1;220;;;;;
 (0 == ((0 + (6 - (max(min(v0, 2), 1)*3))) - 1));0;60;;;;;
 (((((max(v0, 0) - v1)*8) + 65)/39) != 0);0;636;;;;;
 (((((v0 % ((v1 + 67)/64))*-64)/4)*4) == ((v0 % ((v1 + 67)/64))*-64));1;58;;;;;
 ((((v0*8) + 25)/9) != 0);0;435;;;;;
 (((((((v0 + v1) + 251)/63) - (v1/63)) + 10)/8) == ((((((v0 + v1) + 251)/63) - (v1/63)) + 10)/8));1;37;;;;;
 (((v0*63) + ((v1*251) + ((max(min((v2/63)*8, 285), 36)*2) + v3))) == ((v0*63) + ((v1*251) + ((max(min((v2/63)*8, 285), 36)*2) + v3))));1;70;;;;;
 ((max(min((v0/8) + ((v1*4) - (((v2 + v0) + 39)/8)), 0), -3)*8) == (10 - (v3*4)));0;137;;;;;
 (((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36)) + 44) == ((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36)) + 44));1;229;;;;;
 ((((((v0 + v1) + -1)/65) - (v2*16)) - (v1/65)) == (((((v0 + v1) + -1)/65) - (v2*16)) - (v1/65)));1;94;;;;;
 (min(max(max((289 - ((v0/125)*32))/274, (578 - ((v0/125)*64))/548), 0), ((v1*64) + 619)/548) == min(max(max((289 - ((v0/125)*32))/274, (578 - ((v0/125)*64))/548), 0), ((v1*64) + 619)/548));1;173;;;;;
 (((v0*2) + (((v1/32)*8) + (v2*36))) == ((v0*2) + (((v1/32)*8) + (v2*36))));1;42;;;;;
 (min(min(v0*33, 32) + ((v1*65) + (v2 + v3)), (v2 + v3) + 96) == min(min(v0*33, 32) + ((v1*65) + (v2 + v3)), (v2 + v3) + 96));1;80;;;;;
 ((((v0/63)*64) + -45) == (((((v0/63)*64) + -45) + ((v1*64) + 107)) - 1));0;115;;;;;
 (((v0*4) + (((v1/63)*32) + (v2*72))) == ((v0*4) + (((v1/63)*32) + (v2*72))));1;62;;;;;
 ((max(min((v0 + v1)/2, 999), 0) + (v2*16)) == (max(min((v0 + v1)/2, 999), 0) + (v2*16)));1;49;;;;;
 (min(max(min(v0, 499)*4, -3), max(min(v0*4, 1999), 0) + (v1*4)) == min(max(min(v0, 499)*4, -3), max(min(v0*4, 1999), 0) + (v1*4)));1;68;;;;;
 (min(max(min(v0/8, 249), 0) + (((v1 + 6)/4)*4), max(min(((v2 + v0) + -1)/8, 249), 0) + 3) == min(max(min(v0/8, 249), 0) + (((v1 + 6)/4)*4), max(min(((v2 + v0) + -1)/8, 249), 0) + 3));1;61;;;;;
 ((((18 - v0)/4) + (v1*2)) == (((18 - v0)/4) + (v1*2)));1;54;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + -1)/63) - (v2*2)) - (v1/63), 1)*2) + 2)) - 1));0;2016;;;;;
 (((((((v0 + v1) + -1)/2) - (v1/2))/336) + 1) == ((((((v0 + v1) + -1)/2) - (v1/2))/336) + 1));1;59;;;;;
 ((min(v0 - (v1*1012), ((v2/8)*8) + 1006) - ((((v2/8)*2) + v3)*4)) == (min(v0 - (v1*1012), ((v2/8)*8) + 1006) - ((((v2/8)*2) + v3)*4)));1;70;;;;;
 (((((((uint1)1 && ((max(v0 + 5, v1) + -3) <= (v0 + -3))) && ((v0 + 2) >= (v0 + 2))) && ((((max(-2*4, -5) + v2) + 0) + 2) <= (v2 + -3))) && ((((max(((16 - max(v3*4, 13))/4)*4, -5) + v2) + 3) + 2) >= (((((16 - max(v3*4, 13))/4)*4) + v2) + 5))) && (v4 <= v4)) && (v4 >= v4));0;327;;;;;
 (max((min((((v0 + v1) + 249)/125) - (v1/125), v2 + 1) + 3)/4, max(v3/4, -1) + 1) == max((min((((v0 + v1) + 249)/125) - (v1/125), v2 + 1) + 3)/4, max(v3/4, -1) + 1));1;109;;;;;
 ((min(((((v0 + v1) + 1)/2) - (v2*48)) - (v3*16), (v1/2) + 15) - ((v1/2) + (v4*4))) == (min(((((v0 + v1) + 1)/2) - (v2*48)) - (v3*16), (v1/2) + 15) - ((v1/2) + (v4*4))));1;103;;;;;
 (min(73 - ((v0*9) + (v1*25)), 24 - (v0*9)) == min(73 - ((v0*9) + (v1*25)), 24 - (v0*9)));1;57;;;;;
 (min(((v0 + v1) + 55)/8, (v1/8) + (v2*4)) == min(((v0 + v1) + 55)/8, (v1/8) + (v2*4)));1;86;;;;;
 (((((min(min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, (max(max(min(v1/2, 1006), 7)*8, 115) + (v2*252)) + 31), 7914) % 4) + -255)/4) + (v3*4)) == ((((min(min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, (max(max(min(v1/2, 1006), 7)*8, 115) + (v2*252)) + 31), 7914) % 4) + -255)/4) + (v3*4)));1;138;;;;;
 (0 == ((0 + (125 - max(v0*63, 62))) - 1));0;85;;;;;
 ((min(max(min((((v0 + v1) + 127)/32)*4, 246), -3) - v2, -36) + 40) == (min(max(min((((v0 + v1) + 127)/32)*4, 246), -3) - v2, -36) + 40));1;138;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + -1)/65) - (v2*2)) - (v1/65), 1)*2) + 2)) - 1));0;156;;;;;
 (0 >= ((0 + ((((v0 + v1) % 4) + 159)/8)) - 1));0;54;;;;;
 (((v0 - max(max(min(min(v1*32, 93) + (v2 + v3), 1999), ((max(min(min(v1*32, 93) + (v2 + v3), 1999), 0) + v4) + v0) + 44), 0)) + (max(min(min(v1*32, 93) + (v2 + v3), 1999), 0) + v4)) == ((v0 - max(max(min(min(v1*32, 93) + (v2 + v3), 1999), ((max(min(min(v1*32, 93) + (v2 + v3), 1999), 0) + v4) + v0) + 44), 0)) + (max(min(min(v1*32, 93) + (v2 + v3), 1999), 0) + v4)));1;1320;;;;;
 ((max(v0*252, 751) + (v1*4)) == (max(v0*252, 751) + (v1*4)));1;37;;;;;
 (min((v0*3) + (v1*2), (v2*2) + 67) == min((v0*3) + (v1*2), (v2*2) + 67));1;52;;;;;
 ((min((((v0 + v1) + -1)/4) - (v2*63), (v1/4) + 62) - ((v3*4) + ((v1/4) + (v4*36)))) == (min((((v0 + v1) + -1)/4) - (v2*63), (v1/4) + 62) - ((v3*4) + ((v1/4) + (v4*36)))));1;90;;;;;
 (((max(v0, 249) - (v1*16)) - min(v2, 0)) == ((max(v0, 249) - (v1*16)) - min(v2, 0)));1;114;;;;;
 ((((max((v0*-2) + (((v1 + min(v2*1000, v3 + -1000))/2) - -2), ((v1 + min(v2*1000, v3 + -1000)) + 3)/2)*-2)/2)*2) == (max((v0*-2) + (((v1 + min(v2*1000, v3 + -1000))/2) - -2), ((v1 + min(v2*1000, v3 + -1000)) + 3)/2)*-2));1;119;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*4)) == (max(min(v0/2, 1006), 7) + (v1*4)));1;62;;;;;
 (((((((uint1)1 && (((((((v0*2) + v1)*2) + v2)*8) + 1) <= ((((((v0*2) + v1)*2) + v2)*8) + 1))) && (((((((v0*2) + v1)*2) + v2)*8) + 16) >= ((((((v0*2) + v1)*2) + v2)*8) + 16))) && ((((0*4) + v3) + 0) <= v3)) && ((((((v4 + -1)/4)*4) + v3) + 3) >= (((((v4 + -1)/4)*4) + v3) + 3))) && (0 <= 0)) && (0 >= 0));1;247;;;;;
 (((v0/3) + 1) != 0);0;322;;;;;
 ((((-160 - ((min(v0*128, v1 + -128) + v2) % 8))/8) + (v3*7)) == (((-160 - ((min(v0*128, v1 + -128) + v2) % 8))/8) + (v3*7)));1;116;;;;;
 ((((((((v0 + v1) + -1)/250) - (v1/250))*8) + 32)/20) == (((((((v0 + v1) + -1)/250) - (v1/250))*8) + 32)/20));1;79;;;;;
 (min(v0*144, v1 + -144) == min(v0*144, v1 + -144));1;32;;;;;
 ((min(v0 - (v1*64), v2 + 53) - ((v3*4) + v2)) == (min(v0 - (v1*64), v2 + 53) - ((v3*4) + v2)));1;81;;;;;
 (max(v0*2, (max(min(v1, 1008), 9)*2) + 1) == max(v0*2, (max(min(v1, 1008), 9)*2) + 1));1;62;;;;;
 ((((v0 - v1) + 92)/87) != 0);0;448;;;;;
 ((min(min(v0, 1000) - (v1*250), 250) - (v2*63)) == (min(min(v0, 1000) - (v1*250), 250) - (v2*63)));1;50;;;;;
 (((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))*8) + 403)/180) == ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))*8) + 403)/180));1;254;;;;;
 ((((v0*-12) + ((((v1 + v2) + -1)/17) - (v3*60))) - (v2/17)) == (((v0*-12) + ((((v1 + v2) + -1)/17) - (v3*60))) - (v2/17)));1;80;;;;;
 (min((v0*4) + v1, max((((v2 + v3) + -1)/65)*8, 239) + 13) == min((v0*4) + v1, max((((v2 + v3) + -1)/65)*8, 239) + 13));1;66;;;;;
 (((((v0*30) + v1)*8) + -20) >= ((((((v0*30) + v1)*8) + -20) + ((9*8) + 170)) - 1));0;73;;;;;
 (((v0 + 43)/29) != 0);0;329;;;;;
 (((((((uint1)1 && ((((((v0*2) + v1)*4) + 0) + -100) <= (((((v0*2) + v1)*4) + 0) + -100))) && ((((((v0*2) + v1)*4) + 3) + -100) >= (((((v0*2) + v1)*4) + ((4 + 0) - 1)) + -100))) && ((v2*8) <= (v2*8))) && ((v2*8) >= (v2*8))) && (v3 <= v3)) && (v3 >= v3));1;158;;;;;
 (((v0*8) + ((v1*66) + v2)) == ((v0*8) + ((v1*66) + v2)));1;38;;;;;
 ((max(min(min((((v0 + v1) + -1)/63)*8, ((v2*17) + ((v1/63)*8)) + 7)*8, 1938), -61) - max(min((v2*136) + ((v1/63)*64), 2044), 45)) == (max(min(min((((v0 + v1) + -1)/63)*8, ((v2*17) + ((v1/63)*8)) + 7)*8, 1938), -61) - max(min((v2*136) + ((v1/63)*64), 2044), 45)));1;318;;;;;
 (((((v0 + v1) + 7)/2) - ((((v2*4) + v3)*12) + v4)) == ((((v0 + v1) + 7)/2) - ((((v2*4) + v3)*12) + v4)));1;61;;;;;
 ((min(v0*60, 230) + (min(v1*288, v2 + -288) + v3)) == (min(v0*60, 230) + (min(v1*288, v2 + -288) + v3)));1;50;;;;;
 (min(min(((v0*1000) + ((v1*253) + v2)) + 242, min((v0*1000) + 1000, v3) + v2), ((v0*1000) + ((v4*127) + ((v1*253) + v2))) + 116) == min(min(((v0*1000) + ((v1*253) + v2)) + 242, min((v0*1000) + 1000, v3) + v2), ((v0*1000) + ((v4*127) + ((v1*253) + v2))) + 116));1;95;;;;;
 (min(v0 - ((v1 + v2)/8), v3) == min(v0 - ((v1 + v2)/8), v3));1;51;;;;;
 (((v0 + 999)/1000) == ((v0 + 999)/1000));1;52;;;;;
 (min(999 - (((v0*63) + v1)*4), (max(v2*4, -3) - ((((v0*63) + v1)*4) + v3)) + 3) == min(999 - (((v0*63) + v1)*4), (max(v2*4, -3) - ((((v0*63) + v1)*4) + v3)) + 3));1;104;;;;;
 (((((min((v0*500) + 500, v1) + v2) + 39)/8) - ((((v0*500) + v2)/8) + (v3*4))) == ((((min((v0*500) + 500, v1) + v2) + 39)/8) - ((((v0*500) + v2)/8) + (v3*4))));1;90;;;;;
 (max((min((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8), v2)*2) + 1, v3) == max((min((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8), v2)*2) + 1, v3));1;111;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*64)) == (max(min(v0/2, 1006), 7) + (v1*64)));1;377;;;;;
 (((((((uint1)1 && (v0 <= (0 + v0))) && ((v0 + 250) >= (((251 + 0) - 1) + v0))) && (((v1*4) + v2) <= (((v1*4) + v2) + 0))) && ((((v1*4) + v2) + 3) >= (((v1*4) + v2) + 3))) && (((0*4) + 0) <= 0)) && (((11*4) + 3) >= 47));1;165;;;;;
 (((v0 + 41)/33) != 0);0;366;;;;;
 (min((v0*4) + ((v1*256) + v2), (v3 + v2) + 259) == min((v0*4) + ((v1*256) + v2), (v3 + v2) + 259));1;55;;;;;
 ((min(max(min((min(v0*128, 372)/2) + (((v1 + v2) + 129)/2), 999), 0) - max(min((min(v0*128, 372)/2) + ((v1 + v2)/2), 999), 0), (((v3*2) + v4)*8) + 7) - (v3*16)) == (min(max(min((min(v0*128, 372)/2) + (((v1 + v2) + 129)/2), 999), 0) - max(min((min(v0*128, 372)/2) + ((v1 + v2)/2), 999), 0), (((v3*2) + v4)*8) + 7) - (v3*16)));1;523;;;;;
 ((((max(min(((v0 + v1) + 499)/500, 3)*8, -7) - max(min((v1/500)*8, 36), 5)) + 34)/20) == (((max(min(((v0 + v1) + 499)/500, 3)*8, -7) - max(min((v1/500)*8, 36), 5)) + 34)/20));1;180;;;;;
 (((((((uint1)1 && (((((((((v0*2) + v1) + v2)*2) + 0)*4) + 0) + 1) <= (((((v0*2) + v1) + v2)*8) + 1))) && (((((((((v0*2) + v1) + v2)*2) + 1)*4) + 3) + 1) >= (((((v0*2) + v1) + v2)*8) + 8))) && (((v3*63) + 1) <= ((v3*63) + 1))) && (((v3*63) + 252) >= ((v3*63) + 252))) && (v4 <= v4)) && (v4 >= v4));1;253;;;;;
 ((v0 + -83) == (((v0 + -83) + 149) - 1));0;38;;;;;
 (min(((v0 + v1) + 1031)/4, ((min(((((min(v2*1000, v3 + -1000) + v0) % 4) + 1039)/16) + (v4*-17), 16)*4) + v5) + 1) == min(((v0 + v1) + 1031)/4, ((min(((((min(v2*1000, v3 + -1000) + v0) % 4) + 1039)/16) + (v4*-17), 16)*4) + v5) + 1));1;130;;;;;
 (min(((v0 + v1) + 7)/8, ((v1/8) + ((v2/4)*4)) + 3) == min(((v0 + v1) + 7)/8, ((v1/8) + ((v2/4)*4)) + 3));1;1104;;;;;
 (((v0*12) + (((v1*8) + v2)*8)) == ((v0*12) + (((v1*8) + v2)*8)));1;41;;;;;
 (((v0*33) + ((v1/4) + ((v2/2)*63))) == ((v0*33) + ((v1/4) + ((v2/2)*63))));1;56;;;;;
 (((((((uint1)1 && ((((0*4) + ((v0*4) + ((v1*64) + v2))) + 0) <= ((v0*4) + ((v1*64) + v2)))) && ((((0*4) + ((v0*4) + ((v1*64) + v2))) + 3) >= (((v0*4) + ((v1*64) + v2)) + 3))) && ((((v3*500) + ((v4*1000) + v5))/65) <= (((v3*500) + ((v4*1000) + v5))/65))) && (((((v3*500) + ((v4*1000) + v5)) + 564)/65) >= ((((v3*500) + ((v4*1000) + v5)) + 564)/65))) && (v6 <= v6)) && (v6 >= v6));1;211;;;;;
 (0 == ((0 + ((min(v0 - v1, 123)*2) + 6)) - 1));0;83;;;;;
 (min(((v0 + v1) + 31)/32, ((v1/32) + (v2*4)) + 3) == min(((v0 + v1) + 31)/32, ((v1/32) + (v2*4)) + 3));1;82;;;;;
 ((min(max(v0, -498)*2, 7) + -8) >= (((min(max(v0, -498)*2, 7) + -8) + (12 - min(max(v0, -498)*2, 7))) - 1));0;95;;;;;
 ((v0 - ((v1 + v2)/32)) == (v0 - ((v1 + v2)/32)));1;62;;;;;
 (min(((v0*8) + v1) + 7, v2) == min(((v0*8) + v1) + 7, v2));1;48;;;;;
 (0 == ((0 + (497 - max((v0 % 8)*63, 434))) - 1));0;58;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, (max(max(min(v1/2, 1006), 7)*8, 115) + (v2*500)) + 299) == min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, (max(max(min(v1/2, 1006), 7)*8, 115) + (v2*500)) + 299));1;106;;;;;
 (((v0*12) + ((v1*36) + ((v2*67) + v3))) == ((v0*12) + ((v1*36) + ((v2*67) + v3))));1;66;;;;;
 ((((((v0*8) + v1)*16) + v2) - max(min(((v3 + v4) + 1)/2, 999), 0)) == (((((v0*8) + v1)*16) + v2) - max(min(((v3 + v4) + 1)/2, 999), 0)));1;80;;;;;
 (((min(v0 - v1, 190) + 133)/4) == ((min(v0 - v1, 190) + 133)/4));1;86;;;;;
 ((((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*63)) - (v3*33)) - max(min(v1/2, 999), 0)) == (((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*63)) - (v3*33)) - max(min(v1/2, 999), 0)));1;91;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + -3) <= ((((v0*4) + v1) + 0) + -3))) && (((((v0*4) + v1) + 3) + -3) >= ((((v0*4) + v1) + ((4 + 0) - 1)) + -3))) && (((((v2*125) + v3) + v4) + 124) <= ((((v2*125) + v3) + 0) + v4))) && (((((v2*125) + v3) + v4) + 124) >= ((((v2*125) + v3) + ((125 + 0) - 1)) + v4))) && (v5 <= v5)) && (v5 >= v5));0;225;;;;;
 ((min(v0 - (v1*88), -575) - (v2*32)) == (min(v0 - (v1*88), -575) - (v2*32)));1;42;;;;;
 (min((v0*12) + ((v1*36) + v2), (min(v1*36, 101) + v2) + 26) == min((v0*12) + ((v1*36) + v2), (min(v1*36, 101) + v2) + 26));1;63;;;;;
 ((max(min((v0/63)*8, 310), 61) + (v1*125)) == (max(min((v0/63)*8, 310), 61) + (v1*125)));1;59;;;;;
 (((v0 + v1) + -12) == ((((v0 + v1) + -12) + 141) - 1));0;56;;;;;
 (min(min(v0*8, ((v1*55) + ((v2/63)*8)) + 36), (min(v0*8, ((v1*55) + ((v2/63)*8)) + 9) + (v3*14)) + 14) == min(min(v0*8, ((v1*55) + ((v2/63)*8)) + 36), (min(v0*8, ((v1*55) + ((v2/63)*8)) + 9) + (v3*14)) + 14));1;118;;;;;
 ((max(min((v0*32) + v1, 1245), 246) + (v2*12)) == (max(min((v0*32) + v1, 1245), 246) + (v2*12)));1;43;;;;;
 (min(((v0 + v1) + -1)/4, v2 + 124) == min(((v0 + v1) + -1)/4, v2 + 124));1;1013;;;;;
 (((v0/64) + (((v0 % 64) + 63)/64)) == ((v0/64) + (((v0 % 64) + 63)/64)));1;38;;;;;
 (min((v0*64) + v1, v2 + 5) == min((v0*64) + v1, v2 + 5));1;41;;;;;
 (min((v0*32) + v1, max(max(min((v2*252) + v3, min(v4 + v3, 2000) + -252), -251) + 11, min(v2*252, v4 + -252) + v3) + 220) == min((v0*32) + v1, max(max(min((v2*252) + v3, min(v4 + v3, 2000) + -252), -251) + 11, min(v2*252, v4 + -252) + v3) + 220));1;115;;;;;
 (((((max(min(((v2/((v3 + 45)/32))*4072) + (max(min(v1/2, 1006), 7)*8), 8114), 115)/4)*-1)/4)*4) == ((max(min(((v2/((v3 + 45)/32))*4072) + (max(min(v1/2, 1006), 7)*8), 8114), 115)/4)*-1));0;1867;;;;;
 (max(min(min(min(((((v3 + v4) + -1)/16) - (v4/16)) + -1, 124 - (v4/16)), min(((v1 + v2) + -1)/16, 124) - (v4/16)), (0 + (v5 + 1)) - 1) + 1, min(max(max(0 - (v4/16), max((v2 + 15)/16, 0) - (v4/16)), 0), (v5 + 1) + 0)) <= min(max(max(0 - (v4/16), max((v2 + 15)/16, 0) - (v4/16)), 0), (v5 + 1) + 0));0;2237;;;;;
 ((max(min((v0*48) + v1, 249), 0) + (v2*16)) == (max(min((v0*48) + v1, 249), 0) + (v2*16)));1;60;;;;;
 (max((min(((v0 + v1) + 167)/8, v2 + 6)*8) + v3, (v2*8) + -5) == max((min(((v0 + v1) + 167)/8, v2 + 6)*8) + v3, (v2*8) + -5));1;72;;;;;
 ((max(min(v0, 249), 0) - (v1*4)) == (max(min(v0, 249), 0) - (v1*4)));1;47;;;;;
 ((((v0*8) + 83)/76) != 0);0;453;;;;;
 (((((((v0 + v1) + 7)/8) - (v1/8))/44) + 1) == ((((((v0 + v1) + 7)/8) - (v1/8))/44) + 1));1;66;;;;;
 ((((v0 - v1)/4) + 11) != 0);0;395;;;;;
 (min(((v0*76) + v1) + 61, v2) == min(((v0*76) + v1) + 61, v2));1;44;;;;;
 (min((((v0/4)*4) + v1) + 12, v2) == min((((v0/4)*4) + v1) + 12, v2));1;51;;;;;
 ((((((v0*2) + v1) + v2)*8) + -13) >= (((((((v0*2) + v1) + v2)*8) + -13) + 27) - 1));0;87;;;;;
 ((max(max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32)*8, (v3*8) + 259) + (v4*4)) == (max(max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32)*8, (v3*8) + 259) + (v4*4)));1;146;;;;;
 ((((v0*250)/2)*2) == (v0*250));1;32;;;;;
 (min((((min(v0/8, 0)/16)*32) + v1)*4, (v2*8) + 309) == min((((min(v0/8, 0)/16)*32) + v1)*4, (v2*8) + 309));1;64;;;;;
 (max(((v0 - v1) + 32)/516, 0) >= ((max(((v0 - v1) + 32)/516, 0) + max((((v0 - v1) + 547)/516) - max(((v0 - v1) + 32)/516, 0), 0)) - 1));0;979;;;;;
 (min(min((v0*-64) + v1, 1) + ((((v2/8)*2) + (min((min((v0*-64) + v1, 61) + 2)/4, ((((min((((v2/8) + (v0*8))*8) + 61, v3) + 6)/4) - (v0*16)) - ((v2/8)*2)) + -1) + (v0*16)))*4), v4) == min(min((v0*-64) + v1, 1) + ((((v2/8)*2) + (min((min((v0*-64) + v1, 61) + 2)/4, ((((min((((v2/8) + (v0*8))*8) + 61, v3) + 6)/4) - (v0*16)) - ((v2/8)*2)) + -1) + (v0*16)))*4), v4));1;194;;;;;
 ((-1 - max(v0, 1)) == (((-1 - max(v0, 1)) + (max(v0, 1) + 3)) - 1));0;80;;;;;
 (min(((v0 + v1) + -1)/17, v2 + 15) == min(((v0 + v1) + -1)/17, v2 + 15));1;46;;;;;
 ((((max(((v0 + v1) + 7)/8, 249) - min(v1/8, 0)) + 93)/88) == (((max(((v0 + v1) + 7)/8, 249) - min(v1/8, 0)) + 93)/88));1;99;;;;;
 (min(min((((v0 + v1) - (((v2*4) + v3)*2)) + 10)/4, ((min(((min(v4 - v3, (v2*4) + -8) + 15)/4)*4, min(v2*4, (v4 - v3) + 8) + 4)/2) + (v2*-2)) + -1), ((v5 - v3) + -1)/2) == min(min((((v0 + v1) - (((v2*4) + v3)*2)) + 10)/4, ((min(((min(v4 - v3, (v2*4) + -8) + 15)/4)*4, min(v2*4, (v4 - v3) + 8) + 4)/2) + (v2*-2)) + -1), ((v5 - v3) + -1)/2));1;204;;;;;
 (((v0*4) + ((v1/16) + (v2*32))) == ((v0*4) + ((v1/16) + (v2*32))));1;47;;;;;
 ((((v0 + v1)/8) + v2) == (((v0 + v1)/8) + v2));1;51;;;;;
 ((((v0*504) + v1) - max((((v2 + v3) + 7)/8)*8, 1994)) == (((v0*504) + v1) - max((((v2 + v3) + 7)/8)*8, 1994)));1;73;;;;;
 (((v0 + 169)/128) != 0);0;354;;;;;
 ((((((((v0 + v1) + -1)/4) - (v1/4))*8) + 269)/251) == (((((((v0 + v1) + -1)/4) - (v1/4))*8) + 269)/251));1;90;;;;;
 ((max(min(v0, 5), 2) + -7) == (((max(min(v0, 5), 2) + -7) + (12 - max(min(v0, 5), 2))) - 1));0;106;;;;;
 ((max(min(v0*16, 1997), -2) + ((((max(min(v0*16, 1982), -17) - max(min(v0*16, 1997), -2)) + 15)/8)*8)) == (max(min(v0*16, 1997), -2) + ((((max(min(v0*16, 1982), -17) - max(min(v0*16, 1997), -2)) + 15)/8)*8)));1;187;;;;;
 (((((((v0 + v1) + 15)/8) - (v1/8)) + 5)/2) == ((((((v0 + v1) + 15)/8) - (v1/8)) + 5)/2));1;70;;;;;
 (((((((uint1)1 && ((0 + (v0 + v1)) <= (0 + (v0 + v1)))) && ((3 + (v0 + v1)) >= (((4 + 0) - 1) + (v0 + v1)))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3));1;103;;;;;
 (((((v0 % (((v1*256) + 739)/208))*208)/16)*16) == ((v0 % (((v1*256) + 739)/208))*208));1;50;;;;;
 (max(((v0 - v1) + 32)/1028, 0) >= ((max(((v0 - v1) + 32)/1028, 0) + max((((v0 - v1) + 1059)/1028) - max(((v0 - v1) + 32)/1028, 0), 0)) - 1));0;963;;;;;
 (max(min(min((((v1 + v2) - max(min((v4/8)*8, 2007), 8)) + -117)/125, ((min(max(min((((v3 + v4) + 31)/8)*8, 1991), -8), (v1 + v2) + 115) - max(min((v4/8)*8, 2007), 8)) + -108)/125), (0 + ((v5 + 141)/125)) - 1) + 1, min(max(((v2 - max(min((v4/8)*8, 2007), 8)) + 132)/125, 0), ((v5 + 141)/125) + 0)) <= min(max(((v2 - max(min((v4/8)*8, 2007), 8)) + 132)/125, 0), ((v5 + 141)/125) + 0));0;3364;;;;;
 ((((v0*8) + 550)/501) != 0);0;433;;;;;
 (((v0 + 78)/64) != 0);0;343;;;;;
 ((v0 + 741) == (((v0 + 741) + (263 - max(v1*129, 128))) - 1));0;89;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*500)) + 499) == min(max(min(((v0 + v1) + -1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*500)) + 499));1;89;;;;;
 (((((v0 + v1) + 63)/32) - (v1/32)) == ((((v0 + v1) + 63)/32) - (v1/32)));1;54;;;;;
 (((max(min((v0*-8) + v1, 4), -4)/4)*4) == max(min((v0*-8) + v1, 4), -4));0;604;;;;;
 ((((v0 - v1) + 261)/255) == (((v0 - v1) + 261)/255));1;52;;;;;
 ((((v0*-88)/4)*4) == (v0*-88));1;26;;;;;
 (((((((v0 + v1) + 3)/4) - (v1/4))/126) + 1) == ((((((v0 + v1) + 3)/4) - (v1/4))/126) + 1));1;38;;;;;
 (((((((uint1)1 && ((0 + (v0 + -1)) <= (v0 + -1))) && ((3 + (v0 + 123)) >= (v0 + 126))) && (0 <= 0)) && (62 >= 62)) && ((((min(v1, 3)*2) + v2)*6) <= (((min(v1, 3)*2) + v2)*6))) && (((((min(v1, 3)*2) + v2)*6) + 5) >= ((((min(v1, 3)*2) + v2)*6) + 5)));1;190;;;;;
 (min((((v0 + v1) + -1)/32)*4, (v2*4) + 27) == min((((v0 + v1) + -1)/32)*4, (v2*4) + 27));1;50;;;;;
 (max(min((v1 + v2) + -1, (((max(v3*250, -2) + v4) + 2) + (min(v3*250, -2) + 252)) - 1) + 1, min(max(v2, (max(v3*250, -2) + v4) + 2), (min(v3*250, -2) + 252) + ((max(v3*250, -2) + v4) + 2))) <= min(max(v2, (max(v3*250, -2) + v4) + 2), (min(v3*250, -2) + 252) + ((max(v3*250, -2) + v4) + 2)));0;2327;;;;;
 (min(v0 - ((v1*3) + ((v2*16) + v3)), 15 - (v1*3)) == min(v0 - ((v1*3) + ((v2*16) + v3)), 15 - (v1*3)));1;70;;;;;
 ((((max(min(((v0 + v1) + -1)/2, 996), 0) - max(min(v1/2, 999), 2)) + 131)/126) == (((max(min(((v0 + v1) + -1)/2, 996), 0) - max(min(v1/2, 999), 2)) + 131)/126));1;281;;;;;
 ((min(((v0 + v1) + -1009)/8, ((v1/8) + (v2*128)) + -5) + (v3*64)) == (min(((v0 + v1) + -1009)/8, ((v1/8) + (v2*128)) + -5) + (v3*64)));1;97;;;;;
 (((v0 + 94)/88) != 0);0;361;;;;;
 (min(v0*8, ((v1*138) + (((v2*34) + v3)*8)) + 31) == min(v0*8, ((v1*138) + (((v2*34) + v3)*8)) + 31));1;51;;;;;
 (min(((v0*32) + ((v1*63) + v2)) + 21, v3 + v2) == min(((v0*32) + ((v1*63) + v2)) + 21, v3 + v2));1;1521;;;;;
 (((v0*4) + ((v1*64) + (min(v2*128, v3 + -128) + v4))) == ((v0*4) + ((v1*64) + (min(v2*128, v3 + -128) + v4))));1;55;;;;;
 (((max(min((v1*-24) + (v3 + (v2*-12)), -488), -500)/4)*4) == max(min((v1*-24) + (v3 + (v2*-12)), -488), -500));0;996;;;;;
 (min(max((65 - (v0/4))/64, 0), (v1/64) + 1) == min(max((65 - (v0/4))/64, 0), (v1/64) + 1));1;76;;;;;
 ((((44 - v0)/4) + (v1*2)) == (((44 - v0)/4) + (v1*2)));1;65;;;;;
 (min(v0*8, ((v1*1085) + ((v2/8)*8)) + 916) == min(v0*8, ((v1*1085) + ((v2/8)*8)) + 916));1;75;;;;;
 (min((((v0 + v1) + 191)/32) - (v1/32), v2 + 25) == min((((v0 + v1) + 191)/32) - (v1/32), v2 + 25));1;58;;;;;
 (max(min(min(min((v3 - ((v4*2) + v5)) + 1, (((v1 + v2)/4) - ((v4*2) + v5)) + 10), ((min(v3*4, (v1 + v2) + 39)/4) - ((v4*2) + v5)) + 1), (0 + (min(v6 - v5, -12) + 14)) - 1) + 1, min(max((((v2 + 43)/4) - ((v4*2) + v5)) + 1, 0), (min(v6 - v5, -12) + 14) + 0)) <= min(max((((v2 + 43)/4) - ((v4*2) + v5)) + 1, 0), (min(v6 - v5, -12) + 14) + 0));0;3205;;;;;
 ((((v0*336)/8)*8) == (v0*336));1;54;;;;;
 (min((((v0 + v1) + 62)/63)*8, ((v2*18) + ((v1/63)*8)) + 9) == min((((v0 + v1) + 62)/63)*8, ((v2*18) + ((v1/63)*8)) + 9));1;68;;;;;
 ((min(max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2), v2) + 3) == (min(max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2), v2) + 3));1;334;;;;;
 (((((min(v0, 242) - max(v1, 12))*8) + 817)/665) == ((((min(v0, 242) - max(v1, 12))*8) + 817)/665));1;109;;;;;
 (min((v0*-4) + v1, v2) == min((v0*-4) + v1, v2));1;46;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 521)/508) == (((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 521)/508));1;103;;;;;
 ((2 - ((v0 % 63)*32)) > (2001 - ((v0 % 63)*32)));0;48;;;;;
 (min(max(min(((v0 + v1) + 31)/8, 249), 0), v2) == min(max(min(((v0 + v1) + 31)/8, 249), 0), v2));1;60;;;;;
 (((((min(((v0*19) + v1)*4, (v2*4) + 33) + 77)/2) + (v0*-38)) - (v1*2)) == ((((min(((v0*19) + v1)*4, (v2*4) + 33) + 77)/2) + (v0*-38)) - (v1*2)));1;87;;;;;
 ((max(min(v0, 249), 0) - ((v1*4) + v2)) == (max(min(v0, 249), 0) - ((v1*4) + v2)));1;66;;;;;
 (min(((v0 + v1) + 124)/32, v2 - max(((-93 - ((min(v3*125, v4 + -125) + v0) % 32))/32) + (v5*4), -3)) == min(((v0 + v1) + 124)/32, v2 - max(((-93 - ((min(v3*125, v4 + -125) + v0) % 32))/32) + (v5*4), -3)));1;124;;;;;
 (((v0*-12) + (max(min(min(v1, 871) + 101, v2), -27) - max(min(min(max(min(v3*8, 1017), 995), v1 + 119) + -18, v2), 0))) == ((v0*-12) + (max(min(min(v1, 871) + 101, v2), -27) - max(min(min(max(min(v3*8, 1017), 995), v1 + 119) + -18, v2), 0))));1;528;;;;;
 (min((((v0 + v1) + 3)/4) - (v1/4), v2 + 63) == min((((v0 + v1) + 3)/4) - (v1/4), v2 + 63));1;65;;;;;
 (max(min(min(min(min((((v7 + v4) - max(min(v5, 2003), 4)) + -248)/252, (((v7 + v4) - max(min(v5, 2003), 4)) + -248)/252), ((min(max(min(v6 + v5, 1995), -4), (v7 + v4) + 246) - max(min(v5, 2003), 4)) + -243)/252), ((min(max(min(v6 + v5, 1995), -4), (v7 + v4) + 246) - max(min(v5, 2003), 4)) + -243)/252), (0 + ((v3 + 260)/252)) - 1) + 1, min(max(((v4 - max(min(v5, 2003), 4)) + 255)/252, 0), ((v3 + 260)/252) + 0)) <= min(max(((v4 - max(min(v5, 2003), 4)) + 255)/252, 0), ((v3 + 260)/252) + 0));0;3146;;;;;
 ((max(min(v0, 998) + -14, -15) - (max(min((v1*16) + v2, min(v0, 1013) + -14), 0) + (v3*4))) == (max(min(v0, 998) + -14, -15) - (max(min((v1*16) + v2, min(v0, 1013) + -14), 0) + (v3*4))));1;149;;;;;
 ((((((v0*32) + v1)*2) + (max(min(v2/2, 999), 0) + (v3*126))) - min(max(min(((v4 + v2) + -1)/2, 999), 0) - (v5*500), max(min(v2/2, 999), 0) + 499)) == (((((v0*32) + v1)*2) + (max(min(v2/2, 999), 0) + (v3*126))) - min(max(min(((v4 + v2) + -1)/2, 999), 0) - (v5*500), max(min(v2/2, 999), 0) + 499)));1;169;;;;;
 (min(((v0 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1) == min(((v0 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1));1;78;;;;;
 (((v0/8) + (v1*12)) == ((v0/8) + (v1*12)));1;85;;;;;
 (((69 - (((v0*24) - v1) + v2))/4) == ((69 - (((v0*24) - v1) + v2))/4));1;83;;;;;
 ((max(((v0 + v1) + 23)/8, 249) - ((((v2*3) + v3)*4) + v4)) == (max(((v0 + v1) + 23)/8, 249) - ((((v2*3) + v3)*4) + v4)));1;72;;;;;
 (min((((v0 + v1)/8) + v2)*8, v3 + 60) == min((((v0 + v1)/8) + v2)*8, v3 + 60));1;49;;;;;
 (min((v0*252) + v1, min(v2 + v1, 1997) + -252) == min((v0*252) + v1, min(v2 + v1, 1997) + -252));1;44;;;;;
 ((max(min(v0, 249), 0) - ((v1*2) + v2)) == (max(min(v0, 249), 0) - ((v1*2) + v2)));1;49;;;;;
 ((min(max(((v0 + v1) + 7)/8, 249), (min(v1/8, 0) + (v2*128)) + 122) + (v3*4)) == (min(max(((v0 + v1) + 7)/8, 249), (min(v1/8, 0) + (v2*128)) + 122) + (v3*4)));1;83;;;;;
 (0 >= ((0 + ((((((v0 + v1) % 8) + 124)/8)*2) + 3)) - 1));0;53;;;;;
 ((min((v0 + v1) - (v2*48), v1 + 48) - ((v3*25) + v1)) == (min((v0 + v1) - (v2*48), v1 + 48) - ((v3*25) + v1)));1;58;;;;;
 ((((v0/2000)*256) + (v1*112)) == (((v0/2000)*256) + (v1*112)));1;50;;;;;
 (((((((uint1)1 && ((-3 + v0) <= (-3 + v0))) && ((((4 + -3) - 1) + v0) >= (((4 + -3) - 1) + v0))) && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && (((v1*4) + 0) <= ((v1*4) + 0))) && (((v1*4) + 3) >= ((v1*4) + ((4 + 0) - 1))));1;148;;;;;
 (min((((v0 + v1) + 13)/2) - (v1/2), v2 + 1) == min((((v0 + v1) + 13)/2) - (v1/2), v2 + 1));1;53;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))/3) + 10) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))/3) + 10));1;344;;;;;
 (min((v0*9) + v1, (v2*4) + 8) == min((v0*9) + v1, (v2*4) + 8));1;76;;;;;
 (((((((uint1)1 && ((((v0*8) + v1) + 0) <= ((v0*8) + v1))) && ((((v0*8) + v1) + 7) >= (((v0*8) + v1) + 7))) && (((((v2*2) + ((v3*8) + v4))*4) + 1) <= ((((v2*2) + ((v3*8) + v4))*4) + 1))) && (((((v2*2) + ((v3*8) + v4))*4) + 8) >= ((((v2*2) + ((v3*8) + v4))*4) + 8))) && (0 <= 0)) && (0 >= 0));1;180;;;;;
 (max(-975 - ((v0 - v1)*16), ((v0 - v1)*16) + 597) >= 0);0;729;;;;;
 ((((v0 - v1) + 88)/76) != 0);0;479;;;;;
 ((max(v0*127, -6) + ((v1*504) + (v2 + v3))) == (max(v0*127, -6) + ((v1*504) + (v2 + v3))));1;54;;;;;
 (((v0 + 5)/64) >= ((((v0 + 5)/64) + ((((v0 + 5) % 64) + 63)/64)) - 1));1;78;;;;;
 (min(((v0*2) + v1)*8, (v2*8) + 92) == min(((v0*2) + v1)*8, (v2*8) + 92));1;51;;;;;
 (min((v0*8) + 245, v1) == min((v0*8) + 245, v1));1;51;;;;;
 (((v0*128) - max(min(v1, 1009), 10)) == ((v0*128) - max(min(v1, 1009), 10)));1;38;;;;;
 (((v0*252) + (max(min((v1/63)*8, 285), 36)*8)) == ((v0*252) + (max(min((v1/63)*8, 285), 36)*8)));1;69;;;;;
 (min(min(v0*24, 44) + 455, (v1*-500) + v2) == min(min(v0*24, 44) + 455, (v1*-500) + v2));1;53;;;;;
 ((2287 - (((v0*4) + v1)*8)) == (2287 - (((v0*4) + v1)*8)));1;55;;;;;
 ((v0 - (((v1 + v2) + 39)/8)) == (v0 - (((v1 + v2) + 39)/8)));1;593;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[(((v0*v1)*3) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[(((v0*v1)*3) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[(((v0*v1)*3) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[(((v0*v1)*3) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[(((v0*v1)*3) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[(((v0*v1)*3) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[(((v0*v1)*3) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[(((v0*v1)*3) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))));1;183;;;;;
 ((min(v0, -500) + 1004) == (min(v0, -500) + 1004));1;35;;;;;
 (max(((v0 - ((v1*270) + v2)) + 59)/2, (((v0 - v2)/2) + (v1*-135)) + 30) == max(((v0 - ((v1*270) + v2)) + 59)/2, (((v0 - v2)/2) + (v1*-135)) + 30));1;83;;;;;
 (((v0/63) + (((v1 + 18)/4)*4)) == ((v0/63) + (((v1 + 18)/4)*4)));1;344;;;;;
 (min(((v0*8) + 91)/68, max(min(((v0*8) + 23)/68, ((v0*2) + 5)/17), ((v0*8) + 24)/68) + 1) == min(((v0*8) + 91)/68, max(min(((v0*8) + 23)/68, ((v0*2) + 5)/17), ((v0*8) + 24)/68) + 1));1;140;;;;;
 (min(max(min(((v0 + v1) + 127)/8, 249), 0)*8, (max(min((v0 + v1)/8, 249), 0)*8) + -5) == min(max(min(((v0 + v1) + 127)/8, 249), 0)*8, (max(min((v0 + v1)/8, 249), 0)*8) + -5));1;120;;;;;
 (((v0 + v1) + 10) < (((v0 + 1) + v1) + -2));0;47;;;;;
 (((min(((v3 % ((v4 + 64)/63))*504) + ((max(min(v2/8, 249), 0)*8) + 489), max(min(((v1 + v2) + 7)/8, 249), 0)*8)/4)*4) == min(((v3 % ((v4 + 64)/63))*504) + ((max(min(v2/8, 249), 0)*8) + 489), max(min(((v1 + v2) + 7)/8, 249), 0)*8));0;1807;;;;;
 (min(max(min(min(v0*42, 83) + (v1 + v2), 1958), -41) + 32, v3) == min(max(min(min(v0*42, 83) + (v1 + v2), 1958), -41) + 32, v3));1;89;;;;;
 ((((((v0 + v1) + -1)/2) - (v2*250)) - (v1/2)) == (((((v0 + v1) + -1)/2) - (v2*250)) - (v1/2)));1;45;;;;;
 (max(min((((v0*8) - v1) + 345)/116, 0 - min(v1/116, 0)), ((min(v0*8, 1770) - v1) + 230)/116) == max(min((((v0*8) - v1) + 345)/116, 0 - min(v1/116, 0)), ((min(v0*8, 1770) - v1) + 230)/116));1;117;;;;;
 (((((((uint1)1 && ((((0*4) + ((((v0*16) + ((v1*8) + v2))*4) + ((v3*128) + v4))) + 0) <= ((((v0*16) + ((v1*8) + v2))*4) + ((v3*128) + v4)))) && ((((0*4) + ((((v0*16) + ((v1*8) + v2))*4) + ((v3*128) + v4))) + 3) >= (((((v0*16) + ((v1*8) + v2))*4) + ((v3*128) + v4)) + 3))) && (v5 <= (0 + v5))) && ((v5 + 2) >= (((3 + 0) - 1) + v5))) && (v6 <= v6)) && (v6 >= v6));1;202;;;;;
 (min((v0*4) + ((v1*12) + v2), v3 + 15) == min((v0*4) + ((v1*12) + v2), v3 + 15));1;63;;;;;
 (min(((((v0 + v1) + 15)/16) - (v1/16)) + -3, v2) == min(((((v0 + v1) + 15)/16) - (v1/16)) + -3, v2));1;48;;;;;
 ((((((v0 + v1) + 1999)/2000)*256) - ((v2*16) + v3)) == (((((v0 + v1) + 1999)/2000)*256) - ((v2*16) + v3)));1;72;;;;;
 (min(((v0 + v1) + 1003)/4, v2 + 63) == min(((v0 + v1) + 1003)/4, v2 + 63));1;64;;;;;
 (((v0*33) + (v1*2)) == ((v0*33) + (v1*2)));1;35;;;;;
 (min(((min(v0, 31)*2) + v1)*4, (min(v0, 29)*8) + 20) == min(((min(v0, 31)*2) + v1)*4, (min(v0, 29)*8) + 20));1;52;;;;;
 (((v0/8) + (v1*4)) == ((v0/8) + (v1*4)));1;689;;;;;
 (max(min(max(((max(v0, 0) - (v1*8)) + 119)/68, 0), ((min(v2, 10)*8) + 122)/68), (min(min(min((max(min(v3/8, 254), 5) - v1)*8, ((v4 - v1)*8) + -13), min((v5 + v0) - (v1*8), min((v4 - v1)*8, ((v5 + v0) - (v1*8)) + 64) + 7) + -20), (min(v2, 10)*8) + 54)/68) + 1) == max(min(max(((max(v0, 0) - (v1*8)) + 119)/68, 0), ((min(v2, 10)*8) + 122)/68), (min(min(min((max(min(v3/8, 254), 5) - v1)*8, ((v4 - v1)*8) + -13), min((v5 + v0) - (v1*8), min((v4 - v1)*8, ((v5 + v0) - (v1*8)) + 64) + 7) + -20), (min(v2, 10)*8) + 54)/68) + 1));1;283;;;;;
 (min(((v0 + v1) + 505)/2, (((v0 + v1)/2) + (v2*86)) + 80) == min(((v0 + v1) + 505)/2, (((v0 + v1)/2) + (v2*86)) + 80));1;78;;;;;
 (min(min(v0*8, 7914) + 79, v1) == min(min(v0*8, 7914) + 79, v1));1;45;;;;;
 (((max(max(min(v0/2, 1006), 7)*8, 115)/4) + (v1*128)) == ((max(max(min(v0/2, 1006), 7)*8, 115)/4) + (v1*128)));1;78;;;;;
 (max(min(min(min(((v5 - v4)*2) + 13, (((v2 + v3) + 43)/4) - (v4*2)), ((min((v5*8) + 7, v2 + v3) + 46)/4) - (v4*2)), (0 + ((min(((((v6 + v7) + 39)/8) - (v8*68)) - (v7/8), 62)*2) + 15)) - 1) + 1, min(max((((v3 + 46)/4) - (v4*2)) + 1, 0), ((min(((((v6 + v7) + 39)/8) - (v8*68)) - (v7/8), 62)*2) + 15) + 0)) <= min(max((((v3 + 46)/4) - (v4*2)) + 1, 0), ((min(((((v6 + v7) + 39)/8) - (v8*68)) - (v7/8), 62)*2) + 15) + 0));0;3923;;;;;
 (((max(v0*4, -2) + (v1*2)) + -1003) == ((((max(v0*4, -2) + (v1*2)) + -1003) + (min(v0*4, -2) + 6)) - 1));0;122;;;;;
 (max(v0 + v1, (v2*63) + v3) == max(v0 + v1, (v2*63) + v3));1;52;;;;;
 (min(max(min(v0*8, 2003), 4) + (v1*4), min(v2*8, 1980) + 20) == min(max(min(v0*8, 2003), 4) + (v1*4), min(v2*8, 1980) + 20));1;69;;;;;
 ((max((v0*24) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 476) + (v4*4)) == (max((v0*24) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 476) + (v4*4)));1;1114;;;;;
 (min(max(min(min(((v0 + v1) + 127)/32, v2 + 29)*4, 246), -3) + 84, v3) == min(max(min(min(((v0 + v1) + 127)/32, v2 + 29)*4, 246), -3) + 84, v3));1;97;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 0)) + 31)/32) >= 0);1;42;;;;;
 (((((((uint1)1 && ((((((v0*16) + v1) + -5) + 0) + -4) <= (((((v0*16) + 0) + v1) + -5) + -4))) && ((((((v0*16) + v1) + ((7 + -5) - 1)) + 15) + -4) >= (((((v0*16) + ((16 + 0) - 1)) + v1) + ((7 + -5) - 1)) + -4))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (0 <= 0)) && (0 >= 0));1;199;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((v2 + v3) + 1) <= (v2 + v3))) && (((v2 + v3) + 1) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4));0;167;;;;;
 ((max(min(v0, 1999), 0) + (v1*12)) == (max(min(v0, 1999), 0) + (v1*12)));1;47;;;;;
 (min(((v0 + v1) + -1)/2, (min((min((v2*64) + 63, v3)/4)*4, (v2*64) + 60) + (v1/2)) + 3) == min(((v0 + v1) + -1)/2, (min((min((v2*64) + 63, v3)/4)*4, (v2*64) + 60) + (v1/2)) + 3));1;110;;;;;
 ((((v0*8) + v1) + 7) < ((v0*8) + (v1 + 1)));0;48;;;;;
 (((v0*63) + (max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) - max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127))) == ((v0*63) + (max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) - max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127))));1;1060;;;;;
 (((v0*2) + (((v1 + v2)/2) + (v3*38))) == ((v0*2) + (((v1 + v2)/2) + (v3*38))));1;49;;;;;
 (max(min(max(((v0 - (v1*8)) + 51)/32, 0), ((max((((v2 + v3) + -1)/65)*8, 239) - v1)/4) + 6), min(min((((v4 + v0) - (v1*8)) + -14)/32, ((max((((v2 + v3) + -1)/65)*8, 239) - v1) + 17)/4), ((max((((v2 + v3) + -1)/65)*8, 239) - v1)/4) + 5) + 1) == max(min(max(((v0 - (v1*8)) + 51)/32, 0), ((max((((v2 + v3) + -1)/65)*8, 239) - v1)/4) + 6), min(min((((v4 + v0) - (v1*8)) + -14)/32, ((max((((v2 + v3) + -1)/65)*8, 239) - v1) + 17)/4), ((max((((v2 + v3) + -1)/65)*8, 239) - v1)/4) + 5) + 1));1;239;;;;;
 ((((153 - v0)/4) + (v1*2)) == (((153 - v0)/4) + (v1*2)));1;44;;;;;
 ((((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1293)/672) == (((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1293)/672));1;261;;;;;
 (((v0*3) + ((v1*64) + ((v2*128) + v3))) == ((v0*3) + ((v1*64) + ((v2*128) + v3))));1;41;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 119) == min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 119));1;508;;;;;
 ((max(v0, 249) - (min(v1, 0) + (v2*17))) == (max(v0, 249) - (min(v1, 0) + (v2*17))));1;49;;;;;
 (min(v0*4, (((v1*4) + v2)*4) + -9) == min(v0*4, (((v1*4) + v2)*4) + -9));1;53;;;;;
 ((((v0*4) - (v1*3)) - (v2*4)) == (((v0*4) - (v1*3)) - (v2*4)));1;57;;;;;
 (min((v0*12) + ((v1 + v2) + v3), ((v1 + v2) + v4) + 9) == min((v0*12) + ((v1 + v2) + v3), ((v1 + v2) + v4) + 9));1;88;;;;;
 (0 == ((0 + (118 - max((v0 % 8)*15, 103))) - 1));0;72;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 44)/33) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 44)/33));1;65;;;;;
 (min(max((25 - (v0/4))/24, 0), (v1 + 25)/24) == min(max((25 - (v0/4))/24, 0), (v1 + 25)/24));1;82;;;;;
 ((((v0 + v1)*2) + -4) == (((((v0 + v1)*2) + -4) + ((-373*2) + 748)) - 1));0;71;;;;;
 (((((((uint1)1 && (((0 + (max(v0*128, -15) + v1)) + 5) <= (((0 + ((v0*128) + v1)) + -1) + -9))) && (((15 + ((((min(v0*128, -15) + 142)/16)*16) + (max(v0*128, -15) + v1))) + 5) >= (((15 + (((v0*128) + v1) + 128)) + 4) + -9))) && (((((0*65) + v2) + 0) + -1) <= (v2 + -1))) && (((((1*65) + v2) + 64) + -1) >= (((125 + v2) - 1) + 4))) && (0 <= 0)) && (19 >= 19));0;406;;;;;
 (max(-1019 - v0, v0 + 10) >= 0);0;368;;;;;
 (min(max(min(((v0*34) + v1)*2, 2003), 4) + (((v2 + 11)/4)*4), (min(v3, 996)*2) + 12) == min(max(min(((v0*34) + v1)*2, 2003), 4) + (((v2 + 11)/4)*4), (min(v3, 996)*2) + 12));1;89;;;;;
 ((((v0/8)*8) + ((v1*128) + ((v2*56) - max((max((v1*16) + ((v0/8) - (((v3 + v0) + 63)/8)), -14) + (v2*7))*8, 52)))) == (((v0/8)*8) + ((v1*128) + ((v2*56) - max((max((v1*16) + ((v0/8) - (((v3 + v0) + 63)/8)), -14) + (v2*7))*8, 52)))));1;148;;;;;
 (min((v0*32) + v1, v2 + 34) == min((v0*32) + v1, v2 + 34));1;54;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*252, 748) + (v1*4)) + v2)) <= ((min(v0*252, 748) + (v1*4)) + v2))) && ((3 + ((min(v0*252, 748) + (v1*4)) + v2)) >= (((min(v0*252, 748) + (v1*4)) + v2) + 3))) && ((v3/8) <= (v3/8))) && (((v3 + 132)/8) >= ((v3 + 132)/8))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)));1;194;;;;;
 (min(577 - (max(v0 - v1, 27)*8), (min(v1 - v0, -27)*8) + 577) == min(577 - (max(v0 - v1, 27)*8), (min(v1 - v0, -27)*8) + 577));1;95;;;;;
 ((min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2) + 7) == (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2) + 7));1;139;;;;;
 ((((v0*4)/5) + 2) != 0);0;390;;;;;
 ((min(v0*288, v1 + -288) + ((v2*96) + v3)) == (min(v0*288, v1 + -288) + ((v2*96) + v3)));1;71;;;;;
 (min(((v0 + v1) + 251)/2, (((v0 + v1)/2) + (v2*8)) + 7) == min(((v0 + v1) + 251)/2, (((v0 + v1)/2) + (v2*8)) + 7));1;71;;;;;
 (((v0*3) + ((v1*16) + v2)) == ((v0*3) + ((v1*16) + v2)));1;38;;;;;
 (max(min(249, ((v2 + -32) + (min(v1, -13) + 36)) - 1) + 1, min(max(0, v2 + -32), (min(v1, -13) + 36) + (v2 + -32))) <= min(max(0, v2 + -32), (min(v1, -13) + 36) + (v2 + -32)));0;1220;;;;;
 (((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -7) <= ((min(v0, 4) + v1) + -7))) && (((3 + ((((max(v0, 4) + 7)/4)*4) + (min(v0, 4) + v1))) + -7) >= (((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1)) + 1))) && (max(v2 + 1, min(v3*63, 62) + v4) <= v2)) && ((v2 + 1) >= v2)) && (0 <= 0)) && (10 >= ((11 + 0) - 1)));0;364;;;;;
 (((v0*12) + ((v1/8) + (v2*64))) == ((v0*12) + ((v1/8) + (v2*64))));1;58;;;;;
 (min(max(((((v0 + 7)/4) - v1) + 15)/16, 0), (min((max(min(((v2 + v3) + 3)/4, 499), 0) - (v4*32)) - max(min(v3/4, 499), 0), 28) + 19)/16) == min(max(((((v0 + 7)/4) - v1) + 15)/16, 0), (min((max(min(((v2 + v3) + 3)/4, 499), 0) - (v4*32)) - max(min(v3/4, 499), 0), 28) + 19)/16));1;145;;;;;
 (min(max((v0/4) - (v1*16), -4) + 4, v2) == min(max((v0/4) - (v1*16), -4) + 4, v2));1;63;;;;;
 ((max(min((v0/32)*4, 281), 32) + (v1*4)) == (max(min((v0/32)*4, 281), 32) + (v1*4)));1;42;;;;;
 (((v0*3) + (((v1*5) + v2)*8)) == ((v0*3) + (((v1*5) + v2)*8)));1;41;;;;;
 (((v0*2) + 1) == ((((v0*2) + 1) + ((min(v1, 62)*2) + 2)) - 1));0;81;;;;;
 (((((v0 % (((v1*8) + 564)/516))*516)/4)*4) == ((v0 % (((v1*8) + 564)/516))*516));1;52;;;;;
 ((max(min((v0*64) + v1, min(v2 + v1, 2000) + -64), -63) - (max(min((v0*64) + v1, min(v2 + v1, 2063) + -64), 0) + (v3*4))) == (max(min((v0*64) + v1, min(v2 + v1, 2000) + -64), -63) - (max(min((v0*64) + v1, min(v2 + v1, 2063) + -64), 0) + (v3*4))));1;126;;;;;
 ((((((v0 + v1) + 3)/2) - (v2*4)) - (v1/2)) == (((((v0 + v1) + 3)/2) - (v2*4)) - (v1/2)));1;79;;;;;
 (min((((v0 + v1)/4) + (v2*11))*4, (((v0 + v1)/4)*4) + 86) == min((((v0 + v1)/4) + (v2*11))*4, (((v0 + v1)/4)*4) + 86));1;66;;;;;
 (0 >= ((0 + ((((min((((((v0 + v1) + 7)/8) - (v2*128)) - (v3*32)) - (v1/8), (min((v4*3) + v5, 7)*4) + 3)/4) - v5) - (v4*3)) + 1)) - 1));0;1799;;;;;
 (min(((v0 + v1) + -1)/2, ((v1/2) + ((v2/64)*64)) + 63) == min(((v0 + v1) + -1)/2, ((v1/2) + ((v2/64)*64)) + 63));1;65;;;;;
 (0 == ((0 + (13 - max(min(v0*7, 13), 6))) - 1));0;65;;;;;
 (min(((v0*20) + ((v1*32) + v2)) + 16, min((v1*32) + 32, v3) + v2) == min(((v0*20) + ((v1*32) + v2)) + 16, min((v1*32) + 32, v3) + v2));1;65;;;;;
 (max(min(31, (((v1*8) + -5) + 13) - 1) + 1, min(max(0, (v1*8) + -5), 13 + ((v1*8) + -5))) <= min(max(0, (v1*8) + -5), 13 + ((v1*8) + -5)));0;1014;;;;;
 ((((min(v0*125, v1 + -125) + v2)/8) + (v3*2)) == (((min(v0*125, v1 + -125) + v2)/8) + (v3*2)));1;57;;;;;
 (min(v0*32, min((((v1 + v2) + -1)/32)*32, 2123) + -124) == min(v0*32, min((((v1 + v2) + -1)/32)*32, 2123) + -124));1;55;;;;;
 ((((v0*4) + v1) + ((v2*252) + v3)) == (((v0*4) + v1) + ((v2*252) + v3)));1;37;;;;;
 (((min(v0, 0)*8) + (v1*108)) == ((min(v0, 0)*8) + (v1*108)));1;46;;;;;
 ((((v0 - v1) + 129)/128) != 0);0;453;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 6) == min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 6));1;81;;;;;
 (((((((v0 + v1) + 15)/4) - (v1/4))/128) + 1) == ((((((v0 + v1) + 15)/4) - (v1/4))/128) + 1));1;84;;;;;
 (((v0 + 148)/136) != 0);0;342;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((7*4) + v0) + 3) >= (((7*4) + ((4 + 0) - 1)) + v0))) && (((min(v1*8, 117) + v2) + v3) <= ((min(v1*8, 117) + v2) + v3))) && (((min(v1*8, 117) + v2) + v3) >= ((min(v1*8, 117) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4));1;202;;;;;
 (min(max(((v0 - (max(min(v1/8, 249), 0)*8)) + 1020)/1008, 0), (v2 + 128)/126) == min(max(((v0 - (max(min(v1/8, 249), 0)*8)) + 1020)/1008, 0), (v2 + 128)/126));1;106;;;;;
 ((((v0 + v1)/8) + (v2*8)) == (((v0 + v1)/8) + (v2*8)));1;84;;;;;
 (((max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*16)) - max(min(v1/8, 249), 0)) == ((max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*16)) - max(min(v1/8, 249), 0)));1;86;;;;;
 (((v0*4) + (((v1/2) + (v2*2)) - (min((((v3 + v1) + 1)/2) - (v4*8), ((v5*2) + ((v1/2) + (v0*4))) + 1) + (v5*-2)))) == ((v0*4) + (((v1/2) + (v2*2)) - (min((((v3 + v1) + 1)/2) - (v4*8), ((v5*2) + ((v1/2) + (v0*4))) + 1) + (v5*-2)))));1;122;;;;;
 (((v0*63) + (max(min((v1/125)*8, 125), 1)*2)) == ((v0*63) + (max(min((v1/125)*8, 125), 1)*2)));1;71;;;;;
 (min((((((v0 + v1) + -1)/8)*8) + -436)/63, ((((v1/8)*8) + -5)/63) + (v2*8)) == min((((((v0 + v1) + -1)/8)*8) + -436)/63, ((((v1/8)*8) + -5)/63) + (v2*8)));1;78;;;;;
 ((max(min((((((v0/16)*2) + v1)*2) + v2)*4, min((((v3 + v0) + 15)/16)*16, 1990) + 14), 5) - (max(min((((((v0/16)*2) + v1)*2) + v2)*4, 2007), 8) + (v4*4))) == (max(min((((((v0/16)*2) + v1)*2) + v2)*4, min((((v3 + v0) + 15)/16)*16, 1990) + 14), 5) - (max(min((((((v0/16)*2) + v1)*2) + v2)*4, 2007), 8) + (v4*4))));1;153;;;;;
 ((((((v0 + v1) + -1)/4) - (v2*32)) - (v1/4)) == (((((v0 + v1) + -1)/4) - (v2*32)) - (v1/4)));1;123;;;;;
 ((max(min(v0/8, 256), 7) + (v1*80)) == (max(min(v0/8, 256), 7) + (v1*80)));1;38;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 145)/126) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 145)/126));1;177;;;;;
 ((((8 - v0)/4) + (v1*2)) == (((8 - v0)/4) + (v1*2)));1;31;;;;;
 (min((v0*280) + (v1*64), (v2*64) + 215) == min((v0*280) + (v1*64), (v2*64) + 215));1;55;;;;;
 (((v0 + v1) - min((min(v1 + 190, v2) + (v3*-4)) + 126, v1)) == ((v0 + v1) - min((min(v1 + 190, v2) + (v3*-4)) + 126, v1)));1;376;;;;;
 ((min(v0 + 14, v1) - ((v2*16) + v0)) == (min(v0 + 14, v1) - ((v2*16) + v0)));1;63;;;;;
 (((v0*128) + ((v1/2) + (v2*4))) == ((v0*128) + ((v1/2) + (v2*4))));1;32;;;;;
 (max(min(max(((v0 - v1) + 43)/36, 0), (min(((v2*8) - (v3*63)) - ((v4/8)*8), 55) + 48)/36), (min(min(min(((v2*8) - (v3*63)) - ((v4/8)*8), (min(v5 + v0, v6 + 2) - v1) + 30), min(((v2*8) - (v3*63)) - ((v4/8)*8), 55) + 35), 55) + 13)/36) == max(min(max(((v0 - v1) + 43)/36, 0), (min(((v2*8) - (v3*63)) - ((v4/8)*8), 55) + 48)/36), (min(min(min(((v2*8) - (v3*63)) - ((v4/8)*8), (min(v5 + v0, v6 + 2) - v1) + 30), min(((v2*8) - (v3*63)) - ((v4/8)*8), 55) + 35), 55) + 13)/36));1;203;;;;;
 ((v0 - (((v1 + v2) + -1)/8)) == (v0 - (((v1 + v2) + -1)/8)));1;46;;;;;
 ((((-992 - ((min(v0*1000, v1 + -1000) + v2) % 8))/8) + (v3*4)) == (((-992 - ((min(v0*1000, v1 + -1000) + v2) % 8))/8) + (v3*4)));1;58;;;;;
 (min((((v0 + v1) + 15)/16) - (v1/16), v2 + 1) == min((((v0 + v1) + 15)/16) - (v1/16), v2 + 1));1;68;;;;;
 (((((((uint1)1 && ((max(min(v0, 2005), 6) + -10) <= (max(min(v0, 2005), 6) + -10))) && ((((v1 + 23) + (max(min(v0, 2005), 6) + -10)) - 1) >= (((v1 + 23) + (max(min(v0, 2005), 6) + -10)) - 1))) && (((0 + ((((v2*3) + v3)*16) + v4)) + -5) <= (((((v2*3) + v3)*16) + v4) + -5))) && (((3 + (((((v2*3) + v3)*16) + v4) + 12)) + -5) >= ((((((v2*3) + v3)*16) + 15) + v4) + -5))) && (v5 <= v5)) && (v5 >= v5));1;295;;;;;
 (((((((uint1)1 && ((0 + (((((v0*7) + v1)*12) + v2) + -5)) <= ((0 + ((((v0*7) + v1)*12) + v2)) + -5))) && ((3 + (((((v0*7) + v1)*12) + v2) + 8)) >= ((((4 + 0) - 1) + (((((v0*7) + v1)*12) + v2) + 8)) + ((6 + -5) - 1)))) && ((-5 + v3) <= (-5 + v3))) && ((((6 + -5) - 1) + v3) >= (((6 + -5) - 1) + v3))) && (v4 <= v4)) && (v4 >= v4));1;213;;;;;
 (0 >= ((0 + ((((v0 + v1) % 8) + 212)/72)) - 1));0;43;;;;;
 ((((v0 - v1)*8) - ((v2*4) + v3)) == (((v0 - v1)*8) - ((v2*4) + v3)));1;46;;;;;
 ((max(min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 990) + 11), 2) - (max(min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 997) + 11), 9) + (v3*4))) == (max(min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 990) + 11), 2) - (max(min(((v0/16) + v1)*8, min((((v2 + v0) + 15)/16)*8, 997) + 11), 9) + (v3*4))));1;160;;;;;
 ((min(min(max(min(((v0 + v1) + -1)/63, 31), 0)*8, (min(v2*34, 33) + v3) + 17), 239) - (max(min((v2*34) + v3, 257), 8) + (v4*4))) == (min(min(max(min(((v0 + v1) + -1)/63, 31), 0)*8, (min(v2*34, 33) + v3) + 17), 239) - (max(min((v2*34) + v3, 257), 8) + (v4*4))));1;123;;;;;
 (0 >= ((0 + ((((v0 + v1) % 8) + 252)/32)) - 1));0;68;;;;;
 (min((v0*14) + v1, max(min(v2*8, 2018), 19) + -32) == min((v0*14) + v1, max(min(v2*8, 2018), 19) + -32));1;63;;;;;
 (((((((v0 + v1) + 31)/8) - (v1/8))/8) + 1) == ((((((v0 + v1) + 31)/8) - (v1/8))/8) + 1));1;61;;;;;
 ((((-935 - ((min(v0*1000, v1 + -1000) + v2) % 65))/65) + (v3*4)) == (((-935 - ((min(v0*1000, v1 + -1000) + v2) % 65))/65) + (v3*4)));1;65;;;;;
 (((v0 + 66)/48) != 0);0;336;;;;;
 ((((((max(min(v0, 31), 0)*2) + v1)*8) + v2)*4) == (((((max(min(v0, 31), 0)*2) + v1)*8) + v2)*4));1;95;;;;;
 (min(max(v0 + -3, v1), (v2 + v0) + 10) == min(max(v0 + -3, v1), (v2 + v0) + 10));1;44;;;;;
 ((((((v0 + v1) + -1)/65) - (v2*6)) - (v1/65)) == (((((v0 + v1) + -1)/65) - (v2*6)) - (v1/65)));1;74;;;;;
 ((((8 - v0)/4) + (v1*2)) == (((8 - v0)/4) + (v1*2)));1;46;;;;;
 ((v0 - ((((v1/8)*2) + v2)*4)) == (v0 - ((((v1/8)*2) + v2)*4)));1;66;;;;;
 (min(((v0*252) + ((v1*500) + v2)) + 244, v3) == min(((v0*252) + ((v1*500) + v2)) + 244, v3));1;50;;;;;
 (((v0*3) + (v1*5)) == ((v0*3) + (v1*5)));1;37;;;;;
 (0 == ((0 + (181 - max(v0*8, 173))) - 1));0;64;;;;;
 (((((((v0 + v1) + -1)/63)*8) - ((v2/4)*65)) - ((v1/63)*8)) == ((((((v0 + v1) + -1)/63)*8) - ((v2/4)*65)) - ((v1/63)*8)));1;95;;;;;
 (((((((v0 + v1) + 16)/17) - (v1/17)) + 67)/62) == ((((((v0 + v1) + 16)/17) - (v1/17)) + 67)/62));1;33;;;;;
 (((v0 + v1) + 124) < (v0 + (v1 + 1)));0;38;;;;;
 ((((min((v0*136) + ((((v1*17) + (v2/63))*8) + 121), v3)*-4)/4)*4) == (min((v0*136) + ((((v1*17) + (v2/63))*8) + 121), v3)*-4));1;91;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 145)/132) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 145)/132));1;82;;;;;
 (((((((uint1)1 && (((0 + ((v0*64) + v1)) + -4) <= (((v1 + (v0*64)) + 0) + -4))) && (((3 + ((((max(v0*64, 936)/4)*-4) + ((v0*64) + v1)) + 1000)) + -4) >= (((v1 + (min(v0*64, 936) + 63)) + ((2 + 0) - 1)) + -4))) && (((v2 + v3) + 1) <= ((v2 + v3) + 0))) && (((v2 + v3) + 1) >= ((v2 + v3) + ((2 + 0) - 1)))) && (v4 <= v4)) && (v4 >= v4));0;299;;;;;
 ((v0 + -455) >= (((v0 + -455) + (min(((max(min(v1, 1226), 227) + v2)*2) + (v3 - (max(min(v1, 1226), 227)*2)), -545) + 546)) - 1));1;200;;;;;
 (max((min((((v0 + v1) + 314)/63) - (v1/63), v2)*2) + 1, v3) == max((min((((v0 + v1) + 314)/63) - (v1/63), v2)*2) + 1, v3));1;69;;;;;
 (0 == ((0 + (((v0 - v1)*2) + 12)) - 1));0;62;;;;;
 (min(((((v0 + v1) + -1)/4) - (v1/4)) + -3, v2) == min(((((v0 + v1) + -1)/4) - (v1/4)) + -3, v2));1;260;;;;;
 ((max(min(min((v0*1000) + 1000, v1) + v2, 2000), 1) - (max(min((v0*1000) + v2, 1999), 0) + (((v3*16) + v4)*4))) == (max(min(min((v0*1000) + 1000, v1) + v2, 2000), 1) - (max(min((v0*1000) + v2, 1999), 0) + (((v3*16) + v4)*4))));1;105;;;;;
 (min(max(v0, 249) - (v1*16), min(v2, 0) + 15) == min(max(v0, 249) - (v1*16), min(v2, 0) + 15));1;63;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 68)/63) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 68)/63));1;157;;;;;
 (0 == ((0 + ((((((v0 + v1) % 8) + 124)/8)*2) + 10)) - 1));0;94;;;;;
 (((v0*4) + ((v1*224) + ((v2*668) + v3))) == ((v0*4) + ((v1*224) + ((v2*668) + v3))));1;36;;;;;
 (min(max(min(((v0 + v1) + -1)/63, 31), 0), ((v2*4) + v3) + 1) == min(max(min(((v0 + v1) + -1)/63, 31), 0), ((v2*4) + v3) + 1));1;90;;;;;
 ((min(((v0 + v1) + 184)/63, (((v0 + v1) + 1062)/63) - (v2*4)) - ((((v0 + v1) + -68)/63) + (v3*4))) == (min(((v0 + v1) + 184)/63, (((v0 + v1) + 1062)/63) - (v2*4)) - ((((v0 + v1) + -68)/63) + (v3*4))));1;80;;;;;
 (((max(v0, -1)*2) + 2) == ((((max(v0, -1)*2) + 2) + ((v1 - max(v0, -1))*2)) - 1));0;103;;;;;
 (((((v0 % (((v1*16) + 178)/140))*140)/4)*4) == ((v0 % (((v1*16) + 178)/140))*140));1;89;;;;;
 (((max(min((v1*-24) + (v3 + (v2*-12)), -488), -500)/4)*4) == max(min((v1*-24) + (v3 + (v2*-12)), -488), -500));0;1076;;;;;
 (min(max(min(v0 + v1, 1999), ((max(min(v0 + v1, 1999), 0)/16)*16) + 25), ((v2*344) + (((max(min((v3*1000) + v0, 2002), 3) + -3)/16)*16)) + 330) == min(max(min(v0 + v1, 1999), ((max(min(v0 + v1, 1999), 0)/16)*16) + 25), ((v2*344) + (((max(min((v3*1000) + v0, 2002), 3) + -3)/16)*16)) + 330));1;140;;;;;
 (min((max(min(v0/8, 256), 7) + (((min((((v1*8) + v2)*16) + 8, v3) + 7)/16)*16)) + 8, v4) == min((max(min(v0/8, 256), 7) + (((min((((v1*8) + v2)*16) + 8, v3) + 7)/16)*16)) + 8, v4));1;123;;;;;
 ((max(min((v0*4) + v1, 999), 0) + (((v2 + 3)/4)*4)) == (max(min((v0*4) + v1, 999), 0) + (((v2 + 3)/4)*4)));1;81;;;;;
 (((v0 + v1) - ((v2*4) + v3)) == ((v0 + v1) - ((v2*4) + v3)));1;37;;;;;
 ((((v0*8) + 76)/67) != 0);0;454;;;;;
 (min(max(min(v0, 2055), 56), max(min(v0, 2058), 59) + (v1*4)) == min(max(min(v0, 2055), 56), max(min(v0, 2058), 59) + (v1*4)));1;76;;;;;
 (((v0*2) + 4) != 0);0;306;;;;;
 (max(min((v0 + 74)/4, max((v1 - max(min(v2, 2100), 101))/4, -26) + 26), (min(min(max(min(v2, 2030), 31), (v3 + v1) + 30) - max(min(v2, 2100), 101), v0 + 3) + 71)/4) == max(min((v0 + 74)/4, max((v1 - max(min(v2, 2100), 101))/4, -26) + 26), (min(min(max(min(v2, 2030), 31), (v3 + v1) + 30) - max(min(v2, 2100), 101), v0 + 3) + 71)/4));1;173;;;;;
 ((((min(((v3 % (((v4*64) + 791)/696))*696) + (((v2/63)*64) + 600), (((v1 + v2) + -1)/63)*64)*-1)/4)*4) == (min(((v3 % (((v4*64) + 791)/696))*696) + (((v2/63)*64) + 600), (((v1 + v2) + -1)/63)*64)*-1));0;1964;;;;;
 (min((v0*8) + ((v1*16) + v2), v3 + -8) == min((v0*8) + ((v1*16) + v2), v3 + -8));1;93;;;;;
 ((((((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*8) - (v2*89)) - (v3*15)) - ((max(min(v1/8, 249), 0)/8)*8)) == (((((max(min(((v0 + v1) + 7)/8, 249), 0)/8)*8) - (v2*89)) - (v3*15)) - ((max(min(v1/8, 249), 0)/8)*8)));1;136;;;;;
 (((((((v0 + v1) + 3)/4) - (v1/4)) + 131)/127) == ((((((v0 + v1) + 3)/4) - (v1/4)) + 131)/127));1;66;;;;;
 (max(min((((v0 + v1) + 415)/32) - (v1/32), v2 + 9), v3 + 2) == max(min((((v0 + v1) + 415)/32) - (v1/32), v2 + 9), v3 + 2));1;73;;;;;
 (((((((v0 + v1) + 1999)/2000)*256) - (v2*50)) - ((v1/2000)*256)) == ((((((v0 + v1) + 1999)/2000)*256) - (v2*50)) - ((v1/2000)*256)));1;72;;;;;
 ((min((v0*-20) - max(v1*36, 100), -118) + (v0*20)) == (min((v0*-20) - max(v1*36, 100), -118) + (v0*20)));1;63;;;;;
 (min(max(min((v0/63)*8, 310), 61) + (((v1 + 189)/125)*125), max(min((((v2 + v0) + 440)/63)*8, 246), -3) + 65) == min(max(min((v0/63)*8, 310), 61) + (((v1 + 189)/125)*125), max(min((((v2 + v0) + 440)/63)*8, 246), -3) + 65));1;117;;;;;
 (0 == ((0 + ((min((((((v0 + v1) + 124)/125)*16) - (v2*140)) - ((v1/125)*16), 118)*2) + 46)) - 1));0;149;;;;;
 (max(max(min((v0 + v1)/8, 249), 0)*8, (v2 + v3) + 18) == max(max(min((v0 + v1)/8, 249), 0)*8, (v2 + v3) + 18));1;74;;;;;
 ((((((((v0 + v1) + 7)/8) - (v1/8))*8) + 258)/251) == (((((((v0 + v1) + 7)/8) - (v1/8))*8) + 258)/251));1;75;;;;;
 (((v0*4) + ((v1*88) + v2)) == ((v0*4) + ((v1*88) + v2)));1;21;;;;;
 ((((((v0 + v1) + 7)/8) - (v2*128)) - (v1/8)) == (((((v0 + v1) + 7)/8) - (v2*128)) - (v1/8)));1;55;;;;;
 (min(((v0 + v1) + 499)/16, (((v0 + v1)/16) + (v2*12)) + 11) == min(((v0 + v1) + 499)/16, (((v0 + v1)/16) + (v2*12)) + 11));1;84;;;;;
 ((((v0/2) + (v1*2)) - (min(v2 - (v3*508), ((v0/2) + (v4*32)) + 8) + (v4*-32))) == (((v0/2) + (v1*2)) - (min(v2 - (v3*508), ((v0/2) + (v4*32)) + 8) + (v4*-32))));1;87;;;;;
 (min((v0*4) + v1, (v2*8) + 33) == min((v0*4) + v1, (v2*8) + 33));1;70;;;;;
 ((max(min(v0, 999), 0) + (v1*2)) == (max(min(v0, 999), 0) + (v1*2)));1;75;;;;;
 ((((v0*3) + (min(v1*9, 70) + v2)) + -59) >= (((((v0*3) + (min(v1*9, 70) + v2)) + -59) + 3) - 1));0;75;;;;;
 ((((((((v0 + v1) + -1)/62) - (v1/62))*8) + 16)/9) == (((((((v0 + v1) + -1)/62) - (v1/62))*8) + 16)/9));1;94;;;;;
 ((max(min(((v0 + v1) + 31)/8, 249), 0) - ((v2*4) + v3)) == (max(min(((v0 + v1) + 31)/8, 249), 0) - ((v2*4) + v3)));1;80;;;;;
 (((min((((v0 + v1) + 62)/63) - (v2*12), (v1/63) + 11)*-32) + (((v1/63)*32) + (v3*63))) == ((min((((v0 + v1) + 62)/63) - (v2*12), (v1/63) + 11)*-32) + (((v1/63)*32) + (v3*63))));1;98;;;;;
 (((min((min((v3*504) + ((v2/2) + 500), ((v1 + v2) + 1001)/2)*-1) + (((v1 + v2) + 985)/2), 496)/8)*8) == min((min((v3*504) + ((v2/2) + 500), ((v1 + v2) + 1001)/2)*-1) + (((v1 + v2) + 985)/2), 496));0;1673;;;;;
 (min(max(((v0 + v1) + 124)/8, 0), (min((v0 + v1)/8, 249) + (v2*4)) + 3) == min(max(((v0 + v1) + 124)/8, 0), (min((v0 + v1)/8, 249) + (v2*4)) + 3));1;90;;;;;
 (((v0 + 6)/252) >= ((((v0 + 6)/252) + ((((v0 + 6) % 252) + 255)/252)) - 1));0;377;;;;;
 (((v0 - (v1/32)) + -3) == ((v0 - (v1/32)) + -3));1;49;;;;;
 (((v0*8) + ((v1*64) + ((v2/4) + v3))) == ((v0*8) + ((v1*64) + ((v2/4) + v3))));1;58;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 5)/4) == ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 5)/4));1;110;;;;;
 ((max(min(v0, 1329), 330) + min(v1*2, v2 + 340)) == (max(min(v0, 1329), 330) + min(v1*2, v2 + 340)));1;59;;;;;
 ((((((v0/63)*2) + v1)*32) + -40) == (((((((v0/63)*2) + v1)*32) + -40) + ((v2*8) + 32)) - 1));0;123;;;;;
 ((v0 + -9) >= (((v0 + -9) + (min(min(((((((v1 + v2) + 62)/63)*4) - v3)*2) - v4, -9) + v5, -15) + 16)) - 1));1;200;;;;;
 (((((((v0 + v1) + 188)/63) - (v1/63)) + 15)/10) == ((((((v0 + v1) + 188)/63) - (v1/63)) + 15)/10));1;70;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -5) <= ((((0*4) + 0) + v0) + -5))) && (((((2*4) + v0) + 3) + -5) >= ((((((3 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + -5))) && (((v1 + v2) + -5) <= ((v1 + v2) + -5))) && (((v1 + v2) + -5) >= ((v1 + v2) + -5))) && (((v3*56) + ((v4*14) + ((v5*7) + v6))) <= ((v3*56) + ((v4*14) + ((v5*7) + v6))))) && (((v3*56) + ((v4*14) + ((v5*7) + v6))) >= ((v3*56) + ((v4*14) + ((v5*7) + v6)))));1;237;;;;;
 ((min(v0 - v1, 10) + -10) >= 2);0;26;;;;;
 ((v0 - max(min((v1 + v2)/16, 126), 2)) == (v0 - max(min((v1 + v2)/16, 126), 2)));1;80;;;;;
 (((((((v0 + v1) + 11)/2) - (v1/2)) + 340)/337) == ((((((v0 + v1) + 11)/2) - (v1/2)) + 340)/337));1;73;;;;;
 (((((v0*4) - min((v0 + v1)*4, (v2*4) + 49))*2) + ((v1*8) + v3)) == ((((v0*4) - min((v0 + v1)*4, (v2*4) + 49))*2) + ((v1*8) + v3)));1;66;;;;;
 ((v0 - (v1*88)) == (v0 - (v1*88)));1;49;;;;;
 (max(min(max((max(min(v0, 31), 29)*2) + v1, 63)*32, 2040), (min((min(v0, 31)*8) + ((v1*4) - min(((min(v0, 31)*2) + v1)*4, (min(v0, 29)*8) + 20)), 3)*8) + 2016) == max(min(max((max(min(v0, 31), 29)*2) + v1, 63)*32, 2040), (min((min(v0, 31)*8) + ((v1*4) - min(((min(v0, 31)*2) + v1)*4, (min(v0, 29)*8) + 20)), 3)*8) + 2016));1;178;;;;;
 (((v0 + 684)/666) != 0);0;397;;;;;
 (min((((v0 + v1) + 7)/4) - (v1/4), v2) == min((((v0 + v1) + 7)/4) - (v1/4), v2));1;53;;;;;
 ((((v0*-1024)/128)*128) == (v0*-1024));1;29;;;;;
 ((v0 - (v1*4)) == (v0 - (v1*4)));1;50;;;;;
 (((max(((((max(((max(min((v6*125) + v5, min(v7 + v5, 1999) + -125), -125) + 125)/16)*16, min((v6*125) + v5, min(v7 + v5, 1999) + -125) + 116) - (((max(min((v6*125) + v5, min(v7 + v5, 2127) + -125), 3) + -3)/16)*16)) + 11)/8) + (((max(min(min(v6*125, v7 + -125) + v5, 2002), 3) + -3)/16)*2))*8, (((((max(min(min(v6*125, v7 + -125) + v5, 2002), 3) + -3)/16)*16) + max(((max(min((v6*125) + v5, min(v7 + v5, 1999) + -125), -125) + 125)/16)*16, min((v6*125) + v5, min(v7 + v5, 1999) + -125) + 116)) - (((max(min((v6*125) + v5, min(v7 + v5, 2127) + -125), 3) + -3)/16)*16)) + 7)/4)*4) == max(((((max(((max(min((v6*125) + v5, min(v7 + v5, 1999) + -125), -125) + 125)/16)*16, min((v6*125) + v5, min(v7 + v5, 1999) + -125) + 116) - (((max(min((v6*125) + v5, min(v7 + v5, 2127) + -125), 3) + -3)/16)*16)) + 11)/8) + (((max(min(min(v6*125, v7 + -125) + v5, 2002), 3) + -3)/16)*2))*8, (((((max(min(min(v6*125, v7 + -125) + v5, 2002), 3) + -3)/16)*16) + max(((max(min((v6*125) + v5, min(v7 + v5, 1999) + -125), -125) + 125)/16)*16, min((v6*125) + v5, min(v7 + v5, 1999) + -125) + 116)) - (((max(min((v6*125) + v5, min(v7 + v5, 2127) + -125), 3) + -3)/16)*16)) + 7));0;5314;;;;;
 ((max(min(v0, 1036), 37) + (v1*4)) == (max(min(v0, 1036), 37) + (v1*4)));1;43;;;;;
 (((max(min(v0, 0), -31)*8) + -5) >= ((((max(min(v0, 0), -31)*8) + -5) + (9 - (max(min(v0, 0), -31)*8))) - 1));0;98;;;;;
 ((((((v0 + v1) + 62)/63)*2) - ((v2*2) + v3)) == (((((v0 + v1) + 62)/63)*2) - ((v2*2) + v3)));1;293;;;;;
 ((((v0*500) + v1) + ((v2*250) + v3)) == (((v0*500) + v1) + ((v2*250) + v3)));1;39;;;;;
 ((min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5), v2) + 15) == (min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5), v2) + 15));1;238;;;;;
 (min(((v0*44) + v1) + 38, v2) == min(((v0*44) + v1) + 38, v2));1;894;;;;;
 (((v0*24) + (max(v1, 0) + (v2*256))) == ((v0*24) + (max(v1, 0) + (v2*256))));1;50;;;;;
 ((min(((v0 + v1) + -1021)/2, ((v1/2) + (v2*512)) + -7) + (v3*64)) == (min(((v0 + v1) + -1021)/2, ((v1/2) + (v2*512)) + -7) + (v3*64)));1;55;;;;;
 (((max((((v0 + 7)/2) + (((0 - (v0 % 2))/8)*4)) - min(max(v0/2, ((v0 + 1)/2) + (((0 - (v0 % 2))/8)*4)), (v0/2) + (((0 - (v0 % 2))/8)*4)), (((v0 + 7)/2) + (v1*4)) - min(max(v0/2, ((v0 + 1)/2) + (v1*4)), (v0/2) + (v1*4)))*2) + 2) <= 1024);0;3014;;;;;
 (min((v0 + v1) + 61, v2) == min((v0 + v1) + 61, v2));1;34;;;;;
 (((max(min(v0, 28), -3)*2) - ((max(min(v0, 31), 0)*2) + v1)) == ((max(min(v0, 28), -3)*2) - ((max(min(v0, 31), 0)*2) + v1)));1;80;;;;;
 ((((v0 - v1) + 190)/177) != 0);0;471;;;;;
 (max(-4 - max(min(((min((((v0 + v1) + 3)/4) - (v2*64), (v1/4) + 63)*4) - (v3*126)) - ((v1/4)*4), 122), -3), max(min(v4, 3), -122) + -4) == max(-4 - max(min(((min((((v0 + v1) + 3)/4) - (v2*64), (v1/4) + 63)*4) - (v3*126)) - ((v1/4)*4), 122), -3), max(min(v4, 3), -122) + -4));1;612;;;;;
 (max((v0 + 6)/504, 0) >= ((max((v0 + 6)/504, 0) + max(((v0 + 509)/504) - max((v0 + 6)/504, 0), 0)) - 1));0;722;;;;;
 (min(max(max(min((v0 + v1)/2, 1006), 7)*8, 115) + (v2*240), max(min((max(min((v0 + v1)/2, 1006), 7) + v3)*8, 7410), -589) + 474) == min(max(max(min((v0 + v1)/2, 1006), 7)*8, 115) + (v2*240), max(min((max(min((v0 + v1)/2, 1006), 7) + v3)*8, 7410), -589) + 474));1;165;;;;;
 ((max(min(((v0 + v1) + 31)/32, 62), 0) - ((((v2*5) + v3)*4) + v4)) == (max(min(((v0 + v1) + 31)/32, 62), 0) - ((((v2*5) + v3)*4) + v4)));1;84;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 12) == min(((v0*2) + v1)*4, (v2*8) + 12));1;58;;;;;
 (((v0*4) + ((v1*132) + v2)) == ((v0*4) + ((v1*132) + v2)));1;58;;;;;
 (((v0*-4) + (max(max((v1 + v2)/2, (((v1 + v2)/126)*63) + 62), (((v1 + v2)/126)*64) + 23) - min(((v1 + v2)/126)*64, min((v1 + v2)/2, (((v1 + v2)/126)*63) + 6) + 24))) == ((v0*-4) + (max(max((v1 + v2)/2, (((v1 + v2)/126)*63) + 62), (((v1 + v2)/126)*64) + 23) - min(((v1 + v2)/126)*64, min((v1 + v2)/2, (((v1 + v2)/126)*63) + 6) + 24))));1;161;;;;;
 (min(((min(v0/8, 0)/16) + v1)*16, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 3) == min(((min(v0/8, 0)/16) + v1)*16, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 3));1;85;;;;;
 (min(((((((min((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3), min((v0*4) + ((v2*16) + v3), v4 + 8) + 4) - (v0*4)) - ((v2*16) + v3)) + -1)/2) + (v0*2))*2) + ((v2*16) + v3), v5) == min(((((((min((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3), min((v0*4) + ((v2*16) + v3), v4 + 8) + 4) - (v0*4)) - ((v2*16) + v3)) + -1)/2) + (v0*2))*2) + ((v2*16) + v3), v5));1;215;;;;;
 (((((((v0 + v1) + -1)/2) - (v1/2))/32) + 1) == ((((((v0 + v1) + -1)/2) - (v1/2))/32) + 1));1;75;;;;;
 (((min((v0 - v1)*4, 123)*-8) + -68) == ((min((v0 - v1)*4, 123)*-8) + -68));1;61;;;;;
 ((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) == (max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)));1;2181;;;;;
 (min(v0*8, (min(v1*2, 253)*8) + 4) == min(v0*8, (min(v1*2, 253)*8) + 4));1;58;;;;;
 (((v0*8) + -5) >= ((((v0*8) + -5) + 21) - 1));0;36;;;;;
 ((((v0/125)*16) + (v1*18)) == (((v0/125)*16) + (v1*18)));1;44;;;;;
 (max(min(v0, 2496), v1 + 4) == max(min(v0, 2496), v1 + 4));1;31;;;;;
 (((min(min((v0*32) + v1, 62) + (v2*63), 124)*4) + ((v3*500) + v4)) == ((min(min((v0*32) + v1, 62) + (v2*63), 124)*4) + ((v3*500) + v4)));1;75;;;;;
 (((v0*48) + ((v1/2) + (((min((v2*-16) + ((v0*-48) + v3), 15)/4) + (v2*4))*4))) == ((v0*48) + ((v1/2) + (((min((v2*-16) + ((v0*-48) + v3), 15)/4) + (v2*4))*4))));1;100;;;;;
 ((v0 + -13) >= (((v0 + -13) + 20) - 1));0;28;;;;;
 (((((((uint1)1 && (((0 + (v0 + -6)) + 1) <= ((0 + v0) + -5))) && (((3 + (v0 + 124)) + 1) >= ((3 + (v0 + 124)) + 1))) && ((max((v1/8)*8, v2 + 11) + -10) <= (v2 + -5))) && ((v2 + 1) >= (v2 + 1))) && (v3 <= v3)) && (v3 >= v3));0;176;;;;;
 (min(((v0 + v1) + 47)/8, ((v1/8) + ((v2/4)*4)) + 3) == min(((v0 + v1) + 47)/8, ((v1/8) + ((v2/4)*4)) + 3));1;71;;;;;
 (((((min(min((v0*128) + (v1 + 127), v2) + 2, (v0*128) + v1)*8) - max(min((v0*128) + min(v1 + 58, v1 + 127), v2)*8, (v0*1024) + ((v1*8) + 460)))/4)*4) == ((min(min((v0*128) + (v1 + 127), v2) + 2, (v0*128) + v1)*8) - max(min((v0*128) + min(v1 + 58, v1 + 127), v2)*8, (v0*1024) + ((v1*8) + 460))));1;164;;;;;
 (((((((v0 + v1) + 499)/500) - (v1/500)) + 7)/3) == ((((((v0 + v1) + 499)/500) - (v1/500)) + 7)/3));1;241;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= ((v0*4) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && (v2 <= v2)) && ((v2 + 250) >= (v2 + 250))) && (0 <= 0)) && (2 >= 2));1;133;;;;;
 (min(max(min((((v0 + v1) + 314)/63)*8, 243), -6) - max(min(((v0 + v1)/63)*8, 258), 9), v2) == min(max(min((((v0 + v1) + 314)/63)*8, 243), -6) - max(min(((v0 + v1)/63)*8, 258), 9), v2));1;262;;;;;
 (min(max(min((((v0 + v1) + 15)/16)*8, 1329), 995), v2 + 321) == min(max(min((((v0 + v1) + 15)/16)*8, 1329), 995), v2 + 321));1;77;;;;;
 ((((max(min((v6*65) + ((((v5/8) + (v7*16))*8) + 56), min(min(((v4 + v5) + -1)/8, ((v5/8) + (v7*16)) + 15)*8, 1994)), -5) + (max(min((v6*65) + ((((v5/8) + (v7*16))*8) + 56), min(min(((v4 + v5) + -1)/8, ((v5/8) + (v7*16)) + 15)*8, 2058)), 59)*-1))/4)*4) == (max(min((v6*65) + ((((v5/8) + (v7*16))*8) + 56), min(min(((v4 + v5) + -1)/8, ((v5/8) + (v7*16)) + 15)*8, 1994)), -5) + (max(min((v6*65) + ((((v5/8) + (v7*16))*8) + 56), min(min(((v4 + v5) + -1)/8, ((v5/8) + (v7*16)) + 15)*8, 2058)), 59)*-1)));0;3033;;;;;
 ((((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 78)/64) == (((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 78)/64));1;147;;;;;
 (((((((v0 + v1) + 499)/500) - (v1/500))/2) + 3) == ((((((v0 + v1) + 499)/500) - (v1/500))/2) + 3));1;78;;;;;
 (min((min(v0 - max(min((v1*6) + (v2 + v3), 1999), 0), -1) + min(max(min((v1*6) + (v2 + v3), 1999), 0) + (((v0 - max(min((v1*6) + (v2 + v3), 1999), 0))/4)*4), v0)) + 4, v0) == min((min(v0 - max(min((v1*6) + (v2 + v3), 1999), 0), -1) + min(max(min((v1*6) + (v2 + v3), 1999), 0) + (((v0 - max(min((v1*6) + (v2 + v3), 1999), 0))/4)*4), v0)) + 4, v0));1;132;;;;;
 (((((((uint1)1 && (((min(v0, 4) + v1) + -7) <= ((min(v0, 4) + v1) + -7))) && (((v0 + v1) + 2) >= ((v0 + v1) + 2))) && (((v2 + v3) + 3) <= ((v2 + v3) + 3))) && (((v2 + v3) + 3) >= ((v2 + v3) + 3))) && (((0*4) + 0) <= 0)) && (((2*4) + 3) >= 9));1;379;;;;;
 ((((v0 + v1)/63) + (v2*9)) == (((v0 + v1)/63) + (v2*9)));1;39;;;;;
 ((((min(((v3 % (((v4*64) + 550)/312))*312) + (((v2/63)*64) + 73), (((v1 + v2) + 251)/63)*64)*-1)/4)*4) == (min(((v3 % (((v4*64) + 550)/312))*312) + (((v2/63)*64) + 73), (((v1 + v2) + 251)/63)*64)*-1));0;1870;;;;;
 (0 == ((0 + ((max(v0, -5)*2) + 10)) - 1));0;56;;;;;
 ((max(v0, 0) - ((((v1*4) + v2)*4) + ((v3*32) + v4))) == (max(v0, 0) - ((((v1*4) + v2)*4) + ((v3*32) + v4))));1;71;;;;;
 ((((v0*2) + v1) - (min((min(v2*60, 56) + v1) + 60, v3) + (v2*-60))) == (((v0*2) + v1) - (min((min(v2*60, 56) + v1) + 60, v3) + (v2*-60))));1;76;;;;;
 (((v0*64) + ((v1/8) + (v2*128))) == ((v0*64) + ((v1/8) + (v2*128))));1;73;;;;;
 (((v0*6) + (v1 + v2)) == ((v0*6) + (v1 + v2)));1;48;;;;;
 (max(min(v0*16, 531), min(((v1/1000)*256) + ((v2*32) + ((v3*16) - min((((((v1/1000)*8) + v2)*2) + v3)*16, ((((v4 + v1) + -1)/1000)*256) + 516))), 15) + 516) == max(min(v0*16, 531), min(((v1/1000)*256) + ((v2*32) + ((v3*16) - min((((((v1/1000)*8) + v2)*2) + v3)*16, ((((v4 + v1) + -1)/1000)*256) + 516))), 15) + 516));1;166;;;;;
 (((v0*8) - ((v1*348) + (v2*8))) == ((v0*8) - ((v1*348) + (v2*8))));1;51;;;;;
 (((((v0 + v1) + 999)/500) - (v1/500)) == ((((v0 + v1) + 999)/500) - (v1/500)));1;725;;;;;
 (((((v0 + v1) + 249)/125) - (v1/125)) == ((((v0 + v1) + 249)/125) - (v1/125)));1;125;;;;;
 ((max(min(v0, 1999), 0) + (v1*504)) == (max(min(v0, 1999), 0) + (v1*504)));1;47;;;;;
 ((min(((v0 + v1)*8) + 5, v2) + (v3*4)) == (min(((v0 + v1)*8) + 5, v2) + (v3*4)));1;45;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((2 - 1) >= (2 - 1))) && ((((((v0 + v1) + v2)*4) + 0) + 0) <= (((((v0 + v1) + v2)*4) + 0) + 0))) && ((((((v0 + v1) + v2)*4) + ((2 + 0) - 1)) + 3) >= (((((v0 + v1) + v2)*4) + ((4 + 0) - 1)) + ((2 + 0) - 1)))) && (v3 <= v3)) && (v3 >= v3));1;189;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8)) + 37)/32) == ((((((v0 + v1) + -1)/8) - (v1/8)) + 37)/32));1;75;;;;;
 (((v0 + 21)/16) == ((v0 + 21)/16));1;22;;;;;
 (min(min(min(v0*32, 31) + v1, 1966) + 33, v2) == min(min(min(v0*32, 31) + v1, 1966) + 33, v2));1;75;;;;;
 (((((((v0 + v1) + 55)/8) - (v1/8)) + 135)/132) == ((((((v0 + v1) + 55)/8) - (v1/8)) + 135)/132));1;54;;;;;
 ((v0 + -5) == (((v0 + -5) + (11 - max(v1*-8, 3))) - 1));0;122;;;;;
 ((((max(((v0 + v1) + -1)/8, 249) - min(v1/8, 0))/16) + 1) >= 0);1;74;;;;;
 ((min((((((v0 + v1) + 7)/8) - (v2*16)) - (v3*8)) - (v4*4), (v1/8) + 3) - ((v1/8) + (v5*4))) == (min((((((v0 + v1) + 7)/8) - (v2*16)) - (v3*8)) - (v4*4), (v1/8) + 3) - ((v1/8) + (v5*4))));1;89;;;;;
 (0 == ((0 + ((max((v0 % 4)*63, 187)*-2) + 500)) - 1));0;76;;;;;
 (((v0*2) - ((((v1*62) + v2)*2) + ((v3*16) + v4))) == ((v0*2) - ((((v1*62) + v2)*2) + ((v3*16) + v4))));1;67;;;;;
 (((v0/8) + (v1*4)) == ((v0/8) + (v1*4)));1;968;;;;;
 (((v0*31) + ((v1*62) + v2)) == ((v0*31) + ((v1*62) + v2)));1;51;;;;;
 (((v0*4) + ((v1*504) + (v2 + v3))) == ((v0*4) + ((v1*504) + (v2 + v3))));1;44;;;;;
 (((((v0 - v1)*8) + 351)/348) == ((((v0 - v1)*8) + 351)/348));1;56;;;;;
 (min(((((v0 + v1) + 7)/8) - (v1/8)) + -7, v2) == min(((((v0 + v1) + 7)/8) - (v1/8)) + -7, v2));1;72;;;;;
 (min((v0 + 127)/128, 0 - min(v1/128, 0)) == min((v0 + 127)/128, 0 - min(v1/128, 0)));1;1225;;;;;
 (min((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + -3, v2) == min((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + -3, v2));1;240;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 45)/4) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 45)/4));1;257;;;;;
 ((((((v0 + v1) + 127)/32) - (v2*40)) - (v1/32)) == (((((v0 + v1) + 127)/32) - (v2*40)) - (v1/32)));1;69;;;;;
 ((((v0*4) - min((((v1/500)*16) + v0)*4, ((((v2 + v1) + -1)/500)*64) + 85)) + (((v1/500)*64) + v3)) == (((v0*4) - min((((v1/500)*16) + v0)*4, ((((v2 + v1) + -1)/500)*64) + 85)) + (((v1/500)*64) + v3)));1;88;;;;;
 ((((v0 % 2) + 7)/4) == (((v0 % 2) + 7)/4));1;39;;;;;
 (((v0*2) + ((v1*8) + (((v2/8)*2) + v3))) == ((v0*2) + ((v1*8) + (((v2/8)*2) + v3))));1;60;;;;;
 (0 == ((0 + ((min(v0, 1)*2) + 2)) - 1));0;61;;;;;
 (((v0*32) + (min(v1*128, 372) + (min(v2*500, v3 + -500) + v4))) == ((v0*32) + (min(v1*128, 372) + (min(v2*500, v3 + -500) + v4))));1;74;;;;;
 ((max(min(min(v0 + v1, (min(v2*505, 513) + ((v3*1008) + v1)) + 495), 1991), -8) - max(min((v2*505) + ((v3*1008) + v1), 2005), 6)) == (max(min(min(v0 + v1, (min(v2*505, 513) + ((v3*1008) + v1)) + 495), 1991), -8) - max(min((v2*505) + ((v3*1008) + v1), 2005), 6)));1;269;;;;;
 (min((((v0 + v1) + -1)/2) - ((((v2*3) + v3)*4) + v4), 63 - (((v2*3) + v3)*4)) == min((((v0 + v1) + -1)/2) - ((((v2*3) + v3)*4) + v4), 63 - (((v2*3) + v3)*4)));1;93;;;;;
 (((v0*15) + ((v1*3) + v2)) == ((v0*15) + ((v1*3) + v2)));1;34;;;;;
 ((((v0 + v1)/2) + (v2*252)) == (((v0 + v1)/2) + (v2*252)));1;35;;;;;
 (((v0*68) + (v1*128)) == ((v0*68) + (v1*128)));1;27;;;;;
 (min(((((v0*186) + v1)*2) + v2)*4, (v3*8) + 549) == min(((((v0*186) + v1)*2) + v2)*4, (v3*8) + 549));1;67;;;;;
 (min((v0*8) + 741, v1) == min((v0*8) + 741, v1));1;36;;;;;
 (min((((((v0 + v1) + 1999)/2000)*256) - (v2*25)) + 503, v3) == min((((((v0 + v1) + 1999)/2000)*256) - (v2*25)) + 503, v3));1;72;;;;;
 (((v0 + 31)/16) != 0);0;342;;;;;
 ((((((((v0 + v1) + -1)/62) - (v1/62))*8) + 139)/132) == (((((((v0 + v1) + -1)/62) - (v1/62))*8) + 139)/132));1;89;;;;;
 (min(v0*8, v1 + 134) == min(v0*8, v1 + 134));1;35;;;;;
 (min(((min(v0/8, 4)*2) + v1)*4, (max(((v2 + v0) + 23)/8, 249)*8) + 36) == min(((min(v0/8, 4)*2) + v1)*4, (max(((v2 + v0) + 23)/8, 249)*8) + 36));1;102;;;;;
 ((((v0*8) + 267)/252) != 0);0;448;;;;;
 ((((min((v0*125) + 125, v1)*4)/4)*4) == (min((v0*125) + 125, v1)*4));1;65;;;;;
 ((((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 267)/250) == (((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 267)/250));1;375;;;;;
 (((max(min(v0 + v1, 0), -2)*8) + -4) == ((((max(min(v0 + v1, 0), -2)*8) + -4) + (10 - (max(min(v0 + v1, 0), -2)*8))) - 1));0;120;;;;;
 ((((min(((min(v3*128, v4 + -128) + v2)/16)*8, (((min(v3*128, v4 + -128) + (v2 + -1))/16)*8) + 17)*-1)/8)*8) == (min(((min(v3*128, v4 + -128) + v2)/16)*8, (((min(v3*128, v4 + -128) + (v2 + -1))/16)*8) + 17)*-1));0;1887;;;;;
 (min((((v0 + v1) + 127)/32) + (v2*-4), (v1/32) + -5) == min((((v0 + v1) + 127)/32) + (v2*-4), (v1/32) + -5));1;63;;;;;
 ((((v0 + v1)/2) + (v2*4)) == (((v0 + v1)/2) + (v2*4)));1;34;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*2) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*2) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*2) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*2) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*2) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*2) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*2) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*2) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))));1;192;;;;;
 ((((v0/250)*32) + (v1*10)) == (((v0/250)*32) + (v1*10)));1;37;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*32) + v3)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*32) + v3)));1;68;;;;;
 (min(((v0 + v1) + 125)/63, ((v2*4) + v3) + -1) == min(((v0 + v1) + 125)/63, ((v2*4) + v3) + -1));1;58;;;;;
 (((((v0 % (((v1*32) + 135)/20))*-40)/4)*4) == ((v0 % (((v1*32) + 135)/20))*-40));1;58;;;;;
 (max(min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65), (min(min(-47 - (max((v2/16) + ((v3*8) - (((v1 + v2) + 15)/16)), -7)*16), 1943 - (v0*16)), (min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 17)/65) + 1) == max(min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65), (min(min(-47 - (max((v2/16) + ((v3*8) - (((v1 + v2) + 15)/16)), -7)*16), 1943 - (v0*16)), (min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 17)/65) + 1));1;781;;;;;
 ((((v0 + v1) % 8) + 1007) >= 0);1;18;;;;;
 (min((max(min(v0 + v1, 31), 0)*64) + 78, v2) == min((max(min(v0 + v1, 31), 0)*64) + 78, v2));1;64;;;;;
 (((((((v0 + v1) + 440)/63) - (v1/63)) + 19)/12) == ((((((v0 + v1) + 440)/63) - (v1/63)) + 19)/12));1;89;;;;;
 (((((v0 - v1)/2) + (v2*-8)) + 7) == ((((v0 - v1)/2) + (v2*-8)) + 7));1;40;;;;;
 (((v0 - (v1/4)) + -127) == ((v0 - (v1/4)) + -127));1;56;;;;;
 (((min(v0*2, 61) + v1) + v2) < ((min(v0*2, 61) + (v1 + 1)) + v2));1;77;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*16) + 252)/170) == (((((((v0 + v1) + 124)/125) - (v1/125))*16) + 252)/170));1;80;;;;;
 (((min((v0*4) + (((((v1/63)*16) + (v2*32)) + (v3*8))*4), (min(min(min(((((v1/63) + (v2*2))*2) + v3)*4, (min(((v4 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 4)/4, (((v1/63) + (v2*2))*2) + v3)*4, (min(((v4 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 4)*8) + 28)/4)*4) == min((v0*4) + (((((v1/63)*16) + (v2*32)) + (v3*8))*4), (min(min(min(((((v1/63) + (v2*2))*2) + v3)*4, (min(((v4 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 4)/4, (((v1/63) + (v2*2))*2) + v3)*4, (min(((v4 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 4)*8) + 28));1;232;;;;;
 (min((((v0 + v1) + -1)/63)*8, v2 + 7) == min((((v0 + v1) + -1)/63)*8, v2 + 7));1;69;;;;;
 (max(min(max(max((289 - ((v0/125)*32))/274, (578 - ((v0/125)*64))/548), 0), ((v1*64) + 619)/548), (min(((((v2 + v0) + 124)/125) - (v0/125))*64, (v1*64) + 547) + 72)/548) == max(min(max(max((289 - ((v0/125)*32))/274, (578 - ((v0/125)*64))/548), 0), ((v1*64) + 619)/548), (min(((((v2 + v0) + 124)/125) - (v0/125))*64, (v1*64) + 547) + 72)/548));1;245;;;;;
 ((max(min((v0*504) + (v1 - max((((v2 + v3) + 7)/8)*8, 1994)), 23), -480) + min(max((((v2 + v3) + 7)/8)*8, 1994), ((v0*504) + v1) + 480)) == (max(min((v0*504) + (v1 - max((((v2 + v3) + 7)/8)*8, 1994)), 23), -480) + min(max((((v2 + v3) + 7)/8)*8, 1994), ((v0*504) + v1) + 480)));1;131;;;;;
 (((((v0 % ((v1/8) + 1))*8)/2)*2) == ((v0 % ((v1/8) + 1))*8));1;51;;;;;
 (((v0 + 63)/64) != 0);0;442;;;;;
 ((((v0 + v1)/8) + (v2*6)) == (((v0 + v1)/8) + (v2*6)));1;47;;;;;
 (max(((v0 % 8) + 15)/8, ((((min(v1*8, 117) + v0) + 7)/8) - min((min(v1*8, 117) + v0)/8, ((v0 + 7)/8) + v1)) + 1) <= 1024);0;3498;;;;;
 ((max(min(((v0 + v1) + 132)/8, 249) - max(min((v0 + v1)/8, 249), 0), 0) + (v2*-4)) == (max(min(((v0 + v1) + 132)/8, 249) - max(min((v0 + v1)/8, 249), 0), 0) + (v2*-4)));1;104;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && ((((((v0*4) + v1) + v2) + 0) + 3) <= ((((v0*4) + v1) + 0) + v2))) && ((((((v0*4) + v1) + v2) + 3) + 3) >= ((((v0*4) + v1) + ((4 + 0) - 1)) + v2))) && ((v3*3) <= ((v3*3) + 0))) && (((v3*3) + 2) >= ((v3*3) + ((3 + 0) - 1))));0;241;;;;;
 (min(v0*1000, v1 + -1000) == min(v0*1000, v1 + -1000));1;717;;;;;
 (min((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) + 5)/63, ((max(min((v1/8)*8, 2004), 9) + 180)/63) + ((v2/4)*4)) == min((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) + 5)/63, ((max(min((v1/8)*8, 2004), 9) + 180)/63) + ((v2/4)*4)));1;136;;;;;
 (max(min(249 - v0, (0 + 73) - 1) + 1, min(max(0 - v0, 0), 73 + 0)) <= min(max(0 - v0, 0), 73 + 0));0;760;;;;;
 ((((min(v0/8, 0) + v1)*8) - ((v2*4) + v3)) == (((min(v0/8, 0) + v1)*8) - ((v2*4) + v3)));1;50;;;;;
 (min(((v0 + v1) + -1)/62, ((v1/62) + ((v2/11)*11)) + 10) == min(((v0 + v1) + -1)/62, ((v1/62) + ((v2/11)*11)) + 10));1;68;;;;;
 ((max(v0 + v1, -499) - ((v2*2) + v3)) == (max(v0 + v1, -499) - ((v2*2) + v3)));1;50;;;;;
 (min(v0*2, v1 + 37) == min(v0*2, v1 + 37));1;38;;;;;
 (((min(v0*224, 444)/4)*4) == min(v0*224, 444));1;57;;;;;
 (((v0 + 131)/126) != 0);0;364;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (((222 + 0) - 1) >= ((222 + 0) - 1)));1;151;;;;;
 ((((v0*4) + v1) + 3) < (((v0 + 1)*4) + v1));1;58;;;;;
 ((((v0*-32)/8)*8) == (v0*-32));1;56;;;;;
 (((v0*4) + -308) == ((((v0*4) + -308) + 320) - 1));0;54;;;;;
 ((v0 + -41) >= (((v0 + -41) + 79) - 1));0;32;;;;;
 ((max(min(((((v0/8)*8) + -5)/63)*8, 253), 4) + (((v1 + 13)/4)*4)) == (max(min(((((v0/8)*8) + -5)/63)*8, 253), 4) + (((v1 + 13)/4)*4)));1;95;;;;;
 ((((v0 - ((v1*20) + v2)) + 3)/4) == (((v0 - ((v1*20) + v2)) + 3)/4));1;48;;;;;
 ((((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 865)/250) == (((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 865)/250));1;267;;;;;
 (((max(min((v1*-1000) + (((v2 + v4) - (v3*128)) - v4), 128), 0)/4)*4) == max(min((v1*-1000) + (((v2 + v4) - (v3*128)) - v4), 128), 0));0;1133;;;;;
 (((v0*4) + ((v1*8) + v2)) == ((v0*4) + ((v1*8) + v2)));1;1182;;;;;
 (min(((v0 + v1) + 127)/16, v2 - max(((-112 - ((min(v3*128, v4 + -128) + v0) % 16))/16) + (v5*4), -3)) == min(((v0 + v1) + 127)/16, v2 - max(((-112 - ((min(v3*128, v4 + -128) + v0) % 16))/16) + (v5*4), -3)));1;136;;;;;
 (min((v0*8) + ((v1*16) + ((v2*128) + (min((min(((v2*-16) + v3) - v0, 15) + (v1*-2))*8, -4) + (min(min(((v2*-16) + v3) - v0, 15) + (v1*-2), 1)*8)))), v4 + 8) == min((v0*8) + ((v1*16) + ((v2*128) + (min((min(((v2*-16) + v3) - v0, 15) + (v1*-2))*8, -4) + (min(min(((v2*-16) + v3) - v0, 15) + (v1*-2), 1)*8)))), v4 + 8));1;140;;;;;
 ((((max(min(min(v3*128, v4 + -128) + v2, 1999), 0) + (max(min(min(v3*128, v4 + -128) + v2, 1871), -128)*-1))/4)*4) == (max(min(min(v3*128, v4 + -128) + v2, 1999), 0) + (max(min(min(v3*128, v4 + -128) + v2, 1871), -128)*-1)));0;1649;;;;;
 (min((v0*4) + v1, v2 + 34) == min((v0*4) + v1, v2 + 34));1;44;;;;;
 (((((((v0 + v1) + 1)/2) - (v1/2)) + 135)/128) == ((((((v0 + v1) + 1)/2) - (v1/2)) + 135)/128));1;76;;;;;
 ((((min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2, 1999) - max((max(min((v1/4)*8, 4012), 13) + -19)/2, 0))/16) + 1) == (((min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2, 1999) - max((max(min((v1/4)*8, 4012), 13) + -19)/2, 0))/16) + 1));1;134;;;;;
 (min(7 - ((((((v0*32) + v1)*2) + (max(min(v2/2, 999), 0) + (v3*126))) - min(max(min(((v4 + v2) + -1)/2, 999), 0), max(min(v2/2, 999), 0) + 499))*2), 251 - (((v0*32) + v1)*4)) == min(7 - ((((((v0*32) + v1)*2) + (max(min(v2/2, 999), 0) + (v3*126))) - min(max(min(((v4 + v2) + -1)/2, 999), 0), max(min(v2/2, 999), 0) + 499))*2), 251 - (((v0*32) + v1)*4)));1;190;;;;;
 (max(min(min((((((v1 + v2) - (max(min((v3/500)*8, 36), 5)*64)) + 1058)/704)*5) + -1, ((((max(min(min(((v4 + v3) + 499)/500, 3)*8, 22), -7) - max(min((v3/500)*8, 36), 5)) + 15)/11)*5) + -1), (0 + (((v5 + 25)/11)*5)) - 1) + 1, min(max((((v2 - (max(min((v3/500)*8, 36), 5)*64)) + 1058)/704)*5, 0), (((v5 + 25)/11)*5) + 0)) <= min(max((((v2 - (max(min((v3/500)*8, 36), 5)*64)) + 1058)/704)*5, 0), (((v5 + 25)/11)*5) + 0));0;5352;;;;;
 ((((max(((v0 + v1)/4) + ((v2*128) - (((v0 + v1) + 999)/4)), -26)*-1) - 6) + (((v0 + v1)/4) + ((min((min(((((v0 + v1) % 4) + 999)/4) + (v2*-128), 127) + 6)/33, ((max(((-996 - ((v0 + v1) % 4))/4) + (v2*128), -127)*-4) + 27)/132)*33) + (v2*128)))) == (((max(((v0 + v1)/4) + ((v2*128) - (((v0 + v1) + 999)/4)), -26)*-1) - 6) + (((v0 + v1)/4) + ((min((min(((((v0 + v1) % 4) + 999)/4) + (v2*-128), 127) + 6)/33, ((max(((-996 - ((v0 + v1) % 4))/4) + (v2*128), -127)*-4) + 27)/132)*33) + (v2*128)))));1;348;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 77)/67) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 77)/67));1;62;;;;;
 ((((v0 - v1) + 47)/34) == (((v0 - v1) + 47)/34));1;112;;;;;
 ((min((v0 + v1) - (v2*500), v1 + 500) - ((v3*4) + v1)) == (min((v0 + v1) - (v2*500), v1 + 500) - ((v3*4) + v1)));1;67;;;;;
 ((min(max(((v0 + v1) + 7)/8, 249), (min(v1/8, 0) + (v2*8)) + 2) + (v3*4)) == (min(max(((v0 + v1) + 7)/8, 249), (min(v1/8, 0) + (v2*8)) + 2) + (v3*4)));1;77;;;;;
 (((v0 + 127)/128) == ((v0 + 127)/128));1;37;;;;;
 (max(min(min(v0 + v1, (max(min(v2, 1998), -1) + v3) + 3), 2000), min(max(max(min(v2, 1998), -1) + 1, v1), (max(min(v2, 1998), -1) + v3) + 3)) == max(min(min(v0 + v1, (max(min(v2, 1998), -1) + v3) + 3), 2000), min(max(max(min(v2, 1998), -1) + 1, v1), (max(min(v2, 1998), -1) + v3) + 3)));1;134;;;;;
 ((((min(((v3 % (((v4*64) + 355)/260))*260) + (((v2/63)*64) + 164), (((v1 + v2) + -1)/63)*64)*-1)/4)*4) == (min(((v3 % (((v4*64) + 355)/260))*260) + (((v2/63)*64) + 164), (((v1 + v2) + -1)/63)*64)*-1));0;1929;;;;;
 ((((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*8) + 507)/500) == (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*8) + 507)/500));1;107;;;;;
 ((min((v0 + v1) - (v2*127), (min(v3*64, 63) + v1) + 43) - (v3*64)) == (min((v0 + v1) - (v2*127), (min(v3*64, 63) + v1) + 43) - (v3*64)));1;76;;;;;
 (min(v0, 7) == min(v0, 7));1;54;;;;;
 (max(min(v0, 115), min(v1 - v2, 19) + 96) == max(min(v0, 115), min(v1 - v2, 19) + 96));1;57;;;;;
 (min(v0 - ((v1*20) + v2), v3) == min(v0 - ((v1*20) + v2), v3));1;36;;;;;
 ((min((v0/2) + (((min((v1*64) + 63, v2) + 10)/4)*4), min(((v3 + v0) + 1)/2, ((v0/2) + (v1*64)) + 63) + 7) - ((v1*64) + ((v0/2) + (v4*15)))) == (min((v0/2) + (((min((v1*64) + 63, v2) + 10)/4)*4), min(((v3 + v0) + 1)/2, ((v0/2) + (v1*64)) + 63) + 7) - ((v1*64) + ((v0/2) + (v4*15)))));1;140;;;;;
 (min((v0*3) + v1, ((v2 + v3)*8) + 6) == min((v0*3) + v1, ((v2 + v3)*8) + 6));1;60;;;;;
 (min(v0*8, ((v1*68) + (((v2 + v3)/8)*8)) + 52) == min(v0*8, ((v1*68) + (((v2 + v3)/8)*8)) + 52));1;68;;;;;
 (((((((v0*128) + v1) + -5)/63)*64) + -16) == ((((((((v0*128) + v1) + -5)/63)*64) + -16) + (((((v1 + v2) + 62)/63)*64) + 64)) - 1));0;190;;;;;
 ((v0 - (v1/8)) == (v0 - (v1/8)));1;74;;;;;
 (((((v0 + v1) + -1)/16) - ((((v2*8) + v3)*4) + v4)) == ((((v0 + v1) + -1)/16) - ((((v2*8) + v3)*4) + v4)));1;69;;;;;
 (((v0*126) + (v1*251)) == ((v0*126) + (v1*251)));1;38;;;;;
 (min(v0*8, ((min(min(((((min(v1*64, v2 + -64) + v3) % 8) + 71)/8) + (v4*-3), 2)*2, (max(v4*3, 7)*-2) + 18) + (v5*2))*4) + 3) == min(v0*8, ((min(min(((((min(v1*64, v2 + -64) + v3) % 8) + 71)/8) + (v4*-3), 2)*2, (max(v4*3, 7)*-2) + 18) + (v5*2))*4) + 3));1;157;;;;;
 (min(min(((min((min((min(v0 - v1, (v2*64) + 14)/4)*4, (v2*64) + 11) + v1) + 3, v0) - ((v2*64) + v1)) + 59)/2, (((v3 + v4) - (((v2*64) + v1)*2))/4) + 22), v5 + 30) == min(min(((min((min((min(v0 - v1, (v2*64) + 14)/4)*4, (v2*64) + 11) + v1) + 3, v0) - ((v2*64) + v1)) + 59)/2, (((v3 + v4) - (((v2*64) + v1)*2))/4) + 22), v5 + 30));1;184;;;;;
 (max(min(min(min(((v5 - v4)*2) + 9, (((v2 + v3) + 31)/4) - (v4*2)), ((min((v5*8) + 5, v2 + v3) + 34)/4) - (v4*2)), (0 + ((min(((((v6 + v7) + 15)/8) - (v8*16)) - (v7/8), 11)*2) + 11)) - 1) + 1, min(max((((v3 + 34)/4) - (v4*2)) + 1, 0), ((min(((((v6 + v7) + 15)/8) - (v8*16)) - (v7/8), 11)*2) + 11) + 0)) <= min(max((((v3 + 34)/4) - (v4*2)) + 1, 0), ((min(((((v6 + v7) + 15)/8) - (v8*16)) - (v7/8), 11)*2) + 11) + 0));0;4223;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 18)/17) == ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 18)/17));1;461;;;;;
 ((((((((v0 + v1) + -1)/500) - (v1/500))*64) + 159)/71) == (((((((v0 + v1) + -1)/500) - (v1/500))*64) + 159)/71));1;121;;;;;
 (((v0 + 999)/1000) != 0);0;355;;;;;
 (min(max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2), v2 + 3) == min(max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2), v2 + 3));1;1714;;;;;
 (min(max(max((v0 + 12)/8, v1 + -32), 1), (min(v2, -20) + v1) + 4) == min(max(max((v0 + 12)/8, v1 + -32), 1), (min(v2, -20) + v1) + 4));1;75;;;;;
 ((((-492 - ((min(v0*500, v1 + -500) + v2) % 8))/8) + (v3*4)) == (((-492 - ((min(v0*500, v1 + -500) + v2) % 8))/8) + (v3*4)));1;70;;;;;
 (((((v0*20) + v1) + v2)*8) == ((((v0*20) + v1) + v2)*8));1;41;;;;;
 (((v0*8) + -18) == ((((v0*8) + -18) + (((v1 - v0)*8) + 64)) - 1));0;90;;;;;
 (min(max(min(v0 + v1, 2000), 1), max(min(v1, 1999), 0) + -5) == min(max(min(v0 + v1, 2000), 1), max(min(v1, 1999), 0) + -5));1;67;;;;;
 (max((v0 + -24)/1000, 0) >= ((max((v0 + -24)/1000, 0) + max(((v0 + 999)/1000) - max((v0 + -24)/1000, 0), 0)) - 1));0;742;;;;;
 ((((max(min((((v0 + v1) + 127)/32)*4, 246), -3) - max(min((((min(v0, 125) + v1) + -125)/32)*4, 285), 36))*8) + 322) >= 0);0;1669;;;;;
 (min(((((v0 + v1) + 3)/2) - (v2*63)) - (v1/2), min(v3, 25) + 7) == min(((((v0 + v1) + 3)/2) - (v2*63)) - (v1/2), min(v3, 25) + 7));1;87;;;;;
 (((v0*500) + ((v1*128) + v2)) == ((v0*500) + ((v1*128) + v2)));1;30;;;;;
 (((((((v0 + v1) + -1)/65) - (v1/65)) + 5)/4) == ((((((v0 + v1) + -1)/65) - (v1/65)) + 5)/4));1;59;;;;;
 ((((v0*8) + 53)/34) != 0);0;440;;;;;
 (((v0/32) + (v1*37)) == ((v0/32) + (v1*37)));1;23;;;;;
 (min(max((((v0 + v1) + 15)/16) - ((v1 + -34)/16), ((((v0 + v1) + 79)/16) - ((v1 + -2)/16)) + -1), v2 + 3) == min(max((((v0 + v1) + 15)/16) - ((v1 + -34)/16), ((((v0 + v1) + 79)/16) - ((v1 + -2)/16)) + -1), v2 + 3));1;150;;;;;
 (((v0*129) + ((v1/2)*2)) == ((v0*129) + ((v1/2)*2)));1;47;;;;;
 ((min(v0*64, 61) + (min(v1*125, v2 + -125) + v3)) == (min(v0*64, 61) + (min(v1*125, v2 + -125) + v3)));1;48;;;;;
 (((v0*4) + (max(min((v1*16) + v2, min(v3 + v2, 2015) + -16), 0) - max(min((v1*16) + v2, min(v3 + v2, 2000) + -16), -15))) == ((v0*4) + (max(min((v1*16) + v2, min(v3 + v2, 2015) + -16), 0) - max(min((v1*16) + v2, min(v3 + v2, 2000) + -16), -15))));1;1118;;;;;
 (((v0/32) + (v1*2)) == ((v0/32) + (v1*2)));1;37;;;;;
 (((((max(min((v2*64) + (v1/4), 499), 0)/8)*-1)/2)*2) == ((max(min((v2*64) + (v1/4), 499), 0)/8)*-1));0;1338;;;;;
 ((((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/16) + 1) == (((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/16) + 1));1;249;;;;;
 (((((((v0 + v1) + -1)/32) - (v1/32))/2) + 1) == ((((((v0 + v1) + -1)/32) - (v1/32))/2) + 1));1;305;;;;;
 (((min(min(min((v0/2) + (((min(((v1 + v0) + -1)/2, min((min(v2*32, 302) + v3) + 28, (v0/2) + ((v4*334) + ((min((v4*-334) + v5, 333)/4)*4))) + 3) - (v0/2))/2)*2), ((v2*32) + v3) + 30) + 1, v6) - (v2*32), ((v7*16) + v3) + 15) + (v7*-16)) - ((v8*2) + v3)) == ((min(min(min((v0/2) + (((min(((v1 + v0) + -1)/2, min((min(v2*32, 302) + v3) + 28, (v0/2) + ((v4*334) + ((min((v4*-334) + v5, 333)/4)*4))) + 3) - (v0/2))/2)*2), ((v2*32) + v3) + 30) + 1, v6) - (v2*32), ((v7*16) + v3) + 15) + (v7*-16)) - ((v8*2) + v3)));1;315;;;;;
 ((min((((v0 + v1) + -1)/4) - (v2*128), (v1/4) + 127) - ((v1/4) + (v3*4))) == (min((((v0 + v1) + -1)/4) - (v2*128), (v1/4) + 127) - ((v1/4) + (v3*4))));1;89;;;;;
 ((min((((v0 + v1) + -1)/8) - (v2*64), (min(v3*12, 52) + (v1/8)) + 11) - ((v3*12) + ((v1/8) + (v4*4)))) == (min((((v0 + v1) + -1)/8) - (v2*64), (min(v3*12, 52) + (v1/8)) + 11) - ((v3*12) + ((v1/8) + (v4*4)))));1;103;;;;;
 (min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7), (max(min((v1/500)*8, 36), 5) + (v2*16)) + 1) == min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7), (max(min((v1/500)*8, 36), 5) + (v2*16)) + 1));1;105;;;;;
 (((((((v0*250) + (v1 + v2)) % 8) + 249)/8) - (v3*8)) == ((((((v0*250) + (v1 + v2)) % 8) + 249)/8) - (v3*8)));1;64;;;;;
 (min(v0*8, v1 + -8) == min(v0*8, v1 + -8));1;45;;;;;
 (min(33 - max(v0*12, 21), v1 + 1) == min(33 - max(v0*12, 21), v1 + 1));1;52;;;;;
 ((v0 - (max((v1*1004) - v2, -996) + ((v3*4) + ((v4*508) + v0)))) == (v0 - (max((v1*1004) - v2, -996) + ((v3*4) + ((v4*508) + v0)))));1;67;;;;;
 (((min((v0 + v1) - (v2*1000), v1 + 1000)*-4) + ((v3*250) + (((v4*500) + v1)*4))) == ((min((v0 + v1) - (v2*1000), v1 + 1000)*-4) + ((v3*250) + (((v4*500) + v1)*4))));1;82;;;;;
 ((max(min((v0/32)*16, 1036), 37) + (v1*4)) == (max(min((v0/32)*16, 1036), 37) + (v1*4)));1;57;;;;;
 (((v0*8) + (v1*5)) == ((v0*8) + (v1*5)));1;50;;;;;
 (min(max(max(max(min(((v0*2) + v1)*8, 2061), 62) + -62, v2), v3 + v2), (max(min(((v0*2) + v1)*8, 2061), 62) + v4) + -54) == min(max(max(max(min(((v0*2) + v1)*8, 2061), 62) + -62, v2), v3 + v2), (max(min(((v0*2) + v1)*8, 2061), 62) + v4) + -54));1;126;;;;;
 (min(((v0 + v1) + -1)/32, v2 + 31) == min(((v0 + v1) + -1)/32, v2 + 31));1;82;;;;;
 ((min(v0, 24) + -24) >= (((min(v0, 24) + -24) + (29 - min(v0, 24))) - 1));0;62;;;;;
 ((min(((v0 + v1) + 5)/2, ((v1/2) + (v2*504)) + 498) + (v3*2)) == (min(((v0 + v1) + 5)/2, ((v1/2) + (v2*504)) + 498) + (v3*2)));1;73;;;;;
 (((v0 + 138)/128) != 0);0;374;;;;;
 ((((v0*2) + 21)/17) != 0);0;436;;;;;
 ((((max(min(v0 + v1, 1998), -1) - max(min(v1, 2007), 8)) + 72)/63) == (((max(min(v0 + v1, 1998), -1) - max(min(v1, 2007), 8)) + 72)/63));1;147;;;;;
 (((((((v0 + v1) + 249)/250) - (v1/250))/4) + 1) == ((((((v0 + v1) + 249)/250) - (v1/250))/4) + 1));1;66;;;;;
 (max(((v0 - ((v1*32) + v2)) + 5)/4, (((v0 - v2)/4) + (v1*-8)) + 2) == max(((v0 - ((v1*32) + v2)) + 5)/4, (((v0 - v2)/4) + (v1*-8)) + 2));1;79;;;;;
 (min(v0*128, v1 + -128) == min(v0*128, v1 + -128));1;1550;;;;;
 (min((((v0 + v1) + 127)/32) - (v1/32), v2 + 3) == min((((v0 + v1) + 127)/32) - (v1/32), v2 + 3));1;62;;;;;
 (((v0 + v1) + -2) == ((((v0 + v1) + -2) + 130) - 1));0;58;;;;;
 ((((max(v0, 1997) - min(v1, 0)) + 38)/36) >= 0);1;41;;;;;
 (0 == ((0 + ((min(v0, 3)*4) + 4)) - 1));0;64;;;;;
 (min((((v0 + v1) + 55)/8) - (v1/8), v2 + 3) == min((((v0 + v1) + 55)/8) - (v1/8), v2 + 3));1;52;;;;;
 (min(((((v0 + v1) + 3)/4) - (v1/4)) + -251, v2) == min(((((v0 + v1) + 3)/4) - (v1/4)) + -251, v2));1;95;;;;;
 (min(max((v0*5) + v1, 8), ((v0*5) + v1) + 11) == min(max((v0*5) + v1, 8), ((v0*5) + v1) + 11));1;66;;;;;
 (((((((v0/63)*2) + v1)*8) + v2)*4) == ((((((v0/63)*2) + v1)*8) + v2)*4));1;67;;;;;
 (min((v0*4) + v1, (v2*8) + 50) == min((v0*4) + v1, (v2*8) + 50));1;45;;;;;
 ((((max(((v0 + v1) + 23)/8, 249) - min(v1/8, 4)) + 21)/17) >= 0);1;92;;;;;
 (min((((((max(v0, 0) - v1) + 1)/31)*31) + v1)*8, (max(v0, 0)*8) + 12) == min((((((max(v0, 0) - v1) + 1)/31)*31) + v1)*8, (max(v0, 0)*8) + 12));1;116;;;;;
 (((min(((v0 + v1) + -1)/65, ((v1/65) + (min(min((v2*4) + 3, v3)/4, v2)*4)) + 3) - (v2*4)) - ((v1/65) + v4)) == ((min(((v0 + v1) + -1)/65, ((v1/65) + (min(min((v2*4) + 3, v3)/4, v2)*4)) + 3) - (v2*4)) - ((v1/65) + v4)));1;104;;;;;
 (min(max(((v0*8) + v1)*8, 75), ((((v0*8) + v1) + v2)*8) + 65) == min(max(((v0*8) + v1)*8, 75), ((((v0*8) + v1) + v2)*8) + 65));1;67;;;;;
 (((v0*8) + -4) >= ((((v0*8) + -4) + 8) - 1));0;53;;;;;
 (min(max(v0, 1997), v1 + 705) == min(max(v0, 1997), v1 + 705));1;48;;;;;
 ((((v0*8) + 259)/252) != 0);0;418;;;;;
 ((((v0*2) + (v1 + v2)) + -1) >= (((((v0*2) + (v1 + v2)) + -1) + 2) - 1));0;59;;;;;
 (max(min(1999, (((((v1*14) + v2)*2) + -7) + 28) - 1) + 1, min(max(0, (((v1*14) + v2)*2) + -7), 28 + ((((v1*14) + v2)*2) + -7))) <= min(max(0, (((v1*14) + v2)*2) + -7), 28 + ((((v1*14) + v2)*2) + -7)));0;1616;;;;;
 (min((max(min(v0 + v1, 1999), 0)/16)*16, ((((max(min(v1, 2002), 3) + -3)/16) + v2)*16) + 1) == min((max(min(v0 + v1, 1999), 0)/16)*16, ((((max(min(v1, 2002), 3) + -3)/16) + v2)*16) + 1));1;547;;;;;
 ((min((((min(v0*1000, v1 + -1000) + v2) % 8) + 1007)/8, (v3*32) + 95) - (((v3*8) + v4)*4)) == (min((((min(v0*1000, v1 + -1000) + v2) % 8) + 1007)/8, (v3*32) + 95) - (((v3*8) + v4)*4)));1;92;;;;;
 (((min(max(min(((v0 + v1) + -1)/8, 249), 0) - (v2*12), max(min(v1/8, 249), 0) + 11)*-2) + ((max(min(v1/8, 249), 0)*2) + v3)) == ((min(max(min(((v0 + v1) + -1)/8, 249), 0) - (v2*12), max(min(v1/8, 249), 0) + 11)*-2) + ((max(min(v1/8, 249), 0)*2) + v3)));1;157;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= v0)) && ((((249*4) + v0) + 3) >= (v0 + 999))) && (((min(v1*8, 55) + v2)/8) <= ((min(v1*8, 55) + v2)/8))) && ((((min(v1*8, 55) + v2) + 15)/8) >= (((min(v1*8, 55) + v2) + 15)/8))) && (v3 <= v3)) && (v3 >= v3));1;199;;;;;
 ((min((((v0 + v1) + 31)/32) - (v2*32), (min(v3*12, 20) + (v1/32)) + 11) - ((v3*12) + ((v1/32) + (v4*4)))) == (min((((v0 + v1) + 31)/32) - (v2*32), (min(v3*12, 20) + (v1/32)) + 11) - ((v3*12) + ((v1/32) + (v4*4)))));1;103;;;;;
 (min(v0*8, ((v1*68) + (v2*8)) + 57) == min(v0*8, ((v1*68) + (v2*8)) + 57));1;60;;;;;
 ((max(min(min((((v0 + v1) + 124)/125)*64, ((v2*548) + ((v1/125)*64)) + 476), 959)*2, -81) - min(max(min((v2*1096) + ((v1/125)*128), 2061), 62), max(min((v2*548) + ((v1/125)*64), min((((v0 + v1) + 124)/125)*64, 959) + 72)*2, 63))) == (max(min(min((((v0 + v1) + 124)/125)*64, ((v2*548) + ((v1/125)*64)) + 476), 959)*2, -81) - min(max(min((v2*1096) + ((v1/125)*128), 2061), 62), max(min((v2*548) + ((v1/125)*64), min((((v0 + v1) + 124)/125)*64, 959) + 72)*2, 63))));1;193;;;;;
 ((v0 - (((v1*251) + v2)*4)) == (v0 - (((v1*251) + v2)*4)));1;43;;;;;
 ((max(max(min(v0/8, 256), 7)*8, 75) + (v1*128)) == (max(max(min(v0/8, 256), 7)*8, 75) + (v1*128)));1;73;;;;;
 (min(((v0 + v1) + 39)/32, v2 + 2) == min(((v0 + v1) + 39)/32, v2 + 2));1;45;;;;;
 ((v0 - (v1*531)) == (v0 - (v1*531)));1;36;;;;;
 ((((((((v0 + v1) + 127)/124) - ((v1 + -4)/124))*8) + 83)/76) == (((((((v0 + v1) + 127)/124) - ((v1 + -4)/124))*8) + 83)/76));1;66;;;;;
 (((((((uint1)1 && ((0 + (min(v0*32, 94) + v1)) <= ((min(v0*32, 94) + 0) + v1))) && ((3 + ((min(v0*32, 94) + v1) + 28)) >= ((min(v0*32, 94) + ((32 + 0) - 1)) + v1))) && (((v2*8) + v3) <= (((v2*8) + 0) + v3))) && ((((v2*8) + v3) + 7) >= (((v2*8) + ((8 + 0) - 1)) + v3))) && (0 <= 0)) && (0 >= 0));1;231;;;;;
 (max(max(min((v0 + v1)/4, 499), 0)*4, ((v2*4) + v3) + 1) == max(max(min((v0 + v1)/4, 499), 0)*4, ((v2*4) + v3) + 1));1;77;;;;;
 ((v0 - (v1*152)) == (v0 - (v1*152)));1;76;;;;;
 (((v0*2) + ((((v1 + v2) + 5)/2) + (min(v3*336, 332)/2))) == ((v0*2) + ((((v1 + v2) + 5)/2) + (min(v3*336, 332)/2))));1;73;;;;;
 ((((((((v0 + v1) + 31)/32) - (v1/32))*4) + 17)/9) == (((((((v0 + v1) + 31)/32) - (v1/32))*4) + 17)/9));1;82;;;;;
 (0 == ((0 + (126 - max(v0*32, 94))) - 1));0;68;;;;;
 (min((((((max(v0, 0) - v1) + 1)/31)*31) + v1)*8, (max(v0, 0)*8) + 12) == min((((((max(v0, 0) - v1) + 1)/31)*31) + v1)*8, (max(v0, 0)*8) + 12));1;100;;;;;
 ((max(min(min(((v0 + v1) + -1)/8, (min((min((((v0 + v1) + -1)/8) - v2, (v3*16) + 15)/2)*2, (v3*16) + 14) + v2) + 1), 249), 0) - (max(min(min((v3*16) + v2, min(((v0 + v1) + -1)/8, ((v3*16) + v2) + 15) + -1), 249), 0) + (v4*7))) == (max(min(min(((v0 + v1) + -1)/8, (min((min((((v0 + v1) + -1)/8) - v2, (v3*16) + 15)/2)*2, (v3*16) + 14) + v2) + 1), 249), 0) - (max(min(min((v3*16) + v2, min(((v0 + v1) + -1)/8, ((v3*16) + v2) + 15) + -1), 249), 0) + (v4*7))));1;237;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9)) + 78)/64) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9)) + 78)/64));1;300;;;;;
 (max(min(min(min(min(min(min(min(min(min(min(min(min((((v8 + v6) - max(min(v7, 1999), 0)) + -7)/12, (((v8 + v6) - max(min(v7, 1999), 0)) + -7)/12), (((v8 + v6) - max(min(v7, 1999), 0)) + -7)/12), (((v8 + v6) - max(min(v7, 1999), 0)) + -3)/12), (((v8 + v6) - max(min(v7, 1999), 0)) + -3)/12), (((v8 + v6) - max(min(v7, 1999), 0)) + -3)/12), ((min(v8 + v6, max(min(((v9 + 1005)/2)*2, 1995), -4) + 5) - max(min(v7, 1999), 0)) + -4)/12), ((min(v8 + v6, max(min(((v9 + 1005)/2)*2, 1995), -4) + 5) - max(min(v7, 1999), 0)) + -4)/12), ((min(v8 + v6, max(min(((v9 + 1005)/2)*2, 1995), -4) + 5) - max(min(v7, 1999), 0)) + -4)/12), (min(v8 + v6, max(min(((v9 + 1005)/2)*2, 1995), -4) + 1) - max(min(v7, 1999), 0))/12), (min(v8 + v6, max(min(((v9 + 1005)/2)*2, 1995), -4) + 1) - max(min(v7, 1999), 0))/12), (min(v8 + v6, max(min(((v9 + 1005)/2)*2, 1995), -4) + 1) - max(min(v7, 1999), 0))/12), (0 + ((v5/12) + 2)) - 1) + 1, min(max(max(((v6 - max(min(v7, 1999), 0))/12) + 1, ((v6 - max(min(v7, 1999), 0)) + 8)/12), 0), ((v5/12) + 2) + 0)) <= min(max(max(((v6 - max(min(v7, 1999), 0))/12) + 1, ((v6 - max(min(v7, 1999), 0)) + 8)/12), 0), ((v5/12) + 2) + 0));0;5151;;;;;
 (((((((v0 + v1) + 15)/4) - (v1/4)) + 6)/4) == ((((((v0 + v1) + 15)/4) - (v1/4)) + 6)/4));1;67;;;;;
 (((max(min((v3*-14) + (max(min(((v1 + v2) + 49)/2, 999), 0) - max(min((v1 + v2)/2, 999), 0)), 10), -6)/2)*2) == max(min((v3*-14) + (max(min(((v1 + v2) + 49)/2, 999), 0) - max(min((v1 + v2)/2, 999), 0)), 10), -6));0;1886;;;;;
 (max(min((v0/8) + ((v1*12) - (((v2 + v0) + -1)/8)), 0), 0 - max(min(v3, 11), 0)) == max(min((v0/8) + ((v1*12) - (((v2 + v0) + -1)/8)), 0), 0 - max(min(v3, 11), 0)));1;80;;;;;
 ((v0 + -929) >= (((v0 + -929) + (min(min((((((v1 + v2) + 755)/63)*64) - (v3*1853)) - ((v2/63)*64), 900) + v4, -953) + 954)) - 1));1;231;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 263)/252) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 263)/252));1;214;;;;;
 (((v0 + v1) + -1082) < (((v0 + 1) + v1) + -1085));0;52;;;;;
 (min((v0/63)*8, ((((v1 + v0) + -1)/63)*8) + 19) == min((v0/63)*8, ((((v1 + v0) + -1)/63)*8) + 19));1;79;;;;;
 ((((((v0 + v1) + 64)/65)*2) - (((v1/65)*2) + v2)) == (((((v0 + v1) + 64)/65)*2) - (((v1/65)*2) + v2)));1;69;;;;;
 (min(v0*64, v1 + 28) == min(v0*64, v1 + 28));1;53;;;;;
 (((v0*30) + (((v1*26) + v2)*8)) == ((v0*30) + (((v1*26) + v2)*8)));1;39;;;;;
 ((((max(min((((v0 + v1) + 39)/8)*8, 1991), -8) - max(min((v1/8)*8, 2007), 8))/16) + 2) == (((max(min((((v0 + v1) + 39)/8)*8, 1991), -8) - max(min((v1/8)*8, 2007), 8))/16) + 2));1;214;;;;;
 (max(min(min(min(min(min(min(min(min(min(6 - (v5/256), 6 - (v5/256)), 6 - (v5/256)), ((((v4 + v5) + -225)/32) - (v5/32))/8), ((((v4 + v5) + -225)/32) - (v5/32))/8), ((((v4 + v5) + -225)/32) - (v5/32))/8), (min((min(v4 + v5, (v6 + v7) + 224) + -225)/32, 62) - (v5/32))/8), (min((min(v4 + v5, (v6 + v7) + 224) + -225)/32, 62) - (v5/32))/8), min((((min((v4 + v5) + 3, v6 + v7) + -228)/32) - (v5/32))/8, 6 - (v5/256))), (0 + ((v8/8) + 1)) - 1) + 1, min(max(max(max(max(max(0 - (v5/256), 0 - (v5/256)), (0 - (v5/32))/8), max(((((v7 + 31)/32) - (v5/32)) + 7)/8, 0 - (v5/256))), max(((((v7 + 31)/32) - (v5/32)) + 7)/8, 0 - (v5/256))), 0), ((v8/8) + 1) + 0)) <= min(max(max(max(max(max(0 - (v5/256), 0 - (v5/256)), (0 - (v5/32))/8), max(((((v7 + 31)/32) - (v5/32)) + 7)/8, 0 - (v5/256))), max(((((v7 + 31)/32) - (v5/32)) + 7)/8, 0 - (v5/256))), 0), ((v8/8) + 1) + 0));0;5327;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 1022)/1005) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 1022)/1005));1;137;;;;;
 (min(max(min(v0 + v1, 1999), 0) + (((v2 + 258)/4)*4), max(min(v0 + v1, 1748), -251) + 255) == min(max(min(v0 + v1, 1999), 0) + (((v2 + 258)/4)*4), max(min(v0 + v1, 1748), -251) + 255));1;86;;;;;
 (min(((v0 + v1) + 3)/4, ((v1/4) + (v2*32)) + 27) == min(((v0 + v1) + 3)/4, ((v1/4) + (v2*32)) + 27));1;59;;;;;
 (0 == ((0 + (135 - max(v0*68, 67))) - 1));0;62;;;;;
 (min(508 - max((v0*4) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 497), min(v4, -497) + 508) == min(508 - max((v0*4) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 497), min(v4, -497) + 508));1;1196;;;;;
 ((max(min((v0*8) + v1, (min(v2, 507)*4) + -36), -7) - (max(min((v0*8) + v1, min(v2*4, 2035) + -36), 0) + (v3*4))) == (max(min((v0*8) + v1, (min(v2, 507)*4) + -36), -7) - (max(min((v0*8) + v1, min(v2*4, 2035) + -36), 0) + (v3*4))));1;118;;;;;
 ((((-144 - v0)/4) + (v1*2)) == (((-144 - v0)/4) + (v1*2)));1;42;;;;;
 (min(((v0*16) + ((min(min((max(v1, 0) - (v0*8)) - ((v2*103) + v3), 7)*8, (v4*36) + 24)/4) + (((v2*103) + v3)*2)))*4, v5 + 2) == min(((v0*16) + ((min(min((max(v1, 0) - (v0*8)) - ((v2*103) + v3), 7)*8, (v4*36) + 24)/4) + (((v2*103) + v3)*2)))*4, v5 + 2));1;160;;;;;
 (min((v0*66) + (v1*16), (v2*16) + 17) == min((v0*66) + (v1*16), (v2*16) + 17));1;74;;;;;
 (((((v0 % ((v1/8) + 1))*8)/4)*4) == ((v0 % ((v1/8) + 1))*8));1;45;;;;;
 (((((((v0 + v1) + 5)/2) - (v1/2)) + 509)/504) == ((((((v0 + v1) + 5)/2) - (v1/2)) + 509)/504));1;69;;;;;
 (((min((v0*72) + ((max(min(v1/36, 6), -1) + 1)*72), 428)/2)*2) == min((v0*72) + ((max(min(v1/36, 6), -1) + 1)*72), 428));1;160;;;;;
 (0 == ((0 + (72 - (max(v0, 1)*36))) - 1));0;43;;;;;
 (max(min(min((((v1 + v2) - max(max(min((v4/63)*8, 258), 9)*8, 75)) + -50)/125, ((min(max(min((((v3 + v4) + 62)/63)*8, 243), -6)*8, (v1 + v2) + 70) - max(max(min((v4/63)*8, 258), 9)*8, 75)) + 4)/125), (0 + ((v5 + 253)/125)) - 1) + 1, min(max(((v2 - max(max(min((v4/63)*8, 258), 9)*8, 75)) + 199)/125, 0), ((v5 + 253)/125) + 0)) <= min(max(((v2 - max(max(min((v4/63)*8, 258), 9)*8, 75)) + 199)/125, 0), ((v5 + 253)/125) + 0));0;3521;;;;;
 ((max(min(v0, 62), 0) + (v1*4)) == (max(min(v0, 62), 0) + (v1*4)));1;39;;;;;
 ((((v0*-126)/3)*3) == (v0*-126));1;35;;;;;
 (((v0*8) + ((v1*28) + v2)) == ((v0*8) + ((v1*28) + v2)));1;33;;;;;
 (((max(min(v0/63, 31), 0)*8) + ((v1*17) - (max(min(((v2 + v0) + -1)/63, 31), 0)*8))) == ((max(min(v0/63, 31), 0)*8) + ((v1*17) - (max(min(((v2 + v0) + -1)/63, 31), 0)*8))));1;167;;;;;
 (min(v0*8, ((v1*135) + ((v2/63)*8)) + 121) == min(v0*8, ((v1*135) + ((v2/63)*8)) + 121));1;69;;;;;
 (((v0*2) + (v1 + v2)) == ((v0*2) + (v1 + v2)));1;25;;;;;
 ((((v0 - v1) + 32)/20) != 0);0;447;;;;;
 ((v0 + 1) != 0);0;1064;;;;;
 (min(((v0*128) + v1)*4, (v2*8) + 4) == min(((v0*128) + v1)*4, (v2*8) + 4));1;55;;;;;
 ((min((((v0 + v1) + 1)/2) - (v2*128), (v1/2) + 127) - ((v1/2) + (v3*12))) == (min((((v0 + v1) + 1)/2) - (v2*128), (v1/2) + 127) - ((v1/2) + (v3*12))));1;2455;;;;;
 (min(((((v0*16) + v1)*2) + v2)*4, (v3*8) + 109) == min(((((v0*16) + v1)*2) + v2)*4, (v3*8) + 109));1;66;;;;;
 (max(v0*8, ((v1*8) + v2) + 147) == max(v0*8, ((v1*8) + v2) + 147));1;55;;;;;
 ((((v0 - v1) + 511)/505) == (((v0 - v1) + 511)/505));1;56;;;;;
 (((max(min(((v0 + v1) + -1)/63, 31), 0) - (max(min(v1/63, 31), 0) + (v2*8))) + 1) == ((max(min(((v0 + v1) + -1)/63, 31), 0) - (max(min(v1/63, 31), 0) + (v2*8))) + 1));1;115;;;;;
 (((((v0 + v1) + 7)/8) - (v2*9)) == ((((v0 + v1) + 7)/8) - (v2*9)));1;46;;;;;
 ((((max(v0, -1) - v1) + 1008)/1004) != 0);0;521;;;;;
 (0 == ((0 + (3 - max(v0*4, -1))) - 1));0;57;;;;;
 (((((min(((v0 + v1) + 7)/8, (min((min((((v0 + v1) + 7)/8) - (v1/8), (v2*12) + 11)/4)*4, (v2*12) + 8) + (v1/8)) + 3)*8) - (v3*12)) - (v2*96)) - ((v1/8)*8)) == ((((min(((v0 + v1) + 7)/8, (min((min((((v0 + v1) + 7)/8) - (v1/8), (v2*12) + 11)/4)*4, (v2*12) + 8) + (v1/8)) + 3)*8) - (v3*12)) - (v2*96)) - ((v1/8)*8)));1;152;;;;;
 (((v0/3) + 10) != 0);0;312;;;;;
 ((((min(min(v0*16, 136) + ((v1/32)*4), (((((v2 + v1) + 127)/32) - (v3*38))*4) + 20)/4) + (v0*-4)) - (v1/32)) == (((min(min(v0*16, 136) + ((v1/32)*4), (((((v2 + v1) + 127)/32) - (v3*38))*4) + 20)/4) + (v0*-4)) - (v1/32)));1;108;;;;;
 (((max((((v0 + v1) + 31)/32)*32, 1964) - min((v1/32)*32, 36)) + 339) >= 0);1;75;;;;;
 ((min(min((((v0 + v1) + 63)/32)*4, (((v1/32) + (v2*15))*4) + 35)*8, ((v3*228) + (((v1/32) + (v2*15))*32)) + 28) + (v4*4)) == (min(min((((v0 + v1) + 63)/32)*4, (((v1/32) + (v2*15))*4) + 35)*8, ((v3*228) + (((v1/32) + (v2*15))*32)) + 28) + (v4*4)));1;149;;;;;
 ((((v0/2) + ((((min((v1*-507) + v2, 499) + 22)/58)*58) + (v1*507))) + (min(((((v3 + v0) + 13)/2) - (v1*507)) - (v0/2), -21) + (min(min(((((v3 + v0) + 13)/2) - (v1*507)) - (v0/2), 499)/2, 17)*2))) == (((v0/2) + ((((min((v1*-507) + v2, 499) + 22)/58)*58) + (v1*507))) + (min(((((v3 + v0) + 13)/2) - (v1*507)) - (v0/2), -21) + (min(min(((((v3 + v0) + 13)/2) - (v1*507)) - (v0/2), 499)/2, 17)*2))));1;153;;;;;
 (((v0 + 10)/128) == ((((v0 + 10)/128) + ((((v0 + 10) % 128) + 127)/128)) - 1));0;535;;;;;
 ((((v0*252)/4)*4) == (v0*252));1;26;;;;;
 (min((((((v0 + v1) + 59)/2) - (v1/2)) + 1)/2, v2 + 9) == min((((((v0 + v1) + 59)/2) - (v1/2)) + 1)/2, v2 + 9));1;68;;;;;
 (0 >= ((0 + (39 - max((v0 % 8)*5, 34))) - 1));0;52;;;;;
 (((v0*4) + ((v1*8) + (min(v2*128, v3 + -128) + v4))) == ((v0*4) + ((v1*8) + (min(v2*128, v3 + -128) + v4))));1;44;;;;;
 ((max(v0*64, 191) + (v1*4)) == (max(v0*64, 191) + (v1*4)));1;45;;;;;
 (max((min(v0, 15) + 15)/4, max(min(v1, 15)/4, -3) + 3) == max((min(v0, 15) + 15)/4, max(min(v1, 15)/4, -3) + 3));1;91;;;;;
 (min(max(min(v0*8, 1994), -5) + 13, v1) == min(max(min(v0*8, 1994), -5) + 13, v1));1;62;;;;;
 (((((((uint1)1 && (((v0 + v1) + -36) <= ((v0 + v1) + -36))) && (((v0 + v1) + -36) >= ((v0 + v1) + -36))) && (((((0*4) + (v2*8)) + 0) + -39) <= ((v2*8) + -39))) && (((((35*4) + ((v2*8) + 139)) + 3) + -39) >= ((v2*8) + 103))) && (0 <= 0)) && (((22 + 0) - 1) >= ((22 + 0) - 1)));1;189;;;;;
 (min(v0*8, ((v1*122) + (((v2*152) + v3)*8)) + 54) == min(v0*8, ((v1*122) + (((v2*152) + v3)*8)) + 54));1;81;;;;;
 (max(min((v1 + v2) + -1, ((((max(v3*4, -1) + v4)*2) + 1) + ((min(v3*4, -1)*2) + 10)) - 1) + 1, min(max(v2, ((max(v3*4, -1) + v4)*2) + 1), ((min(v3*4, -1)*2) + 10) + (((max(v3*4, -1) + v4)*2) + 1))) <= min(max(v2, ((max(v3*4, -1) + v4)*2) + 1), ((min(v3*4, -1)*2) + 10) + (((max(v3*4, -1) + v4)*2) + 1)));0;2618;;;;;
 (max(-5 - max(min(((((v0 + v1) + 31)/32) - (v2*4)) - v3, -1), -4), max(min(v4, 4), 1) + -5) == max(-5 - max(min(((((v0 + v1) + 31)/32) - (v2*4)) - v3, -1), -4), max(min(v4, 4), 1) + -5));1;101;;;;;
 ((((((((v0 + v1) + 265)/133) - (v1/133))*8) + 93)/46) == (((((((v0 + v1) + 265)/133) - (v1/133))*8) + 93)/46));1;87;;;;;
 (((v0*36) + (v1*63)) == ((v0*36) + (v1*63)));1;35;;;;;
 (((v0/251) + 1) != 0);0;318;;;;;
 (min(((((v0 + v1) + 64)/65)*8) + 7, v2) == min(((((v0 + v1) + 64)/65)*8) + 7, v2));1;59;;;;;
 (min(1 - ((v0*4000) + (((min((v1 + v2) - (v3*1000), ((v4*250) + ((v0*500) + v2)) + 250) + (v4*-250))*-8) + ((((v5*16) + v6)*4) + ((v7*1004) + (v2*8))))), 1003 - (((v5*16) + v6)*4)) == min(1 - ((v0*4000) + (((min((v1 + v2) - (v3*1000), ((v4*250) + ((v0*500) + v2)) + 250) + (v4*-250))*-8) + ((((v5*16) + v6)*4) + ((v7*1004) + (v2*8))))), 1003 - (((v5*16) + v6)*4)));1;181;;;;;
 (min((((v0*4) + ((v1*8) + v2))*8) + 13, v3) == min((((v0*4) + ((v1*8) + v2))*8) + 13, v3));1;60;;;;;
 ((min(((v0 + v1) + -1)/2, (min((min((v2*16) + 15, v3)/4)*4, (v2*16) + 12) + (v1/2)) + 3) - ((v2*16) + ((v1/2) + (v4*4)))) == (min(((v0 + v1) + -1)/2, (min((min((v2*16) + 15, v3)/4)*4, (v2*16) + 12) + (v1/2)) + 3) - ((v2*16) + ((v1/2) + (v4*4)))));1;125;;;;;
 (((v0*16) - ((((((v1 + v2)/125)*8) + v3)*2) + v4)) == ((v0*16) - ((((((v1 + v2)/125)*8) + v3)*2) + v4)));1;66;;;;;
 (((min((v0*32) + (max(min(((((v1 + v2)/2)*-2) + 31)/32, 8), 0)*32), 220)/2)*2) == min((v0*32) + (max(min(((((v1 + v2)/2)*-2) + 31)/32, 8), 0)*32), 220));1;148;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 6)/4) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 6)/4));1;228;;;;;
 (((v0*2) + (max(min(((v1 + v2)/125)*8, 125), 1) + (v3*4))) == ((v0*2) + (max(min(((v1 + v2)/125)*8, 125), 1) + (v3*4))));1;76;;;;;
 (max(min((((v0*8) - v1) + 345)/116, 0 - min(v1/116, 0)), ((min(v0*8, 1770) - v1) + 230)/116) == max(min((((v0*8) - v1) + 345)/116, 0 - min(v1/116, 0)), ((min(v0*8, 1770) - v1) + 230)/116));1;61;;;;;
 (min(max(v0 + v1, -7) - min(v1, 2002), v2) == min(max(v0 + v1, -7) - min(v1, 2002), v2));1;57;;;;;
 (min(132 - (v0*67), (v1 - ((v0*67) + ((v2*133) + v3))) + 49) == min(132 - (v0*67), (v1 - ((v0*67) + ((v2*133) + v3))) + 49));1;67;;;;;
 (((min((((min(v0*1000, v1 + -1000) + v2) % 8) + 1007)/8, (v3*8) + 7)*-2) + ((v3*16) + v4)) == ((min((((min(v0*1000, v1 + -1000) + v2) % 8) + 1007)/8, (v3*8) + 7)*-2) + ((v3*16) + v4)));1;91;;;;;
 (min(v0*128, v1 + -128) == min(v0*128, v1 + -128));1;44;;;;;
 ((v0 - ((((v1*8) + v2)*2) + v3)) == (v0 - ((((v1*8) + v2)*2) + v3)));1;52;;;;;
 ((max(min((v0/16)*16, 1999), 0) + (v1*994)) == (max(min((v0/16)*16, 1999), 0) + (v1*994)));1;54;;;;;
 (((v0 + 17)/253) == ((((v0 + 17)/253) + ((((v0 + 17) % 253) + 252)/253)) - 1));0;588;;;;;
 (((((((v0 + v1) + -1)/64) - ((v1 + -8)/64))/17) + 1) == ((((((v0 + v1) + -1)/64) - ((v1 + -8)/64))/17) + 1));1;80;;;;;
 (((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((v2 + 0) <= (0 + v2))) && ((v2 + 3) >= (((4 + 0) - 1) + v2))) && (0 <= 0)) && (0 >= 0));1;107;;;;;
 (((max((v0*16) + ((v1*3)*16), 170)/2)*2) == max((v0*16) + ((v1*3)*16), 170));1;80;;;;;
 ((v0*18) == (((v0*18) + ((max(v0, 1)*-18) + 36)) - 1));0;92;;;;;
 (((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*8) + 99)/87) == ((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*8) + 99)/87));1;246;;;;;
 (v0 == ((v0 + (((v1 + 7)/4) - ((v1 + 3)/4))) - 1));1;62;;;;;
 (min(max(max(((v0/8)*8) + -4, v1), v2 + v1), (((v0/8) + v3)*8) + 9) == min(max(max(((v0/8)*8) + -4, v1), v2 + v1), (((v0/8) + v3)*8) + 9));1;81;;;;;
 (((v0*15) + ((v1*2) + v2)) == ((v0*15) + ((v1*2) + v2)));1;44;;;;;
 (max(min(1999, (((v1/4)*4) + (((((v1 % 4) + 15)/4)*4) + 4)) - 1) + 1, min(max(0, (v1/4)*4), (((((v1 % 4) + 15)/4)*4) + 4) + ((v1/4)*4))) <= min(max(0, (v1/4)*4), (((((v1 % 4) + 15)/4)*4) + 4) + ((v1/4)*4)));0;1711;;;;;
 ((((-117 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (((v3*2) + v4)*4)) == (((-117 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (((v3*2) + v4)*4)));1;114;;;;;
 (((v0 + 251)/252) != 0);0;361;;;;;
 (min(v0*128, v1 + -128) == min(v0*128, v1 + -128));1;670;;;;;
 ((max(min(v0, 36), 5) + (v1*4)) == (max(min(v0, 36), 5) + (v1*4)));1;36;;;;;
 (((((((uint1)1 && (((((v0*503) + v1) + v2) + -3) <= ((((v0*503) + v1) + v2) + -3))) && (((((v0*503) + v1) + v2) + -3) >= ((((v0*503) + v1) + v2) + -3))) && (((v3 + 0) + -1) <= ((0 + v3) + -1))) && (((v3 + 3) + -1) >= ((((4 + 0) - 1) + v3) + -1))) && (v4 <= v4)) && (v4 >= v4));1;158;;;;;
 (max(-20 - (max(min(max(min(((v0 + v1) + -1)/8, 249), 0) - ((v2*4) + ((v3*16) + v4)), 1), -2)*8), (max(min(v5, 2), -1)*8) + -20) == max(-20 - (max(min(max(min(((v0 + v1) + -1)/8, 249), 0) - ((v2*4) + ((v3*16) + v4)), 1), -2)*8), (max(min(v5, 2), -1)*8) + -20));1;82;;;;;
 (((((((v0 + v1) + 79)/16) - (v1/16)) + 68)/66) == ((((((v0 + v1) + 79)/16) - (v1/16)) + 68)/66));1;73;;;;;
 (((((v0 + v1)/63)*8) + -24) == ((((((v0 + v1)/63)*8) + -24) + ((v2*8) + 62)) - 1));0;116;;;;;
 (((v0/32) + (((v1*4) + v2)*4)) == ((v0/32) + (((v1*4) + v2)*4)));1;49;;;;;
 (((min(max(min((v0/500)*8, 67), 36), (max(min((((v1 + v0) + 499)/500)*8, 26), -5) - (v2*2)) + 40)*-2) + ((max(min((v0/500)*8, 67), 36)*2) + v3)) == ((min(max(min((v0/500)*8, 67), 36), (max(min((((v1 + v0) + 499)/500)*8, 26), -5) - (v2*2)) + 40)*-2) + ((max(min((v0/500)*8, 67), 36)*2) + v3)));1;151;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 247) == min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 247));1;76;;;;;
 (max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min((((v1 + v2) - max(min(v3, 1999), 0)) + -63)/64, (((((v1 + v2)/8)*8) - max(min(v3, 1999), 0)) + -71)/64), ((((((v1 + v2) + -73)/8)*8) - max(min(v3, 1999), 0)) + 1)/64), ((((((v1 + v2) + -71)/8)*8) - max(min(v3, 1999), 0)) + 1)/64), ((((((v1 + v2) + -70)/8)*8) - max(min(v3, 1999), 0)) + 1)/64), ((((((v1 + v2) + -69)/8)*8) - max(min(v3, 1999), 0)) + 1)/64), ((((((v1 + v2) + -68)/8)*8) - max(min(v3, 1999), 0)) + 1)/64), ((((((v1 + v2) + -67)/8)*8) - max(min(v3, 1999), 0)) + 1)/64), ((((((v1 + v2) + -66)/8)*8) - max(min(v3, 1999), 0)) + 1)/64), ((min(max(min(v3, 1875), -124) + 59, v1 + v2) - max(min(v3, 1999), 0)) + 4)/64), ((min(((v1 + v2)/8)*8, max(min(v3, 1875), -124) + 59) - max(min(v3, 1999), 0)) + 4)/64), ((min((((v1 + v2) + -1)/8)*8, max(min(v3, 1875), -124) + 59) - max(min(v3, 1999), 0)) + 4)/64), ((min((((v1 + v2) + 1)/8)*8, max(min(v3, 1875), -124) + 59) - max(min(v3, 1999), 0)) + 4)/64), ((min((((v1 + v2) + 2)/8)*8, max(min(v3, 1875), -124) + 59) - max(min(v3, 1999), 0)) + 4)/64), ((min((((v1 + v2) + 3)/8)*8, max(min(v3, 1875), -124) + 59) - max(min(v3, 1999), 0)) + 4)/64), ((min((((v1 + v2) + 4)/8)*8, max(min(v3, 1875), -124) + 59) - max(min(v3, 1999), 0)) + 4)/64), ((min((((v1 + v2) + 5)/8)*8, max(min(v3, 1875), -124) + 59) - max(min(v3, 1999), 0)) + 4)/64), ((min((((v1 + v2) + 6)/8)*8, max(min(v3, 1875), -124) + 59) - max(min(v3, 1999), 0)) + 4)/64), (0 + ((v4 + 190)/64)) - 1) + 1, min(max(max(max(max(max(max(max(max(max(((v2 - max(min(v3, 1999), 0)) + 68)/64, ((((v2/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + -1)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 1)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 2)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 3)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 4)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 5)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 6)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), 0), ((v4 + 190)/64) + 0)) <= min(max(max(max(max(max(max(max(max(max(((v2 - max(min(v3, 1999), 0)) + 68)/64, ((((v2/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + -1)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 1)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 2)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 3)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 4)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 5)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), (((((v2 + 6)/8)*8) - max(min(v3, 1999), 0)) + 68)/64), 0), ((v4 + 190)/64) + 0));0;11539;;;;;
 ((((v0*8) + 42)/34) != 0);0;444;;;;;
 (min(84 - (max(max(min((v0/63)*8, 285), 36) + ((v1*16) - max(min((((v2 + v0) + -1)/63)*8, 244), -5)), 26)*2), (min((max(min((((v2 + v0) + -1)/63)*8, 244), -5) - (v1*16)) - max(min((v0/63)*8, 285), 36), -26)*2) + 85) == min(84 - (max(max(min((v0/63)*8, 285), 36) + ((v1*16) - max(min((((v2 + v0) + -1)/63)*8, 244), -5)), 26)*2), (min((max(min((((v2 + v0) + -1)/63)*8, 244), -5) - (v1*16)) - max(min((v0/63)*8, 285), 36), -26)*2) + 85));1;256;;;;;
 (4 >= ((((min(v0*125, v1 + -125) + v2) % 8) + 124)/32));1;57;;;;;
 (((v0 + 143)/125) != 0);0;351;;;;;
 (max(min(min(min(min((min((v2 + v3)/2, 1000) - (v1*8)) + 3, (((((v4 + v5) + 15)/16) - v1)*8) + 8), 1003 - (v1*8)), min(((v2 + v3) + 7)/2, 1003) - (v1*8)), (0 + 64) - 1) + 1, min(max(max(4 - (v1*8), max((v3 + 9)/2, 4) - (v1*8)), 0), 64 + 0)) <= min(max(max(4 - (v1*8), max((v3 + 9)/2, 4) - (v1*8)), 0), 64 + 0));0;3301;;;;;
 (((((((uint1)1 && ((v0 + -5) <= (v0 + -5))) && (((1012 + (v0 + -5)) - 1) >= ((1012 + (v0 + -5)) - 1))) && ((-1 + v1) <= (-1 + v1))) && ((((9 + -1) - 1) + v1) >= (((9 + -1) - 1) + v1))) && (((v2*4) + 0) <= ((v2*4) + 0))) && (((v2*4) + 3) >= ((v2*4) + ((4 + 0) - 1))));1;182;;;;;
 (((((((v0 + v1) + 127)/32) - (v1/32))/4) + 3) == ((((((v0 + v1) + 127)/32) - (v1/32))/4) + 3));1;83;;;;;
 (((((v0 + v1) + -1)/8) - ((((v2*2) + v3)*4) + v4)) == ((((v0 + v1) + -1)/8) - ((((v2*2) + v3)*4) + v4)));1;80;;;;;
 (((v0*1020) + (((max(min(v1, 2002), 3) + -3)/16)*16)) == ((v0*1020) + (((max(min(v1, 2002), 3) + -3)/16)*16)));1;76;;;;;
 (((max(min((v2*-252) + max(max(-3 - (v1*4), (v1*4) + -2495), 0), -248), -500)/4)*4) == max(min((v2*-252) + max(max(-3 - (v1*4), (v1*4) + -2495), 0), -248), -500));0;1269;;;;;
 (min(max(max(min(v0, 249), 0)*8, 10), (max(min(v0, 249), 0)*8) + 8) == min(max(max(min(v0, 249), 0)*8, 10), (max(min(v0, 249), 0)*8) + 8));1;88;;;;;
 ((((v0 + v1)/4) + (v2*17)) == (((v0 + v1)/4) + (v2*17)));1;40;;;;;
 (((((v0 + v1)/2)*2) + -7) == ((((((v0 + v1)/2)*2) + -7) + 142) - 1));0;94;;;;;
 (((v0*18) + ((v1/125)*16)) == ((v0*18) + ((v1/125)*16)));1;26;;;;;
 (((((v0 + v1) + 23)/8) - v2) == ((((v0 + v1) + 23)/8) - v2));1;90;;;;;
 (((v0*12) + (min(v1*64, v2 + -64) + v3)) == ((v0*12) + (min(v1*64, v2 + -64) + v3)));1;45;;;;;
 ((min(v0, 1999) + (v1*4)) == (min(v0, 1999) + (v1*4)));1;463;;;;;
 ((v0 - (v1*126)) == (v0 - (v1*126)));1;39;;;;;
 ((((max(v0, -1) - v1) + 132)/128) == (((max(v0, -1) - v1) + 132)/128));1;60;;;;;
 (min(min((v0/32)*32, 36) + (v1*4), max(((v0/32) + v2)*32, 1964) + 74) == min(min((v0/32)*32, 36) + (v1*4), max(((v0/32) + v2)*32, 1964) + 74));1;75;;;;;
 ((((max((((v0 + v1) + -1)/65)*8, 239) - v2) + 21)/68) == (((((max((((v0 + v1) + -1)/65)*8, 239) - v2) + 21)/68) + (((((max((((v0 + v1) + -1)/65)*8, 239) - v2) + 21) % 68) + 67)/68)) - 1));0;1230;;;;;
 (0 >= ((0 + ((((v0 + v1) % 16) + 313)/32)) - 1));0;56;;;;;
 (min((((v0 + v1) + 62)/63)*64, ((v2*1108) + ((v1/63)*64)) + 943) == min((((v0 + v1) + 62)/63)*64, ((v2*1108) + ((v1/63)*64)) + 943));1;84;;;;;
 ((max(min(v0, 2002), 3) + (v1*36)) == (max(min(v0, 2002), 3) + (v1*36)));1;70;;;;;
 (((min(v0*12, 20)/2)*2) == min(v0*12, 20));1;24;;;;;
 (min(((v0 + v1) + 129)/2, (((v0 + v1)/2) + (v2*8)) + 71) == min(((v0 + v1) + 129)/2, (((v0 + v1)/2) + (v2*8)) + 71));1;95;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 15) == min(((v0 + v1) + -1)/8, v2 + 15));1;1312;;;;;
 (0 == ((0 + (15 - max(v0*8, 7))) - 1));0;59;;;;;
 ((min(((min(((v0 + v1) + 64)/65, v2 + 3) - (v3*8)) - (v4*4)) - (v1/65), (v5*2) + 1) + ((v1/65) + (((v3*2) + v4)*4))) == (min(((min(((v0 + v1) + 64)/65, v2 + 3) - (v3*8)) - (v4*4)) - (v1/65), (v5*2) + 1) + ((v1/65) + (((v3*2) + v4)*4))));1;131;;;;;
 ((((v0*8) - (v1*55)) - ((v2/63)*8)) == (((v0*8) - (v1*55)) - ((v2/63)*8)));1;55;;;;;
 ((min((((v0 + v1) + 64)/65) - (v2*4), ((v3*2) + v4) + 1) + (v3*-2)) == (min((((v0 + v1) + 64)/65) - (v2*4), ((v3*2) + v4) + 1) + (v3*-2)));1;81;;;;;
 ((min(((v0 + v1) + 63)/8, v2 + 15)*8) == (min(((v0 + v1) + 63)/8, v2 + 15)*8));1;62;;;;;
 (min(((max(min(v0/8, 249), 0)/8) + v1)*8, ((max(min(((v2 + v0) + 7)/8, 249), 0)/8)*8) + 9) == min(((max(min(v0/8, 249), 0)/8) + v1)*8, ((max(min(((v2 + v0) + 7)/8, 249), 0)/8)*8) + 9));1;117;;;;;
 (((((v0*4) + min((v0*4) + ((((v1/125)*16) + (v2*137))*4), ((((v3 + v1) + 124)/125)*64) + 68))/2)*2) == ((v0*4) + min((v0*4) + ((((v1/125)*16) + (v2*137))*4), ((((v3 + v1) + 124)/125)*64) + 68)));1;112;;;;;
 (min(132 - (v0*2), ((max(min(((v1 + v2) + -1)/63, 31), 0)*8) - ((v0*2) + v3)) + 16) == min(132 - (v0*2), ((max(min(((v1 + v2) + -1)/63, 31), 0)*8) - ((v0*2) + v3)) + 16));1;93;;;;;
 ((((((v0*10) + (v1*8)) + v2)*8) + -99) >= (((((((v0*10) + (v1*8)) + v2)*8) + -99) + 8) - 1));0;73;;;;;
 ((((v0 - v1)/16) + 1) == (((v0 - v1)/16) + 1));1;55;;;;;
 (((((((uint1)1 && ((((-507 + v0) + 0) + 498) <= (((((0*4) + 0) + v0) + max(-507, 0)) + -9))) && ((((3 + v0) + 3) + 498) >= (((((((127 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + 3) + -9))) && ((max(max(min(v1, 1999), (max(min(v1, 1999), 9) + v2) - max(v2, -136)), 9) + -9) <= (max(-136 - max(v2, -136), 0) + (max(min(v1, 1999), 9) + -9)))) && (((max(min(v1, 1999), 9) + v2) + 130) >= (3 + (((v2 + 137) + (max(min(v1, 1999), 9) + -9)) - 1)))) && (v3 <= v3)) && (v3 >= v3));1;456;;;;;
 ((((v0/2) + ((((min((v1*-504) + v2, 499) + 8)/128)*128) + (v1*504))) + (min(((((v3 + v0) + 5)/2) - (v1*504)) - (v0/2), -5) + (min(min(((((v3 + v0) + 5)/2) - (v1*504)) - (v0/2), 499)/4, 29)*4))) == (((v0/2) + ((((min((v1*-504) + v2, 499) + 8)/128)*128) + (v1*504))) + (min(((((v3 + v0) + 5)/2) - (v1*504)) - (v0/2), -5) + (min(min(((((v3 + v0) + 5)/2) - (v1*504)) - (v0/2), 499)/4, 29)*4))));1;148;;;;;
 (min(max(min((((v0 + v1) + 499)/500)*8, 26), -5) + 30, v2) == min(max(min((((v0 + v1) + 499)/500)*8, 26), -5) + 30, v2));1;62;;;;;
 ((((v0/65)*8) + (v1*14)) == (((v0/65)*8) + (v1*14)));1;47;;;;;
 (((v0*3) + ((v1*77) + v2)) == ((v0*3) + ((v1*77) + v2)));1;38;;;;;
 (min(((v0 + v1) + 47)/16, ((v1 + -2)/16) + (v2*2)) == min(((v0 + v1) + 47)/16, ((v1 + -2)/16) + (v2*2)));1;69;;;;;
 (max(((v0 - v1) + 13)/16, 0) >= ((max(((v0 - v1) + 13)/16, 0) + max((((v0 - v1) + 28)/16) - max(((v0 - v1) + 13)/16, 0), 0)) - 1));0;939;;;;;
 ((((max(min(((v0 + v1) + 499)/500, 3)*8, -7) - max(min((v1/500)*8, 36), 5)) + 23)/9) == (((max(min(((v0 + v1) + 499)/500, 3)*8, -7) - max(min((v1/500)*8, 36), 5)) + 23)/9));1;148;;;;;
 (((min(v0*63, 62) + v1) + v2) < (((min(v0*63, 62) + (v1 + 1)) + v2) + -5));0;92;;;;;
 ((max(min(v0, 999), 0) - (v1*64)) == (max(min(v0, 999), 0) - (v1*64)));1;52;;;;;
 (((((((v0*128) + v1) + -5)/63)*64) + -16) == ((((((((v0*128) + v1) + -5)/63)*64) + -16) + (((((v1 + v2) + 62)/63)*64) + 64)) - 1));0;228;;;;;
 (((((v0 + v1) + 11)/2) - ((((v2*57) + v3)*2) + v4)) == ((((v0 + v1) + 11)/2) - ((((v2*57) + v3)*2) + v4)));1;73;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 256), 7)));1;251;;;;;
 (min(max(v0*4, -511) - min(v0*4, 1999), v1 + 3) == min(max(v0*4, -511) - min(v0*4, 1999), v1 + 3));1;57;;;;;
 ((max(min(v0/16, 126), 2) + (v1*6)) == (max(min(v0/16, 126), 2) + (v1*6)));1;62;;;;;
 (min((v0*34) + (max(v1*63, -5) + v2), ((v1*63) + v2) + 29) == min((v0*34) + (max(v1*63, -5) + v2), ((v1*63) + v2) + 29));1;56;;;;;
 (max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min((v4/125) + -1, (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (v4/125) + -1), (min(min(2128 - v3, v4), ((v6 + v5) - v3) + 128)/125) + -1), (min(min(2128 - v3, v4), ((v6 + v5) - v3) + 128)/125) + -1), (min(min(2128 - v3, v4), ((v6 + v5) - v3) + 128)/125) + -1), (min(min(2128 - v3, v4), ((v6 + v5) - v3) + 128)/125) + -1), (min((v6 + v5) - v3, min(1995 - v3, v4) + 5) + -130)/125), (min((v6 + v5) - v3, min(1995 - v3, v4) + 5) + -130)/125), (min((v6 + v5) - v3, min(1995 - v3, v4) + 5) + -130)/125), (1870 - v3)/125), (1870 - v3)/125), (1870 - v3)/125), (1870 - v3)/125), (1870 - v3)/125), (1870 - v3)/125), (0 + ((v4 + 124)/125)) - 1) + 1, min(max(max(max(max(max(max(max(max(max(max(max(((max(v5, 0) - v3) + 128)/125, ((max(v5, 0) - v3) + 128)/125), ((max(v5, 0) - v3) + 128)/125), ((max(v5, 0) - v3) + 128)/125), (-5 - v3)/125), (-5 - v3)/125), (-5 - v3)/125), (128 - v3)/125), (128 - v3)/125), (128 - v3)/125), (128 - v3)/125), 0), ((v4 + 124)/125) + 0)) <= min(max(max(max(max(max(max(max(max(max(max(max(((max(v5, 0) - v3) + 128)/125, ((max(v5, 0) - v3) + 128)/125), ((max(v5, 0) - v3) + 128)/125), ((max(v5, 0) - v3) + 128)/125), (-5 - v3)/125), (-5 - v3)/125), (-5 - v3)/125), (128 - v3)/125), (128 - v3)/125), (128 - v3)/125), (128 - v3)/125), 0), ((v4 + 124)/125) + 0));0;4409;;;;;
 (min(675 - (((v0*57) + v1)*4), (((((v2 + v3) + 11)/2) - ((((v0*57) + v1)*2) + v4))*2) + 15) == min(675 - (((v0*57) + v1)*4), (((((v2 + v3) + 11)/2) - ((((v0*57) + v1)*2) + v4))*2) + 15));1;103;;;;;
 (min((v0*16) + v1, min(v2 + v1, 2015) + -16) == min((v0*16) + v1, min(v2 + v1, 2015) + -16));1;72;;;;;
 (((v0*16) + ((v1/2) + ((v2*128) - v3))) == ((v0*16) + ((v1/2) + ((v2*128) - v3))));1;54;;;;;
 (min(max(((v0*125) + v1) + -7, v2), (min(v3, 125) + ((v0*125) + v1)) + 1) == min(max(((v0*125) + v1) + -7, v2), (min(v3, 125) + ((v0*125) + v1)) + 1));1;70;;;;;
 ((min((((v0 + v1) + -1)/8) - (v2*16), (v1/8) + 15) - ((v1/8) + (v3*4))) == (min((((v0 + v1) + -1)/8) - (v2*16), (v1/8) + 15) - ((v1/8) + (v3*4))));1;106;;;;;
 (min(v0 - ((v1 + v2)/32), v3) == min(v0 - ((v1 + v2)/32), v3));1;41;;;;;
 (((v0 + v1) - min((min(v1 + 190, v2) + (v3*-4)) + 126, v1)) == ((v0 + v1) - min((min(v1 + 190, v2) + (v3*-4)) + 126, v1)));1;78;;;;;
 (min((((v0*8) + v1)*16) + 8, v2) == min((((v0*8) + v1)*16) + 8, v2));1;47;;;;;
 (max(((v0*4) + v1)*4, ((min(((v2 + v3)/4) + (((v4*4) + v0)*4), v5)*4) + v6) + 16) == max(((v0*4) + v1)*4, ((min(((v2 + v3)/4) + (((v4*4) + v0)*4), v5)*4) + v6) + 16));1;106;;;;;
 ((max(min((v0*16) + v1, 1117), 118) + (v2*2)) == (max(min((v0*16) + v1, 1117), 118) + (v2*2)));1;54;;;;;
 ((((((v0 + v1) + -1)/250) - ((v2/4)*2)) - (v1/250)) == (((((v0 + v1) + -1)/250) - ((v2/4)*2)) - (v1/250)));1;80;;;;;
 ((((min(v0*668, v1 + -668)*32)/32)*32) == (min(v0*668, v1 + -668)*32));1;46;;;;;
 (((((min(v0, 128) + v1) + -128)/65) + ((v2/4)*4)) == ((((min(v0, 128) + v1) + -128)/65) + ((v2/4)*4)));1;62;;;;;
 (min(((v0 + v1) + 62)/63, ((v1/63) + ((v2/9)*9)) + 8) == min(((v0 + v1) + 62)/63, ((v1/63) + ((v2/9)*9)) + 8));1;104;;;;;
 (0 >= ((0 + ((((((v0 + v1) % 8) + 132)/8)*2) + 4)) - 1));0;66;;;;;
 ((max(min(v0/32, 63), 1) + (v1*15)) == (max(min(v0/32, 63), 1) + (v1*15)));1;47;;;;;
 (((v0*138) + ((v1*272) + (((v2/63)*64) + ((v3/4)*520)))) == ((v0*138) + ((v1*272) + (((v2/63)*64) + ((v3/4)*520)))));1;67;;;;;
 (max(-44 - (max(v0 - ((v1 + v2)/8), -5)*8), (v3*-8) + -44) == max(-44 - (max(v0 - ((v1 + v2)/8), -5)*8), (v3*-8) + -44));1;73;;;;;
 (min(((v0*64) + ((v1/2) + (((min(min((v0*-64) + ((((v2 + v1) + 13)/2) - (v1/2)), 55) + (v3*-6), -7)/2) + (v3*3))*2))) + 6, v4) == min(((v0*64) + ((v1/2) + (((min(min((v0*-64) + ((((v2 + v1) + 13)/2) - (v1/2)), 55) + (v3*-6), -7)/2) + (v3*3))*2))) + 6, v4));1;145;;;;;
 (min(131 - (((v0*2) + v1)*4), (min(v2*256, ((min(v3*1000, v4 + -1000) + v5) % 2) + 251) - ((((v0*2) + v1)*4) + ((v2*256) + (v6*132)))) + 259) == min(131 - (((v0*2) + v1)*4), (min(v2*256, ((min(v3*1000, v4 + -1000) + v5) % 2) + 251) - ((((v0*2) + v1)*4) + ((v2*256) + (v6*132)))) + 259));1;148;;;;;
 ((max(min(v0, 256), 7) + (v1*36)) == (max(min(v0, 256), 7) + (v1*36)));1;48;;;;;
 ((((v0*4)/2)*2) == (v0*4));1;57;;;;;
 (((((v0*114) + v1)*2) + -14) == ((((((v0*114) + v1)*2) + -14) + ((min(v2 - v1, 102)*2) + 24)) - 1));0;161;;;;;
 ((min(v0 - (v1*64), v2 + 63) - ((v3*4) + v2)) == (min(v0 - (v1*64), v2 + 63) - ((v3*4) + v2)));1;58;;;;;
 (((v0*4) + ((v1*64) + v2)) == ((v0*4) + ((v1*64) + v2)));1;265;;;;;
 (min((v0*4) + v1, (v2*8) + 233) == min((v0*4) + v1, (v2*8) + 233));1;50;;;;;
 ((min(v0*4, 241) + (((v1*3) + v2)*64)) == (min(v0*4, 241) + (((v1*3) + v2)*64)));1;60;;;;;
 ((max(min(v0, 548), 409) + -550) >= (((max(min(v0, 548), 409) + -550) + (552 - max(min(v0, 548), 409))) - 1));0;70;;;;;
 (min(max(max((((v0*16) + v1)*8) + -1, v2), v3 + v2), ((min(v4 - v1, 14) + ((v0*16) + v1))*8) + 19) == min(max(max((((v0*16) + v1)*8) + -1, v2), v3 + v2), ((min(v4 - v1, 14) + ((v0*16) + v1))*8) + 19));1;106;;;;;
 ((((v0*8) + 26)/17) != 0);0;461;;;;;
 (((v0/2) + (v1*3)) == ((v0/2) + (v1*3)));1;32;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*12)) == (max(min(v0 + v1, 1999), 0) + (v2*12)));1;48;;;;;
 (min(((v0 + v1) + 5)/2, v2 + 121) == min(((v0 + v1) + 5)/2, v2 + 121));1;37;;;;;
 (max(min(max(min(v0*4, 6), 3) + v1, v2 + 12), max(v0*4, 3) + v1) == max(min(max(min(v0*4, 6), 3) + v1, v2 + 12), max(v0*4, 3) + v1));1;75;;;;;
 (min(((v0*127) + v1) + 118, v2) == min(((v0*127) + v1) + 118, v2));1;62;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126) - (max((max(min((v1/4)*8, 4004), 5) + -13)/2, 0)/63))/11) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126) - (max((max(min((v1/4)*8, 4004), 5) + -13)/2, 0)/63))/11) + 1));1;169;;;;;
 ((((max(v0, 0) - v1)/1044) + 1) == (((max(v0, 0) - v1)/1044) + 1));1;61;;;;;
 ((min(v0, 0) + (v1*16)) == (min(v0, 0) + (v1*16)));1;18;;;;;
 (min(724 - ((((375 - ((min(v0*125, v1 + -125) + v2) % 500))/500)*512) + ((v3*61) + (v4*121))), 120 - (v3*61)) == min(724 - ((((375 - ((min(v0*125, v1 + -125) + v2) % 500))/500)*512) + ((v3*61) + (v4*121))), 120 - (v3*61)));1;116;;;;;
 ((min(v0, 2007) + (v1*128)) == (min(v0, 2007) + (v1*128)));1;40;;;;;
 (((v0*40) + (((v1*2) + v2)*64)) == ((v0*40) + (((v1*2) + v2)*64)));1;48;;;;;
 (min(v0*8, min((((v1 + v2) + 440)/63)*8, 269) + 41) == min(v0*8, min((((v1 + v2) + 440)/63)*8, 269) + 41));1;80;;;;;
 ((((28 - v0)/4) + ((((v1 + v2) + 251)/63)*2)) == (((28 - v0)/4) + ((((v1 + v2) + 251)/63)*2)));1;56;;;;;
 (((((v0 + v1) + 447)/32) - (((v2*3) + v3) + v4)) == ((((v0 + v1) + 447)/32) - (((v2*3) + v3) + v4)));1;64;;;;;
 ((((-62 - ((min(v0*64, v1 + -64) + v2) % 2))/2) + (v3*8)) == (((-62 - ((min(v0*64, v1 + -64) + v2) % 2))/2) + (v3*8)));1;71;;;;;
 (((v0*76) + (v1*8)) == ((v0*76) + (v1*8)));1;50;;;;;
 (((((v0*3) + v1)*4) + ((v2*4) + v3)) == ((((v0*3) + v1)*4) + ((v2*4) + v3)));1;81;;;;;
 ((min((((v0 + v1) + -1)/8) - (v2*16), (v1/8) + 15) - ((v1/8) + (v3*4))) == (min((((v0 + v1) + -1)/8) - (v2*16), (v1/8) + 15) - ((v1/8) + (v3*4))));1;113;;;;;
 ((max(min(v0, 39), -23) - (v1 + v2)) == (max(min(v0, 39), -23) - (v1 + v2)));1;76;;;;;
 (((v0 + v1)/32) >= (((((v0 - 1) + v1)/32) + 1) + 1));0;111;;;;;
 (min(max(v0, 0), ((v1*31) + ((v2*154) + v3)) + 30) == min(max(v0, 0), ((v1*31) + ((v2*154) + v3)) + 30));1;66;;;;;
 (min(((v0 + v1) + 21)/2, ((v1/2) + (min(v2*6, 515) + (v3*514))) + -17) == min(((v0 + v1) + 21)/2, ((v1/2) + (min(v2*6, 515) + (v3*514))) + -17));1;83;;;;;
 (max(((v0*4) + v1)*4, ((min(((v2 + v3)/4) + (((v4*4) + v0)*4), v5)*4) + v6) + 16) == max(((v0*4) + v1)*4, ((min(((v2 + v3)/4) + (((v4*4) + v0)*4), v5)*4) + v6) + 16));1;113;;;;;
 ((max(v0, 21) + (v1*4)) == (max(v0, 21) + (v1*4)));1;34;;;;;
 (((v0*1012) + (min(v1, 2007) + (v2*4))) == ((v0*1012) + (min(v1, 2007) + (v2*4))));1;46;;;;;
 (((((v0 + v1) + 7)/4) - ((v1/4) + (v2*32))) == ((((v0 + v1) + 7)/4) - ((v1/4) + (v2*32))));1;73;;;;;
 (((v0*508) + ((((min(v1, 985) + v2) + 7)/8)*8)) == ((v0*508) + ((((min(v1, 985) + v2) + 7)/8)*8)));1;44;;;;;
 (min(((((v0*2) + v1)*250) + ((v2*1000) + v3)) + 250, v4 + v3) == min(((((v0*2) + v1)*250) + ((v2*1000) + v3)) + 250, v4 + v3));1;66;;;;;
 (((min((((v0 + v1) + -1)/63) - (v2*2), (v1/63) + 1)*-8) + (((v1/63)*8) + (v3*7))) == ((min((((v0 + v1) + -1)/63) - (v2*2), (v1/63) + 1)*-8) + (((v1/63)*8) + (v3*7))));1;45;;;;;
 ((min((v0 + 184)/63, (((v1 + v0) + -1)/63) - (v2*4)) - ((v0 + -5)/63)) == (min((v0 + 184)/63, (((v1 + v0) + -1)/63) - (v2*4)) - ((v0 + -5)/63)));1;81;;;;;
 ((-12 - max(v0, -11)) >= (((-12 - max(v0, -11)) + (max(v0, -11) + 17)) - 1));0;63;;;;;
 ((v0 + -5) == (((v0 + -5) + ((0*8) + 8)) - 1));0;42;;;;;
 (min(((v0*64) + v1) + 63, v2) == min(((v0*64) + v1) + 63, v2));1;46;;;;;
 ((((((v0 + v1) + -1)/17) - (v2*8)) - (v1/17)) == (((((v0 + v1) + -1)/17) - (v2*8)) - (v1/17)));1;62;;;;;
 ((((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 143)/128) == (((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 143)/128));1;242;;;;;
 (((v0*4) + (max(v1*16, -4) + v2)) == ((v0*4) + (max(v1*16, -4) + v2)));1;54;;;;;
 (min(max(v0, 249), v1 + 15) == min(max(v0, 249), v1 + 15));1;67;;;;;
 (min(((v0 + v1) + -1)/65, v2 + 5) == min(((v0 + v1) + -1)/65, v2 + 5));1;49;;;;;
 (min((v0*3) + ((v1/63)*8), v2 + 4) == min((v0*3) + ((v1/63)*8), v2 + 4));1;231;;;;;
 (((v0 % 1005) + 1004) >= 0);1;20;;;;;
 ((max(min(((v0 + v1) + 1)/2, 999), 0) - ((v2*2) + v3)) == (max(min(((v0 + v1) + 1)/2, 999), 0) - ((v2*2) + v3)));1;78;;;;;
 (v0 != 0);0;285;;;;;
 ((((v0*2) + v1)*2) == (((((v0*2) + v1)*2) + 2) - 1));0;42;;;;;
 (max((min(v0, 125) + 3)/4, min(v1, 125)/4) == max((min(v0, 125) + 3)/4, min(v1, 125)/4));1;75;;;;;
 (((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((3 + v0) >= (((4 + 0) - 1) + v0))) && ((((v1*4) + v2) + 0) <= (((v1*4) + v2) + 0))) && ((((v1*4) + v2) + ((4 + 0) - 1)) >= (((v1*4) + v2) + ((4 + 0) - 1)))) && (v3 <= v3)) && (v3 >= v3));1;144;;;;;
 (max(min(min(min(999, min((v1 + v2)/2, 1000) + -1), min(((v1 + v2) + -1)/2, 999)), ((((v3 + v4)*8) + 1) + 8) - 1) + 1, min(max(max(0, max((v2 + 1)/2, 0)), ((v3 + v4)*8) + 1), 8 + (((v3 + v4)*8) + 1))) <= min(max(max(0, max((v2 + 1)/2, 0)), ((v3 + v4)*8) + 1), 8 + (((v3 + v4)*8) + 1)));0;2539;;;;;
 (max(min(min(min((((v2 + v3)/4) - (((v4*4) + v5)*16)) + -1, ((v1 - ((v4*4) + v5))*16) + 1), ((min((v1*64) + 6, v2 + v3) + -1)/4) - (((v4*4) + v5)*16)), (0 + ((min(v6 - v5, 3)*16) + 3)) - 1) + 1, min(max((((v3 + -1)/4) - (((v4*4) + v5)*16)) + 1, 0), ((min(v6 - v5, 3)*16) + 3) + 0)) <= min(max((((v3 + -1)/4) - (((v4*4) + v5)*16)) + 1, 0), ((min(v6 - v5, 3)*16) + 3) + 0));0;4145;;;;;
 (max(min(max((264 - max(max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32)*8, (v3*8) + 259))/4, 0), (270 - max((max(min(v4, 281), 32) - v3)*8, 259))/4), min(min(2257 - max(max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32)*8, (v3*8) + 259), 266 - max((max(min(v4, 281), 32) - v3)*8, 259))/4, 65 - (max((max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32) - v3)*8, 259)/4)) + 1) == max(min(max((264 - max(max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32)*8, (v3*8) + 259))/4, 0), (270 - max((max(min(v4, 281), 32) - v3)*8, 259))/4), min(min(2257 - max(max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32)*8, (v3*8) + 259), 266 - max((max(min(v4, 281), 32) - v3)*8, 259))/4, 65 - (max((max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32) - v3)*8, 259)/4)) + 1));1;368;;;;;
 ((((((((v0 + v1) + -1)/65) - (v1/65))*8) + 38)/31) == (((((((v0 + v1) + -1)/65) - (v1/65))*8) + 38)/31));1;69;;;;;
 (min(max(max((((v0*16) + v1)*8) + -1, v2), v3 + v2), ((min(v4 - v1, 14) + ((v0*16) + v1))*8) + 19) == min(max(max((((v0*16) + v1)*8) + -1, v2), v3 + v2), ((min(v4 - v1, 14) + ((v0*16) + v1))*8) + 19));1;113;;;;;
 ((((v0*32) + (v1 + v2)) + -1) == (((((v0*32) + (v1 + v2)) + -1) + 37) - 1));0;942;;;;;
 ((((((((v0 + v1) + -1)/1000) - (v1/1000))*256) + 735)/208) == (((((((v0 + v1) + -1)/1000) - (v1/1000))*256) + 735)/208));1;60;;;;;
 ((max(min(v0 + v1, 2003), 4) + (v2*4)) == (max(min(v0 + v1, 2003), 4) + (v2*4)));1;44;;;;;
 (max(min(min((v0*288) + 285, v1) + v2, 1992) + 6, min((v0*288) + 285, v1) + v2) == max(min(min((v0*288) + 285, v1) + v2, 1992) + 6, min((v0*288) + 285, v1) + v2));1;98;;;;;
 (min((((v0 + v1) + 64)/65)*8, ((v2*30) + ((v1/65)*8)) + 16) == min((((v0 + v1) + 64)/65)*8, ((v2*30) + ((v1/65)*8)) + 16));1;42;;;;;
 (min(((v0 + v1) + 1)/2, v2 + 2) == min(((v0 + v1) + 1)/2, v2 + 2));1;58;;;;;
 (((v0/4) + (v1*8)) == ((v0/4) + (v1*8)));1;77;;;;;
 (-31 == ((-31 + (38 - max(min(v0*4, 38), 3))) - 1));0;94;;;;;
 (min(max((v0/2)*2, v1), (((v0/2) + v2)*2) + 2) == min(max((v0/2)*2, v1), (((v0/2) + v2)*2) + 2));1;60;;;;;
 ((((v0 + v1)/65) + (v2*2)) == (((v0 + v1)/65) + (v2*2)));1;47;;;;;
 ((((v0*8) + 375)/33) != 0);0;445;;;;;
 (((v0 + v1) + -4) >= ((((v0 - 1) + v1) + 2) + 1));0;62;;;;;
 ((((418 - max(v0*84, 418))/8) + (v1*-4)) == (((418 - max(v0*84, 418))/8) + (v1*-4)));1;58;;;;;
 (((((73 - max(v0*34, 35))/20)*20) + (v0*34)) == ((((73 - max(v0*34, 35))/20)*20) + (v0*34)));1;44;;;;;
 (((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((((v2*63) + v3) + v4) + 0) + 8) <= ((((v2*63) + v3) + v4) + -10))) && ((((((v2*63) + v3) + v4) + 3) + 8) >= ((((v2*63) + v3) + v4) + 8))) && (0 <= ((0*4) + 0))) && (5 >= ((1*4) + 3)));0;219;;;;;
 ((((((v0*2) + v1) + v2)*8) + -36) < (((((v0*2) + v1) + (v2 + 1))*8) + -43));1;98;;;;;
 ((((((v0 + v1)*4) + v2)*8) + -192) >= (((((((v0 + v1)*4) + v2)*8) + -192) + 8) - 1));0;78;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8))/32) + 1) == ((((((v0 + v1) + -1)/8) - (v1/8))/32) + 1));1;49;;;;;
 (max(((v0 - ((v1*64) + v2)) + 9)/4, (((v0 - v2)/4) + (v1*-16)) + 3) == max(((v0 - ((v1*64) + v2)) + 9)/4, (((v0 - v2)/4) + (v1*-16)) + 3));1;78;;;;;
 (min(max(max((((v0/63)*-2) + 34)/33, (137 - ((v0/63)*8))/132), 0), ((v1*8) + 144)/132) == min(max(max((((v0/63)*-2) + 34)/33, (137 - ((v0/63)*8))/132), 0), ((v1*8) + 144)/132));1;136;;;;;
 ((max(min(v0, 64), -60) + -66) >= (((max(min(v0, 64), -60) + -66) + (70 - max(min(v0, 64), -60))) - 1));0;87;;;;;
 (((max(min(v0 + v1, 5), -2)*8) + -45) == ((((max(min(v0 + v1, 5), -2)*8) + -45) + (49 - (max(min(v0 + v1, 5), -2)*8))) - 1));0;147;;;;;
 (min((v0*500) + v1, min(v2 + v1, 2000) + -500) == min((v0*500) + v1, min(v2 + v1, 2000) + -500));1;43;;;;;
 ((((v0 - v1) + 77)/66) != 0);0;451;;;;;
 ((((max(min(v0 + v1, 1997), -2) - max(min(v1, 2006), 7)) + 1009)/1000) == (((max(min(v0 + v1, 1997), -2) - max(min(v1, 2006), 7)) + 1009)/1000));1;139;;;;;
 ((v0 + (((v1/16) + v2)*4)) == (v0 + (((v1/16) + v2)*4)));1;492;;;;;
 ((((((min((v0*32) + (min(v1/8, 4)*8), (min(min((v0*4) + (min(v1/8, 4) + -1), max(((v2 + v1) + 23)/8, 249)) + 3, (v0*4) + min(v1/8, 4))*8) + 12)/4)*4) + (min(((max((min((v0*-4) + (max(((v2 + v1) + 23)/8, 249) - min(v1/8, 4)), -1) + 5)/2, 0)*16) + (v0*32)) + (min(v1/8, 4)*8), (min(((max((min((v0*-4) + (max(((v2 + v1) + 23)/8, 249) - min(v1/8, 4)), -1) + 5)/2, 0)*2) + (v0*4)) + min(v1/8, 4), min((v0*4) + (min(v1/8, 4) + -1), max(((v2 + v1) + 23)/8, 249)) + 5)*8) + 12)*-1))/4)*4) == (((min((v0*32) + (min(v1/8, 4)*8), (min(min((v0*4) + (min(v1/8, 4) + -1), max(((v2 + v1) + 23)/8, 249)) + 3, (v0*4) + min(v1/8, 4))*8) + 12)/4)*4) + (min(((max((min((v0*-4) + (max(((v2 + v1) + 23)/8, 249) - min(v1/8, 4)), -1) + 5)/2, 0)*16) + (v0*32)) + (min(v1/8, 4)*8), (min(((max((min((v0*-4) + (max(((v2 + v1) + 23)/8, 249) - min(v1/8, 4)), -1) + 5)/2, 0)*2) + (v0*4)) + min(v1/8, 4), min((v0*4) + (min(v1/8, 4) + -1), max(((v2 + v1) + 23)/8, 249)) + 5)*8) + 12)*-1)));1;429;;;;;
 ((((v0 + v1)*2) + -36) == (((((v0 + v1)*2) + -36) + ((max((((v2 + v3)/32) - v4)*2, 17)*-2) + 38)) - 1));0;220;;;;;
 (((((v0/500) + v1)*16) - (((v0/500)*16) + v2)) == ((((v0/500) + v1)*16) - (((v0/500)*16) + v2)));1;48;;;;;
 (min(((v0/4) + (v1*256)) + 245, v2) == min(((v0/4) + (v1*256)) + 245, v2));1;38;;;;;
 (max(min((246 - v0)/4, (0 + 16) - 1) + 1, min(max(0 - (v0/4), 0), 16 + 0)) <= min(max(0 - (v0/4), 0), 16 + 0));0;832;;;;;
 ((max(min(v0/63, 31), 0) + (v1*20)) == (max(min(v0/63, 31), 0) + (v1*20)));1;66;;;;;
 (((max((v0*32) - max(min(min((v1/16)*8, 4) + v2, 990), -9), -20) + v3)*2) == ((max((v0*32) - max(min(min((v1/16)*8, 4) + v2, 990), -9), -20) + v3)*2));1;100;;;;;
 (((max(min((v2*-12) + (max(min(min(((v3 + v4) + -33)/32, (v4/32) + (v5*2))*32, 1964), -35) - max(min(min(((v3 + v4) + -33)/32, (v4/32) + (v5*2))*32, 1999), 0)), -24), -36)/4)*4) == max(min((v2*-12) + (max(min(min(((v3 + v4) + -33)/32, (v4/32) + (v5*2))*32, 1964), -35) - max(min(min(((v3 + v4) + -33)/32, (v4/32) + (v5*2))*32, 1999), 0)), -24), -36));0;2192;;;;;
 (((min(max(min((((v0 + v1) + -1)/125)*8, 113), -11), (max(min((v1/125)*8, 125), 1) + (v2*16)) + 3)*2) - min((max(min((v1/125)*8, 125), 1) + (v2*16))*2, 251)) == ((min(max(min((((v0 + v1) + -1)/125)*8, 113), -11), (max(min((v1/125)*8, 125), 1) + (v2*16)) + 3)*2) - min((max(min((v1/125)*8, 125), 1) + (v2*16))*2, 251)));1;143;;;;;
 (max(((min((v0*125) + 125, v1) + v2) + v3) + 6, (v0*125) + v2) == max(((min((v0*125) + 125, v1) + v2) + v3) + 6, (v0*125) + v2));1;82;;;;;
 (((((((v0 + v1) + 64)/65) - (v1/65))*2) + 5) == ((((((v0 + v1) + 64)/65) - (v1/65))*2) + 5));1;66;;;;;
 (((((((uint1)1 && ((((0*4) + ((v0/8) + (v1*4))) + 0) <= (0 + ((v0/8) + (v1*4))))) && ((((0*4) + ((v0/8) + (v1*4))) + 3) >= (((4 + 0) - 1) + ((v0/8) + (v1*4))))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (((50 + 0) - 1) >= ((50 + 0) - 1)));1;161;;;;;
 ((((v0/63)*8) + ((v1*64) + ((((min((v1*-8) + ((((v2 + v0) + -1)/63) - (v0/63)), 7)*8) + 9)/33)*33))) == (((v0/63)*8) + ((v1*64) + ((((min((v1*-8) + ((((v2 + v0) + -1)/63) - (v0/63)), 7)*8) + 9)/33)*33))));1;106;;;;;
 (max(((v0 - v1) + 13)/2, v2) == max(((v0 - v1) + 13)/2, v2));1;49;;;;;
 ((max(min(((v0 + v1) + 1)*4, 1995), -4) - max(min(((v0 + v1) + 1)*4, 1998), -1)) == (max(min(((v0 + v1) + 1)*4, 1995), -4) - max(min(((v0 + v1) + 1)*4, 1998), -1)));1;273;;;;;
 (((((((min(v0*125, v1 + -125) + v2) % 8) + 188)/8)*-2) + ((v3*18) + v4)) == ((((((min(v0*125, v1 + -125) + v2) % 8) + 188)/8)*-2) + ((v3*18) + v4)));1;89;;;;;
 (((((((uint1)1 && (((max(v0*19, -6) + v1) + -1) <= (((((v0*19) + v1) + 0) + -5) + -2))) && ((((v0*19) + v1) + 17) >= (((((v0*19) + v1) + ((19 + 0) - 1)) + ((7 + -5) - 1)) + -2))) && (((0 + (v2/2)) + -7) <= ((0 + ((v2/2) + -5)) + -2))) && (((15 + ((v2/2) + 80)) + -7) >= ((15 + ((v2/2) + 65)) + -2))) && (0 <= 0)) && (0 >= 0));0;295;;;;;
 ((((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1615)/1000) == (((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1615)/1000));1;235;;;;;
 (min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1) == min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1));1;117;;;;;
 (((v0*250) + (((v1*32) - max(1 - (v2*16), max((v1*32) + ((v3*128) + ((v4/2) + ((v0*250) - min(((v5 + v4) + -1)/2, ((v4/2) + (min((min((v0*-250) + v6, 249)/4)*4, 246) + (v0*250))) + 3)))), -31) + 2)) + ((v4/2) + (v3*128)))) == ((v0*250) + (((v1*32) - max(1 - (v2*16), max((v1*32) + ((v3*128) + ((v4/2) + ((v0*250) - min(((v5 + v4) + -1)/2, ((v4/2) + (min((min((v0*-250) + v6, 249)/4)*4, 246) + (v0*250))) + 3)))), -31) + 2)) + ((v4/2) + (v3*128)))));1;223;;;;;
 (min((v0*4) + v1, (v2*16) + 914) == min((v0*4) + v1, (v2*16) + 914));1;44;;;;;
 (min(max(v0, 0), ((v1*4) + v2) + 3) == min(max(v0, 0), ((v1*4) + v2) + 3));1;44;;;;;
 (min(((v0 + v1) + 116)/8, (((v0 + v1)/8) + (v2*4)) + -5) == min(((v0 + v1) + 116)/8, (((v0 + v1)/8) + (v2*4)) + -5));1;62;;;;;
 ((v0 + 1) < (min(max((v0 + 1) + 5, v1), (v0 + 1) + 3) + -4));0;98;;;;;
 (min(min(v0, 1963) + 37, (v1*4) + v0) == min(min(v0, 1963) + 37, (v1*4) + v0));1;58;;;;;
 (min(((v0*128) + v1) + 128, (v2/2) + v3) == min(((v0*128) + v1) + 128, (v2/2) + v3));1;63;;;;;
 (((v0 + 82)/64) == ((v0 + 82)/64));1;27;;;;;
 (min((((v0 + v1) + 23)/2) - (v1/2), v2 + 5) == min((((v0 + v1) + 23)/2) - (v1/2), v2 + 5));1;54;;;;;
 ((max(min(((v0*12) + v1)*8, 2044), 45) + (v2*4)) == (max(min(((v0*12) + v1)*8, 2044), 45) + (v2*4)));1;78;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + -1)/63) - (v2*4)) - (v1/63), 3)*32) + 5)) - 1));0;138;;;;;
 ((((-471 - v0)/4) + (v1*2)) == (((-471 - v0)/4) + (v1*2)));1;56;;;;;
 ((max(min(v0 + v1, 3004), 1005) + (v2*4)) == (max(min(v0 + v1, 3004), 1005) + (v2*4)));1;39;;;;;
 ((((v0*-96)/4)*4) == (v0*-96));1;34;;;;;
 (((((((v0*250) + ((v1 + v2)/2))/31)*-62)/2)*2) == ((((v0*250) + ((v1 + v2)/2))/31)*-62));1;57;;;;;
 ((((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 37)/20) >= 0);1;84;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8))/16) + 1) == ((((((v0 + v1) + -1)/8) - (v1/8))/16) + 1));1;58;;;;;
 ((min((((v0 + v1) + 1)/2) - (v2*64), (v1/2) + 63) - ((v1/2) + (v3*4))) == (min((((v0 + v1) + 1)/2) - (v2*64), (v1/2) + 63) - ((v1/2) + (v3*4))));1;72;;;;;
 ((((((v0 + v1) + 249)/250)*32) - ((v2*156) + ((v1/250)*32))) == (((((v0 + v1) + 249)/250)*32) - ((v2*156) + ((v1/250)*32))));1;75;;;;;
 ((min((v0/65)*8, ((((v0/65) + v1)*8) - (v2*12)) + 8) - ((((v0/65)*2) + v3)*4)) == (min((v0/65)*8, ((((v0/65) + v1)*8) - (v2*12)) + 8) - ((((v0/65)*2) + v3)*4)));1;108;;;;;
 (min(((v0 + v1) + 7)/8, ((v1/8) + ((v2/63)*63)) + 62) == min(((v0 + v1) + 7)/8, ((v1/8) + ((v2/63)*63)) + 62));1;58;;;;;
 ((min(v0/8, 4) + (v1*12)) == (min(v0/8, 4) + (v1*12)));1;37;;;;;
 (min(max(min(((v0 + v1) + 129)/2, 999), 0), v2 + 15) == min(max(min(((v0 + v1) + 129)/2, 999), 0), v2 + 15));1;107;;;;;
 (((v0 + v1)*8) >= (((((v0 - 1) + v1)*8) + 7) + 1));1;68;;;;;
 (max((v0/8)*8, (v1*8) + 3) == max((v0/8)*8, (v1*8) + 3));1;43;;;;;
 (min(max(max(((v0 - v1) + 3)/4, min(min(((21 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min((v2*8) + 22, v3 + v0) - v1) + -1)/4) + 1), 0), v4) == min(max(max(((v0 - v1) + 3)/4, min(min(((21 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min((v2*8) + 22, v3 + v0) - v1) + -1)/4) + 1), 0), v4));1;180;;;;;
 (((((v0*32) + v1) + v2) + -5) < ((((v0*32) + (v1 + 1)) + v2) + -17));0;74;;;;;
 ((min(v0*8, 1980) - max(min(v1*8, 2003), 4)) == (min(v0*8, 1980) - max(min(v1*8, 2003), 4)));1;67;;;;;
 (max(((((v0*4) + v1)*4) + v2)*8, ((v3*8) + v4) + 20) == max(((((v0*4) + v1)*4) + v2)*8, ((v3*8) + v4) + 20));1;38;;;;;
 (0 == ((0 + ((max(min(v0, 1), -1)*2) + 2)) - 1));0;102;;;;;
 (((((v0 + v1) + -1)/17) - ((v2*15) + v3)) == ((((v0 + v1) + -1)/17) - ((v2*15) + v3)));1;45;;;;;
 (((max(min((v0*-48) + ((max(min(v2/2, 999), 0) + v1) - max(min(v2/2, 999), 0)), 44), -6)/2)*2) == max(min((v0*-48) + ((max(min(v2/2, 999), 0) + v1) - max(min(v2/2, 999), 0)), 44), -6));0;681;;;;;
 (0 == ((0 + ((((v0 + v1) % 8) + 156)/32)) - 1));0;69;;;;;
 (min((((v0 + v1) + 11)/2)*2, ((v2*127) + ((v1/2)*2)) + 111) == min((((v0 + v1) + 11)/2)*2, ((v2*127) + ((v1/2)*2)) + 111));1;77;;;;;
 (((v0/15) + 1) != 0);0;316;;;;;
 (min(max(min(v0, 999), 0), ((v1*4) + v2) + 3) == min(max(min(v0, 999), 0), ((v1*4) + v2) + 3));1;78;;;;;
 (max((min(v0 - v1, 17) + 61)/3, 0) >= ((max((min(v0 - v1, 17) + 61)/3, 0) + ((max(min(v0 - v1, 17)/3, -21) - max((min(v0 - v1, 17) + 61)/3, 0)) + 21)) - 1));0;1149;;;;;
 (min(max((1090 - ((v0/63)*64))/1046, 0), ((v1*64) + 1152)/1046) == min(max((1090 - ((v0/63)*64))/1046, 0), ((v1*64) + 1152)/1046));1;79;;;;;
 ((((v0*-12) + ((((v1 + v2) + 7)/8) - (v3*84))) - (v2/8)) == (((v0*-12) + ((((v1 + v2) + 7)/8) - (v3*84))) - (v2/8)));1;66;;;;;
 (max(v0*32, ((v0 + v1)*32) + 3) == max(v0*32, ((v0 + v1)*32) + 3));1;64;;;;;
 (((v0/2) + (((v1/8)*501) - (((v2 + v0) + 1)/2))) == ((v0/2) + (((v1/8)*501) - (((v2 + v0) + 1)/2))));1;67;;;;;
 (((v0*8) + -3) == ((((v0*8) + -3) + 11) - 1));0;55;;;;;
 ((v0 - (v1*16)) == (v0 - (v1*16)));1;102;;;;;
 (min(((v0 + v1) + 314)/65, v2 + 1) == min(((v0 + v1) + 314)/65, v2 + 1));1;45;;;;;
 (min(((v0 + v1) + 3)/4, v2 + 35) == min(((v0 + v1) + 3)/4, v2 + 35));1;45;;;;;
 (min(((v0 + v1) + 63)/8, v2 + 14) == min(((v0 + v1) + 63)/8, v2 + 14));1;68;;;;;
 (((v0 + 6)/4) != 0);0;1406;;;;;
 ((((max(min(max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0), min((min(v4*125, v5 + -125) + v3)/8, 249) + ((max(((max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0) - min((min(v4*125, v5 + -125) + v3)/8, 249)) + -7)/8, -1)*8) + 3))*8, ((min((min(v4*125, v5 + -125) + v3)/8, 249)*8) + (max(((max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0) - min((min(v4*125, v5 + -125) + v3)/8, 249)) + -7)/8, -1)*64)) + 14)*-1)/4)*4) == (max(min(max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0), min((min(v4*125, v5 + -125) + v3)/8, 249) + ((max(((max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0) - min((min(v4*125, v5 + -125) + v3)/8, 249)) + -7)/8, -1)*8) + 3))*8, ((min((min(v4*125, v5 + -125) + v3)/8, 249)*8) + (max(((max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0) - min((min(v4*125, v5 + -125) + v3)/8, 249)) + -7)/8, -1)*64)) + 14)*-1));0;3978;;;;;
 ((((v0/63)*8) + ((v1*64) + ((((min((v1*-8) + ((((v2 + v0) + -1)/63) - (v0/63)), 7)*8) + 9)/33)*33))) == (((v0/63)*8) + ((v1*64) + ((((min((v1*-8) + ((((v2 + v0) + -1)/63) - (v0/63)), 7)*8) + 9)/33)*33))));1;113;;;;;
 ((((v0 - v1)/128) + 1) == (((v0 - v1)/128) + 1));1;24;;;;;
 (((v0 + v1) + -11) >= ((((v0 + v1) + -11) + 3) - 1));0;61;;;;;
 (max((min((((v0 + v1) + 7)/8) - (v1/8), v2 + 1) + 11)/12, max(v3/12, -1) + 1) == max((min((((v0 + v1) + 7)/8) - (v1/8), v2 + 1) + 11)/12, max(v3/12, -1) + 1));1;96;;;;;
 (((((v0*64) + v1) + v2) + 4) < ((((v0*64) + v1) + (v2 + 1)) + -2));0;87;;;;;
 (((((v0*1002) + v1) + v2) + -2) < ((((v0*1002) + v1) + (v2 + 1)) + -8));0;99;;;;;
 (min((((v0 + v1) + 194)/65) - (v1/65), v2 + 3) == min((((v0 + v1) + 194)/65) - (v1/65), v2 + 3));1;47;;;;;
 (((max(min((v1*-12) + ((v2*-24) + v3), -488), -500)/4)*4) == max(min((v1*-12) + ((v2*-24) + v3), -488), -500));0;977;;;;;
 ((v0 - ((max(min(v1/8, 249), 0)/8)*8)) == (v0 - ((max(min(v1/8, 249), 0)/8)*8)));1;73;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0)*8, (max(min(v1/8, 249), 0)*8) + 989) == min(max(min(((v0 + v1) + 7)/8, 249), 0)*8, (max(min(v1/8, 249), 0)*8) + 989));1;103;;;;;
 (max(-734 - (v0*128), (v0*128) + 176) >= 0);0;509;;;;;
 ((max(min(v0 + v1, 1997), 1) - ((((v2*63) + v3)*4) + v4)) == (max(min(v0 + v1, 1997), 1) - ((((v2*63) + v3)*4) + v4)));1;68;;;;;
 (((v0*32) + ((v1*64) + ((v2*128) + (max(v3, 0) + (v4*4))))) == ((v0*32) + ((v1*64) + ((v2*128) + (max(v3, 0) + (v4*4))))));1;61;;;;;
 ((min(v0*8, ((min(v1 + 9, v0)*8) - (v2*20)) + 16) - (((v0*2) + v3)*4)) == (min(v0*8, ((min(v1 + 9, v0)*8) - (v2*20)) + 16) - (((v0*2) + v3)*4)));1;98;;;;;
 (max(min(min(min(min(((v1 + v2)/8) + -1, ((v1 + v2)/8) + -1), ((v1 + v2) + -1)/8), ((v1 + v2) + -1)/8), (((v3*8) + -2) + 8) - 1) + 1, min(max((v2 + 7)/8, (v3*8) + -2), 8 + ((v3*8) + -2))) <= min(max((v2 + 7)/8, (v3*8) + -2), 8 + ((v3*8) + -2)));0;1764;;;;;
 ((((v0/6)*305) + (v1*8)) == (((v0/6)*305) + (v1*8)));1;44;;;;;
 ((max(min((v0/32)*32, 2044), 45) + (v1*1000)) == (max(min((v0/32)*32, 2044), 45) + (v1*1000)));1;65;;;;;
 (((v0*4) + v1) == ((((v0*4) + v1) + (63 - max(v0*4, 59))) - 1));0;146;;;;;
 (min(((((v0 + v1) + -1)/32) - (v1/32)) + -31, v2) == min(((((v0 + v1) + -1)/32) - (v1/32)) + -31, v2));1;75;;;;;
 ((((v0 + v1)/4) + 1) < (((v0 + 1) + v1)/4));0;67;;;;;
 (max(min(max(((v0 - v1) + 3)/4, 0), ((v2 - v1)/4) + 2), (min(min(v3 + v0, v2 + 8), min(v2 + 4, v3 + v0) + 3) - v1)/4) == max(min(max(((v0 - v1) + 3)/4, 0), ((v2 - v1)/4) + 2), (min(min(v3 + v0, v2 + 8), min(v2 + 4, v3 + v0) + 3) - v1)/4));1;141;;;;;
 (min(v0 - (v1*1008), 996 + 503) == min(v0 - (v1*1008), 996 + 503));1;53;;;;;
 (((v0 + 30)/23) != 0);0;380;;;;;
 ((((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 265)/252) == (((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 265)/252));1;82;;;;;
 (min(((((v0*124) + v1)*2) + v2)*4, v3 + 551) == min(((((v0*124) + v1)*2) + v2)*4, v3 + 551));1;80;;;;;
 (((((((uint1)1 && (((0 + (min(v0, 8) + v1)) + -8) <= (((0*4) + ((min(v0, 8) + v1) + -8)) + 0))) && (((15 + (((((min(((((max(v0, 4) + 7)/8)*8) + (min(v0, 4) + v1)) + -4, v0 + v1) - (min(v0, 8) + v1)) + 7)/16)*16) + (min(v0, 8) + v1))) + -8) >= (((1*4) + (min(((((max(v0, 4) + -1)/8)*8) + (min(v0, 4) + v1)) + 4, v0 + v1) + -8)) + 3))) && (((min(v2*16, 110) + ((v3*2) + v4)) + v5) <= ((min(v2*16, 110) + ((v3*2) + v4)) + v5))) && (((min(v2*16, 110) + ((v3*2) + v4)) + v5) >= ((min(v2*16, 110) + ((v3*2) + v4)) + v5))) && (0 <= 0)) && (2 >= 2));0;2839;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((249*4) + v0) + 3) >= (((249*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 124) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;144;;;;;
 (max(min(min(min(min(((max(min(v4, 98), -151) - max(min(v4, 249), 0))/4) + 37, ((max(min(v4, 98), -151) - max(min(v4, 249), 0))/4) + 37), (min(((v2 + v3) + -30)/8, max(min(v4, 98), -151) + 148) - max(min(v4, 249), 0))/4), (min(((v2 + v3) + 4)/8, max(min(v4, 98), -151) + 148) - max(min(v4, 249), 0))/4), (0 + ((v5 + 155)/4)) - 1) + 1, min(max(max(max(max(((0 - max(min(v4, 249), 0))/4) + 1, ((0 - max(min(v4, 249), 0))/4) + 1), (0 - max(min(v4, 249), 0))/4), (max((v3 + 36)/8, 4) - max(min(v4, 249), 0))/4), 0), ((v5 + 155)/4) + 0)) <= min(max(max(max(max(((0 - max(min(v4, 249), 0))/4) + 1, ((0 - max(min(v4, 249), 0))/4) + 1), (0 - max(min(v4, 249), 0))/4), (max((v3 + 36)/8, 4) - max(min(v4, 249), 0))/4), 0), ((v5 + 155)/4) + 0));0;7014;;;;;
 (((((v0 + v1)*8) + v2) + -36) < ((((v0 + v1)*8) + (v2 + 1)) + -36));1;78;;;;;
 (0 == ((0 + ((min(((max(min(((v0 + v1) + -1)/63, 31), 0)*8) - (v2*17)) - (max(min(v1/63, 31), 0)*8), -3)*2) + 42)) - 1));0;212;;;;;
 (min(((v0*120) + v1) + 70, v2) == min(((v0*120) + v1) + 70, v2));1;88;;;;;
 (((v0*63) + ((v1/8)*8)) == ((v0*63) + ((v1/8)*8)));1;60;;;;;
 (min(v0 + v1, v2 + 6) == min(v0 + v1, v2 + 6));1;40;;;;;
 (((((v0 + v1) + -1)/8) - ((v2*8) + v3)) == ((((v0 + v1) + -1)/8) - ((v2*8) + v3)));1;69;;;;;
 (min((v0*64) + v1, max(min(v2, 954), -45) + 23) == min((v0*64) + v1, max(min(v2, 954), -45) + 23));1;51;;;;;
 (max(v0*16, (v1*16) + v2) == max(v0*16, (v1*16) + v2));1;40;;;;;
 ((((max((((v0 + v1) + 1)/2)*2, 1997) - min((v1/2)*2, -1)) + 1003)/1002) == (((max((((v0 + v1) + 1)/2)*2, 1997) - min((v1/2)*2, -1)) + 1003)/1002));1;99;;;;;
 (((v0*33) + ((v1/4) + ((v2/2)*63))) == ((v0*33) + ((v1/4) + ((v2/2)*63))));1;50;;;;;
 (((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((min(v1*32, 93) + ((v2*2) + v3)) + v4) <= ((min(v1*32, 93) + ((v2*2) + v3)) + v4))) && (((min(v1*32, 93) + ((v2*2) + v3)) + v4) >= ((min(v1*32, 93) + ((v2*2) + v3)) + v4))) && (v5 <= v5)) && (v5 >= v5));1;154;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 81)/63) == (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 81)/63));1;242;;;;;
 ((v0 + -305) == (((v0 + -305) + (730 - max(v1*242, 483))) - 1));0;91;;;;;
 (((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37))*2) + 418)/251) == ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37))*2) + 418)/251));1;254;;;;;
 ((((max(v0*36, 32)*-1)/2)*2) == (max(v0*36, 32)*-1));0;824;;;;;
 (min((v0*252) + v1, min(v2 + v1, 2000) + -252) == min((v0*252) + v1, min(v2 + v1, 2000) + -252));1;48;;;;;
 (max(min(min(1999, min(v1 + v2, 2000) + -1), ((((v4*126) + v5) + -10) + (min(v3, 116) + 18)) - 1) + 1, min(max(max(0, max(v2, 0)), ((v4*126) + v5) + -10), (min(v3, 116) + 18) + (((v4*126) + v5) + -10))) <= min(max(max(0, max(v2, 0)), ((v4*126) + v5) + -10), (min(v3, 116) + 18) + (((v4*126) + v5) + -10)));0;1393;;;;;
 (min((((((v0 + v1) + 5)/2) - (v2*504)) - (v1/2)) - (v3*128), min(v4, 119) + 71) == min((((((v0 + v1) + 5)/2) - (v2*504)) - (v1/2)) - (v3*128), min(v4, 119) + 71));1;99;;;;;
 ((max(min((v0*1000) + v1, min(v2 + v1, 2000) + -1000), -999) - (max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + (v3*500))) == (max(min((v0*1000) + v1, min(v2 + v1, 2000) + -1000), -999) - (max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + (v3*500))));1;112;;;;;
 (min(max(max(max(((max(v0, -3) - v1) + 3)/4, 0 - (v1/4)), min(min(min(((1 - v1)/4) + v2, ((min(v3 + v0, min(v2*4, 1995) + 5) - v1)/4) + -1), ((min(v3 + v0, min(v2*4, 1998) + 2) - v1) + -1)/4), (1996 - v1)/4) + 1), 0), ((8 - v1)/4) + v2) == min(max(max(max(((max(v0, -3) - v1) + 3)/4, 0 - (v1/4)), min(min(min(((1 - v1)/4) + v2, ((min(v3 + v0, min(v2*4, 1995) + 5) - v1)/4) + -1), ((min(v3 + v0, min(v2*4, 1998) + 2) - v1) + -1)/4), (1996 - v1)/4) + 1), 0), ((8 - v1)/4) + v2));1;1231;;;;;
 ((((v0/32) + (v1*2)) - min((((v2 + v0) + 31)/32) - (v3*4), (v0/32) + 3)) == (((v0/32) + (v1*2)) - min((((v2 + v0) + 31)/32) - (v3*4), (v0/32) + 3)));1;80;;;;;
 (((v0*2) + -14) == ((((v0*2) + -14) + ((((min((min(v1*33, 32) + v2) + 21, v3) - (v1*33)) - v2)*2) + 24)) - 1));0;190;;;;;
 (((v0 + v1) + -12) == ((((v0 + v1) + -12) + 141) - 1));0;50;;;;;
 (v0 == ((v0 + (-5 + 6)) - 1));1;38;;;;;
 ((max(min(min(v0*8, 502) + v1, 1492), 493) - (max(min(min(v0*8, 502) + v1, 1499), 500) + (v2*3))) == (max(min(min(v0*8, 502) + v1, 1492), 493) - (max(min(min(v0*8, 502) + v1, 1499), 500) + (v2*3))));1;97;;;;;
 ((((v0 + -121)/63) + (v1*4)) == (((v0 + -121)/63) + (v1*4)));1;67;;;;;
 (min((v0*32) + v1, v2 + 39) == min((v0*32) + v1, v2 + 39));1;67;;;;;
 (((v0 + v1) + v2) >= ((((v0 - 1) + v1) + v2) + 1));1;182;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 6) == min(((v0 + v1) + -1)/8, v2 + 6));1;43;;;;;
 (min(((v0*2) + v1)*4, v2 + 57) == min(((v0*2) + v1)*4, v2 + 57));1;54;;;;;
 (max((min(v0 - v1, 125) + 17)/71, 0) >= ((max((min(v0 - v1, 125) + 17)/71, 0) + max(((min(v0 - v1, 125) + 87)/71) - max((min(v0 - v1, 125) + 17)/71, 0), 0)) - 1));0;1562;;;;;
 ((((8 - v0)/4) + (max(v1, 249)*2)) == (((8 - v0)/4) + (max(v1, 249)*2)));1;62;;;;;
 (((((((v0 + v1) + 39)/8) - (v1/8)) + 137)/132) == ((((((v0 + v1) + 39)/8) - (v1/8)) + 137)/132));1;70;;;;;
 ((((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/16) + 1) == (((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/16) + 1));1;348;;;;;
 ((5 - ((v0*252) - v1)) == (5 - ((v0*252) - v1)));1;57;;;;;
 ((((max(((v0 + v1) + 7)/8, 255) - min(v1/8, 0))/128) + 1) == (((max(((v0 + v1) + 7)/8, 255) - min(v1/8, 0))/128) + 1));1;87;;;;;
 (min((v0*4) + v1, min(max(min(((v2 + v3) + 7)/8, 249), 0), v1 + 6) + 13) == min((v0*4) + v1, min(max(min(((v2 + v3) + 7)/8, 249), 0), v1 + 6) + 13));1;87;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 40)/33) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 40)/33));1;81;;;;;
 (min(((((v0 + v1)/8)*2) + v2)*4, ((((v0 + v1)/8) + v3)*8) + 94) == min(((((v0 + v1)/8)*2) + v2)*4, ((((v0 + v1)/8) + v3)*8) + 94));1;77;;;;;
 (((((v0 % (((v1 - v2) + 88)/76))*-76)/38)*38) == ((v0 % (((v1 - v2) + 88)/76))*-76));1;88;;;;;
 ((((v0 + v1)/2) + (((v2*2) + v3)*4)) == (((v0 + v1)/2) + (((v2*2) + v3)*4)));1;74;;;;;
 (min((v0*4) + 4, v1) == min((v0*4) + 4, v1));1;42;;;;;
 (((v0*4) + (((v1/2) + (v2*2)) - (min((((v3 + v1) + 1)/2) - (v4*8), ((v5*2) + ((v1/2) + (v0*4))) + 1) + (v5*-2)))) == ((v0*4) + (((v1/2) + (v2*2)) - (min((((v3 + v1) + 1)/2) - (v4*8), ((v5*2) + ((v1/2) + (v0*4))) + 1) + (v5*-2)))));1;124;;;;;
 (((((-125 - ((min(v0*125, v1 + -125) + v2) % 8))/8)*2) + ((v3*7) + v4)) == ((((-125 - ((min(v0*125, v1 + -125) + v2) % 8))/8)*2) + ((v3*7) + v4)));1;88;;;;;
 (min(max((4 - ((v0*8) + v1))/3, 0), (v2 + 4)/3) == min(max((4 - ((v0*8) + v1))/3, 0), (v2 + 4)/3));1;93;;;;;
 (min(max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2), v2 + 3) == min(max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2), v2 + 3));1;298;;;;;
 (min((((v0 + v1) + -1)/2) - (v1/2), v2) == min((((v0 + v1) + -1)/2) - (v1/2), v2));1;52;;;;;
 ((max(min(v0, 1996), -3) + (v1*4)) == (max(min(v0, 1996), -3) + (v1*4)));1;44;;;;;
 ((((max((((v0 + v1) + 64)/65)*64, 1975) + 72)/32) - ((min((v1/65)*64, 4) + -6)/32)) >= 0);1;92;;;;;
 (min(((v0 + v1) + 23)/8, v2 + 9) == min(((v0 + v1) + 23)/8, v2 + 9));1;42;;;;;
 (v0 != 0);0;1368;;;;;
 (min(((v0 + v1) + 15)/8, v2 + -1) == min(((v0 + v1) + 15)/8, v2 + -1));1;53;;;;;
 (min(127 - max(v0*4, 123), v1 + 1) == min(127 - max(v0*4, 123), v1 + 1));1;64;;;;;
 (((v0*540) + (v1*8)) == ((v0*540) + (v1*8)));1;41;;;;;
 (((max(min((v2*-64) + (min(max(min(v3, 996), 0), ((min(v4, 3)*126) + (max(min((min(v5, 4) + v6)/2, 1001), 2) + (v7*502))) + 118) - max(min(max(min(v3, 999), 0), ((min(v4, 3)*126) + (max(min((min(v5, 4) + v6)/2, 1001), 2) + (v7*502))) + 118), 122)), -62), -126)/2)*2) == max(min((v2*-64) + (min(max(min(v3, 996), 0), ((min(v4, 3)*126) + (max(min((min(v5, 4) + v6)/2, 1001), 2) + (v7*502))) + 118) - max(min(max(min(v3, 999), 0), ((min(v4, 3)*126) + (max(min((min(v5, 4) + v6)/2, 1001), 2) + (v7*502))) + 118), 122)), -62), -126));0;2777;;;;;
 (((max(min(v0, 999), 0)*2) + -3) == ((((max(min(v0, 999), 0)*2) + -3) + ((v1*2) + 22)) - 1));0;125;;;;;
 ((((((((v0 + v1) + 31)/32) - (v1/32))*4) + 71)/65) == (((((((v0 + v1) + 31)/32) - (v1/32))*4) + 71)/65));1;88;;;;;
 (min(max(min(v0/4, 0)*4, v1), ((min(v0/4, 0) + v2)*4) + 8) == min(max(min(v0/4, 0)*4, v1), ((min(v0/4, 0) + v2)*4) + 8));1;74;;;;;
 (min(((v0 + v1) + -1)/32, v2 + 3) == min(((v0 + v1) + -1)/32, v2 + 3));1;38;;;;;
 ((max(min(min(v0*8, ((v1*292) + (v2*8)) + 292), 999)*2, -1) - max(min((v1*584) + (v2*16), 1997), -2)) == (max(min(min(v0*8, ((v1*292) + (v2*8)) + 292), 999)*2, -1) - max(min((v1*584) + (v2*16), 1997), -2)));1;273;;;;;
 (max(-20 - (max(min((((v0 + v1) + 23)/8) - ((v2*4) + ((v1/8) + (v3*16))), 1), -2)*8), (max(min(v4, 2), -1)*8) + -20) == max(-20 - (max(min((((v0 + v1) + 23)/8) - ((v2*4) + ((v1/8) + (v3*16))), 1), -2)*8), (max(min(v4, 2), -1)*8) + -20));1;128;;;;;
 (min((((v0 + v1) + 15)/16)*8, (((v1/16) + (v2*64))*8) + 493) == min((((v0 + v1) + 15)/16)*8, (((v1/16) + (v2*64))*8) + 493));1;110;;;;;
 ((max(min((v0/8)*8, 2012), 13) + (v1*1004)) == (max(min((v0/8)*8, 2012), 13) + (v1*1004)));1;62;;;;;
 (0 >= ((0 + ((((((min(((min(min((v0*32) + v1, 62) + (v2*63), 124)*4) + ((v3*500) + v4)) + 4, v5 + v4) - (v1*4)) - (v0*128)) - (v2*252)) - ((v3*500) + v4)) + 3)/4)) - 1));0;2248;;;;;
 ((((v0 - (v1*16)) - (v2*127)) - (v3/4)) == (((v0 - (v1*16)) - (v2*127)) - (v3/4)));1;74;;;;;
 (((((((v0 + v1) + 5)/2) - (v1/2)) + 130)/126) == ((((((v0 + v1) + 5)/2) - (v1/2)) + 130)/126));1;56;;;;;
 (min((v0*16) + v1, min(((v2 + v3) + 255)/4, v1 + 31) + -15) == min((v0*16) + v1, min(((v2 + v3) + 255)/4, v1 + 31) + -15));1;69;;;;;
 (((((v0 % ((v1/44) + 1))*-44)/4)*4) == ((v0 % ((v1/44) + 1))*-44));1;59;;;;;
 (((((v0 - v1)/4) + (v2*-16)) + 3) == ((((v0 - v1)/4) + (v2*-16)) + 3));1;64;;;;;
 (((v0*8) - (v1/4)) == ((v0*8) - (v1/4)));1;54;;;;;
 (max(min(min(min((((v2 + v3) - max(min(v1, 1999), 0))/4) + -1, (min(max(min(v1, 1996), -3), (v2 + v3) + -1) - max(min(v1, 1999), 0))/4), (max(min(v1, 1996), -3) - max(min(v1, 1999), 0))/4), (0 + ((v4 + 7)/4)) - 1) + 1, min(max(((v3 - max(min(v1, 1999), 0)) + 3)/4, 0), ((v4 + 7)/4) + 0)) <= min(max(((v3 - max(min(v1, 1999), 0)) + 3)/4, 0), ((v4 + 7)/4) + 0));0;2494;;;;;
 (min((v0*4) + ((((v1*2) + v2)*4) + v3), v4 + -3) == min((v0*4) + ((((v1*2) + v2)*4) + v3), v4 + -3));1;76;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((62*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)));1;178;;;;;
 ((max(v0*3, 5) + (((((v1 + -5)/63)*8) + ((v2*4) - min(((((v1 + -5)/63)*2) + v2)*4, ((((v3 + v1) + 62)/63)*8) + 4)))*8)) == (max(v0*3, 5) + (((((v1 + -5)/63)*8) + ((v2*4) - min(((((v1 + -5)/63)*2) + v2)*4, ((((v3 + v1) + 62)/63)*8) + 4)))*8)));1;128;;;;;
 ((((((min(v0*125, v1 + -125) + v2)/125)*-16)/4)*4) == (((min(v0*125, v1 + -125) + v2)/125)*-16));1;74;;;;;
 (max(min(max(((v0 - ((v1/4)*4)) + 23)/16, 0), (v2 + 6)/4), min(min((((v3 + v0) - ((v1/4)*4)) + 7)/16, (((((v4 + v1) + 31)/4) - (v1/4)) + -1)/4), (v2 + 2)/4) + 1) == max(min(max(((v0 - ((v1/4)*4)) + 23)/16, 0), (v2 + 6)/4), min(min((((v3 + v0) - ((v1/4)*4)) + 7)/16, (((((v4 + v1) + 31)/4) - (v1/4)) + -1)/4), (v2 + 2)/4) + 1));1;167;;;;;
 (min(min((((v0 + v1) - (((v2*4) + v3)*2)) + 10)/4, (min(v4 - v3, -8)/2) + 5), (min(v4 - v3, -8) + 11)/2) == min(min((((v0 + v1) - (((v2*4) + v3)*2)) + 10)/4, (min(v4 - v3, -8)/2) + 5), (min(v4 - v3, -8) + 11)/2));1;138;;;;;
 (0 == ((0 + ((v0*2) + 154)) - 1));0;65;;;;;
 (((v0*32) - min((((((v1 + v2) + 1999)/2000)*256) - (v3*112)) - ((v2/2000)*256), -416)) == ((v0*32) - min((((((v1 + v2) + 1999)/2000)*256) - (v3*112)) - ((v2/2000)*256), -416)));1;110;;;;;
 (min(v0 + v1, (min(v2*224, 444) + ((v3*668) + v1)) + 224) == min(v0 + v1, (min(v2*224, 444) + ((v3*668) + v1)) + 224));1;56;;;;;
 ((v0 + v1) >= (((v0 - 1) + v1) + 1));1;71;;;;;
 (min((max(min(((v0 + v1) + -1)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8), v2) == min((max(min(((v0 + v1) + -1)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8), v2));1;98;;;;;
 (((v0 + 17)/8) != 0);0;231;;;;;
 (((v0*254) + (v1*8)) == ((v0*254) + (v1*8)));1;45;;;;;
 ((((((v0 + v1) + 259)/8) - (v2*4)) - ((v0 + v1)/8)) == (((((v0 + v1) + 259)/8) - (v2*4)) - ((v0 + v1)/8)));1;75;;;;;
 (min(v0*4, (v1*4) + 6) == min(v0*4, (v1*4) + 6));1;39;;;;;
 (min(max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9), v2 + 3) == min(max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9), v2 + 3));1;141;;;;;
 (((v0*156) + ((v1*8) + v2)) == ((v0*156) + ((v1*8) + v2)));1;37;;;;;
 (((max(min(v0/8, 254), 5)*2) + ((v1*2) + v2)) == ((max(min(v0/8, 254), 5)*2) + ((v1*2) + v2)));1;58;;;;;
 ((((((v0 + v1) + 249)/250) - ((v2/3)*2)) - (v1/250)) == (((((v0 + v1) + 249)/250) - ((v2/3)*2)) - (v1/250)));1;78;;;;;
 (((((min(v0*8, (((v1*124) + v2)*8) + 503) + 494)/4) - (v1*248)) - (v2*2)) == ((((min(v0*8, (((v1*124) + v2)*8) + 503) + 494)/4) - (v1*248)) - (v2*2)));1;83;;;;;
 (((v0*64) + ((v1*127) + v2)) == ((v0*64) + ((v1*127) + v2)));1;28;;;;;
 (min(((v0 + v1) + -1)/32, v2 + 31) == min(((v0 + v1) + -1)/32, v2 + 31));1;41;;;;;
 (((v0*-4) + (((((v1 + v2) + 1)/2) - (v3*128)) - (v2/2))) == ((v0*-4) + (((((v1 + v2) + 1)/2) - (v3*128)) - (v2/2))));1;77;;;;;
 (((v0/128) + (v1*4)) == ((v0/128) + (v1*4)));1;36;;;;;
 (min(min(((v0 + v1) + -1)/16, v2 + 15)*4, (((v3*3) + v2)*4) + 11) == min(min(((v0 + v1) + -1)/16, v2 + 15)*4, (((v3*3) + v2)*4) + 11));1;78;;;;;
 (min(v0*1000, v1 + -1000) == min(v0*1000, v1 + -1000));1;477;;;;;
 (min(max(max(((max(min(v0/8, 249), 0)/8)*64) + -29, v1), v2 + v1), ((((max(min(v0/8, 249), 0)/8)*8) + v3)*8) + 5) == min(max(max(((max(min(v0/8, 249), 0)/8)*64) + -29, v1), v2 + v1), ((((max(min(v0/8, 249), 0)/8)*8) + v3)*8) + 5));1;198;;;;;
 (0 >= ((0 + ((((v0 + v1) % 8) + 539)/32)) - 1));0;48;;;;;
 (min(207 - (((v0*2) + v1)*16), (((((v2 + v3) + -1)/1000)*256) - ((((v0*2) + v1)*16) + v4)) + 527) == min(207 - (((v0*2) + v1)*16), (((((v2 + v3) + -1)/1000)*256) - ((((v0*2) + v1)*16) + v4)) + 527));1;119;;;;;
 (max(min(max(((v0 - (v1*2)) + 99)/8, 0), ((v2 - v1) + 14)/4), min(((v2 - v1) + 7)/4, (((v3 + v0) - (v1*2)) + 91)/8) + 1) == max(min(max(((v0 - (v1*2)) + 99)/8, 0), ((v2 - v1) + 14)/4), min(((v2 - v1) + 7)/4, (((v3 + v0) - (v1*2)) + 91)/8) + 1));1;132;;;;;
 (((max(max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) + 11, min(v0*500, v2 + -500) + v1) - min(min(max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + -11, (v0*500) + v1), (v2 + v1) + -500)) - (v3*60)) == ((max(max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) + 11, min(v0*500, v2 + -500) + v1) - min(min(max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + -11, (v0*500) + v1), (v2 + v1) + -500)) - (v3*60)));1;184;;;;;
 ((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) == (max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)));1;96;;;;;
 (((v0 + 499)/500) == ((v0 + 499)/500));1;1054;;;;;
 (((max(min((v0*-1000) + v1, 1000), 0)/4)*4) == max(min((v0*-1000) + v1, 1000), 0));0;630;;;;;
 ((min(((v0 + v1) + -1)/32, ((v1/32) + (min(min((v2*4) + 3, v3)/4, v2)*4)) + 3) - ((v2*4) + ((v1/32) + (v4*4)))) == (min(((v0 + v1) + -1)/32, ((v1/32) + (min(min((v2*4) + 3, v3)/4, v2)*4)) + 3) - ((v2*4) + ((v1/32) + (v4*4)))));1;115;;;;;
 ((((v0*8) + 83)/76) != 0);0;467;;;;;
 ((((max(min(v0, 249), 0)/8)*8) - ((v1*29) + v2)) == (((max(min(v0, 249), 0)/8)*8) - ((v1*29) + v2)));1;62;;;;;
 ((((((v0 + v1) + -1)/8) - (v1/8)) + -63) == (((((v0 + v1) + -1)/8) - (v1/8)) + -63));1;70;;;;;
 ((((((v0 + v1) + -1)/250) - (v1/250)) + 2) == (((((v0 + v1) + -1)/250) - (v1/250)) + 2));1;57;;;;;
 (((v0*2) - ((((v1*126) + v2)*2) + v3)) == ((v0*2) - ((((v1*126) + v2)*2) + v3)));1;55;;;;;
 (((v0*4) + (((v1/63)*2) + v2)) == ((v0*4) + (((v1/63)*2) + v2)));1;40;;;;;
 (max(v0*32, (((v1*2) + v0)*32) + 27) == max(v0*32, (((v1*2) + v0)*32) + 27));1;41;;;;;
 (min(((v0 + v1) + -1)/65, min(((v0 + v1) + -1)/65, (v1/65) + ((v2/16)*16)) + (min(v2, 3) + (min(v2/4, 3)*4))) == min(((v0 + v1) + -1)/65, min(((v0 + v1) + -1)/65, (v1/65) + ((v2/16)*16)) + (min(v2, 3) + (min(v2/4, 3)*4))));1;104;;;;;
 (min((v0*128) + v1, min(v2 + v1, 2135) + -128) == min((v0*128) + v1, min(v2 + v1, 2135) + -128));1;42;;;;;
 ((max(min(v0, 1999), 0) + (v1*501)) == (max(min(v0, 1999), 0) + (v1*501)));1;42;;;;;
 ((min(v0*68, 64) + (min(v1*36, 32) + v2)) == (min(v0*68, 64) + (min(v1*36, 32) + v2)));1;71;;;;;
 (min((v0 + v1)*8, (v2*8) + 14) == min((v0 + v1)*8, (v2*8) + 14));1;55;;;;;
 ((min(min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*32), max(min(v1/2, 999), 0) + 31), (max(min(v1/2, 999), 0) + (v3*6)) + 1) + (v2*32)) == (min(min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*32), max(min(v1/2, 999), 0) + 31), (max(min(v1/2, 999), 0) + (v3*6)) + 1) + (v2*32)));1;169;;;;;
 (min(max(min(v0, 2000), 1), max(min(v0, 2003), 4) + (v1*4)) == min(max(min(v0, 2000), 1), max(min(v0, 2003), 4) + (v1*4)));1;70;;;;;
 (((max(min((v0*-8) + v1, -8), -16)/4)*4) == max(min((v0*-8) + v1, -8), -16));0;636;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 18)/17) == ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 18)/17));1;105;;;;;
 (((((((uint1)1 && (((((v0*2) + v1)*8) + 1) <= ((((v0*2) + v1)*8) + 1))) && (((((v0*2) + v1)*8) + 8) >= ((((v0*2) + v1)*8) + 8))) && (((0 + (v2 + -10)) + 5) <= ((0 + v2) + -5))) && (((3 + (v2 + 12)) + 5) >= ((3 + (v2 + 12)) + 5))) && (v3 <= v3)) && (v3 >= v3));1;189;;;;;
 (min(((v0 + v1) + -1)/8, ((v2*16) + v3) + 7) == min(((v0 + v1) + -1)/8, ((v2*16) + v3) + 7));1;80;;;;;
 ((min(v0/8, 4) + (v1*4)) == (min(v0/8, 4) + (v1*4)));1;58;;;;;
 ((((((((v0 + v1) + 135)/128) - (v1/128))*8) + 44)/35) == (((((((v0 + v1) + 135)/128) - (v1/128))*8) + 44)/35));1;65;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*16) + 104)/22) == (((((((v0 + v1) + 124)/125) - (v1/125))*16) + 104)/22));1;77;;;;;
 (((v0*504) + 7) == ((v0*504) + 7));1;22;;;;;
 ((((((v0 + v1) + 31)/32)*32) - ((v2*261) + v3)) == (((((v0 + v1) + 31)/32)*32) - ((v2*261) + v3)));1;61;;;;;
 ((((((((v0 + v1) + -1)/250) - (v1/250))*64) + 244)/140) == (((((((v0 + v1) + -1)/250) - (v1/250))*64) + 244)/140));1;85;;;;;
 (min(((v0 + v1) + 5)/2, ((v1/2) + (v2*504)) + 498) == min(((v0 + v1) + 5)/2, ((v1/2) + (v2*504)) + 498));1;60;;;;;
 ((((v0 + 10)/4) - (v1*2)) == (((v0 + 10)/4) - (v1*2)));1;53;;;;;
 (min(max(max(v0 + -21, v1), v2 + v1), (min(v3, 102) + v0) + 4) == min(max(max(v0 + -21, v1), v2 + v1), (min(v3, 102) + v0) + 4));1;69;;;;;
 (min(((v0*1040) + ((v1/63)*64)) + 1040, v2) == min(((v0*1040) + ((v1/63)*64)) + 1040, v2));1;56;;;;;
 (((v0*132) + ((v1*260) + v2)) == ((v0*132) + ((v1*260) + v2)));1;42;;;;;
 (min(max(min(v0*8, 113), -11), v1 + 50) == min(max(min(v0*8, 113), -11), v1 + 50));1;48;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && ((((v0 + v1) + 0) + 3) <= ((v0 + 0) + v1))) && ((((v0 + v1) + 3) + 3) >= ((v0 + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2));0;159;;;;;
 (min(min(max(v0, 0), ((v1*8) + ((v2*103) + v3)) + 7)*8, ((v4*36) + (((v1*8) + ((v2*103) + v3))*8)) + 24) == min(min(max(v0, 0), ((v1*8) + ((v2*103) + v3)) + 7)*8, ((v4*36) + (((v1*8) + ((v2*103) + v3))*8)) + 24));1;112;;;;;
 (((((v0 % (((v1*8) + 380)/252))*252)/4)*4) == ((v0 % (((v1*8) + 380)/252))*252));1;69;;;;;
 ((max(v0, 0) - ((v1/5)*8)) == (max(v0, 0) - ((v1/5)*8)));1;53;;;;;
 (((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((3 + v0) >= (((4 + 0) - 1) + v0))) && ((-3 + v1) <= (-3 + v1))) && ((((7 + -3) - 1) + v1) >= (((7 + -3) - 1) + v1))) && (((v2*32) + v3) <= ((v2*32) + v3))) && (((v2*32) + v3) >= ((v2*32) + v3)));1;159;;;;;
 (min(21 - (v0*8), (((((v1 + v2) + 64)/65) - ((v0*4) + v3))*2) + 1) == min(21 - (v0*8), (((((v1 + v2) + 64)/65) - ((v0*4) + v3))*2) + 1));1;94;;;;;
 (min(v0*8, ((v1*129) + (v2*8)) + 120) == min(v0*8, ((v1*129) + (v2*8)) + 120));1;51;;;;;
 ((((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61))/16) + 5) == (((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61))/16) + 5));1;257;;;;;
 (min(min(max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + -11, (v0*1000) + v1), (v2 + v1) + -1000) == min(min(max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + -11, (v0*1000) + v1), (v2 + v1) + -1000));1;98;;;;;
 ((((v0*8) + 252)/186) != 0);0;508;;;;;
 (0 == ((0 + ((min((((((v0 + v1) + -1)/250)*32) - (v2*18)) - ((v1/250)*32), -36)*2) + 110)) - 1));0;150;;;;;
 (((((((uint1)1 && ((0 + (min(max(v0*32, -5), (v0*32) + 28) + v1)) <= (((v0*32) + v1) + -5))) && ((3 + (min((((min(v0*32, -5)/4)*4) + (max(v0*32, -5) + v1)) + 8, (v0*32) + v1) + 28)) >= (((v0*32) + v1) + 31))) && ((v2 + -6) <= (v2 + -6))) && ((v2 + 124) >= (v2 + 124))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) + -1)));0;434;;;;;
 ((v0 - max(min(v1/8, 256), 7)) == (v0 - max(min(v1/8, 256), 7)));1;43;;;;;
 (((max((v0*1004) - v1, -1001) - v2) + ((v3*256) + ((v4*512) + v2))) == ((max((v0*1004) - v1, -1001) - v2) + ((v3*256) + ((v4*512) + v2))));1;81;;;;;
 (0 == ((0 + (88 - max((v0 % 8)*12, 76))) - 1));0;74;;;;;
 (min((max(min((v0*3) + v1, 1034), 35)*2) + -71, v2) == min((max(min((v0*3) + v1, 1034), 35)*2) + -71, v2));1;70;;;;;
 ((max(min(v0/2, 999), 0) + (v1*252)) == (max(min(v0/2, 999), 0) + (v1*252)));1;72;;;;;
 (0 == ((0 + ((max(v0, -1)*2) + 2)) - 1));0;55;;;;;
 (min(((v0 + v1) + -1)/2, v2 + 63) == min(((v0 + v1) + -1)/2, v2 + 63));1;61;;;;;
 (max(min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), (min(v4, 250) - v0) + -8)/8) + 1) == max(min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), (min(v4, 250) - v0) + -8)/8) + 1));1;383;;;;;
 (((v0*-12) + (((((v1 + v2) + -1)/63)*8) - v3)) == ((v0*-12) + (((((v1 + v2) + -1)/63)*8) - v3)));1;52;;;;;
 (((((((v0 + v1) + 7)/8) - (((min(v0, 4) + v1) + -4)/8))*8) + 10) >= 0);0;791;;;;;
 (((((v0/32) + (v1*4)) + v2) - min((((v3 + v0) + 127)/32) - (v4*38), (v0/32) + 29)) == ((((v0/32) + (v1*4)) + v2) - min((((v3 + v0) + 127)/32) - (v4*38), (v0/32) + 29)));1;95;;;;;
 ((((max(((v0 + v1) + 23)/8, 249) - min(v1/8, 4)) + 69)/65) >= 0);1;62;;;;;
 ((max(min(min((v0*7) + (((v1/63) + (v2*2))*8), (min(((v3 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 6)*8, 1986), -13) - max(min((v0*56) + (((v1/63) + (v2*2))*64), 2044), 45)) == (max(min(min((v0*7) + (((v1/63) + (v2*2))*8), (min(((v3 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1)*8) + 6)*8, 1986), -13) - max(min((v0*56) + (((v1/63) + (v2*2))*64), 2044), 45)));1;398;;;;;
 (min((v0*4) + ((v1 + v2) + v3), ((((v4*7) + v5)*6) + (v1 + v2)) + 2) == min((v0*4) + ((v1 + v2) + v3), ((((v4*7) + v5)*6) + (v1 + v2)) + 2));1;88;;;;;
 ((((v0*2) + v1) - (((v2*2) + v0)*2)) == (((v0*2) + v1) - (((v2*2) + v0)*2)));1;48;;;;;
 (((v0*12) + (((v1/32) + (v2*4))*16)) == ((v0*12) + (((v1/32) + (v2*4))*16)));1;44;;;;;
 (((((v0/((v1 + 93)/88))*-4)/2)*2) == ((v0/((v1 + 93)/88))*-4));1;40;;;;;
 (min((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*64)) - max(min(v1/2, 999), 0), 63) == min((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*64)) - max(min(v1/2, 999), 0), 63));1;127;;;;;
 (max(min(max(min(((v0 + v1) + -1)/8, 249), 0), ((v2*16) + v3) + 13)*8, (((v2*16) + v3)*8) + 73) == max(min(max(min(((v0 + v1) + -1)/8, 249), 0), ((v2*16) + v3) + 13)*8, (((v2*16) + v3)*8) + 73));1;120;;;;;
 (min(max(((v0 - (v1*2)) + 331)/240, 0), ((v2 - v1) + 130)/120) == min(max(((v0 - (v1*2)) + 331)/240, 0), ((v2 - v1) + 130)/120));1;87;;;;;
 ((((min((v0*4) + ((((v1*3) + ((v2*76) + v3))*2)*4), (min(v4 + 10, (v1*3) + ((v2*76) + v3))*8) + 24) + (v0*4))/4)*4) == (min((v0*4) + ((((v1*3) + ((v2*76) + v3))*2)*4), (min(v4 + 10, (v1*3) + ((v2*76) + v3))*8) + 24) + (v0*4)));1;126;;;;;
 (((((((uint1)1 && ((0 + ((v0*502) + v1)) <= ((v0*502) + v1))) && ((250 + (((v0*502) + v1) + 251)) >= (((v0*502) + v1) + 501))) && ((0 + v2) <= v2)) && ((31 + (v2 + 220)) >= (v2 + 251))) && (0 <= 0)) && (2 >= 2));1;136;;;;;
 (min((((v0/250)*64) + v1)*4, (v2*8) + 1) == min((((v0/250)*64) + v1)*4, (v2*8) + 1));1;68;;;;;
 ((((min(((v3 % ((v4 + 33)/32))*256) + ((((v2 + -3)/8)*8) + 244), (((v1 + v2) + 4)/8)*8)*-1)/4)*4) == (min(((v3 % ((v4 + 33)/32))*256) + ((((v2 + -3)/8)*8) + 244), (((v1 + v2) + 4)/8)*8)*-1));0;1846;;;;;
 (min(((v0 + v1) + 15)/8, v2) == min(((v0 + v1) + 15)/8, v2));1;33;;;;;
 (((v0*32) + ((v1*8) + v2)) == ((v0*32) + ((v1*8) + v2)));1;28;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 25)/11) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 25)/11));1;279;;;;;
 (min(max(v0, 0), (min(v1, 249) + ((v2/4)*4)) + 3) == min(max(v0, 0), (min(v1, 249) + ((v2/4)*4)) + 3));1;59;;;;;
 ((1999 - max(((v0*2) + v1)*2, 1999)) == (((1999 - max(((v0*2) + v1)*2, 1999)) + (max(((v0*2) + v1)*2, 1999) + -1997)) - 1));0;119;;;;;
 ((v0 - ((v1*4) + v2)) == (v0 - ((v1*4) + v2)));1;1187;;;;;
 ((max(min(v0, 999), 0) - (v1*4)) == (max(min(v0, 999), 0) - (v1*4)));1;44;;;;;
 (((v0*128) + ((v1/4) + (v2*252))) == ((v0*128) + ((v1/4) + (v2*252))));1;47;;;;;
 (((((((v0 + v1) + 31)/32) - (v1/32))/32) + 1) == ((((((v0 + v1) + 31)/32) - (v1/32))/32) + 1));1;49;;;;;
 ((min((((min(v0 - v1, (v2*64) + 54) + 13)/4)*4) + v1, min(((v2*64) + v1) + 54, v0) + 10) - (v2*64)) == (min((((min(v0 - v1, (v2*64) + 54) + 13)/4)*4) + v1, min(((v2*64) + v1) + 54, v0) + 10) - (v2*64)));1;106;;;;;
 (min(((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*2, (v2*2) + 1) == min(((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*2, (v2*2) + 1));1;92;;;;;
 (((max(min((v0*125) + v1, min(v2 + v1, 1996) + -125), -128)/4) - (((max(min((v0*125) + v1, min(v2 + v1, 2125) + -125), 1) + -145)/4) + (v3*4))) == ((max(min((v0*125) + v1, min(v2 + v1, 1996) + -125), -128)/4) - (((max(min((v0*125) + v1, min(v2 + v1, 2125) + -125), 1) + -145)/4) + (v3*4))));1;119;;;;;
 (((((v0 + v1) + v2) + v3) + v4) >= ((((((v0 - 1) + v1) + v2) + v3) + v4) + 1));1;82;;;;;
 (min((((v0 + v1) + -1)/4) - (v1/4), v2) == min((((v0 + v1) + -1)/4) - (v1/4), v2));1;52;;;;;
 (min((v0*128) + -3, v1) == min((v0*128) + -3, v1));1;33;;;;;
 ((56 - ((((v0*14) + v1) + v2)*8)) >= (305 - ((((v0*14) + v1) + v2)*8)));0;75;;;;;
 (min((v0*2) + v1, v2 + 1) == min((v0*2) + v1, v2 + 1));1;81;;;;;
 (max(0, min(7, (0 + ((((((min(v0*32, 93) + v1) % 8) + 31)/8)*2) + 3)) - 1) + 1) <= 0);0;100;;;;;
 ((((min(v0*1000, v1 + -1000)*2)/2)*2) == (min(v0*1000, v1 + -1000)*2));1;43;;;;;
 (0 >= ((0 + ((((((min((((((v0/500) + (v1*3))*2) + (v2*3)) + v3)*4, ((((v4 + v0) + 499)/500)*8) + 36)/4) - v3) - (v2*3)) - (v1*6)) - ((v0/500)*2)) + 1)) - 1));0;2141;;;;;
 (((((v0 + v1) + 3)/4) - min((v1/4) + (v2*32), v3)) == ((((v0 + v1) + 3)/4) - min((v1/4) + (v2*32), v3)));1;69;;;;;
 (min(max(min(v0, 256), 7) + (((v1 + 21)/4)*4), max(min(v0, 245), -4) + 12) == min(max(min(v0, 256), 7) + (((v1 + 21)/4)*4), max(min(v0, 245), -4) + 12));1;77;;;;;
 (((v0*84) + ((v1*252) + ((v2/4) + (v3*4)))) == ((v0*84) + ((v1*252) + ((v2/4) + (v3*4)))));1;50;;;;;
 ((((((v0/250)*4) + v1)*64) + -60) == (((((((v0/250)*4) + v1)*64) + -60) + ((v2*8) + 69)) - 1));0;130;;;;;
 (min(1939 - ((v0*126) + v1), min(v2, 115) + 10) == min(1939 - ((v0*126) + v1), min(v2, 115) + 10));1;89;;;;;
 ((((((((v0 + v1) + 314)/63) - (v1/63))*8) + 104)/79) == (((((((v0 + v1) + 314)/63) - (v1/63))*8) + 104)/79));1;86;;;;;
 (min(((v0*16) + v1) + 15, v2) == min(((v0*16) + v1) + 15, v2));1;443;;;;;
 ((((((min(min(((v0 + v1) + -1)/2, ((v1/2) + (min((min((v2*-250) + v3, 249)/4)*4, 246) + (v2*250))) + 3), ((v4*32) + ((v5*128) + ((v1/2) + (v2*250)))) + 31) + ((v2*-250) - (v1/2)))/16)*16) - max((v4*32) + ((v5*128) + (v6 - v7)), -1)) + ((v1/2) + (v2*250))) == (((((min(min(((v0 + v1) + -1)/2, ((v1/2) + (min((min((v2*-250) + v3, 249)/4)*4, 246) + (v2*250))) + 3), ((v4*32) + ((v5*128) + ((v1/2) + (v2*250)))) + 31) + ((v2*-250) - (v1/2)))/16)*16) - max((v4*32) + ((v5*128) + (v6 - v7)), -1)) + ((v1/2) + (v2*250))));1;245;;;;;
 (min(max(((v0 + 193)/4) - (v1*16), -1), v2 + 65) == min(max(((v0 + 193)/4) - (v1*16), -1), v2 + 65));1;83;;;;;
 (max(min(57 - (v0*15), (0 + 15) - 1) + 1, min(max(0 - (v0*15), 0), 15 + 0)) <= min(max(0 - (v0*15), 0), 15 + 0));0;779;;;;;
 ((((((((v0 + v1) + -1)/500) - (v1/500))*64) + 115)/36) == (((((((v0 + v1) + -1)/500) - (v1/500))*64) + 115)/36));1;72;;;;;
 (max(min(1999, ((v1 + -3) + 132) - 1) + 1, min(max(0, v1 + -3), 132 + (v1 + -3))) <= min(max(0, v1 + -3), 132 + (v1 + -3)));0;970;;;;;
 (min(max(min((((v0 + v1) + 499)/500)*8, 26), -5) + 38, v2) == min(max(min((((v0 + v1) + 499)/500)*8, 26), -5) + 38, v2));1;81;;;;;
 (((((((v0 + v1) + -1)/2) - (v1/2)) + 18)/16) == ((((((v0 + v1) + -1)/2) - (v1/2)) + 18)/16));1;79;;;;;
 ((((max(v0, 249) - min(v1, 0)) + 15)/4) >= 0);1;42;;;;;
 (((min(v0, 1)*250) + (v1 + v2)) == ((min(v0, 1)*250) + (v1 + v2)));1;37;;;;;
 (((((v0 % ((v1 + 98)/88))*-88)/4)*4) == ((v0 % ((v1 + 98)/88))*-88));1;52;;;;;
 (((((min(v0*64, -5) + 68)/16)*16) + (max(v0*64, -5) + v1)) == ((((min(v0*64, -5) + 68)/16)*16) + (max(v0*64, -5) + v1)));1;98;;;;;
 (max((max(min(v0/2, 999), 0) + (v1*33)) - min(max(min(((v2 + v0) + 1)/2, 999), 0) - (v3*63), max(min(v0/2, 999), 0) + 62), (v1*33) + (max(min(v0/2, 999), 0) + ((v3*63) - max(min(((v2 + v0) + 1)/2, 999), 0)))) == max((max(min(v0/2, 999), 0) + (v1*33)) - min(max(min(((v2 + v0) + 1)/2, 999), 0) - (v3*63), max(min(v0/2, 999), 0) + 62), (v1*33) + (max(min(v0/2, 999), 0) + ((v3*63) - max(min(((v2 + v0) + 1)/2, 999), 0)))));1;200;;;;;
 ((min(v0, 0) + (v1*4)) == (min(v0, 0) + (v1*4)));1;41;;;;;
 (((((((uint1)1 && (((((v0*64) + v1) + v2) + -1) <= ((((v0*64) + v1) + v2) + -1))) && (((((v0*64) + v1) + v2) + -1) >= ((((v0*64) + v1) + v2) + -1))) && (((((v3*2) + v4)*4) + 0) <= ((((v3*2) + v4)*4) + 0))) && (((((v3*2) + v4)*4) + 3) >= ((((v3*2) + v4)*4) + ((4 + 0) - 1)))) && (v5 <= v5)) && (v5 >= v5));1;176;;;;;
 (min(v0*8, (min(v1*28, 27) + v2) + 9) == min(v0*8, (min(v1*28, 27) + v2) + 9));1;49;;;;;
 ((((min((v0*8) + ((v1 + min((v2 + v3)*500, v4 + -500))/32), ((v1 + min((v2 + v3)*500, v4 + -500)) + 531)/32)*-32)/32)*32) == (min((v0*8) + ((v1 + min((v2 + v3)*500, v4 + -500))/32), ((v1 + min((v2 + v3)*500, v4 + -500)) + 531)/32)*-32));1;138;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/16) + 2) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/16) + 2));1;227;;;;;
 (min((v0*4) + v1, v2 + 184) == min((v0*4) + v1, v2 + 184));1;47;;;;;
 ((((((v0 + v1) + 251)/63)*8) - ((v2*4) + v3)) == (((((v0 + v1) + 251)/63)*8) - ((v2*4) + v3)));1;54;;;;;
 ((max(v0*18, 51) + 9) == (max(v0*18, 51) + 9));1;40;;;;;
 (((((((uint1)1 && ((((v0 + v1)*4) + 0) <= (((v0 + v1)*4) + 0))) && ((((v0 + v1)*4) + 3) >= (((v0 + v1)*4) + ((4 + 0) - 1)))) && ((((v2*2) + v3) + v4) <= (((v2*2) + v3) + v4))) && ((((v2*2) + v3) + v4) >= (((v2*2) + v3) + v4))) && ((v5*2) <= (v5*2))) && (((v5*2) + 1) >= ((2 + (v5*2)) - 1)));1;178;;;;;
 (min(((((v0 + v1) - (v2*128)) - (v3*64)) - (v4*32)) - v1, min(((v0 + v1) - (v2*128)) - ((((v3*2) + v4)*32) + v1), 32) + 3) == min(((((v0 + v1) - (v2*128)) - (v3*64)) - (v4*32)) - v1, min(((v0 + v1) - (v2*128)) - ((((v3*2) + v4)*32) + v1), 32) + 3));1;127;;;;;
 (((((((v0 + v1) + -1)/63) - (v1/63))/5) + 2) == ((((((v0 + v1) + -1)/63) - (v1/63))/5) + 2));1;53;;;;;
 (min((v0*44) + ((v1*156) + v2), v3 + 119) == min((v0*44) + ((v1*156) + v2), v3 + 119));1;57;;;;;
 (min((v0*16) + v1, v2 + -8) == min((v0*16) + v1, v2 + -8));1;309;;;;;
 (min((v0*8) + v1, v2 + 4) == min((v0*8) + v1, v2 + 4));1;35;;;;;
 ((((v0 + -2)/16) + ((v1/16)*8)) == (((v0 + -2)/16) + ((v1/16)*8)));1;57;;;;;
 (min(((min((v0*-8) + ((v1*-16) + (max((((v2 + v3) + -1)/65)*8, 239) - v4)), -17) + ((min(max((((v2 + v3) + -1)/65)*8, 239) - v4, (((v1*2) + v0)*8) + -3)/4)*4)) + v4) + 23, v5) == min(((min((v0*-8) + ((v1*-16) + (max((((v2 + v3) + -1)/65)*8, 239) - v4)), -17) + ((min(max((((v2 + v3) + -1)/65)*8, 239) - v4, (((v1*2) + v0)*8) + -3)/4)*4)) + v4) + 23, v5));1;203;;;;;
 ((((-1000 - ((min(v0*1000, v1 + -1000) + v2) % 2))/2) + (v3*4)) == (((-1000 - ((min(v0*1000, v1 + -1000) + v2) % 2))/2) + (v3*4)));1;74;;;;;
 (min(((v0/65) + ((min((v1*4) + 3, v2)/4)*4)) + 3, v3) == min(((v0/65) + ((min((v1*4) + 3, v2)/4)*4)) + 3, v3));1;73;;;;;
 (max(min(max((1090 - ((v0/63)*64))/1046, 0), ((v1*64) + 1152)/1046), (min(1030 - ((v0/63)*64), (v1*64) + -939)/1046) + 1) == max(min(max((1090 - ((v0/63)*64))/1046, 0), ((v1*64) + 1152)/1046), (min(1030 - ((v0/63)*64), (v1*64) + -939)/1046) + 1));1;150;;;;;
 (((min(max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 999)), 0) - max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 1125)), 126), -128)/8)*8) == min(max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 999)), 0) - max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 1125)), 126), -128));0;2458;;;;;
 (min(((max(min(v0/8, 254), 5)*2) + v1)*4, (v2*8) + 55) == min(((max(min(v0/8, 254), 5)*2) + v1)*4, (v2*8) + 55));1;89;;;;;
 ((((v0*244)/4)*4) == (v0*244));1;34;;;;;
 ((min(((v0*126) + ((v1*64) + v2)) + 53, v3 + v2) + (v4*8)) == (min(((v0*126) + ((v1*64) + v2)) + 53, v3 + v2) + (v4*8)));1;60;;;;;
 (max(min(8 - (v0*2), (0 + 6) - 1) + 1, min(max((v0*-2) + 2, 0), 6 + 0)) <= min(max((v0*-2) + 2, 0), 6 + 0));0;745;;;;;
 ((min((((min(v0 - v1, (v2*64) + 54) + 13)/4)*4) + v1, min(((v2*64) + v1) + 54, v0) + 10) - (v2*64)) == (min((((min(v0 - v1, (v2*64) + 54) + 13)/4)*4) + v1, min(((v2*64) + v1) + 54, v0) + 10) - (v2*64)));1;113;;;;;
 ((((v0*4) + 165)/141) != 0);0;463;;;;;
 (((v0*186) + (v1*8)) == ((v0*186) + (v1*8)));1;53;;;;;
 (min(max((v0/63)*8, 9), (((v0/63) + v1)*8) + 16) == min(max((v0/63)*8, 9), (((v0/63) + v1)*8) + 16));1;49;;;;;
 (min(((v0 + v1) + 64)/65, v2 + 3) == min(((v0 + v1) + 64)/65, v2 + 3));1;1458;;;;;
 (((min((v0 + 30)/16, (((v1 + v0) + 15)/16) - (v2*6))*-16) + ((((v0 + -2)/16)*16) + (v3*52))) == ((min((v0 + 30)/16, (((v1 + v0) + 15)/16) - (v2*6))*-16) + ((((v0 + -2)/16)*16) + (v3*52))));1;105;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*252, 748) + (v1*4)) + v2)) <= ((min(v0*252, 748) + (v1*4)) + v2))) && ((3 + ((min(v0*252, 748) + (v1*4)) + v2)) >= (((min(v0*252, 748) + (v1*4)) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (v3 >= v3));1;174;;;;;
 ((((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 268)/251) == (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 268)/251));1;95;;;;;
 (((max(min(v0, 1999), 0) + (v1*16)) - min(v2 - (v3*63), (max(min(v0, 1999), 0) + min(v1*16, 47)) + 10)) == ((max(min(v0, 1999), 0) + (v1*16)) - min(v2 - (v3*63), (max(min(v0, 1999), 0) + min(v1*16, 47)) + 10)));1;116;;;;;
 ((((v0 - v1)/32) + 1) != 0);0;414;;;;;
 (min(((((v0 + v1) + 64)/65) - (v1/65))*2, (v2*2) + 1) == min(((((v0 + v1) + 64)/65) - (v1/65))*2, (v2*2) + 1));1;92;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + 3))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (8 >= 8));1;105;;;;;
 ((((v0 - v1) + 9)/8) == (((v0 - v1) + 9)/8));1;47;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 271)/252) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 271)/252));1;189;;;;;
 (min(max(min((v0 + v1)/2, 1006), 7) + (v2*8), max(min((v0 + v1)/2, 936), -63) + 80) == min(max(min((v0 + v1)/2, 1006), 7) + (v2*8), max(min((v0 + v1)/2, 936), -63) + 80));1;129;;;;;
 ((((v0*63) + v1) - min(v1 + 124, v2)) == (((v0*63) + v1) - min(v1 + 124, v2)));1;40;;;;;
 ((((v0 + v1)/16) + (v2*2)) == (((v0 + v1)/16) + (v2*2)));1;32;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((279*4) + v0) + 3) >= (((279*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3));1;149;;;;;
 ((min((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1, v2) + 31) == (min((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1, v2) + 31));1;147;;;;;
 ((max(min(v0, 935), -64) + (v1*2)) == (max(min(v0, 935), -64) + (v1*2)));1;43;;;;;
 (((((v0 % ((v1 + 77)/64))*-64)/16)*16) == ((v0 % ((v1 + 77)/64))*-64));1;42;;;;;
 (min(((v0 + v1) + 127)/16, v2 + 3) == min(((v0 + v1) + 127)/16, v2 + 3));1;53;;;;;
 (min((((v0 + v1) + 249)/4) - (v2*16), ((v0 + v1)/4) + 15) == min((((v0 + v1) + 249)/4) - (v2*16), ((v0 + v1)/4) + 15));1;78;;;;;
 ((v0 + 1) <= (((v0 - 1) + -3) - 1));0;53;;;;;
 (((max(min(v0/63, 31), 0)*8) + (v1*17)) == ((max(min(v0/63, 31), 0)*8) + (v1*17)));1;64;;;;;
 (min(((v0 + v1) + 119)/8, (v1/8) + (((v2 + 39)/33)*33)) == min(((v0 + v1) + 119)/8, (v1/8) + (((v2 + 39)/33)*33)));1;65;;;;;
 (min(((v0 + v1) + 35)/4, (((v0 + v1)/4) + (v2*3)) + 2) == min(((v0 + v1) + 35)/4, (((v0 + v1)/4) + (v2*3)) + 2));1;69;;;;;
 ((((max(((v0 + v1) + 7)/8, 249) - min(v1/8, 0)) + 93)/88) >= 0);1;73;;;;;
 (min((((v0/250)*64) + v1)*4, (((v0/250) + v2)*256) + 355) == min((((v0/250)*64) + v1)*4, (((v0/250) + v2)*256) + 355));1;66;;;;;
 (((v0*24) + (((min((((v1 + v2) + -1)/8) - (v3*36), ((v4*4) + ((v2/8) + (v0*12))) + 3) + (v4*-4))*-2) + (((v2/8)*2) + v5))) == ((v0*24) + (((min((((v1 + v2) + -1)/8) - (v3*36), ((v4*4) + ((v2/8) + (v0*12))) + 3) + (v4*-4))*-2) + (((v2/8)*2) + v5))));1;108;;;;;
 ((max(min((v0*32) + (v1 + v2), 1999), 0) + (v3*4)) == (max(min((v0*32) + (v1 + v2), 1999), 0) + (v3*4)));1;72;;;;;
 (((v0*8) + -547) == ((((v0*8) + -547) + ((min(((max(min(min(v1, 3)*8, 22), -7)*8) - (v2*60)) - (max(min((v3/500)*8, 36), 5)*8), -164)*8) + 1792)) - 1));0;315;;;;;
 (((v0*68) + ((v1*120) + v2)) == ((v0*68) + ((v1*120) + v2)));1;51;;;;;
 (v0 >= ((v0 + 2) - 1));0;216;;;;;
 (max(0, min(1, (0 + ((((min(v0*32, 93) + v1) % 4) + 47)/16)) - 1) + 1) <= 0);0;84;;;;;
 ((min(((v0 + v1) + -89)/8, ((v1/8) + (v2*16)) + -1) + (v3*8)) == (min(((v0 + v1) + -89)/8, ((v1/8) + (v2*16)) + -1) + (v3*8)));1;81;;;;;
 ((min(min(v0, 239) + v1, 2246) + (v2*4)) == (min(min(v0, 239) + v1, 2246) + (v2*4)));1;50;;;;;
 ((((((((v0 + v1) + 7)/8) - (v1/8))*2) + 269)/257) == (((((((v0 + v1) + 7)/8) - (v1/8))*2) + 269)/257));1;80;;;;;
 (max(((v0 - v1) + 1)/128, 0) >= ((max(((v0 - v1) + 1)/128, 0) + ((max((v0 - v1)/128, -1) - max(((v0 - v1) + 1)/128, 0)) + 1)) - 1));0;1048;;;;;
 ((min(max(v0 + v1, -7) - (v2*252), v1 + 241) - min(v1, 2002)) == (min(max(v0 + v1, -7) - (v2*252), v1 + 241) - min(v1, 2002)));1;203;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*9) + v3)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*9) + v3)));1;70;;;;;
 ((((((((v0 + v1) + 31)/32) - (v1/32))*16) + 446)/364) == (((((((v0 + v1) + 31)/32) - (v1/32))*16) + 446)/364));1;77;;;;;
 (((v0 + v1) - min(v1, 2007)) == ((v0 + v1) - min(v1, 2007)));1;51;;;;;
 ((((v0*124) + v1)*8) == (((v0*124) + v1)*8));1;37;;;;;
 (max(-1 - max(v0*2, -1), min(v0*-2, 1) + -1) == max(-1 - max(v0*2, -1), min(v0*-2, 1) + -1));1;61;;;;;
 (max(min(1999, (((((v1*68) + v2)*8) + -83) + ((v3*8) + 9)) - 1) + 1, min(max(0, (((v1*68) + v2)*8) + -83), ((v3*8) + 9) + ((((v1*68) + v2)*8) + -83))) <= min(max(0, (((v1*68) + v2)*8) + -83), ((v3*8) + 9) + ((((v1*68) + v2)*8) + -83)));0;1249;;;;;
 ((min(v0*128, 372) + (min(v1*500, v2 + -500) + v3)) == (min(v0*128, 372) + (min(v1*500, v2 + -500) + v3)));1;49;;;;;
 (min(((max(min((v0 + v1)/63, 31), 0)*2) + v2)*4, ((max(min((v0 + v1)/63, 31), 0) + v3)*8) + 24) == min(((max(min((v0 + v1)/63, 31), 0)*2) + v2)*4, ((max(min((v0 + v1)/63, 31), 0) + v3)*8) + 24));1;130;;;;;
 (((((((v0 + v1) + -1)/250) - (v1/250))/4) + 1) == ((((((v0 + v1) + -1)/250) - (v1/250))/4) + 1));1;80;;;;;
 (((((v0 + v1) + 1)/126) - ((v2*4) + v3)) == ((((v0 + v1) + 1)/126) - ((v2*4) + v3)));1;59;;;;;
 (min(max(min(((v0 + v1) + 129)/2, 999) - max(min((v0 + v1)/2, 999), 0), 0), (((v2*16) + v3)*2) + 1) == min(max(min(((v0 + v1) + 129)/2, 999) - max(min((v0 + v1)/2, 999), 0), 0), (((v2*16) + v3)*2) + 1));1;137;;;;;
 (((max(v0, 1997) - (v1*133)) - min(v2, 0)) == ((max(v0, 1997) - (v1*133)) - min(v2, 0)));1;52;;;;;
 ((v0 - (((v1/8) + v2)*8)) == (v0 - (((v1/8) + v2)*8)));1;41;;;;;
 (((((((v0 + v1) + 62)/63) - (v1/63))/8) + 1) == ((((((v0 + v1) + 62)/63) - (v1/63))/8) + 1));1;1427;;;;;
 (((v0 + 68)/64) == ((v0 + 68)/64));1;33;;;;;
 (((((((uint1)1 && ((v0/8) <= (0 + (v0/8)))) && (((v0/8) + 63) >= (3 + ((v0/8) + 60)))) && (((v1/8) + (v2*32)) <= (0 + ((v1/8) + (v2*32))))) && ((((v1/8) + (v2*32)) + 31) >= (((32 + 0) - 1) + ((v1/8) + (v2*32))))) && (0 <= 0)) && (479 >= 454));1;151;;;;;
 ((-104 - (max((min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + min(v2*80, 54)) + 66) - (v2*80)) - max(min(v1/8, 256), 7), -13)*8)) >= 3);0;132;;;;;
 (((((v0 + v1) + 7)/8) - ((((v2*8) + v3)*4) + v4)) == ((((v0 + v1) + 7)/8) - ((((v2*8) + v3)*4) + v4)));1;77;;;;;
 (max(min(max(((v0 - (v1*8)) + 77)/31, 0), ((min(((((v2 + v3) + 39)/8) - ((v4/4)*65)) - (v3/8), 59)*8) + 78)/31), (min(min(v5 + v0, min(v6*8, (v5 + v0) + 29) + 10) - (v1*8), (min(((((v2 + v3) + 39)/8) - ((v4/4)*65)) - (v3/8), 59)*8) + 40) + 38)/31) == max(min(max(((v0 - (v1*8)) + 77)/31, 0), ((min(((((v2 + v3) + 39)/8) - ((v4/4)*65)) - (v3/8), 59)*8) + 78)/31), (min(min(v5 + v0, min(v6*8, (v5 + v0) + 29) + 10) - (v1*8), (min(((((v2 + v3) + 39)/8) - ((v4/4)*65)) - (v3/8), 59)*8) + 40) + 38)/31));1;304;;;;;
 (((v0/8) + (v1*144)) == ((v0/8) + (v1*144)));1;816;;;;;
 (((v0*2004) + (((v1*1000) + v2)*8)) == ((v0*2004) + (((v1*1000) + v2)*8)));1;41;;;;;
 (((v0*252) + ((v1*1000) + (min(v2*128, 124) + (max(min(v3/2, 999), 0)*2)))) == ((v0*252) + ((v1*1000) + (min(v2*128, 124) + (max(min(v3/2, 999), 0)*2)))));1;74;;;;;
 ((min(v0*24, 39) + ((v1 + v2)/2)) == (min(v0*24, 39) + ((v1 + v2)/2)));1;44;;;;;
 ((min(v0 - ((v1 + v2)/8), v3) + 3) == (min(v0 - ((v1 + v2)/8), v3) + 3));1;51;;;;;
 ((min((((v0 + v1) + -1)/17) - (v2*24), (v1/17) + 23) - ((v1/17) + (v3*4))) == (min((((v0 + v1) + -1)/17) - (v2*24), (v1/17) + 23) - ((v1/17) + (v3*4))));1;83;;;;;
 (min((v0*4) + ((v1*20) + v2), v3 + 33) == min((v0*4) + ((v1*20) + v2), v3 + 33));1;71;;;;;
 (min(((v0*4) + ((v1*504) + v2)) + -12, v2 + v3) == min(((v0*4) + ((v1*504) + v2)) + -12, v2 + v3));1;69;;;;;
 ((((((v0 + v1) + 63)/8) - (v2*130)) - (v1/8)) == (((((v0 + v1) + 63)/8) - (v2*130)) - (v1/8)));1;53;;;;;
 ((min(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) - max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0), v3) + 3) == (min(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) - max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0), v3) + 3));1;951;;;;;
 (min((((v0 + v1) + 27)/4) - (v1/4), v2 + 1) == min((((v0 + v1) + 27)/4) - (v1/4), v2 + 1));1;60;;;;;
 (min(max((v0/4) - (max(min(v1/63, 31), 0)*16), -4), (min((max(min(((v2 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*64, 378)/4) + 38) == min(max((v0/4) - (max(min(v1/63, 31), 0)*16), -4), (min((max(min(((v2 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*64, 378)/4) + 38));1;331;;;;;
 (((v0*66) + (((v1 + v2)/8)*8)) == ((v0*66) + (((v1 + v2)/8)*8)));1;63;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*64)) + 63) == min(max(min(((v0 + v1) + 1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*64)) + 63));1;98;;;;;
 ((((v0 - v1) + 129)/128) != 0);0;467;;;;;
 (((v0*2) - ((((v1 + v2)/32)*2) + v3)) == ((v0*2) - ((((v1 + v2)/32)*2) + v3)));1;53;;;;;
 (((v0*59) + (((v1/8)*2) + v2)) == ((v0*59) + (((v1/8)*2) + v2)));1;45;;;;;
 (min(((v0 + v1) + 7)/2, ((v0 + v1)/2) + (v2*2)) == min(((v0 + v1) + 7)/2, ((v0 + v1)/2) + (v2*2)));1;62;;;;;
 ((((v0*64) + 791)/696) != 0);0;461;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 10)/4) == (((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 10)/4));1;173;;;;;
 ((max(min(v0*8, 125), 1) + (v1*8)) == (max(min(v0*8, 125), 1) + (v1*8)));1;61;;;;;
 ((min(v0*4, 29) + (v1*8)) == (min(v0*4, 29) + (v1*8)));1;34;;;;;
 ((min(v0, 3) + (((v1/16) + v2)*4)) == (min(v0, 3) + (((v1/16) + v2)*4)));1;173;;;;;
 (max((4 - ((v0*4) + v1))/8, max(min(v2, 270), 21) + -21) == max((4 - ((v0*4) + v1))/8, max(min(v2, 270), 21) + -21));1;69;;;;;
 (min((v0/8)*8, (v1*8) + 85) == min((v0/8)*8, (v1*8) + 85));1;65;;;;;
 (min(max(min(v0, 310), 61) + (v1*4), max(min(v0, 243), -6) + 64) == min(max(min(v0, 310), 61) + (v1*4), max(min(v0, 243), -6) + 64));1;67;;;;;
 ((v0 + -4) >= (((v0 + -4) + (min(min(((max(min(((v1 + v2) + 1)/2, 999), 0)*2) - (v3*251)) - (max(min(v2/2, 999), 0)*2), 243) + v4, -8) + 9)) - 1));1;307;;;;;
 (((max(min((v1*-32) + (max(v2, 1997) - min(v3, 21)), 8), -24)/4)*4) == max(min((v1*-32) + (max(v2, 1997) - min(v3, 21)), 8), -24));0;1340;;;;;
 (((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))*2)/9) + 2) == ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))*2)/9) + 2));1;233;;;;;
 ((((max(min((v6*65) + ((((v5/8) + (v7*16))*8) + 56), min(min(((v4 + v5) + -1)/8, ((v5/8) + (v7*16)) + 15)*8, 1994)), -5) + (max(min((v6*65) + ((((v5/8) + (v7*16))*8) + 56), min(min(((v4 + v5) + -1)/8, ((v5/8) + (v7*16)) + 15)*8, 2058)), 59)*-1))/4)*4) == (max(min((v6*65) + ((((v5/8) + (v7*16))*8) + 56), min(min(((v4 + v5) + -1)/8, ((v5/8) + (v7*16)) + 15)*8, 1994)), -5) + (max(min((v6*65) + ((((v5/8) + (v7*16))*8) + 56), min(min(((v4 + v5) + -1)/8, ((v5/8) + (v7*16)) + 15)*8, 2058)), 59)*-1)));0;4666;;;;;
 ((((((v0 + v1) + 314)/63) - (v2*3)) - (v1/63)) == (((((v0 + v1) + 314)/63) - (v2*3)) - (v1/63)));1;58;;;;;
 ((((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 449)/250) == (((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 449)/250));1;214;;;;;
 ((max(min(v0, 999), 0) + (v1*3)) == (max(min(v0, 999), 0) + (v1*3)));1;56;;;;;
 ((((max(min(min((v0*64) + v1, (v2 + v1) + -64)/63, 31), 0)*8)/4)*4) == (max(min(min((v0*64) + v1, (v2 + v1) + -64)/63, 31), 0)*8));1;129;;;;;
 (((((((v0 + v1) + 62)/63) - (v1/63))*2) + 2) == ((((((v0 + v1) + 62)/63) - (v1/63))*2) + 2));1;63;;;;;
 (min(132 - ((v0*2) + (v1*67)), 66 - (v0*2)) == min(132 - ((v0*2) + (v1*67)), 66 - (v0*2)));1;58;;;;;
 (((min(v0 + 9, v1)*-8) + ((v2*4) + ((v1*8) + (v3*20)))) == ((min(v0 + 9, v1)*-8) + ((v2*4) + ((v1*8) + (v3*20)))));1;67;;;;;
 (min((min((((((v0 + v1) + 62)/63)*8) - (v2*17)) - ((v1/63)*8), 8) + 23)/8, max((0 - v3)/8, -2) + 2) == min((min((((((v0 + v1) + 62)/63)*8) - (v2*17)) - ((v1/63)*8), 8) + 23)/8, max((0 - v3)/8, -2) + 2));1;151;;;;;
 ((max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (v3*4))) == (max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (v3*4))));1;152;;;;;
 (min(((v0*4) + v1) + -57, v2) == min(((v0*4) + v1) + -57, v2));1;40;;;;;
 ((((max(v0, 0) - v1)/8) + 1) == (((max(v0, 0) - v1)/8) + 1));1;68;;;;;
 ((max(min(v0, 258), 9) + (v1*4)) == (max(min(v0, 258), 9) + (v1*4)));1;43;;;;;
 ((max((((max(v0*16, 984)/4)*-4) + ((v0*16) + v1)) - (min(v0*16, 984) + v1), -982) + 1002) <= 1024);0;1115;;;;;
 ((max(min((v0*124) + ((v1 - v2)*8), 552), 429) + min((v2*8) + 429, v3)) == (max(min((v0*124) + ((v1 - v2)*8), 552), 429) + min((v2*8) + 429, v3)));1;62;;;;;
 (min(503 - (((v0*32) + v1)*4), 10 - (((min((((v2 + v3) + -1)/8) - (v4*128), (v3/8) + 127)*-2) + ((((v3/8) + (v5*63))*2) + ((v0*32) + v1)))*4)) == min(503 - (((v0*32) + v1)*4), 10 - (((min((((v2 + v3) + -1)/8) - (v4*128), (v3/8) + 127)*-2) + ((((v3/8) + (v5*63))*2) + ((v0*32) + v1)))*4)));1;277;;;;;
 (((v0*96) + (((v1 + v2)/63)*64)) == ((v0*96) + (((v1 + v2)/63)*64)));1;58;;;;;
 (max(v0*2, ((v1*2) + v2) + 8) == max(v0*2, ((v1*2) + v2) + 8));1;40;;;;;
 (((v0*12) + ((v1*3) + (max(min(min(v2*32, 223) + v3, 1244), 245) - max(min(min(v2*32, 223) + v3, 1213), 214)))) == ((v0*12) + ((v1*3) + (max(min(min(v2*32, 223) + v3, 1244), 245) - max(min(min(v2*32, 223) + v3, 1213), 214)))));1;263;;;;;
 (min(((v0 + v1) + 1)/2, v2 + -1) == min(((v0 + v1) + 1)/2, v2 + -1));1;51;;;;;
 ((min(((v0 + v1) + 5)/2, ((v1/2) + (v2*504)) + 498) + (v3*126)) == (min(((v0 + v1) + 5)/2, ((v1/2) + (v2*504)) + 498) + (v3*126)));1;95;;;;;
 (((v0*64) + ((v1*252) + v2)) == ((v0*64) + ((v1*252) + v2)));1;68;;;;;
 (((((((uint1)1 && (((v0*32) + ((v1*64) + v2)) <= ((v0*32) + ((v1*64) + v2)))) && ((((v0*32) + ((v1*64) + v2)) + 35) >= (((v0*32) + ((v1*64) + v2)) + 31))) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) + -1))) && (0 <= 0)) && (0 >= 0));1;150;;;;;
 ((((((v0 + v1) + -1)/2) - (v2*8)) - (v1/2)) == (((((v0 + v1) + -1)/2) - (v2*8)) - (v1/2)));1;69;;;;;
 (((v0*252) + ((v1*64) + v2)) == ((v0*252) + ((v1*64) + v2)));1;63;;;;;
 (min(min(v0*12, 20) + (((v1*16) + v2)*2), (v3*2) + 42) == min(min(v0*12, 20) + (((v1*16) + v2)*2), (v3*2) + 42));1;93;;;;;
 (((v0*74) + (((v1*4) + v2)*32)) == ((v0*74) + (((v1*4) + v2)*32)));1;78;;;;;
 (min((v0*3) + (((v1*8) + v2)*8), (v3*8) + 62) == min((v0*3) + (((v1*8) + v2)*8), (v3*8) + 62));1;68;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 0)) + 144)/127) >= 0);1;59;;;;;
 ((((min((v2*1024) + ((v1/32)*32), (min((v2*32) + ((v1/32) + -1), ((v3 + v1) + -1)/32)*32) + 76)*-1)/4)*4) == (min((v2*1024) + ((v1/32)*32), (min((v2*32) + ((v1/32) + -1), ((v3 + v1) + -1)/32)*32) + 76)*-1));0;1937;;;;;
 (((v0*34) + (v1*67)) == ((v0*34) + (v1*67)));1;37;;;;;
 (((v0*4) + (max(min((v1*8) + v2, min(v3 + v2, 2007) + -8), 0) - max(min((v1*8) + v2, min(v3 + v2, 2000) + -8), -7))) == ((v0*4) + (max(min((v1*8) + v2, min(v3 + v2, 2007) + -8), 0) - max(min((v1*8) + v2, min(v3 + v2, 2000) + -8), -7))));1;1127;;;;;
 (min((v0*4) + v1, ((max(min((v2/500)*8, 67), 36) + v3)*8) + 349) == min((v0*4) + v1, ((max(min((v2/500)*8, 67), 36) + v3)*8) + 349));1;86;;;;;
 (((((((v0 + v1) + 31)/8) - (v1/8)) + 129)/128) == ((((((v0 + v1) + 31)/8) - (v1/8)) + 129)/128));1;72;;;;;
 (min(((v0 + v1) + 123)/2, ((v0 + v1)/2) + (v2*4)) == min(((v0 + v1) + 123)/2, ((v0 + v1)/2) + (v2*4)));1;56;;;;;
 ((max(min(v0, 552), -437) + -553) >= (((max(min(v0, 552), -437) + -553) + (555 - max(min(v0, 552), -437))) - 1));0;101;;;;;
 ((v0 + -99) >= (((v0 + -99) + (min(v1 - (((v2*28) - min(((v3*8) - (v4*55)) - ((v5/63)*8), min(v2*28, 27) + 9))*8), -147) + 148)) - 1));1;263;;;;;
 ((((v0/8) + (((min((v1*-84) + v2, 83)/16)*16) + (v1*84))) + (min(((((v3 + v0) + 7)/8) - (v1*84)) - (v0/8), 3) + (min(min(((((v3 + v0) + 7)/8) - (v1*84)) - (v0/8), 83)/4, 3)*4))) == (((v0/8) + (((min((v1*-84) + v2, 83)/16)*16) + (v1*84))) + (min(((((v3 + v0) + 7)/8) - (v1*84)) - (v0/8), 3) + (min(min(((((v3 + v0) + 7)/8) - (v1*84)) - (v0/8), 83)/4, 3)*4))));1;1428;;;;;
 ((((((((v0 + v1) + 63)/8) - (v1/8))*8) + 1120)/1060) == (((((((v0 + v1) + 63)/8) - (v1/8))*8) + 1120)/1060));1;93;;;;;
 (((v0/133) + (v1*4)) == ((v0/133) + (v1*4)));1;21;;;;;
 ((max(min(((v0*4) + v1)*2, 491), -8) - (max(min(((v0*4) + v1)*2, 499), 0) + (v2*4))) == (max(min(((v0*4) + v1)*2, 491), -8) - (max(min(((v0*4) + v1)*2, 499), 0) + (v2*4))));1;104;;;;;
 (max(min(max(((v0 - max(min(v1, 1999), 9)) + 18)/4, 0), (v2 + 13)/4), ((min((v3 + v0) + 5, v4) - max(min(v1, 1999), 9)) + 10)/4) == max(min(max(((v0 - max(min(v1, 1999), 9)) + 18)/4, 0), (v2 + 13)/4), ((min((v3 + v0) + 5, v4) - max(min(v1, 1999), 9)) + 10)/4));1;150;;;;;
 (min(((v0*126) + ((v1*1003) + v2)) + 115, v2 + v3) == min(((v0*126) + ((v1*1003) + v2)) + 115, v2 + v3));1;55;;;;;
 (min(((v0 + v1) + 887)/8, (((v0 + v1)/8) + (v2*16)) + -5) == min(((v0 + v1) + 887)/8, (((v0 + v1)/8) + (v2*16)) + -5));1;57;;;;;
 ((min((v0/2)*2, -1) + (v1*501)) == (min((v0/2)*2, -1) + (v1*501)));1;42;;;;;
 (((((((v0 + v1) + 11)/2) - (v1/2)) + 264)/254) == ((((((v0 + v1) + 11)/2) - (v1/2)) + 264)/254));1;63;;;;;
 (min(((v0 + v1) + 63)/8, v2 + 4) == min(((v0 + v1) + 63)/8, v2 + 4));1;58;;;;;
 ((((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/250) + 1) == (((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/250) + 1));1;230;;;;;
 ((((((((v0 + v1) + 47)/8) - (v1/8))*8) + 375)/269) == (((((((v0 + v1) + 47)/8) - (v1/8))*8) + 375)/269));1;53;;;;;
 (min((v0/32) + (min((v1*-4) + v2, -2) + (((min((v1*4) + 3, v2) + 5)/4)*4)), v3) == min((v0/32) + (min((v1*-4) + v2, -2) + (((min((v1*4) + 3, v2) + 5)/4)*4)), v3));1;105;;;;;
 ((v0 + -78) == (((v0 + -78) + (42 - max(v1*-24, 17))) - 1));0;91;;;;;
 ((((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1290)/669) == (((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1290)/669));1;202;;;;;
 (v0 != 0);0;171;;;;;
 ((max(min((v0 + v1)/8, 249), 0) + (v2*8)) == (max(min((v0 + v1)/8, 249), 0) + (v2*8)));1;54;;;;;
 (min(((v0 + v1) + 16)/17, (v2*12) + v3) == min(((v0 + v1) + 16)/17, (v2*12) + v3));1;56;;;;;
 (max((min(((v0 + v1)/2) + 49, v2) + v3) + 15, v2) == max((min(((v0 + v1)/2) + 49, v2) + v3) + 15, v2));1;59;;;;;
 ((((v0 + v1) - (v2*96)) - ((v3*32) + v1)) == (((v0 + v1) - (v2*96)) - ((v3*32) + v1)));1;49;;;;;
 ((((v0*64) + 219)/68) != 0);0;449;;;;;
 ((((v0*-2)/2)*2) == (v0*-2));1;35;;;;;
 (((v0*62) + ((v1*8) + v2)) == ((v0*62) + ((v1*8) + v2)));1;55;;;;;
 (((((min((((v0/500)*16) + v1)*4, ((((v2 + v0) + -1)/500)*64) + 85) + 7)/2) - (v1*2)) - ((v0/500)*32)) == ((((min((((v0/500)*16) + v1)*4, ((((v2 + v0) + -1)/500)*64) + 85) + 7)/2) - (v1*2)) - ((v0/500)*32)));1;130;;;;;
 (max(((max(min(((v0 + v1) + -1)/4, 499), 0) - ((v2*64) + v3)) + -3)/4, ((max(min(((v0 + v1) + -1)/4, 499), 0) - v3)/4) + (v2*-16)) == max(((max(min(((v0 + v1) + -1)/4, 499), 0) - ((v2*64) + v3)) + -3)/4, ((max(min(((v0 + v1) + -1)/4, 499), 0) - v3)/4) + (v2*-16)));1;153;;;;;
 (((((v0 - v1)*8) + 798)/502) == ((((v0 - v1)*8) + 798)/502));1;58;;;;;
 (min(max(v0, 0) - min(v1, 249), v2) == min(max(v0, 0) - min(v1, 249), v2));1;50;;;;;
 (((v0*25) + (((v1*12) + v2)*8)) == ((v0*25) + (((v1*12) + v2)*8)));1;49;;;;;
 (((v0/8)*8) == ((((v0/8)*8) + ((v1*8) + 8)) - 1));0;64;;;;;
 (max(-2152 - (v0*64), (v0*64) + 1791) >= 0);0;535;;;;;
 ((min((v0/32)*32, (max((((v1 + v0) + 31)/32)*32, 1964) - (v2*33)) + 45) - min((v0/32)*32, 36)) == (min((v0/32)*32, (max((((v1 + v0) + 31)/32)*32, 1964) - (v2*33)) + 45) - min((v0/32)*32, 36)));1;310;;;;;
 (((v0*2) + 1) == ((((v0*2) + 1) + 2) - 1));0;40;;;;;
 (min(((v0 + v1) + -1)/16, ((v2*64) + v3) + 31) == min(((v0 + v1) + -1)/16, ((v2*64) + v3) + 31));1;69;;;;;
 (((min(max(v0, 0), (min(v1*80, 76) + ((v2*156) + v3)) + 79) - (v1*80)) - ((v2*156) + v3)) == ((min(max(v0, 0), (min(v1*80, 76) + ((v2*156) + v3)) + 79) - (v1*80)) - ((v2*156) + v3)));1;105;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -3) <= (((((0*4) + v0) + 0) + 0) + -3))) && (((((35*4) + v0) + 3) + -3) >= (((((34*4) + v0) + 3) + 4) + -3))) && (max((max(min((v1/4)*8, 4012), 13) + -19)/2, v2 + 4) <= (v2 + 0))) && ((v2 + 4) >= (v2 + 4))) && (v3 <= v3)) && (v3 >= v3));0;242;;;;;
 (min(((v0 + v1) + -1)/63, ((v1/63) + (v2*16)) + 15) == min(((v0 + v1) + -1)/63, ((v1/63) + (v2*16)) + 15));1;61;;;;;
 (((v0/1001) + 1) == ((v0/1001) + 1));1;31;;;;;
 ((v0 + 2) != 0);0;1003;;;;;
 (min(v0*8, min(((min(v1*8, (v2*84) + 72)/4) + (((v3*20) + v4)*2))*4, ((v2*84) + (((v3*20) + v4)*8)) + 70) + 2) == min(v0*8, min(((min(v1*8, (v2*84) + 72)/4) + (((v3*20) + v4)*2))*4, ((v2*84) + (((v3*20) + v4)*8)) + 70) + 2));1;133;;;;;
 (min(v0*125, v1 + -125) == min(v0*125, v1 + -125));1;244;;;;;
 (max(min(min((((((v1 + v2) - (max(min((v3/500)*8, 36), 5)*64)) + 1058)/704)*5) + -1, ((((max(min(min(((v4 + v3) + 499)/500, 3)*8, 22), -7) - max(min((v3/500)*8, 36), 5)) + 15)/11)*5) + -1), (0 + (((v5 + 25)/11)*5)) - 1) + 1, min(max((((v2 - (max(min((v3/500)*8, 36), 5)*64)) + 1058)/704)*5, 0), (((v5 + 25)/11)*5) + 0)) <= min(max((((v2 - (max(min((v3/500)*8, 36), 5)*64)) + 1058)/704)*5, 0), (((v5 + 25)/11)*5) + 0));0;5330;;;;;
 (min(max((v0/32)*4, 77), (((v0/32) + v1)*4) + 109) == min(max((v0/32)*4, 77), (((v0/32) + v1)*4) + 109));1;48;;;;;
 (min((((v0 + v1) + 103)/8) - (v1/8), v2 + 6) == min((((v0 + v1) + 103)/8) - (v1/8), v2 + 6));1;84;;;;;
 ((max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0))) == (max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0))));1;119;;;;;
 ((((v0*128)/16)*16) == (v0*128));1;23;;;;;
 (min(2 - min(v0, 2), min(v1, 3) + 2) == min(2 - min(v0, 2), min(v1, 3) + 2));1;51;;;;;
 ((((((v0 + v1) + -1)/4) - (v2*4)) - (v1/4)) == (((((v0 + v1) + -1)/4) - (v2*4)) - (v1/4)));1;94;;;;;
 (0 == ((0 + ((v0*2) + 14)) - 1));0;53;;;;;
 ((((v0*65) + v1) + -121) == (((((v0*65) + v1) + -121) + 65) - 1));0;60;;;;;
 (((-128 - ((v0 + v1) % 2))/2) >= ((((-128 - ((v0 + v1) % 2))/2) + (((v0 + v1) % 2) + 66)) - 1));0;96;;;;;
 ((max(min((v0/63)*8, 285), 36) + (v1*16)) == (max(min((v0/63)*8, 285), 36) + (v1*16)));1;273;;;;;
 (min(max(min(v0, 2609), 610) + (v1*4), max(min(v2, 1578), -421) + 1034) == min(max(min(v0, 2609), 610) + (v1*4), max(min(v2, 1578), -421) + 1034));1;81;;;;;
 (((v0*236) + (v1*8)) == ((v0*236) + (v1*8)));1;39;;;;;
 (min((v0*32) + (max(v1*500, -5) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 468) == min((v0*32) + (max(v1*500, -5) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 468));1;104;;;;;
 (((max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), 0)/4)*4) == max(min((v1*-1000) + (((v2/1000)*-1000) + v2), 1000), 0));0;1481;;;;;
 (min(43 - (v0*3), (min(((((v1 + v2) + 3)/2) - (v3*504)) - (v4*127), (v2/2) + 118) - ((v0*3) + ((v2/2) + (v5*44)))) + 11) == min(43 - (v0*3), (min(((((v1 + v2) + 3)/2) - (v3*504)) - (v4*127), (v2/2) + 118) - ((v0*3) + ((v2/2) + (v5*44)))) + 11));1;127;;;;;
 (max(min((v1 + v2) + -1, ((v3*64) + 9) - 1) + 1, min(max(v2, v3*64), 9 + (v3*64))) <= min(max(v2, v3*64), 9 + (v3*64)));0;1232;;;;;
 (((v0/8) + (v1*36)) == ((v0/8) + (v1*36)));1;39;;;;;
 (((((v0 + v1) + 73)/2) - ((v2*2) + (((v0 + v1)/2) + (v3*6)))) == ((((v0 + v1) + 73)/2) - ((v2*2) + (((v0 + v1)/2) + (v3*6)))));1;68;;;;;
 (min(((v0*64) + v1) + 62, v2) == min(((v0*64) + v1) + 62, v2));1;61;;;;;
 (0 == ((0 + ((max(v0, -5)*2) + 10)) - 1));0;50;;;;;
 (((((v0 % ((v1 + 999)/1000))*0)/64)*64) == ((v0 % ((v1 + 999)/1000))*0));1;44;;;;;
 ((v0 + 4) == (((v0 + 4) + 2) - 1));0;36;;;;;
 ((max(min(min(v0*64, 191) + v1, 1181), 182) - (max(min(min(v0*64, 191) + v1, 1244), 245) + (v2*12))) == (max(min(min(v0*64, 191) + v1, 1181), 182) - (max(min(min(v0*64, 191) + v1, 1244), 245) + (v2*12))));1;123;;;;;
 (min(max(max(((v0*125) + v1) + -2, v2), 0), (min(v3, 125) + ((v0*125) + v1)) + 3) == min(max(max(((v0*125) + v1) + -2, v2), 0), (min(v3, 125) + ((v0*125) + v1)) + 3));1;85;;;;;
 ((max(min(v0, 0), -11) + -5) == (((max(min(v0, 0), -11) + -5) + (7 - max(min(v0, 0), -11))) - 1));0;94;;;;;
 (min(((min(30 - max(v0*16, 10), min(((((min(v1*125, v2 + -125) + v3) % 8) + 188)/8) + (v0*-16), 14) + 6)/9)*9) + v4, v5) == min(((min(30 - max(v0*16, 10), min(((((min(v1*125, v2 + -125) + v3) % 8) + 188)/8) + (v0*-16), 14) + 6)/9)*9) + v4, v5));1;117;;;;;
 ((((v0/2) + (v1*2)) - (min(v2 - (v3*508), (min(v4*32, 488) + (v0/2)) + 8) + (v4*-32))) == (((v0/2) + (v1*2)) - (min(v2 - (v3*508), (min(v4*32, 488) + (v0/2)) + 8) + (v4*-32))));1;79;;;;;
 (((((v0 + v1) + 5)/2) - ((v2*2) + v3)) == ((((v0 + v1) + 5)/2) - ((v2*2) + v3)));1;62;;;;;
 (((((((uint1)1 && ((0 + v0) <= (((0*4) + 0) + v0))) && ((3 + (v0 + 1004)) >= (((((252 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (v1 <= v1)) && (v1 >= v1)) && (v2 <= v2)) && (v2 >= v2));1;124;;;;;
 (((v0*32) + (min(v1*256, 761) + (v2 + v3))) == ((v0*32) + (min(v1*256, 761) + (v2 + v3))));1;48;;;;;
 (min(max(min(v0 + v1, 1999), 0)/16, ((max(min(v1, 2002), 3) + 45)/16) + ((v2/4)*4)) == min(max(min(v0 + v1, 1999), 0)/16, ((max(min(v1, 2002), 3) + 45)/16) + ((v2/4)*4)));1;64;;;;;
 ((min(v0*64, 66) + (v1 + v2)) == (min(v0*64, 66) + (v1 + v2)));1;54;;;;;
 (0 == ((0 + ((max((((v0 + v1)/125) - v2)*16, 3)*-2) + 46)) - 1));0;196;;;;;
 ((((min((v0*17) + (((v1/63)*8) + 2), (((v2 + v1) + 62)/63)*8)*-8)/4)*4) == (min((v0*17) + (((v1/63)*8) + 2), (((v2 + v1) + 62)/63)*8)*-8));1;100;;;;;
 ((((v0*16) + 56)/35) != 0);0;485;;;;;
 (((((((uint1)1 && ((((0*4) + 0) + ((min(v0, 1000) + v1) + -1004)) <= (((0*4) + ((min(v0, 1000) + v1) + -1004)) + 0))) && ((((251*4) + 3) + (min((((max(v0, 1000) + 8)/1008)*1008) + (min(v0, 1000) + v1), (v0 + v1) + 1) + -1004)) >= (((((max(v0, 1000)/4) + 2)*4) + ((v0 + v1) + -239)) + 3))) && (((max(v2*8, -9) + v3) + 5) <= ((((v2*8) + -9) + v3) + 5))) && ((((v2*8) + v3) + 12) >= ((((v2*8) + 7) + v3) + 5))) && (0 <= 0)) && (0 >= 0));0;446;;;;;
 (min(((v0 + v1) + 55)/8, (min(v2*68, 64) + v3) + 62) == min(((v0 + v1) + 55)/8, (min(v2*68, 64) + v3) + 62));1;66;;;;;
 ((((max(((v0 + v1) + -1)/8, 0) - min(v1/8, 249)) + 6)/4) == (((max(((v0 + v1) + -1)/8, 0) - min(v1/8, 249)) + 6)/4));1;86;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 1065)/1004) == (((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 1065)/1004));1;232;;;;;
 (max(-517 - (v0*8), (v0*8) + 11) >= 0);0;500;;;;;
 (min(max(min((v0 + v1)/8, 258), 9), max(min((v0 + v1)/8, 259), 10)) == min(max(min((v0 + v1)/8, 258), 9), max(min((v0 + v1)/8, 259), 10)));1;1060;;;;;
 (max(((v0 % 8) + 47)/8, ((((min(v1*32, 93) + v0) + 39)/8) - min((min(v1*32, 93) + v0)/8, ((v0 + 15)/8) + (v1*4))) + 1) <= 1024);0;1603;;;;;
 (max(min(max(v0/8, 5), ((v0/8) + v1) + 6), min((v0/8) + v1, 249) + 6) == max(min(max(v0/8, 5), ((v0/8) + v1) + 6), min((v0/8) + v1, 249) + 6));1;82;;;;;
 (max(min(min(1999, min(v1 + v2, 2000) + -1), ((v3 + -3) + 507) - 1) + 1, min(max(max(0, max(v2, 0)), v3 + -3), 507 + (v3 + -3))) <= min(max(max(0, max(v2, 0)), v3 + -3), 507 + (v3 + -3)));0;1236;;;;;
 (min(max(min(v0*8, 3986), -13) + 58, v1) == min(max(min(v0*8, 3986), -13) + 58, v1));1;48;;;;;
 (((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/12)*12) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -25)*4))) + 100) == ((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/12)*12) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -25)*4))) + 100));1;181;;;;;
 ((((min(((v3 % (((v4*16) + 707)/500))*500) + ((max(min((v2/125)*8, 125), 1)*16) + 292), max(min((((v1 + v2) + -1)/125)*8, 113), -11)*16)*-1)/4)*4) == (min(((v3 % (((v4*16) + 707)/500))*500) + ((max(min((v2/125)*8, 125), 1)*16) + 292), max(min((((v1 + v2) + -1)/125)*8, 113), -11)*16)*-1));0;2818;;;;;
 ((max(min((v0 + v1)/2, 999), 0) + (v2*16)) == (max(min((v0 + v1)/2, 999), 0) + (v2*16)));1;71;;;;;
 (min(max((((v0/63)*-8) + 144)/136, 0), (v1 + 151)/136) == min(max((((v0/63)*-8) + 144)/136, 0), (v1 + 151)/136));1;66;;;;;
 ((((v0*64) + 131)/36) != 0);0;423;;;;;
 (min(max(min(v0 + v1, 1999), 0) + (((v2 + 134)/4)*4), max(min(v0 + v1, 1875), -124) + 131) == min(max(min(v0 + v1, 1999), 0) + (((v2 + 134)/4)*4), max(min(v0 + v1, 1875), -124) + 131));1;116;;;;;
 ((((v0/2) + (v1*19)) - (min((((v2 + v0) + 3)/2) - (v3*252), ((v0/2) + (v4*32)) + 23) + (v4*-32))) == (((v0/2) + (v1*19)) - (min((((v2 + v0) + 3)/2) - (v3*252), ((v0/2) + (v4*32)) + 23) + (v4*-32))));1;103;;;;;
 ((((v0*8) + 33)/20) != 0);0;463;;;;;
 (min(max(max(((max(v0, 0) - ((v1/125)*128)) + 1157)/1096, (289 - ((v1/125)*32))/274), 0), ((v2*128) + 1239)/1096) == min(max(max(((max(v0, 0) - ((v1/125)*128)) + 1157)/1096, (289 - ((v1/125)*32))/274), 0), ((v2*128) + 1239)/1096));1;134;;;;;
 ((v0 - (v1*260)) == (v0 - (v1*260)));1;67;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*64), max(min(v1/2, 999), 0) + 63) == min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*64), max(min(v1/2, 999), 0) + 63));1;94;;;;;
 (((v0/125) + (v1*2)) == ((v0/125) + (v1*2)));1;35;;;;;
 ((((((v0/2) % ((v1 + 12)/10))*-10)/5)*5) == (((v0/2) % ((v1 + 12)/10))*-10));1;71;;;;;
 ((((((((v0 + v1) + 39)/8) - (v1/8))*8) + 580)/524) == (((((((v0 + v1) + 39)/8) - (v1/8))*8) + 580)/524));1;71;;;;;
 (min((v0*4) + ((v1*256) + v2), v3 + 3) == min((v0*4) + ((v1*256) + v2), v3 + 3));1;61;;;;;
 (min(v0*8, (((v1*2) + v2)*4) + 3) == min(v0*8, (((v1*2) + v2)*4) + 3));1;77;;;;;
 (min((v0*4) + v1, max(min((((v2 + v3) + -1)/63)*8, 244), -5) + 38) == min((v0*4) + v1, max(min((((v2 + v3) + -1)/63)*8, 244), -5) + 38));1;516;;;;;
 (min(((((v0 + v1) + 251)/63)*8) + 17, v2) == min(((((v0 + v1) + 251)/63)*8) + 17, v2));1;1356;;;;;
 (min(max((v0/2) + v1, 999), (min(v0/2, 2) + ((v2/2)*2)) + 1) == min(max((v0/2) + v1, 999), (min(v0/2, 2) + ((v2/2)*2)) + 1));1;66;;;;;
 (((((((v0 + v1) + 31)/8) - (v1/8))/127) + 1) == ((((((v0 + v1) + 31)/8) - (v1/8))/127) + 1));1;66;;;;;
 (((v0 - (v1*4)) - ((v2*36) + v3)) == ((v0 - (v1*4)) - ((v2*36) + v3)));1;47;;;;;
 (((((v0 % ((v1/12) + 1))*-12)/4)*4) == ((v0 % ((v1/12) + 1))*-12));1;45;;;;;
 (((((((v0 + v1) + 15)/16) - (v1/16)) + 3)/2) == ((((((v0 + v1) + 15)/16) - (v1/16)) + 3)/2));1;58;;;;;
 (min(((((v0*128) + v1)*2) + v2)*4, (v3*8) + 166) == min(((((v0*128) + v1)*2) + v2)*4, (v3*8) + 166));1;79;;;;;
 (min(max(min(v0 + v1, 1999), 0) + (((v2 + 134)/4)*4), max(min(v0 + v1, 1875), -124) + 131) == min(max(min(v0 + v1, 1999), 0) + (((v2 + 134)/4)*4), max(min(v0 + v1, 1875), -124) + 131));1;100;;;;;
 (max(((v0*33) + v1)*2, ((v2*2) + v3) + 8) == max(((v0*33) + v1)*2, ((v2*2) + v3) + 8));1;59;;;;;
 ((((max(min(((v0 + v1) + 71)/8, 249), 0) - max(min(v1/8, 254), 5)) + 9)/2) == (((max(min(((v0 + v1) + 71)/8, 249), 0) - max(min(v1/8, 254), 5)) + 9)/2));1;287;;;;;
 ((max(min(min((((v0 + v1) + 124)/125)*128, ((v2*244) + ((v1/125)*128)) + 100), 1918), -81) - max(min((v2*244) + ((v1/125)*128), 2061), 62)) == (max(min(min((((v0 + v1) + 124)/125)*128, ((v2*244) + ((v1/125)*128)) + 100), 1918), -81) - max(min((v2*244) + ((v1/125)*128), 2061), 62)));1;252;;;;;
 (max(min((v1 + v2) + -1, ((((v3*126) + v4) + -4) + (v5 + 6)) - 1) + 1, min(max(v2, ((v3*126) + v4) + -4), (v5 + 6) + (((v3*126) + v4) + -4))) <= min(max(v2, ((v3*126) + v4) + -4), (v5 + 6) + (((v3*126) + v4) + -4)));0;1813;;;;;
 (min(((v0*32) + ((v1*63) + v2)) + 21, v3 + v2) == min(((v0*32) + ((v1*63) + v2)) + 21, v3 + v2));1;123;;;;;
 ((((v0*-184)/4)*4) == (v0*-184));1;22;;;;;
 ((v0 - ((v1*67) + v2)) == (v0 - ((v1*67) + v2)));1;61;;;;;
 (min(((((v0 + v1) + -1)/32) - (v1/32)) + -11, v2) == min(((((v0 + v1) + -1)/32) - (v1/32)) + -11, v2));1;56;;;;;
 ((min((v0/16)*8, 4) + (v1*12)) == (min((v0/16)*8, 4) + (v1*12)));1;35;;;;;
 (((v0*4) + ((v1/65) + (v2*2))) == ((v0*4) + ((v1/65) + (v2*2))));1;66;;;;;
 (((v0/2) + ((v1*63) - (((v2 + v0) + 5)/2))) == ((v0/2) + ((v1*63) - (((v2 + v0) + 5)/2))));1;68;;;;;
 (min(((((v0/8)*2) + v1)*4) + 3, v2) == min(((((v0/8)*2) + v1)*4) + 3, v2));1;50;;;;;
 ((v0 + -6) >= (((v0 + -6) + (min(v1 - max(v2*3, 8), -10) + 11)) - 1));1;122;;;;;
 (((min(((v0 + v1) - (v2*125))*4, (min(v3*128, 372) + (v1*4)) + 131) - (v3*128)) - (v1*4)) == ((min(((v0 + v1) - (v2*125))*4, (min(v3*128, 372) + (v1*4)) + 131) - (v3*128)) - (v1*4)));1;124;;;;;
 ((v0 - (v1*130)) == (v0 - (v1*130)));1;40;;;;;
 (((max(v0*250, -2) + (v1 + v2)) + 2) == ((((max(v0*250, -2) + (v1 + v2)) + 2) + (min(v0*250, -2) + 252)) - 1));0;127;;;;;
 (min(v0*8, ((v1*543) + ((v2/8)*8)) + 374) == min(v0*8, ((v1*543) + ((v2/8)*8)) + 374));1;387;;;;;
 ((min((((v0 + v1) + 125)/63) - (v2*4), v3 + -1) - ((v4*4) + v3)) == (min((((v0 + v1) + 125)/63) - (v2*4), v3 + -1) - ((v4*4) + v3)));1;67;;;;;
 (min((v0*4) + (max(v1*500, -5) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 496) == min((v0*4) + (max(v1*500, -5) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 496));1;111;;;;;
 (((max(v0, 1)*-8) + 3) == ((((max(v0, 1)*-8) + 3) + ((max(v0, 1)*8) + 1)) - 1));0;84;;;;;
 ((((v0*8) + 1364)/1012) != 0);0;429;;;;;
 (min(v0*8, (min(((v1*31) + v2)*8, (v2*8) + 434) + (v3*496)) + 50) == min(v0*8, (min(((v1*31) + v2)*8, (v2*8) + 434) + (v3*496)) + 50));1;90;;;;;
 ((((v0/32)*4) + (v1*18)) == (((v0/32)*4) + (v1*18)));1;42;;;;;
 (((v0 - (v1/4)) + -127) == ((v0 - (v1/4)) + -127));1;50;;;;;
 ((max(v0, 249) - ((v1*8) + v2)) == (max(v0, 249) - ((v1*8) + v2)));1;33;;;;;
 (((v0 + 37)/32) != 0);0;340;;;;;
 ((min((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8, (((v3*4) + v4)*8) + 7) - (((((v3*4) + v4)*2) + v5)*4)) == (min((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8, (((v3*4) + v4)*8) + 7) - (((((v3*4) + v4)*2) + v5)*4)));1;127;;;;;
 (((v0*32) + ((v1/4) - (((v2 + v1) + 3)/4))) == ((v0*32) + ((v1/4) - (((v2 + v1) + 3)/4))));1;63;;;;;
 (((v0*2) - ((((v1*8) + v2)*2) + ((v3*4) + v4))) == ((v0*2) - ((((v1*8) + v2)*2) + ((v3*4) + v4))));1;74;;;;;
 (((v0*495) + (v1*8)) == ((v0*495) + (v1*8)));1;66;;;;;
 (((min(v0, 1008) + 13)/4) == ((min(v0, 1008) + 13)/4));1;44;;;;;
 (((((((v0 + v1) + 9)/2) - (v1/2)) + 64)/63) == ((((((v0 + v1) + 9)/2) - (v1/2)) + 64)/63));1;57;;;;;
 (((v0/8) - (min((((v1 + v0) + 7)/8) - (v2*36), (v0/8) + 35) + (v3*-12))) == ((v0/8) - (min((((v1 + v0) + 7)/8) - (v2*36), (v0/8) + 35) + (v3*-12))));1;90;;;;;
 (min(max(((v0 + v1) + 7)/8, 0), ((v2*8) + (min(v1/8, 249) + (v3*16))) + 7) == min(max(((v0 + v1) + 7)/8, 0), ((v2*8) + (min(v1/8, 249) + (v3*16))) + 7));1;84;;;;;
 (min(max(((v0 - (v1*2)) + 99)/8, 0), ((v2 - v1)/4) + 16) == min(max(((v0 - (v1*2)) + 99)/8, 0), ((v2 - v1)/4) + 16));1;97;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= v0)) && ((((1*4) + v0) + 3) >= (v0 + 7))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (2 >= 2));1;119;;;;;
 (((v0*2) - ((((v1/65) + v2)*2) + v3)) == ((v0*2) - ((((v1/65) + v2)*2) + v3)));1;47;;;;;
 (((((((v0 + v1) + -1)/63) - (v1/63)) + 24)/19) == ((((((v0 + v1) + -1)/63) - (v1/63)) + 24)/19));1;62;;;;;
 (max(min(249, (v1 + 8) - 1) + 1, min(max(0, v1), 8 + v1)) <= min(max(0, v1), 8 + v1));0;803;;;;;
 ((((((v0 + 40)/32) - (v1*4)) - (v2*2)) - ((v0 + -995)/32)) == (((((v0 + 40)/32) - (v1*4)) - (v2*2)) - ((v0 + -995)/32)));1;120;;;;;
 (min(((((((min((min(v0*64, 188) + ((v1*252) + v2)) + 54, v3 + v2) - (v0*64)) - v2) + 14)/4) + (v0*16))*4) + v2, v4 + 15) == min(((((((min((min(v0*64, 188) + ((v1*252) + v2)) + 54, v3 + v2) - (v0*64)) - v2) + 14)/4) + (v0*16))*4) + v2, v4 + 15));1;129;;;;;
 (((((((uint1)1 && (v0 <= (0 + v0))) && ((v0 + 62) >= (((63 + 0) - 1) + v0))) && ((((v1*4) + v2) + 0) <= (((v1*4) + 0) + v2))) && ((((v1*4) + v2) + 3) >= (((v1*4) + ((4 + 0) - 1)) + v2))) && (v3 <= v3)) && (v3 >= v3));1;91;;;;;
 (((((((uint1)1 && ((((((v0*28) + 0)*4) + v1) + 0) <= ((v0*112) + v1))) && ((((((v0*28) + 27)*4) + v1) + 3) >= (((v0*112) + 111) + v1))) && (((min(v2*16, 109) + (min(v3*3, 13) + v4)) + v5) <= ((min(v2*16, 109) + (min(v3*3, 13) + v4)) + v5))) && (((min(v2*16, 109) + (min(v3*3, 13) + v4)) + v5) >= ((min(v2*16, 109) + (min(v3*3, 13) + v4)) + v5))) && (v6 <= v6)) && (v6 >= v6));1;201;;;;;
 (((v0*17) + ((v1*63) + (v2 + v3))) == ((v0*17) + ((v1*63) + (v2 + v3))));1;47;;;;;
 ((max(min(min(v0*276, 272) + v1, 1501), 502) + (v2*112)) == (max(min(min(v0*276, 272) + v1, 1501), 502) + (v2*112)));1;63;;;;;
 ((((((((v0 + v1) + -1)/500) - (v1/500))*256) + 640)/282) == (((((((v0 + v1) + -1)/500) - (v1/500))*256) + 640)/282));1;75;;;;;
 (min(((v0 + v1) + 15)/16, (min(v2*12, 20) + v3) + 11) == min(((v0 + v1) + 15)/16, (min(v2*12, 20) + v3) + 11));1;65;;;;;
 (min(1003 - (((v0*4) + v1)*4), (((((v2 + v3) + -1)/8)*8) - ((((v0*4) + v1)*4) + v4)) + 12) == min(1003 - (((v0*4) + v1)*4), (((((v2 + v3) + -1)/8)*8) - ((((v0*4) + v1)*4) + v4)) + 12));1;104;;;;;
 (((v0 + v1) - min(v1 + 12, v2)) == ((v0 + v1) - min(v1 + 12, v2)));1;35;;;;;
 ((((v0*-24)/4)*4) == (v0*-24));1;48;;;;;
 (max(min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65), (min(min(-47 - (max((v2/16) + ((v3*8) - (((v1 + v2) + 15)/16)), -7)*16), 1943 - (v0*16)), (min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 17)/65) + 1) == max(min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65), (min(min(-47 - (max((v2/16) + ((v3*8) - (((v1 + v2) + 15)/16)), -7)*16), 1943 - (v0*16)), (min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 17)/65) + 1));1;489;;;;;
 ((min(v0/4, 0)*4) == (((min(v0/4, 0)*4) + ((v1*4) + 4)) - 1));0;126;;;;;
 ((((min(min((v1*8) + (((v2/250)*32) + (v3*156)), ((((v4 + v2) + 249)/250)*32) + 54)*8, (v1*64) + ((((v2/250)*256) + (v3*1248)) + 7))*-1)/4)*4) == (min(min((v1*8) + (((v2/250)*32) + (v3*156)), ((((v4 + v2) + 249)/250)*32) + 54)*8, (v1*64) + ((((v2/250)*256) + (v3*1248)) + 7))*-1));0;2660;;;;;
 (min(max(min((v0*4) + (v1 + v2), 1999), 0) + (((v3 + 7)/4)*4), max(min((v0*4) + (v1 + v2), 1996), -3) + 4) == min(max(min((v0*4) + (v1 + v2), 1999), 0) + (((v3 + 7)/4)*4), max(min((v0*4) + (v1 + v2), 1996), -3) + 4));1;115;;;;;
 ((max(min(v0/16, 126), 2) + (v1*4)) == (max(min(v0/16, 126), 2) + (v1*4)));1;84;;;;;
 ((min((v0*4) + 4, v1) + (v2/8)) == (min((v0*4) + 4, v1) + (v2/8)));1;45;;;;;
 (((v0 + 42)/15) != 0);0;363;;;;;
 (min((v0*8) + 99, v1) == min((v0*8) + 99, v1));1;34;;;;;
 ((v0 - (((v1*8) + ((v2*4) + ((v3*2) + v4)))*4)) == (v0 - (((v1*8) + ((v2*4) + ((v3*2) + v4)))*4)));1;61;;;;;
 ((max(min(((v0/125) + v1)*16, 220), -29) - max(min((v0/125)*16, 286), 37)) == (max(min(((v0/125) + v1)*16, 220), -29) - max(min((v0/125)*16, 286), 37)));1;216;;;;;
 (max(min(max(((v0 - (max(min(v1/8, 249), 0)*8)) + 36)/32, 0), (v2 + 5)/4), min(min((((v3 + v0) - (max(min(v1/8, 249), 0)*8)) + -28)/32, ((max(min(((v4 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + -2)/4), (v2 + 1)/4) + 1) == max(min(max(((v0 - (max(min(v1/8, 249), 0)*8)) + 36)/32, 0), (v2 + 5)/4), min(min((((v3 + v0) - (max(min(v1/8, 249), 0)*8)) + -28)/32, ((max(min(((v4 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + -2)/4), (v2 + 1)/4) + 1));1;423;;;;;
 (((max((((v0 + v1) + -1)/4)*4, -3) - ((v2/5)*125)) - min((v1/4)*4, 1999)) == ((max((((v0 + v1) + -1)/4)*4, -3) - ((v2/5)*125)) - min((v1/4)*4, 1999)));1;98;;;;;
 (min(((v0 + v1) + 124)/8, v2 + -1) == min(((v0 + v1) + 124)/8, v2 + -1));1;47;;;;;
 (min((v0*4) + ((v1*8) + v2), v3 + 4) == min((v0*4) + ((v1*8) + v2), v3 + 4));1;46;;;;;
 (((v0/126) + ((v1/26)*2)) == ((v0/126) + ((v1/26)*2)));1;36;;;;;
 (max(min(min(min(min(min((((v6 + v5) - (max(min(((((v3/8)*8) + -5)/63)*8, 253), 4)*8)) + 4)/32, (((v6 + v5) - (max(min(((((v3/8)*8) + -5)/63)*8, 253), 4)*8)) + 4)/32), (((v6 + v5) - (max(min(((((v3/8)*8) + -5)/63)*8, 253), 4)*8)) + 36)/32), (((v6 + v5) - (max(min(((((v3/8)*8) + -5)/63)*8, 253), 4)*8)) + 36)/32), ((max(min(((((((v2 + v3) + 7)/8)*8) + 68)/63)*8, 244), -5) - max(min(((((v3/8)*8) + -5)/63)*8, 253), 4)) + 6)/4), (0 + ((v4 + 13)/4)) - 1) + 1, min(max(((v5 - (max(min(((((v3/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), ((v4 + 13)/4) + 0)) <= min(max(((v5 - (max(min(((((v3/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), ((v4 + 13)/4) + 0));0;5351;;;;;
 ((max(v0, 0) - (v1*32)) == (max(v0, 0) - (v1*32)));1;60;;;;;
 ((((v0*2)/9) + 2) != 0);0;429;;;;;
 (((v0*8) + ((v1*68) + (v2 + v3))) == ((v0*8) + ((v1*68) + (v2 + v3))));1;50;;;;;
 (((v0 + 137)/132) != 0);0;441;;;;;
 (((min(((((v0 + 7)/8) + v1)*2) - (v2*13), (((v0 + -1)/8)*2) + 5)*-2) + ((((v0 + -1)/8)*4) + v3)) == ((min(((((v0 + 7)/8) + v1)*2) - (v2*13), (((v0 + -1)/8)*2) + 5)*-2) + ((((v0 + -1)/8)*4) + v3)));1;96;;;;;
 (((min((((v0 + v1) + -1)/8) - (v2*64), (v1/8) + 63)*-8) + ((v3*4) + (((v1/8)*8) + (v4*252)))) == ((min((((v0 + v1) + -1)/8) - (v2*64), (v1/8) + 63)*-8) + ((v3*4) + (((v1/8)*8) + (v4*252)))));1;95;;;;;
 ((((max(min(v0 + v1, 1991), -8) - max(min(v1, 2005), 6)) + 1022)/1008) == (((max(min(v0 + v1, 1991), -8) - max(min(v1, 2005), 6)) + 1022)/1008));1;139;;;;;
 ((((v0*4) - (v1*3)) - (v2*4)) == (((v0*4) - (v1*3)) - (v2*4)));1;34;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), v2 + 499) == min(max(min(((v0 + v1) + -1)/2, 999), 0), v2 + 499));1;709;;;;;
 (min((v0*4) + v1, v2 + 250) == min((v0*4) + v1, v2 + 250));1;41;;;;;
 (((max(v0, 0) - (v1*4)) - ((v2*39) + v3)) == ((max(v0, 0) - (v1*4)) - ((v2*39) + v3)));1;60;;;;;
 ((((((v0 + v1) + 1999)/2000)*256) - ((((v2*7) + ((v3*2) + v4))*16) + v5)) == (((((v0 + v1) + 1999)/2000)*256) - ((((v2*7) + ((v3*2) + v4))*16) + v5)));1;84;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*512)) == (max(min(v0/2, 1006), 7) + (v1*512)));1;612;;;;;
 (min(((min(v0/8, 0)/16) + v1)*16, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 3) == min(((min(v0/8, 0)/16) + v1)*16, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 3));1;119;;;;;
 (max(((max(v0, 0) - ((v1*20) + v2)) + -3)/4, ((max(v0, 0) - v2)/4) + (v1*-5)) == max(((max(v0, 0) - ((v1*20) + v2)) + -3)/4, ((max(v0, 0) - v2)/4) + (v1*-5)));1;98;;;;;
 (min(max(min(v0, 1009), 10)*2, (v1*4) + 18) == min(max(min(v0, 1009), 10)*2, (v1*4) + 18));1;62;;;;;
 (((((((uint1)1 && ((0 + ((((v0*20) + v1)*8) + -5)) <= ((((v0*20) + v1)*8) + -5))) && ((3 + ((((v0*20) + v1)*8) + 278)) >= (((((v0*20) + v1) + 19)*8) + ((11 + -5) - 1)))) && (((v2*8) + -29) <= ((max(v2 + -4, v2 + -3)*8) + -5))) && (((v3*8) + 53) >= (((v3 + 6)*8) + ((11 + -5) - 1)))) && (v4 <= v4)) && (v4 >= v4));1;244;;;;;
 ((max(min((v0 + v1)/2, 1006), 7) + (v2*16)) == (max(min((v0 + v1)/2, 1006), 7) + (v2*16)));1;78;;;;;
 (((max(min((v1*-502) + (max(min(((v2 + v3) + -1)/2, 999), 0) - max(min(v3/2, 999), 0)), 498), -4)/2)*2) == max(min((v1*-502) + (max(min(((v2 + v3) + -1)/2, 999), 0) - max(min(v3/2, 999), 0)), 498), -4));0;1747;;;;;
 (min((((v0 + v1) + 111)/8) - (v1/8), v2 + 1) == min((((v0 + v1) + 111)/8) - (v1/8), v2 + 1));1;63;;;;;
 (min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65) == min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65));1;182;;;;;
 (min((v0*504) + 496, v1) == min((v0*504) + 496, v1));1;49;;;;;
 (((((((v0 + v1) + 64)/65) - (v1/65)) + 27)/20) == ((((((v0 + v1) + 64)/65) - (v1/65)) + 27)/20));1;63;;;;;
 ((((max(((v0 + v1) + 23)/8, 249) - min(v1/8, 4)) + 133)/129) == (((max(((v0 + v1) + 23)/8, 249) - min(v1/8, 4)) + 133)/129));1;82;;;;;
 (((v0 + 31)/12) != 0);0;337;;;;;
 ((((v0 - v1) + 176)/120) != 0);0;451;;;;;
 (min((v0/2) + (v1*8), v2 + -7) == min((v0/2) + (v1*8), v2 + -7));1;42;;;;;
 (min(((v0*64) + ((v1*128) + v2)) + 54, v3 + v2) == min(((v0*64) + ((v1*128) + v2)) + 54, v3 + v2));1;66;;;;;
 (min(v0*8, v1 + 36) == min(v0*8, v1 + 36));1;56;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*32) + 630)/552) == (((((((v0 + v1) + 62)/63) - (v1/63))*32) + 630)/552));1;84;;;;;
 (((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 492)/140) == ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*8) + 492)/140));1;259;;;;;
 (max(-188 - max(min(((((v0 + v1) + 64)/65)*2) - ((v2*2) + v3), -5)*32, -184), min(max(v4, 5)*32, 184) + -188) == max(-188 - max(min(((((v0 + v1) + 64)/65)*2) - ((v2*2) + v3), -5)*32, -184), min(max(v4, 5)*32, 184) + -188));1;134;;;;;
 ((((max((((v0 + v1) + 7)/8)*8, 1994) - v2) + 87)/64) == (((max((((v0 + v1) + 7)/8)*8, 1994) - v2) + 87)/64));1;87;;;;;
 (min(max(((v0 - v1) + 1048)/1028, 0), ((v2 - v1) + 1059)/1028) == min(max(((v0 - v1) + 1048)/1028, 0), ((v2 - v1) + 1059)/1028));1;85;;;;;
 (min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126, v2 + 11) == min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126, v2 + 11));1;97;;;;;
 (((((((min(min((v0 + v1)*4, (((v2*32) + ((v3*125) + v1))*4) + 131)*8, ((v4*504) + (((v2*32) + ((v3*125) + v1))*32)) + 525) + 9)/32) - (((v4*504) + -6)/32)) - v1) - (v3*125)) - (v2*32)) == ((((((min(min((v0 + v1)*4, (((v2*32) + ((v3*125) + v1))*4) + 131)*8, ((v4*504) + (((v2*32) + ((v3*125) + v1))*32)) + 525) + 9)/32) - (((v4*504) + -6)/32)) - v1) - (v3*125)) - (v2*32)));1;188;;;;;
 (max(min((min((v0 + v1) + 1, v2)/4) - (v3*2), v4 + 1), min(max((v1/4) - (v3*2), -4), v4) + 1) == max(min((min((v0 + v1) + 1, v2)/4) - (v3*2), v4 + 1), min(max((v1/4) - (v3*2), -4), v4) + 1));1;104;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2) == min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2));1;536;;;;;
 (min((((v0 + v1) + 191)/32) - (v1/32), v2 + 5) == min((((v0 + v1) + 191)/32) - (v1/32), v2 + 5));1;52;;;;;
 (max(((v0*2) + ((min(((((v1/125)*16) + (v2*137)) + v0)*4, ((((v3 + v1) + 124)/125)*64) + 68)/2) + (v0*-2)))*2, ((((min(((((v1/125)*16) + (v2*137)) + v0)*4, ((((v3 + v1) + 124)/125)*64) + 68)/2) + (v0*-2)) - ((v2*274) + ((v1/125)*32)))*2) + ((v0*4) + v4)) == max(((v0*2) + ((min(((((v1/125)*16) + (v2*137)) + v0)*4, ((((v3 + v1) + 124)/125)*64) + 68)/2) + (v0*-2)))*2, ((((min(((((v1/125)*16) + (v2*137)) + v0)*4, ((((v3 + v1) + 124)/125)*64) + 68)/2) + (v0*-2)) - ((v2*274) + ((v1/125)*32)))*2) + ((v0*4) + v4)));1;193;;;;;
 (min(((v0 + v1) + 62)/63, v2 + 15) == min(((v0 + v1) + 62)/63, v2 + 15));1;49;;;;;
 (min(((v0 + v1)/4)*4, (((v0 + v1)/8)*8) + 4) == min(((v0 + v1)/4)*4, (((v0 + v1)/8)*8) + 4));1;53;;;;;
 ((min((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8, (v3*8) + 7) - (((v3*2) + v4)*4)) == (min((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8, (v3*8) + 7) - (((v3*2) + v4)*4)));1;100;;;;;
 ((((v0/8)*8) + (v1*63)) == (((v0/8)*8) + (v1*63)));1;31;;;;;
 (((v0*2) + -1004) == ((((v0*2) + -1004) + ((min((max(min(v1, 990), -9) - (v2*251)) - max(min(v1, 1499), 500), -261)*2) + 1024)) - 1));0;233;;;;;
 (min(max(min(v0 + v1, 1748), -251) + 127, v2) == min(max(min(v0 + v1, 1748), -251) + 127, v2));1;69;;;;;
 ((min(((((v0 + v1) + -1)/8) - (v2*16)) - (v1/8), 15) + 3) == (min(((((v0 + v1) + -1)/8) - (v2*16)) - (v1/8), 15) + 3));1;81;;;;;
 (0 == ((0 + ((((v0 + v1) % 2) + 503)/4)) - 1));0;61;;;;;
 ((((((((v0 + v1) + 755)/63) - (v1/63))*64) + 1013)/58) == (((((((v0 + v1) + 755)/63) - (v1/63))*64) + 1013)/58));1;75;;;;;
 (((v0*11) + ((v1*4) + v2)) == ((v0*11) + ((v1*4) + v2)));1;39;;;;;
 ((((max(v0 + v1, 1) - min(v1, 1999)) + 15)/16) == (((max(v0 + v1, 1) - min(v1, 1999)) + 15)/16));1;70;;;;;
 ((((v0*64) + 887)/736) != 0);0;424;;;;;
 ((max((v0*24) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 476) + (v4*4)) == (max((v0*24) + (max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) - max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499)), 476) + (v4*4)));1;1093;;;;;
 ((((max(v0, 0) - v1)/8) + 1) != 0);0;478;;;;;
 (min(max(max(min(((v0*2) + v1)*8, 2061), 62) + -62, v2), (max(min(((v0*2) + v1)*8, 2061), 62) + v3) + -54) == min(max(max(min(((v0*2) + v1)*8, 2061), 62) + -62, v2), (max(min(((v0*2) + v1)*8, 2061), 62) + v3) + -54));1;115;;;;;
 ((((v0*64) + 3542)/726) != 0);0;432;;;;;
 ((-24 - (v0*8)) >= (249 - (v0*8)));0;31;;;;;
 (max(0, min(126 - ((v0 % 4)*32), (0 + 32) - 1) + 1) <= 0);0;67;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5)) + 130)/125) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5)) + 130)/125));1;307;;;;;
 (min(max(min(v0, 31), 0), v1 + 3) == min(max(min(v0, 31), 0), v1 + 3));1;46;;;;;
 (min(((v0 + v1) + 62)/63, ((v1/63) + ((v2/9)*9)) + 8) == min(((v0 + v1) + 62)/63, ((v1/63) + ((v2/9)*9)) + 8));1;2349;;;;;
 (((v0 + 13)/11) != 0);0;372;;;;;
 (max(v0*136, (((v0*17) + v1)*8) + 1) == max(v0*136, (((v0*17) + v1)*8) + 1));1;50;;;;;
 (((v0*128) + ((v1/8) + (((v2*8) + v3)*4))) == ((v0*128) + ((v1/8) + (((v2*8) + v3)*4))));1;55;;;;;
 (min(max(v0 + v1, 1), v2 + 128) == min(max(v0 + v1, 1), v2 + 128));1;65;;;;;
 (min(((v0*64) + (v1 + v2)) + 67, v3) == min(((v0*64) + (v1 + v2)) + 67, v3));1;35;;;;;
 (min(max(min(v0, 1499), 500), max(min(v1, 1037), 38) + 463) == min(max(min(v0, 1499), 500), max(min(v1, 1037), 38) + 463));1;56;;;;;
 (((v0/63) + ((v1/15)*2)) == ((v0/63) + ((v1/15)*2)));1;35;;;;;
 (((v0*8) + ((v1*16) + ((v2*32) + ((v3*128) + v4)))) == ((v0*8) + ((v1*16) + ((v2*32) + ((v3*128) + v4)))));1;82;;;;;
 ((((v0 - v1) + 88)/76) != 0);0;454;;;;;
 (max(min((v1 + v2) + -1, (((max(v3*501, -7) + v4) + 1) + (min(v3*501, -7) + 508)) - 1) + 1, min(max(v2, (max(v3*501, -7) + v4) + 1), (min(v3*501, -7) + 508) + ((max(v3*501, -7) + v4) + 1))) <= min(max(v2, (max(v3*501, -7) + v4) + 1), (min(v3*501, -7) + 508) + ((max(v3*501, -7) + v4) + 1)));0;3980;;;;;
 ((max(min(v0, 249), 0) - ((v1*2) + v2)) == (max(min(v0, 249), 0) - ((v1*2) + v2)));1;71;;;;;
 ((((v0*8) + v1) + ((v2*4) + v3)) == (((v0*8) + v1) + ((v2*4) + v3)));1;42;;;;;
 ((min((v0 % 8)*33, 225) + (v1*3)) == (min((v0 % 8)*33, 225) + (v1*3)));1;57;;;;;
 (min(min((min(v0 - v1, -7) + 9)/2, (((v2 + v3) - (((v4*4) + v1)*2))/4) + 22), (min(v0 - v1, -7)/2) + 5) == min(min((min(v0 - v1, -7) + 9)/2, (((v2 + v3) - (((v4*4) + v1)*2))/4) + 22), (min(v0 - v1, -7)/2) + 5));1;144;;;;;
 (min((v0/63)*8, ((((v1 + v0) + 62)/63)*8) + 9) == min((v0/63)*8, ((((v1 + v0) + 62)/63)*8) + 9));1;63;;;;;
 (((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*8) + 21)/9) == ((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*8) + 21)/9));1;322;;;;;
 (((v0*7) + (min(v1*8, 58) + v2)) == ((v0*7) + (min(v1*8, 58) + v2)));1;49;;;;;
 (((min(v0*64, 63) + v1) + -119) == ((((min(v0*64, 63) + v1) + -119) + 64) - 1));0;94;;;;;
 (((max(min((v1*-500) + (max(min(v2 + v3, 1997), 1) - max(min(min(v2, 4) + v3, 2003), 13)), 484), -16)/4)*4) == max(min((v1*-500) + (max(min(v2 + v3, 1997), 1) - max(min(min(v2, 4) + v3, 2003), 13)), 484), -16));0;1504;;;;;
 (min(((v0 + v1) + 15)/16, (v2*16) + ((v1/16) + (v3*32))) == min(((v0 + v1) + 15)/16, (v2*16) + ((v1/16) + (v3*32))));1;68;;;;;
 (((v0*-16) + (max(min(v1/2, 999), 0) + (((min(min(v0*16, 36) + 463, v2)/2) + (v0*8))*2))) == ((v0*-16) + (max(min(v1/2, 999), 0) + (((min(min(v0*16, 36) + 463, v2)/2) + (v0*8))*2))));1;103;;;;;
 ((-24 - (v0*8)) >= (249 - (v0*8)));0;46;;;;;
 (((((max(min(((v0 + v1) + -1)/4, 499), 0) - max(min(v1/4, 499), 0))*4) + 70)/63) == ((((max(min(((v0 + v1) + -1)/4, 499), 0) - max(min(v1/4, 499), 0))*4) + 70)/63));1;249;;;;;
 (min(min(v0*8, 1004) + 4, v1) == min(min(v0*8, 1004) + 4, v1));1;42;;;;;
 (((v0*106) + (v1*16)) == ((v0*106) + (v1*16)));1;30;;;;;
 (((v0 + v1) + v2) >= (((v0 + v1) + v2) + 1));0;48;;;;;
 ((max(min(v0, 1009), 10) - (((v1*16) + ((v2*8) + v3))*4)) == (max(min(v0, 1009), 10) - (((v1*16) + ((v2*8) + v3))*4)));1;73;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 124) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;156;;;;;
 (((v0 + v1) + 1) == ((v0 + v1) + 1));1;44;;;;;
 (((((v0 % ((v1 + 45)/32))*-32)/16)*16) == ((v0 % ((v1 + 45)/32))*-32));1;64;;;;;
 ((((v0 - v1) + 562)/525) == (((v0 - v1) + 562)/525));1;93;;;;;
 ((((max(v0*6, -2)*-1)/2)*2) == (max(v0*6, -2)*-1));0;730;;;;;
 (((v0 + v1) + -1) >= ((((v0 + v1) + -1) + 130) - 1));0;48;;;;;
 (((v0/63) + (v1*17)) == ((v0/63) + (v1*17)));1;53;;;;;
 ((((min(max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 378), 129)*8, (max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 379), 130)*8) + 1)*-1)/4)*4) == (min(max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 378), 129)*8, (max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 379), 130)*8) + 1)*-1));0;2297;;;;;
 (max(-15 - max(min((max(min(v0*8, 1994), -5) - (v1*67)) - max(min(((v2 + v3)/8)*8, 2002), 3), 53), -13), max(min(v4, 13), -53) + -15) == max(-15 - max(min((max(min(v0*8, 1994), -5) - (v1*67)) - max(min(((v2 + v3)/8)*8, 2002), 3), 53), -13), max(min(v4, 13), -53) + -15));1;82;;;;;
 (((v0*4) + ((v1*60) + v2)) == ((v0*4) + ((v1*60) + v2)));1;44;;;;;
 ((min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2) + 95) == (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2) + 95));1;126;;;;;
 (min((v0*4) + ((v1*64) + v2), v3 + -11) == min((v0*4) + ((v1*64) + v2), v3 + -11));1;56;;;;;
 ((((v0 + v1)/17) + (v2*4)) == (((v0 + v1)/17) + (v2*4)));1;35;;;;;
 (min(v0 + v1, min(max(min(((v2 + v3) + 31)/8, 249), 0), v1) + 1) == min(v0 + v1, min(max(min(((v2 + v3) + 31)/8, 249), 0), v1) + 1));1;70;;;;;
 ((min((v0*12) + ((v1/63)*8), ((((v2 + v1) + 62)/63)*8) + 4) + (v3*4)) == (min((v0*12) + ((v1/63)*8), ((((v2 + v1) + 62)/63)*8) + 4) + (v3*4)));1;77;;;;;
 (min(((((v0 + v1) + -1)/1000) - (v1/1000))*16, (v2*16) + 1) == min(((((v0 + v1) + -1)/1000) - (v1/1000))*16, (v2*16) + 1));1;85;;;;;
 ((((v0*5) - v1) + ((v2*10) + v3)) == (((v0*5) - v1) + ((v2*10) + v3)));1;45;;;;;
 (min(((v0 + v1) + 3)/2, v2 + 27) == min(((v0 + v1) + 3)/2, v2 + 27));1;39;;;;;
 (min(max(min(((v0 + v1) + 132)/8, 249), 0), v2 + -1) == min(max(min(((v0 + v1) + 132)/8, 249), 0), v2 + -1));1;63;;;;;
 ((((v0*8) + 28)/17) != 0);0;548;;;;;
 ((((v0/2) + (v1*2)) - (min(min(v2*3, 41) + (v0/2), ((v3*-44) + (min((((v4 + v0) + 3)/2) - (v5*504), ((v0/2) + (v6*127)) + 118) + (v6*-127))) + 9) + (v2*-3))) == (((v0/2) + (v1*2)) - (min(min(v2*3, 41) + (v0/2), ((v3*-44) + (min((((v4 + v0) + 3)/2) - (v5*504), ((v0/2) + (v6*127)) + 118) + (v6*-127))) + 9) + (v2*-3))));1;176;;;;;
 ((v0 + -1) >= (((v0 - 1) + 4) + 1));0;875;;;;;
 ((32 - v0) > (281 - v0));0;25;;;;;
 ((((v0 - v1) + 182)/133) == (((v0 - v1) + 182)/133));1;31;;;;;
 (min(((((v0*8) + v1)*16) + v2)*4, (v3*8) + 509) == min(((((v0*8) + v1)*16) + v2)*4, (v3*8) + 509));1;53;;;;;
 (((((((v0 + v1) + -1)/62) - (v1/62))/9) + 1) == ((((((v0 + v1) + -1)/62) - (v1/62))/9) + 1));1;64;;;;;
 ((((v0*2) + 77)/65) != 0);0;429;;;;;
 (min(max((v0 + v1)/2, (((v0 + v1) + 3)/2) + (v2*8)), (((v0 + v1) + 11)/2) + (v2*8)) == min(max((v0 + v1)/2, (((v0 + v1) + 3)/2) + (v2*8)), (((v0 + v1) + 11)/2) + (v2*8)));1;88;;;;;
 (min(124 - (v0*3), max(((v1 + v2) + -1)/8, 249) - ((v0*3) + v3)) == min(124 - (v0*3), max(((v1 + v2) + -1)/8, 249) - ((v0*3) + v3)));1;89;;;;;
 (min(v0 + 496, v1) == min(v0 + 496, v1));1;19;;;;;
 ((((v0/4) + v1) - ((v2*-24) + (min(((v3 + v0) + 3)/4, min((v0/4) + ((min((((v2*3) + v4)*8) + 7, v5)/4)*4), ((v4*8) + ((v0/4) + (v2*24))) + 4) + 3) + (v4*-8)))) == (((v0/4) + v1) - ((v2*-24) + (min(((v3 + v0) + 3)/4, min((v0/4) + ((min((((v2*3) + v4)*8) + 7, v5)/4)*4), ((v4*8) + ((v0/4) + (v2*24))) + 4) + 3) + (v4*-8)))));1;161;;;;;
 ((((v0 - v1) + 511)/505) == (((v0 - v1) + 511)/505));1;50;;;;;
 ((max(min(min(v0*64, 191) + v1, 1244), 245) + (v2*12)) == (max(min(min(v0*64, 191) + v1, 1244), 245) + (v2*12)));1;104;;;;;
 (((max(min(((v0*19) + v1) - v2, 12), -6)*8) + -101) == ((((max(min(((v0*19) + v1) - v2, 12), -6)*8) + -101) + (107 - (max(min(((v0*19) + v1) - v2, 12), -6)*8))) - 1));0;162;;;;;
 ((((v0 - v1) + 259)/252) != 0);0;440;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0), (max(min(v1/2, 1006), 7) + (v2*64)) + 39) == min(max(min(((v0 + v1) + 1)/2, 999), 0), (max(min(v1/2, 1006), 7) + (v2*64)) + 39));1;73;;;;;
 ((-8 - (((v0*2) + v1)*8)) >= (249 - (((v0*2) + v1)*8)));0;59;;;;;
 (((((v0 + v1) + 503)/4) + (v2*125)) == ((((v0 + v1) + 503)/4) + (v2*125)));1;55;;;;;
 (min(((((v0 + v1) + 499)/500) - (v1/500)) + -3, v2) == min(((((v0 + v1) + 499)/500) - (v1/500)) + -3, v2));1;48;;;;;
 (((v0*4) + ((v1*192) + v2)) == ((v0*4) + ((v1*192) + v2)));1;55;;;;;
 (((((((v0*32) + ((v1*16) + ((v2 + v3)/2)))/31)*-62)/2)*2) == ((((v0*32) + ((v1*16) + ((v2 + v3)/2)))/31)*-62));1;76;;;;;
 ((((max(v0, 249) - min(v1, 0)) + 20)/17) == (((max(v0, 249) - min(v1, 0)) + 20)/17));1;59;;;;;
 (min(min(max(min((v0 + v1)*8, 1999), 0), min(min(min(min(min(min(max(min((v0 + v1)*8, 2006), 7), max(min((v0 + v1)*8, 2005), 6) + 1), max(min((v0 + v1)*8, 2004), 5) + 2), max(min((v0 + v1)*8, 2003), 4) + 3), max(min((v0 + v1)*8, 2002), 3) + 4), max(min((v0 + v1)*8, 2001), 2) + 5), max(min(v0 + v1, 250)*8, 1) + 6) + -7), max(min((min(v2*8, 13) + v1)*8, 2007), 8) + -8) == min(min(max(min((v0 + v1)*8, 1999), 0), min(min(min(min(min(min(max(min((v0 + v1)*8, 2006), 7), max(min((v0 + v1)*8, 2005), 6) + 1), max(min((v0 + v1)*8, 2004), 5) + 2), max(min((v0 + v1)*8, 2003), 4) + 3), max(min((v0 + v1)*8, 2002), 3) + 4), max(min((v0 + v1)*8, 2001), 2) + 5), max(min(v0 + v1, 250)*8, 1) + 6) + -7), max(min((min(v2*8, 13) + v1)*8, 2007), 8) + -8));1;401;;;;;
 (((((max(min(((v0 + v1) + 71)/8, 249), 0)*8) - max(max(min(v1/8, 254), 5)*8, 52)) + 74)/16) == ((((max(min(((v0 + v1) + 71)/8, 249), 0)*8) - max(max(min(v1/8, 254), 5)*8, 52)) + 74)/16));1;110;;;;;
 ((v0 - ((v1/63)*8)) == (v0 - ((v1/63)*8)));1;1503;;;;;
 ((((max(v0, 0) - v1) + 33)/20) != 0);0;587;;;;;
 ((((min(v0, 1992) - max(v1, 14)) + 273)/252) == (((min(v0, 1992) - max(v1, 14)) + 273)/252));1;61;;;;;
 (((v0/8) + (v1*63)) == ((v0/8) + (v1*63)));1;1172;;;;;
 (((v0 + 17)/253) == ((((v0 + 17)/253) + ((((v0 + 17) % 253) + 252)/253)) - 1));0;520;;;;;
 ((((((v0 + v1) + 499)/8) - (v2*32)) - ((v0 + v1)/8)) == (((((v0 + v1) + 499)/8) - (v2*32)) - ((v0 + v1)/8)));1;70;;;;;
 (((max(max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) + 11, min(v0*500, v2 + -500) + v1) - min(min(max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + -11, (v0*500) + v1), (v2 + v1) + -500)) - (v3*60)) == ((max(max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) + 11, min(v0*500, v2 + -500) + v1) - min(min(max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + -11, (v0*500) + v1), (v2 + v1) + -500)) - (v3*60)));1;183;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 1050)/1001) == ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 1050)/1001));1;293;;;;;
 ((min(v0*4, 1999) + (v1*4)) == (min(v0*4, 1999) + (v1*4)));1;47;;;;;
 (((v0*8) + 4) < (((v0 + 1)*8) + -5));0;44;;;;;
 (min((((((((min((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3), min((v0*4) + ((v2*16) + v3), v4 + 8) + 4) - (v0*4)) - ((v2*16) + v3)) + -1)/2) + (v0*2))*2) + ((v2*16) + v3)) + 2, v5) == min((((((((min((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3), min((v0*4) + ((v2*16) + v3), v4 + 8) + 4) - (v0*4)) - ((v2*16) + v3)) + -1)/2) + (v0*2))*2) + ((v2*16) + v3)) + 2, v5));1;198;;;;;
 (((v0*8) + ((v1/4) + (v2*24))) == ((v0*8) + ((v1/4) + (v2*24))));1;45;;;;;
 ((min(v0*68, 61) + (min(((v1 + v2) + -121)/8, (v2/8) + (v3*16))*8)) == (min(v0*68, 61) + (min(((v1 + v2) + -121)/8, (v2/8) + (v3*16))*8)));1;167;;;;;
 (min(((v0/2) + (((min((v1*504) + 503, v2) + -2)/4)*4)) + 1, v3) == min(((v0/2) + (((min((v1*504) + 503, v2) + -2)/4)*4)) + 1, v3));1;81;;;;;
 ((((v0*232)/4)*4) == (v0*232));1;29;;;;;
 (min((((min(v0 - v1, (v2*32) + 23) + 27)/4)*4) + v1, v3 + 24) == min((((min(v0 - v1, (v2*32) + 23) + 27)/4)*4) + v1, v3 + 24));1;85;;;;;
 ((max(v0, 249) - (min(v1, 0) + (v2*17))) == (max(v0, 249) - (min(v1, 0) + (v2*17))));1;71;;;;;
 (max(min(max(((v0 - ((v1/8)*8)) + 60)/32, 0), (v2 + 7)/4), min(min((((v3 + v0) - ((v1/8)*8)) + -6)/32, ((((v4 + v1) + 55)/8) - (v1/8))/4), (v2 + 3)/4) + 1) == max(min(max(((v0 - ((v1/8)*8)) + 60)/32, 0), (v2 + 7)/4), min(min((((v3 + v0) - ((v1/8)*8)) + -6)/32, ((((v4 + v1) + 55)/8) - (v1/8))/4), (v2 + 3)/4) + 1));1;166;;;;;
 ((((((((v0 + v1) + -1)/500) - (v1/500))*256) + 502)/144) == (((((((v0 + v1) + -1)/500) - (v1/500))*256) + 502)/144));1;76;;;;;
 (min(max(max(min(min((((v0 + v1) + 190)/4) - (v2*2), ((v3 - v2)*2) + 40), ((min(v3*8, (v0 + v1) + 30) + 163)/4) - (v2*2)), ((v1 + 193)/4) - (v2*2)), -1), (min((((((v4 + v5) + 251)/63)*8) - (v6*20)) - ((v5/63)*8), -9)*2) + 59) == min(max(max(min(min((((v0 + v1) + 190)/4) - (v2*2), ((v3 - v2)*2) + 40), ((min(v3*8, (v0 + v1) + 30) + 163)/4) - (v2*2)), ((v1 + 193)/4) - (v2*2)), -1), (min((((((v4 + v5) + 251)/63)*8) - (v6*20)) - ((v5/63)*8), -9)*2) + 59));1;270;;;;;
 ((max(min(v0*2, 499), 0) + (v1*16)) == (max(min(v0*2, 499), 0) + (v1*16)));1;45;;;;;
 (min(((v0 + v1) + -1)/32, ((v2*4) + ((v1/32) + (v3*32))) + 3) == min(((v0 + v1) + -1)/32, ((v2*4) + ((v1/32) + (v3*32))) + 3));1;69;;;;;
 ((0 - (v0*3)) > (11 - (v0*3)));0;28;;;;;
 (min((((((v0 - ((v1 + v2)/8))*8) + 10)/12)*12) + (((v1 + v2)/8)*8), (v0*8) + 11) == min((((((v0 - ((v1 + v2)/8))*8) + 10)/12)*12) + (((v1 + v2)/8)*8), (v0*8) + 11));1;127;;;;;
 (((v0/63) + 1) < ((v0 + 1)/63));0;39;;;;;
 (((v0/32) + ((v1/4)*16)) == ((v0/32) + ((v1/4)*16)));1;37;;;;;
 (min(max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13), v2 + 3) == min(max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13), v2 + 3));1;206;;;;;
 ((min(max((((v0 + v1) + 31)/32)*32, 1964) - (v2*524), min((v1/32)*32, 36) + 446) - ((((v3*2) + v4)*4) + (min((v1/32)*32, 36) + (v5*32)))) == (min(max((((v0 + v1) + 31)/32)*32, 1964) - (v2*524), min((v1/32)*32, 36) + 446) - ((((v3*2) + v4)*4) + (min((v1/32)*32, 36) + (v5*32)))));1;162;;;;;
 (min(1075 - (((v0*135) + v1)*4), ((v2*8) - ((((v0*135) + v1)*4) + v3)) + 161) == min(1075 - (((v0*135) + v1)*4), ((v2*8) - ((((v0*135) + v1)*4) + v3)) + 161));1;90;;;;;
 (((v0*239) + (max(min(v1/63, 31), 0)*64)) == ((v0*239) + (max(min(v1/63, 31), 0)*64)));1;85;;;;;
 (min((v0/2) - ((v1/8)*4), v2) == min((v0/2) - ((v1/8)*4), v2));1;48;;;;;
 (((((v0 - v1)/2) + (v2*-34)) + 30) == ((((v0 - v1)/2) + (v2*-34)) + 30));1;55;;;;;
 (min(v0*8, (v1*8) + 2) == min(v0*8, (v1*8) + 2));1;43;;;;;
 ((v0 - (((v1 + v2) + 39)/8)) == (v0 - (((v1 + v2) + 39)/8)));1;64;;;;;
 (min(max(min(v0, 36), 5), max(min(v1, 22), -9) + 15) == min(max(min(v0, 36), 5), max(min(v1, 22), -9) + 15));1;65;;;;;
 (((v0 + 508)/504) != 0);0;332;;;;;
 (((v0 + 42)/15) != 0);0;340;;;;;
 (max(min((((((v0 + v1) + 31)/32) - v2) + 1)/4, 8), 0) >= ((max(min((((((v0 + v1) + 31)/32) - v2) + 1)/4, 8), 0) + (max(min((((((v0 + v1) + 127)/32) - v2) + 1)/4, 8), 0) - max(min((((((v0 + v1) + 31)/32) - v2) + 1)/4, 8), 0))) - 1));0;3453;;;;;
 (((((v0*8) + v1)*2) + -8) == ((((((v0*8) + v1)*2) + -8) + 2) - 1));0;80;;;;;
 ((max(min(v0/2, 999), 0) + (v1*48)) == (max(min(v0/2, 999), 0) + (v1*48)));1;48;;;;;
 ((max(min((v0*8) + v1, min(v2 + v1, 2007) + -8), 0) + (v3*4)) == (max(min((v0*8) + v1, min(v2 + v1, 2007) + -8), 0) + (v3*4)));1;78;;;;;
 ((max(min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*64)) + 63), 499), 0) - max(min((v1/4) + (v2*64), 499), 0)) == (max(min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*64)) + 63), 499), 0) - max(min((v1/4) + (v2*64), 499), 0)));1;326;;;;;
 (min(((v0 + v1) + -1)/2, (min((min((v2*128) + 127, v3)/4)*4, (v2*128) + 124) + (v1/2)) + 3) == min(((v0 + v1) + -1)/2, (min((min((v2*128) + 127, v3)/4)*4, (v2*128) + 124) + (v1/2)) + 3));1;98;;;;;
 (max(min(7 - ((((v0/63)*8) + ((v1*4) - min((((v0/63)*2) + v1)*4, ((((v2 + v0) + -1)/63)*8) + 8)))*2), min(v3*2, (min(v4*8, (v5 + v6) + 11)/4) - ((((v0/63)*2) + v1)*8)) + 7), min(max(((v6 + 39)/4) - ((((v0/63)*2) + v1)*8), -1), (v3*2) + 7)) == max(min(7 - ((((v0/63)*8) + ((v1*4) - min((((v0/63)*2) + v1)*4, ((((v2 + v0) + -1)/63)*8) + 8)))*2), min(v3*2, (min(v4*8, (v5 + v6) + 11)/4) - ((((v0/63)*2) + v1)*8)) + 7), min(max(((v6 + 39)/4) - ((((v0/63)*2) + v1)*8), -1), (v3*2) + 7)));1;276;;;;;
 ((max(((v0 + 1007)/8)*8, v0 + 1003) - min(((v0 + -1)/8)*8, v0 + -2)) >= 0);0;882;;;;;
 (max(min(max(((v0 - ((v1/8)*8)) + 51)/32, 0), (v2 + 6)/4), min(min((((v3 + v0) - ((v1/8)*8)) + -14)/32, (((((v4 + v1) + 23)/8) - (v1/8)) + -1)/4), (v2 + 2)/4) + 1) == max(min(max(((v0 - ((v1/8)*8)) + 51)/32, 0), (v2 + 6)/4), min(min((((v3 + v0) - ((v1/8)*8)) + -14)/32, (((((v4 + v1) + 23)/8) - (v1/8)) + -1)/4), (v2 + 2)/4) + 1));1;171;;;;;
 (((v0 + 66)/48) != 0);0;377;;;;;
 (min(((v0 + v1) + 108)/8, ((v0 + v1)/8) + (v2*4)) == min(((v0 + v1) + 108)/8, ((v0 + v1)/8) + (v2*4)));1;68;;;;;
 ((((v0*16) + (((v1/4)*64) + ((v2*8) + v3))) - max((((v4 + v5) + -1)/65)*8, 239)) == (((v0*16) + (((v1/4)*64) + ((v2*8) + v3))) - max((((v4 + v5) + -1)/65)*8, 239)));1;86;;;;;
 (((v0*2) + -1004) == ((((v0*2) + -1004) + ((min(v1, -509)*2) + 1024)) - 1));0;90;;;;;
 (min(((v0*32) + v1) + 28, v2) == min(((v0*32) + v1) + 28, v2));1;60;;;;;
 (min((v0*14) + v1, max(min(v2*8, 2018), 19) + -32) == min((v0*14) + v1, max(min(v2*8, 2018), 19) + -32));1;102;;;;;
 (((v0*4) + ((v1*20) + v2)) == ((v0*4) + ((v1*20) + v2)));1;40;;;;;
 (min(max(min(v0*8, 244), -5) + 6, v1) == min(max(min(v0*8, 244), -5) + 6, v1));1;55;;;;;
 (((v0*46) + ((v1/2) - (((v2 + v1) + 5)/2))) == ((v0*46) + ((v1/2) - (((v2 + v1) + 5)/2))));1;80;;;;;
 (((((v0 + v1) + 23)/8) - (v1/8)) == ((((v0 + v1) + 23)/8) - (v1/8)));1;56;;;;;
 ((max(v0*8, 995) - min((v1/16)*8, 4)) == (max(v0*8, 995) - min((v1/16)*8, 4)));1;85;;;;;
 ((((v0 - v1) + 140)/129) != 0);0;473;;;;;
 (((v0 + v1) + -1) == ((((v0 + v1) + -1) + 2) - 1));0;45;;;;;
 ((max(min(v0, 1030), 31) + (v1*16)) == (max(min(v0, 1030), 31) + (v1*16)));1;37;;;;;
 (((v0*64) - ((v1*4) + v2)) == ((v0*64) - ((v1*4) + v2)));1;43;;;;;
 (min(max(min(v0 + v1, 1997), -2) - max(min(v1, 2001), 2), v2) == min(max(min(v0 + v1, 1997), -2) - max(min(v1, 2001), 2), v2));1;155;;;;;
 (min((((v0*-63) - (v1*4)) + (min(((v2 + v3) + 3)/2, ((v4*17) + ((v0*63) + v5)) + 8) + (v4*-17))) + 8, v5) == min((((v0*-63) - (v1*4)) + (min(((v2 + v3) + 3)/2, ((v4*17) + ((v0*63) + v5)) + 8) + (v4*-17))) + 8, v5));1;114;;;;;
 (((v0*-2) + ((v1*-4) + (max(((v2 + v3) + 7)/8, 249) - v4))) == ((v0*-2) + ((v1*-4) + (max(((v2 + v3) + 7)/8, 249) - v4))));1;84;;;;;
 ((((min(((v3 % (((v4*16) + 460)/284))*284) + ((max(min(v2/65, 34), 3)*16) + 107), max(min(((v1 + v2) + 64)/65, 27), -4)*16)*-1)/16)*16) == (min(((v3 % (((v4*16) + 460)/284))*284) + ((max(min(v2/65, 34), 3)*16) + 107), max(min(((v1 + v2) + 64)/65, 27), -4)*16)*-1));0;2132;;;;;
 ((max(min(v0/8, 256), 7) + (v1*16)) == (max(min(v0/8, 256), 7) + (v1*16)));1;104;;;;;
 ((((-63 - (((min(v0*125, v1 + -125) + v2) + 6) % 8))/8) + (v3*4)) == (((-63 - (((min(v0*125, v1 + -125) + v2) + 6) % 8))/8) + (v3*4)));1;92;;;;;
 ((max(v0, 0) - (v1*12)) == (max(v0, 0) - (v1*12)));1;52;;;;;
 ((((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*16) + 74)/36) == (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*16) + 74)/36));1;129;;;;;
 ((max(min(v0/8, 249), 0) + (v1*8)) == (max(min(v0/8, 249), 0) + (v1*8)));1;928;;;;;
 (min(max(((v0 + v1) + 23)/8, 249), v2 + -1) == min(max(((v0 + v1) + 23)/8, 249), v2 + -1));1;1116;;;;;
 (((((v0 + v1) + 11)/2) - (v1/2)) == ((((v0 + v1) + 11)/2) - (v1/2)));1;67;;;;;
 ((((max(min((v1*-16) + ((v2*-48) + v3), 12), -4) + (v1*16))/2)*2) == (max(min((v1*-16) + ((v2*-48) + v3), 12), -4) + (v1*16)));0;1162;;;;;
 (min(((v0 + v1) + 124)/8, v2 + 3) == min(((v0 + v1) + 124)/8, v2 + 3));1;37;;;;;
 ((((((v0 + v1) + 15)/16)*2) - ((v2*2) + v3)) == (((((v0 + v1) + 15)/16)*2) - ((v2*2) + v3)));1;73;;;;;
 (min(6 - (((v0*2) + ((((v1/3) + ((v2/63)*2))*4) - min(((((v1/3) + ((v2/63)*2))*2) + v0)*2, ((((v3 + v2) + 62)/63)*8) + 17)))*2), (v4*2) + 7) == min(6 - (((v0*2) + ((((v1/3) + ((v2/63)*2))*4) - min(((((v1/3) + ((v2/63)*2))*2) + v0)*2, ((((v3 + v2) + 62)/63)*8) + 17)))*2), (v4*2) + 7));1;149;;;;;
 (max(min(min(min((((v1 + v2) - max(min(v4, 2009), 10)) + 6)/4, ((min(max(min(v3 + v4, 1992), -7) + 5, v1 + v2) - max(min(v4, 2009), 10)) + 9)/4), ((max(min(v3 + v4, 1992), -7) - max(min(v4, 2009), 10)) + 14)/4), (0 + ((v5 + 21)/4)) - 1) + 1, min(max(((v2 - max(min(v4, 2009), 10)) + 13)/4, 0), ((v5 + 21)/4) + 0)) <= min(max(((v2 - max(min(v4, 2009), 10)) + 13)/4, 0), ((v5 + 21)/4) + 0));0;2941;;;;;
 (((max(min(v0, 0), -2)*8) + -4) == ((((max(min(v0, 0), -2)*8) + -4) + (10 - (max(min(v0, 0), -2)*8))) - 1));0;115;;;;;
 (min(((v0 + v1) + -1)/63, ((v2*4) + v3) + 3) == min(((v0 + v1) + -1)/63, ((v2*4) + v3) + 3));1;76;;;;;
 ((v0 - (((v1*32) + ((v2*3) + (v3*8)))*4)) == (v0 - (((v1*32) + ((v2*3) + (v3*8)))*4)));1;62;;;;;
 (((max(min(((v0 + v1) + -1)/8, 249), 0) - (v2*4)) - max(min(v1/8, 249), 0)) == ((max(min(((v0 + v1) + -1)/8, 249), 0) - (v2*4)) - max(min(v1/8, 249), 0)));1;76;;;;;
 (min(((v0 + v1) + -123)/2, v2) == min(((v0 + v1) + -123)/2, v2));1;35;;;;;
 ((((v0*3) + v1) + 2) < (((v0 + 1)*3) + v1));1;70;;;;;
 (((v0*4000) + (((min((v1 + v2) - (v3*1000), ((v4*250) + ((v0*500) + v2)) + 250) + (v4*-250))*-8) + ((v5*64) + ((v6*1004) + (v2*8))))) == ((v0*4000) + (((min((v1 + v2) - (v3*1000), ((v4*250) + ((v0*500) + v2)) + 250) + (v4*-250))*-8) + ((v5*64) + ((v6*1004) + (v2*8))))));1;118;;;;;
 ((max(min(v0*8, 2012), 13) + (v1*128)) == (max(min(v0*8, 2012), 13) + (v1*128)));1;59;;;;;
 (min((v0*8) + 33, v1) == min((v0*8) + 33, v1));1;44;;;;;
 (((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/16)*16) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -24)*4))) + 96) == ((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/16)*16) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -24)*4))) + 96));1;166;;;;;
 ((max(min(v0/8, 249), 0) + (v1*65)) == (max(min(v0/8, 249), 0) + (v1*65)));1;48;;;;;
 (min(((v0*16) + v1) + 2, v2) == min(((v0*16) + v1) + 2, v2));1;43;;;;;
 (min(((v0 + v1) + 191)/32, v2 + 10) == min(((v0 + v1) + 191)/32, v2 + 10));1;56;;;;;
 ((56 - ((((v0*14) + v1) + v2)*8)) > (305 - ((((v0*14) + v1) + v2)*8)));0;68;;;;;
 (((v0 + 5)/2) != 0);0;356;;;;;
 (((v0*3) + ((v1*8) + v2)) == ((v0*3) + ((v1*8) + v2)));1;56;;;;;
 (((v0*8) + (v1*33)) == ((v0*8) + (v1*33)));1;41;;;;;
 (0 == ((0 + ((v0*16) + 20)) - 1));0;45;;;;;
 (((((((uint1)1 && (((0 + ((((v0*8) + v1)*4) + v2)) + -5) <= ((((((v0*8) + v1)*4) + v2) + 0) + -5))) && (((3 + (((((v0*8) + v1)*4) + v2) + 8)) + -5) >= ((((((v0*8) + v1)*4) + v2) + 3) + 1))) && (((v3 + v4) + 1) <= ((v3 + v4) + -5))) && (((v3 + v4) + 1) >= ((v3 + v4) + 1))) && (0 <= 0)) && (0 >= 0));0;218;;;;;
 (((max(min((v2*-500) + (v1 - min(v1, 4)), 496), -4)/4)*4) == max(min((v2*-500) + (v1 - min(v1, 4)), 496), -4));0;955;;;;;
 (min((v0 + 499)/500, 0 - min(v1/500, 0)) == min((v0 + 499)/500, 0 - min(v1/500, 0)));1;58;;;;;
 (((v0*4) - ((v1*127) + (((v2*127) + v3)*4))) == ((v0*4) - ((v1*127) + (((v2*127) + v3)*4))));1;47;;;;;
 ((max(min((v0 + v1)/63, 31), 0) + (v2*10)) == (max(min((v0 + v1)/63, 31), 0) + (v2*10)));1;58;;;;;
 (((v0*76) + (((v1 + v2)/8)*8)) == ((v0*76) + (((v1 + v2)/8)*8)));1;36;;;;;
 (((((((uint1)1 && ((0 + ((v0*8) + v1)) <= ((v0*8) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + 7) + v1))) && (((min(v2*32, 93) + 0) + v3) <= ((min(v2*32, 93) + 0) + v3))) && (((min(v2*32, 93) + ((32 + 0) - 1)) + v3) >= ((min(v2*32, 93) + ((32 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4));1;229;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 190) == min(((v0*2) + v1)*4, (v2*8) + 190));1;70;;;;;
 (((v0*4) + ((v1*12) + v2)) == ((v0*4) + ((v1*12) + v2)));1;1303;;;;;
 (min(max(min(v0, 2026), 27) + (v1*4), max(min(v0, 1995), -4) + 28) == min(max(min(v0, 2026), 27) + (v1*4), max(min(v0, 1995), -4) + 28));1;105;;;;;
 (min(max((84 - (v0*4))/8, 0), ((v1 - v0)/2) + 17) == min(max((84 - (v0*4))/8, 0), ((v1 - v0)/2) + 17));1;109;;;;;
 (max((((v0 + v1) + 23)/8) - ((v2*12) + v3), ((((v0 + v1) + 7)/8) - ((v4*36) + ((v1/8) + (v2*12)))) + 2) == max((((v0 + v1) + 23)/8) - ((v2*12) + v3), ((((v0 + v1) + 7)/8) - ((v4*36) + ((v1/8) + (v2*12)))) + 2));1;119;;;;;
 (min(max(((v0 - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), (v2 + 13)/4) == min(max(((v0 - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), (v2 + 13)/4));1;106;;;;;
 ((((v0*68) + v1) + ((v2*4) + v3)) == (((v0*68) + v1) + ((v2*4) + v3)));1;57;;;;;
 (((v0*4) + (min(v1*8, v2 + 1) + v3)) == ((v0*4) + (min(v1*8, v2 + 1) + v3)));1;234;;;;;
 ((((v0*2) + v1) + -48) == (((((v0*2) + v1) + -48) + 6) - 1));0;59;;;;;
 (max(min(248 - (v0*2), (0 + 84) - 1) + 1, min(max(-1 - (v0*2), 0), 84 + 0)) <= min(max(-1 - (v0*2), 0), 84 + 0));0;885;;;;;
 ((((min(v0 - (v1*1000), 1000) + v2) - (v3*250)) - (v4*125)) == (((min(v0 - (v1*1000), 1000) + v2) - (v3*250)) - (v4*125)));1;56;;;;;
 ((((max(min(((v0 + v1) + 132)/133, 14), 0) - max(min(v1/133, 14), 0))/8) + 1) == (((max(min(((v0 + v1) + 132)/133, 14), 0) - max(min(v1/133, 14), 0))/8) + 1));1;239;;;;;
 ((max(min(v0 + v1, 1999), 9) + (v2*508)) == (max(min(v0 + v1, 1999), 9) + (v2*508)));1;51;;;;;
 (((((((uint1)1 && ((((0*4) + ((v0*16) + -46)) + 0) <= (((((0*4) + ((v0*8) + -21)) + 0)*2) + -4))) && ((((109*4) + ((v0*16) + 374)) + 3) >= (((((3*4) + ((v0*8) + 180)) + 3)*2) + 1))) && ((((v1*2) + v2)*2) <= ((((v1*2) + v2)*2) + -4))) && (((((v1*2) + v2)*2) + 3) >= (((((v1*2) + v2) + 1)*2) + 1))) && (v3 <= v3)) && (v3 >= v3));0;307;;;;;
 (((((v0 + v1) + 188)/63) - v2) == ((((v0 + v1) + 188)/63) - v2));1;53;;;;;
 (((v0 - ((max(min(((v1 + v2)/4)*8, 4012), 13) + -17)/2)) + 4) == ((v0 - ((max(min(((v1 + v2)/4)*8, 4012), 13) + -17)/2)) + 4));1;75;;;;;
 (min((min((v0/2) + ((((((v1 - (v2*64)) - (v0/2)) + 18)/15)*15) + (v2*64)), v1 + 4) + (v3*-4)) + 11, v4) == min((min((v0/2) + ((((((v1 - (v2*64)) - (v0/2)) + 18)/15)*15) + (v2*64)), v1 + 4) + (v3*-4)) + 11, v4));1;131;;;;;
 ((min((((v0 + v1) + -1)/32) - (v2*4), (v1/32) + 3) - ((v1/32) + (v3*2))) == (min((((v0 + v1) + -1)/32) - (v2*4), (v1/32) + 3) - ((v1/32) + (v3*2))));1;77;;;;;
 (((((((v0 + v1) + 124)/125)*16) - (v2*18)) - ((v1/125)*16)) == ((((((v0 + v1) + 124)/125)*16) - (v2*18)) - ((v1/125)*16)));1;42;;;;;
 (((v0*32) + ((v1*64) + (v2 + v3))) == ((v0*32) + ((v1*64) + (v2 + v3))));1;46;;;;;
 ((min(v0 + 20, v1) - ((v2*4) + ((v3*16) + v0))) == (min(v0 + 20, v1) - ((v2*4) + ((v3*16) + v0))));1;75;;;;;
 ((((max(v0, 1) - v1) + 251)/252) != 0);0;526;;;;;
 (0 == ((0 + ((v0*2) + 52)) - 1));0;59;;;;;
 (((v0 + 9)/4) != 0);0;363;;;;;
 ((((v0 + -4)/124) - min((v0 + 368)/124, (((v1 + v0) + 127)/124) - (v2*4))) == (((v0 + -4)/124) - min((v0 + 368)/124, (((v1 + v0) + 127)/124) - (v2*4))));1;83;;;;;
 (min(((((v0 + v1) + -1)/8) - (v1/8)) + -7, v2) == min(((((v0 + v1) + -1)/8) - (v1/8)) + -7, v2));1;70;;;;;
 ((min(((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) - (v3*8)) + 3, v4) - ((v5*4) + v4)) == (min(((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) - (v3*8)) + 3, v4) - ((v5*4) + v4)));1;131;;;;;
 (max(max((v0/32) - (v1*2), (((((v2 + v3) + -1)/2) - (v3/2))/32) + (v1*-2)), (((((v2 + v3) + 5)/2) - v4) + -3)/32) == max(max((v0/32) - (v1*2), (((((v2 + v3) + -1)/2) - (v3/2))/32) + (v1*-2)), (((((v2 + v3) + 5)/2) - v4) + -3)/32));1;132;;;;;
 ((max(v0*64, 188) + (v1*4)) == (max(v0*64, 188) + (v1*4)));1;37;;;;;
 ((((min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2, 1999) - max((max(min((v1/4)*8, 4012), 13) + -19)/2, 0))/250) + 1) == (((min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2, 1999) - max((max(min((v1/4)*8, 4012), 13) + -19)/2, 0))/250) + 1));1;149;;;;;
 ((min(((((v0 + v1) + 31)/32) - (v2*32)) - (v3*8), (v1/32) + 7) - ((v1/32) + (v4*4))) == (min(((((v0 + v1) + 31)/32) - (v2*32)) - (v3*8), (v1/32) + 7) - ((v1/32) + (v4*4))));1;96;;;;;
 ((((max(v0, 0) - v1)/6) + 1) != 0);0;467;;;;;
 (((v0/2) + (v1*48)) == ((v0/2) + (v1*48)));1;41;;;;;
 (min((v0/8) + (min((v1*-16) + v2, 3) + ((min((v1*16) + 15, v2)/4)*4)), v3) == min((v0/8) + (min((v1*-16) + v2, 3) + ((min((v1*16) + 15, v2)/4)*4)), v3));1;85;;;;;
 (min(155 - (((v0*10) + v1)*4), max(v2, 0) - ((((v0*10) + v1)*4) + ((v3*156) + v4))) == min(155 - (((v0*10) + v1)*4), max(v2, 0) - ((((v0*10) + v1)*4) + ((v3*156) + v4))));1;116;;;;;
 (((v0 + 34)/32) != 0);0;348;;;;;
 ((((max(v0, 2000) - min(v1, 0)) + 131)/132) == (((max(v0, 2000) - min(v1, 0)) + 131)/132));1;59;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((31*4) + v0) + 3) >= (((((32 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 124) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;149;;;;;
 (min(((v0 + v1) + 62)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 62)/32)*4)) + 3) == min(((v0 + v1) + 62)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 62)/32)*4)) + 3));1;51;;;;;
 (((min((v1*-68) + (((((v2 + v3) + -1)/63)*64) - ((v3/63)*64)), -28)/4)*4) == min((v1*-68) + (((((v2 + v3) + -1)/63)*64) - ((v3/63)*64)), -28));0;1222;;;;;
 ((((max(((v0 + v1) + 7)/8, 249) - min(v1/8, 0))/126) + 1) >= 0);1;82;;;;;
 (min((v0*4) + v1, (v2*8) + -159) == min((v0*4) + v1, (v2*8) + -159));1;27;;;;;
 (((v0 + 35)/32) != 0);0;349;;;;;
 ((((min((((((min((v3*-8) + ((((v4 + v2) + 314)/63) - (v2/63)), 5)*8) + 28)/36)*288) + (v3*512)) + ((v2/63)*64), (min((min((v3*8) + ((v2/63) + 5), ((v4 + v2) + 314)/63)*8) + 29, (((((min((v3*-8) + ((((v4 + v2) + 314)/63) - (v2/63)), 5)*8) + 28)/36)*36) + (v3*64)) + ((v2/63)*8))*8) + 7)*-1)/4)*4) == (min((((((min((v3*-8) + ((((v4 + v2) + 314)/63) - (v2/63)), 5)*8) + 28)/36)*288) + (v3*512)) + ((v2/63)*64), (min((min((v3*8) + ((v2/63) + 5), ((v4 + v2) + 314)/63)*8) + 29, (((((min((v3*-8) + ((((v4 + v2) + 314)/63) - (v2/63)), 5)*8) + 28)/36)*36) + (v3*64)) + ((v2/63)*8))*8) + 7)*-1));0;4168;;;;;
 ((min(max((v0*253) - v1, -248)*4, 19) + -22) == (((min(max((v0*253) - v1, -248)*4, 19) + -22) + (25 - min(max((v0*253) - v1, -248)*4, 19))) - 1));0;146;;;;;
 ((((min((v0*136) + ((((v1*17) + (v2/63))*8) + 121), v3)*-4)/4)*4) == (min((v0*136) + ((((v1*17) + (v2/63))*8) + 121), v3)*-4));1;94;;;;;
 ((((max(v0, 0) - v1)/12) + 1) == (((max(v0, 0) - v1)/12) + 1));1;76;;;;;
 (min(max(max((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + 29)/16), ((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 1), ((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -51)/16)) + -1), v2 + 1) == min(max(max((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + 29)/16), ((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 1), ((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -51)/16)) + -1), v2 + 1));1;202;;;;;
 (((v0*2) - (((((v1 + v2)/8) + v3)*2) + v4)) == ((v0*2) - (((((v1 + v2)/8) + v3)*2) + v4)));1;62;;;;;
 ((min(v0/8, 0) + (v1*126)) == (min(v0/8, 0) + (v1*126)));1;739;;;;;
 (min(((v0 + v1) + 43)/4, v2 + 27) == min(((v0 + v1) + 43)/4, v2 + 27));1;55;;;;;
 (min((v0*4) + ((v1*76) + v2), v3 + 18) == min((v0*4) + ((v1*76) + v2), v3 + 18));1;47;;;;;
 (min(max(min(v0 + v1, 2000), 1), max(min(v0 + v1, 1871), -128) + 129) == min(max(min(v0 + v1, 2000), 1), max(min(v0 + v1, 1871), -128) + 129));1;83;;;;;
 (max(min(max(((v0 - ((v1/8)*8)) + 1086)/1040, 0), (v2 + 134)/130), min(((min(v3 + v0, min(((v1/8) + v2)*8, (v3 + v0) + 1046) + 2) - ((v1/8)*8)) + -1002)/1040, (v2 + 4)/130) + 1) == max(min(max(((v0 - ((v1/8)*8)) + 1086)/1040, 0), (v2 + 134)/130), min(((min(v3 + v0, min(((v1/8) + v2)*8, (v3 + v0) + 1046) + 2) - ((v1/8)*8)) + -1002)/1040, (v2 + 4)/130) + 1));1;213;;;;;
 ((min(((((v0 + v1) + -1)/8) - (v2*36)) - (v3*12), (v1/8) + 11) - ((v1/8) + (v4*4))) == (min(((((v0 + v1) + -1)/8) - (v2*36)) - (v3*12), (v1/8) + 11) - ((v1/8) + (v4*4))));1;116;;;;;
 (((max(min(min((v0*128) + 128, v1) + v2, 2000), 1) - max(min((v0*128) + v2, 1999), 0)) - (v3*64)) == ((max(min(min((v0*128) + 128, v1) + v2, 2000), 1) - max(min((v0*128) + v2, 1999), 0)) - (v3*64)));1;221;;;;;
 (min((v0*4) + ((v1*128) + ((v2*504) + v3)), v4 + 4) == min((v0*4) + ((v1*128) + ((v2*504) + v3)), v4 + 4));1;71;;;;;
 (v0 < min(max(v1 + -4, v0 + 1), (v0 + 1) + -3));0;83;;;;;
 ((((((((v0 + v1) + 251)/63) - (v1/63))*8) + 181)/156) == (((((((v0 + v1) + 251)/63) - (v1/63))*8) + 181)/156));1;68;;;;;
 (min(155 - (((v0*10) + v1)*4), max(v2, 0) - ((((v0*10) + v1)*4) + ((v3*156) + v4))) == min(155 - (((v0*10) + v1)*4), max(v2, 0) - ((((v0*10) + v1)*4) + ((v3*156) + v4))));1;100;;;;;
 (((v0*18) + ((v1/32)*4)) == ((v0*18) + ((v1/32)*4)));1;79;;;;;
 (((v0/125) + (v1*4)) == ((v0/125) + (v1*4)));1;394;;;;;
 (min((v0*4) + v1, (v2*2) + 1) == min((v0*4) + v1, (v2*2) + 1));1;51;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + -33) <= ((((v0*4) + 0) + v1) + -36))) && (((((v0*4) + v1) + 3) + -33) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -36))) && ((((((v2*8) + v3) + v4) + -36) % 4) <= (((((v2*8) + v3) + v4) + -36) % 4))) && ((((((v2*8) + v3) + v4) + -36) % 4) >= (((((v2*8) + v3) + v4) + -36) % 4))) && (((v5*49) + v6) <= ((v5*49) + v6))) && (((v5*49) + v6) >= ((v5*49) + v6)));0;276;;;;;
 (((min((v0 + 30)/16, (((v1 + v0) + 15)/16) - (v2*6))*-16) + ((v3*4) + ((((v0 + -2)/16)*16) + (v4*52)))) == ((min((v0 + 30)/16, (((v1 + v0) + 15)/16) - (v2*6))*-16) + ((v3*4) + ((((v0 + -2)/16)*16) + (v4*52)))));1;578;;;;;
 (((v0*64) + ((v1*128) + ((v2/8) + (((v3*8) + v4)*4)))) == ((v0*64) + ((v1*128) + ((v2/8) + (((v3*8) + v4)*4)))));1;63;;;;;
 ((((((v0 + v1) + 15)/8) - (v2*16)) - (v1/8)) == (((((v0 + v1) + 15)/8) - (v2*16)) - (v1/8)));1;35;;;;;
 ((v0 - (min((((v1 + v2) + -1)/4) - v3, (v0*4) + 3)/4)) == (v0 - (min((((v1 + v2) + -1)/4) - v3, (v0*4) + 3)/4)));1;69;;;;;
 ((max(min(v0/2, 999), 0) + (v1*500)) == (max(min(v0/2, 999), 0) + (v1*500)));1;53;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 146)/128) >= 0);1;93;;;;;
 (((((((v0 + v1) + 249)/250) - (v1/250))*4) + 7) == ((((((v0 + v1) + 249)/250) - (v1/250))*4) + 7));1;64;;;;;
 (((v0/2) - ((v1*4) + v2)) == ((v0/2) - ((v1*4) + v2)));1;52;;;;;
 ((((max(min((v0*128) + (v1/8), min(((v2 + v1) + -1017)/8, 249)), 0)*8)/4)*4) == (max(min((v0*128) + (v1/8), min(((v2 + v1) + -1017)/8, 249)), 0)*8));1;143;;;;;
 (min((max(min(v0, 999), 0) + (v1*2)) + 2, v2) == min((max(min(v0, 999), 0) + (v1*2)) + 2, v2));1;60;;;;;
 (min((v0*500) + 500, v1) == min((v0*500) + 500, v1));1;61;;;;;
 ((((min(((v1 % (((v2*64) + 3231)/1440))*1440) + (max(min((v3/500)*8, 36), 5)*64), (max(min(min(((v4 + v3) + 499)/500, 3)*8, 22), -7)*64) + 352)*-1)/4)*4) == (min(((v1 % (((v2*64) + 3231)/1440))*1440) + (max(min((v3/500)*8, 36), 5)*64), (max(min(min(((v4 + v3) + 499)/500, 3)*8, 22), -7)*64) + 352)*-1));0;2438;;;;;
 ((min(((((v0 + v1) + -1)/8) - (v2*36)) - (v3*12), (v1/8) + 11) - ((v1/8) + (v4*4))) == (min(((((v0 + v1) + -1)/8) - (v2*36)) - (v3*12), (v1/8) + 11) - ((v1/8) + (v4*4))));1;100;;;;;
 (((((((v0 + v1) + -1)/63) - (v2*2)) - v3) - (v1/63)) == ((((((v0 + v1) + -1)/63) - (v2*2)) - v3) - (v1/63)));1;62;;;;;
 ((((v0*68)/4)*4) == (v0*68));1;25;;;;;
 (min(((v0*19) + v1) + 10, v2) == min(((v0*19) + v1) + 10, v2));1;53;;;;;
 (((v0*1012) + ((v1/8)*8)) == ((v0*1012) + ((v1/8)*8)));1;49;;;;;
 (min((v0*252) + 237, v1) == min((v0*252) + 237, v1));1;41;;;;;
 (max(min(2002 - ((v0*251) + v1), (0 + 251) - 1) + 1, min(max(3 - ((v0*251) + v1), 0), 251 + 0)) <= min(max(3 - ((v0*251) + v1), 0), 251 + 0));0;1335;;;;;
 (((v0 + 666)/667) == ((v0 + 666)/667));1;122;;;;;
 (min((v0*4) + ((v1*12) + v2), v3 + 1) == min((v0*4) + ((v1*12) + v2), v3 + 1));1;56;;;;;
 (min(max(((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 276)/256, 0), (v2 + 280)/256) == min(max(((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 276)/256, 0), (v2 + 280)/256));1;101;;;;;
 (((v0*6) + (min(v1*125, v2 + -125) + v3)) == ((v0*6) + (min(v1*125, v2 + -125) + v3)));1;63;;;;;
 (min(max(v0, 0), ((v1*156) + v2) + 155) == min(max(v0, 0), ((v1*156) + v2) + 155));1;82;;;;;
 ((((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 146)/126) == (((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 146)/126));1;192;;;;;
 (min((v0*3) + (v1*8), (v2*8) + 16) == min((v0*3) + (v1*8), (v2*8) + 16));1;90;;;;;
 (((min(v0*63, 937) + (min(v1*4, 59) + ((v2*2) + v3))) + v4) < ((min(v0*63, 937) + (min(v1*4, 59) + ((v2*2) + (v3 + 1)))) + v4));1;134;;;;;
 (min(v0 + 57, v1) == min(v0 + 57, v1));1;62;;;;;
 ((((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1282)/667) == (((max(min((((v0 + v1) + 447)/32)*32, 1994), -5) - max(min((v1/32)*32, 2609), 610)) + 1282)/667));1;237;;;;;
 (min(max(min(min(v0*22, 106) + v1, 1117), 118) + (((v2 + 31)/8)*8), max(min(min(v0*22, 106) + v1, 1096), 97) + 24) == min(max(min(min(v0*22, 106) + v1, 1117), 118) + (((v2 + 31)/8)*8), max(min(min(v0*22, 106) + v1, 1096), 97) + 24));1;145;;;;;
 ((v0 + v1) <= ((((v0 - 1) + v1) + -5) - 1));0;51;;;;;
 ((max(min((min(v0*125, v1 + -125) + v2)/2, 1006), 7) + (v3*44)) == (max(min((min(v0*125, v1 + -125) + v2)/2, 1006), 7) + (v3*44)));1;74;;;;;
 (-4 == ((-4 + (254 - max(min(((v0*4) + v1)*8, 254), 244))) - 1));0;131;;;;;
 (((v0*8) + -29) == ((((v0*8) + -29) + ((min(v1, 13)*8) + 34)) - 1));0;114;;;;;
 ((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16)) + 2) >= 0);1;95;;;;;
 ((40 - ((v0 + v1)*8)) > (2039 - ((v0 + v1)*8)));0;58;;;;;
 ((((max(min(v0 + v1, 1997), -2) - max(min(v1, 2002), 3)) + 257)/252) == (((max(min(v0 + v1, 1997), -2) - max(min(v1, 2002), 3)) + 257)/252));1;147;;;;;
 (min(v0 + 13, v1) == min(v0 + 13, v1));1;40;;;;;
 ((((v0*8) + v1) + v2) < (((v0*8) + (v1 + 1)) + v2));1;1342;;;;;
 (max(((v0 - ((v1*60) + v2)) + 3)/4, ((v0 - v2)/4) + (v1*-15)) == max(((v0 - ((v1*60) + v2)) + 3)/4, ((v0 - v2)/4) + (v1*-15)));1;84;;;;;
 (((((v0*125) + v1) + v2) + 124) < (((v0*125) + v1) + (v2 + 1)));0;88;;;;;
 (min((v0/125) + (min((v1*-4) + v2, 3) + ((min((v1*4) + 3, v2)/4)*4)), v3) == min((v0/125) + (min((v1*-4) + v2, 3) + ((min((v1*4) + 3, v2)/4)*4)), v3));1;73;;;;;
 ((min((((((v0 + v1) + 64)/65)*8) - (v2*30)) - ((v1/65)*8), -22) + (((v1/65)*8) + ((((min((v2*-30) + (v3*8), 16) + 23)/4)*4) + (v2*30)))) == (min((((((v0 + v1) + 64)/65)*8) - (v2*30)) - ((v1/65)*8), -22) + (((v1/65)*8) + ((((min((v2*-30) + (v3*8), 16) + 23)/4)*4) + (v2*30)))));1;154;;;;;
 (((v0/65) - ((v1*-8) + v2)) == ((v0/65) - ((v1*-8) + v2)));1;64;;;;;
 (max(((min(v0, 3)*4) + 41)/18, max(v1/18, -1) + 1) == max(((min(v0, 3)*4) + 41)/18, max(v1/18, -1) + 1));1;89;;;;;
 ((((v0*2) + v1) - min((min(v1 + 56, v2) + (v3*-4)) + 8, v1)) == (((v0*2) + v1) - min((min(v1 + 56, v2) + (v3*-4)) + 8, v1)));1;64;;;;;
 ((((v0*8) + 104)/79) != 0);0;427;;;;;
 ((v0 + -66) >= (((v0 + -66) + 73) - 1));0;32;;;;;
 (((max(min(min(((v0 + v1) + 257)/8, (((v0 + v1)/8) + (v2*12)) + 11), 249), 0) - max(min(((v0 + v1)/8) + (v2*12), 249), 0)) - (((v3*2) + v4)*3)) == ((max(min(min(((v0 + v1) + 257)/8, (((v0 + v1)/8) + (v2*12)) + 11), 249), 0) - max(min(((v0 + v1)/8) + (v2*12), 249), 0)) - (((v3*2) + v4)*3)));1;365;;;;;
 (min(v0*2, v1 + 23) == min(v0*2, v1 + 23));1;54;;;;;
 (min(max(v0, 0), (min(v1*8, 95) + ((v2*103) + v3)) + 7) == min(max(v0, 0), (min(v1*8, 95) + ((v2*103) + v3)) + 7));1;59;;;;;
 ((((v0 - v1) + 1008)/1000) == (((v0 - v1) + 1008)/1000));1;54;;;;;
 ((((((((v0 + v1) + 39)/8) - (v1/8))*8) + 753)/697) == (((((((v0 + v1) + 39)/8) - (v1/8))*8) + 753)/697));1;92;;;;;
 (max(4 - (v0*2), (v0*2) + -1988) == max(4 - (v0*2), (v0*2) + -1988));1;64;;;;;
 ((((((v0 + v1) + 9)/2) - (v2*64)) - (v1/2)) == (((((v0 + v1) + 9)/2) - (v2*64)) - (v1/2)));1;73;;;;;
 (((v0*144) + ((v1/125)*128)) == ((v0*144) + ((v1/125)*128)));1;55;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 58) == min(((v0 + v1) + -1)/8, v2 + 58));1;44;;;;;
 (((min((((v0 + v1) + 7)/8)*8, (((((v2*8) + 7)/252)*252) + ((v1/8)*8)) + 244)/4) - ((v1/8)*2)) == ((min((((v0 + v1) + 7)/8)*8, (((((v2*8) + 7)/252)*252) + ((v1/8)*8)) + 244)/4) - ((v1/8)*2)));1;110;;;;;
 (min(v0*8, ((v1*543) + ((v2/8)*8)) + 374) == min(v0*8, ((v1*543) + ((v2/8)*8)) + 374));1;75;;;;;
 ((((v0 + v1)/16) + (v2*12)) == (((v0 + v1)/16) + (v2*12)));1;22;;;;;
 (min(1 - (max(max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0)), -2)*8), (min(v3, 2)*8) + 12) == min(1 - (max(max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0)), -2)*8), (min(v3, 2)*8) + 12));1;142;;;;;
 ((((v0/63)*8) + -116) == (((((v0/63)*8) + -116) + ((v1*8) + 192)) - 1));0;110;;;;;
 ((max(min(v0, 0), -3) + -5) == (((max(min(v0, 0), -3) + -5) + (7 - max(min(v0, 0), -3))) - 1));0;84;;;;;
 (min(((((v0 + v1) + 7)/8) - (v1/8)) + -83, v2) == min(((((v0 + v1) + 7)/8) - (v1/8)) + -83, v2));1;49;;;;;
 (((((((uint1)1 && (((((v0*21) + ((v1*3) + v2))*3) + ((v3*125) + v4)) <= ((((v0*21) + ((v1*3) + v2))*3) + ((v3*125) + v4)))) && ((((((v0*21) + ((v1*3) + v2))*3) + ((v3*125) + v4)) + 2) >= (((((v0*21) + ((v1*3) + v2))*3) + ((v3*125) + v4)) + 2))) && (((((0*4) + v5) + 0) + -10) <= (-10 + v5))) && (((((254*4) + v5) + 3) + -10) >= (8 + (v5 + 999)))) && (((v6*4) + 0) <= ((v6*4) + 0))) && (((v6*4) + 3) >= ((v6*4) + 3)));1;276;;;;;
 ((((max((((v0 + v1) + 7)/8)*8, 1994) - v2) + 39)/16) == (((max((((v0 + v1) + 7)/8)*8, 1994) - v2) + 39)/16));1;123;;;;;
 (min(max(min((v0*4) + v1, 999), 0)*2, (min(max(min(v2, 996), -3), max(min((v0*4) + v1, 999), 0))*2) + 3) == min(max(min((v0*4) + v1, 999), 0)*2, (min(max(min(v2, 996), -3), max(min((v0*4) + v1, 999), 0))*2) + 3));1;98;;;;;
 (min((min((((v0 + v1) + -1)/63)*16, (min(v2*64, (v3*36) + -60)/4) + ((v1/63)*16))*4) + 60, v4) == min((min((((v0 + v1) + -1)/63)*16, (min(v2*64, (v3*36) + -60)/4) + ((v1/63)*16))*4) + 60, v4));1;104;;;;;
 (min(max(((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) + 5)/63) - ((max(min((v1/8)*8, 2004), 9) + 180)/63), (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) + 68)/63) - ((max(min((v1/8)*8, 2004), 9) + -9)/63)) + -1), v2) == min(max(((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) + 5)/63) - ((max(min((v1/8)*8, 2004), 9) + 180)/63), (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) + 68)/63) - ((max(min((v1/8)*8, 2004), 9) + -9)/63)) + -1), v2));1;210;;;;;
 (((max(min(((v0 + v1) + -1)/63, 31), 0) - (v2*4)) - max(min(v1/63, 31), 0)) == ((max(min(((v0 + v1) + -1)/63, 31), 0) - (v2*4)) - max(min(v1/63, 31), 0)));1;83;;;;;
 (min(max((v0 + v1) + -1000, v2), (v0 + v1) + 2) == min(max((v0 + v1) + -1000, v2), (v0 + v1) + 2));1;58;;;;;
 (((v0*17) + (((v1 + -5)/63)*8)) == ((v0*17) + (((v1 + -5)/63)*8)));1;222;;;;;
 (min(((v0 + v1) + 3)/4, v2 + 127) == min(((v0 + v1) + 3)/4, v2 + 127));1;65;;;;;
 (((((v0 % (((v1*16) + 460)/284))*284)/4)*4) == ((v0 % (((v1*16) + 460)/284))*284));1;68;;;;;
 ((min(v0*4, 29) + (v1*8)) == (min(v0*4, 29) + (v1*8)));1;402;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 562)/501) == (((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 562)/501));1;218;;;;;
 (min(64 - (v0*33), ((((v1 + v2) + 23)/8) - ((v0*33) + v3)) + 4) == min(64 - (v0*33), ((((v1 + v2) + 23)/8) - ((v0*33) + v3)) + 4));1;84;;;;;
 (((v0/4) + ((v1*32) - (((v2 + v0) + 3)/4))) == ((v0/4) + ((v1*32) - (((v2 + v0) + 3)/4))));1;45;;;;;
 ((((v0*8) + 75)/67) != 0);0;460;;;;;
 ((((v0*8) + 305)/251) != 0);0;436;;;;;
 (((max(min(v0/2, 999), 0)*2) + -4) == ((((max(min(v0/2, 999), 0)*2) + -4) + ((v1*2) + 12)) - 1));0;130;;;;;
 (min(max(max(min(v0*16, 1999), v1), 0), (max(min(v0*16, 1999), 0) + v2) + 4) == min(max(max(min(v0*16, 1999), v1), 0), (max(min(v0*16, 1999), 0) + v2) + 4));1;83;;;;;
 (min((((min(v0 - v1, (v2*4) + -8) + 15)/4)*4) + v1, v3 + 4) == min((((min(v0 - v1, (v2*4) + -8) + 15)/4)*4) + v1, v3 + 4));1;90;;;;;
 (min((v0*128) + v1, min(v2 + v1, 2127) + -128) == min((v0*128) + v1, min(v2 + v1, 2127) + -128));1;708;;;;;
 ((max(v0*4, 5) + -8) == (((max(v0*4, 5) + -8) + (11 - max(v0*4, 5))) - 1));0;103;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*4)) == (max(min(v0 + v1, 1999), 0) + (v2*4)));1;98;;;;;
 (max(-140 - (max(min(v0 - ((v1*4) + ((v2*8) + v3)), -14), -17)*8), (max(min(v4 - v0, 17), 14)*8) + -140) == max(-140 - (max(min(v0 - ((v1*4) + ((v2*8) + v3)), -14), -17)*8), (max(min(v4 - v0, 17), 14)*8) + -140));1;129;;;;;
 (((min(v0 - v1, 3)*8) + -27) >= ((((min(v0 - v1, 3)*8) + -27) + (32 - (min(v0 - v1, 3)*8))) - 1));0;81;;;;;
 ((((-471 - v0)/4) + (v1*2)) == (((-471 - v0)/4) + (v1*2)));1;50;;;;;
 (((v0 + 268)/250) != 0);0;354;;;;;
 (((v0 + v1)/63) <= ((((v0 - 1) + v1)/63) - 1));0;42;;;;;
 (((v0*70) + (((-125 - ((min(v1*125, v2 + -125) + v3) % 8))/8)*8)) == ((v0*70) + (((-125 - ((min(v1*125, v2 + -125) + v3) % 8))/8)*8)));1;97;;;;;
 (min(((v0/8) + (v1*128)) + 127, v2) == min(((v0/8) + (v1*128)) + 127, v2));1;80;;;;;
 (((min(min((min(max(v0, 249) - (v1*16), min(v2, 0) + 15) - (v3*4)) + 8, v2), 0)*8) - ((min(v2, 0)*8) + (v4*12))) == ((min(min((min(max(v0, 249) - (v1*16), min(v2, 0) + 15) - (v3*4)) + 8, v2), 0)*8) - ((min(v2, 0)*8) + (v4*12))));1;141;;;;;
 ((((((v0 + v1) + 124)/125)*64) - ((v2*4) + v3)) == (((((v0 + v1) + 124)/125)*64) - ((v2*4) + v3)));1;79;;;;;
 (((((((v0 + v1) + 31)/32)*32) - (v2*1047)) - ((v1/32)*32)) == ((((((v0 + v1) + 31)/32)*32) - (v2*1047)) - ((v1/32)*32)));1;83;;;;;
 (((v0/8) + ((v1/4)*4)) == ((v0/8) + ((v1/4)*4)));1;58;;;;;
 ((((v0*532) + v1) + ((v2*4) + v3)) == (((v0*532) + v1) + ((v2*4) + v3)));1;40;;;;;
 (((max(v0*16, -4) + (v1*4)) + min(max(min((((v2 + v3) + -1)/8)*8, 1994), -5), (max(min((((v2 + v3) + -500)/8)*8, 2012), 13) + (v4*48)) + 19)) == ((max(v0*16, -4) + (v1*4)) + min(max(min((((v2 + v3) + -1)/8)*8, 1994), -5), (max(min((((v2 + v3) + -500)/8)*8, 2012), 13) + (v4*48)) + 19)));1;133;;;;;
 ((min(v0*63, 62) + (min(v1*125, v2 + -125) + v3)) == (min(v0*63, 62) + (min(v1*125, v2 + -125) + v3)));1;80;;;;;
 (((min(((v0*62) + v1)*8, (v2*8) + 57) - (v0*496)) - (v1*8)) == ((min(((v0*62) + v1)*8, (v2*8) + 57) - (v0*496)) - (v1*8)));1;79;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 556)/502) == ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 556)/502));1;313;;;;;
 (min(min(v0, 1017) + -18, v1) == min(min(v0, 1017) + -18, v1));1;51;;;;;
 (min((((v0 + v1) + -1)/500)*64, v2 + 55) == min((((v0 + v1) + -1)/500)*64, v2 + 55));1;51;;;;;
 (min(max(((v0 + -1)/8) - (((min(v1, 7) + v2) + 41)/16), (((v0 + 7)/8) - (((min(v1, 7) + v2) + -7)/16)) + -1), v3) == min(max(((v0 + -1)/8) - (((min(v1, 7) + v2) + 41)/16), (((v0 + 7)/8) - (((min(v1, 7) + v2) + -7)/16)) + -1), v3));1;118;;;;;
 (((-42 - (((v0 + v1) + 3) % 4))/4) == ((((-42 - (((v0 + v1) + 3) % 4))/4) + (((((v0 + v1) + 3) % 4) + 61)/4)) - 1));0;125;;;;;
 ((min(((v0/32) + v1)*16, ((((v2 + v0) + 31)/32)*16) + 67) + (v3*8)) == (min(((v0/32) + v1)*16, ((((v2 + v0) + 31)/32)*16) + 67) + (v3*8)));1;60;;;;;
 (min((max(min(v0 + v1, 1999), 0)/16)*16, ((v2*1012) + (((max(min(v1, 2002), 3) + -3)/16)*16)) + 973) == min((max(min(v0 + v1, 1999), 0)/16)*16, ((v2*1012) + (((max(min(v1, 2002), 3) + -3)/16)*16)) + 973));1;98;;;;;
 ((((max(v0, 1) - v1) + 1007)/1008) == (((max(v0, 1) - v1) + 1007)/1008));1;67;;;;;
 (min((v0*4) + v1, (v2*8) + 25) == min((v0*4) + v1, (v2*8) + 25));1;64;;;;;
 (((v0 + 131)/127) != 0);0;333;;;;;
 ((((v0 - ((v1*252) + v2)) + 3)/4) == (((v0 - ((v1*252) + v2)) + 3)/4));1;47;;;;;
 (min((v0*12) + (v1*16), (v2*16) + 71) == min((v0*12) + (v1*16), (v2*16) + 71));1;72;;;;;
 ((max(min(((v0 + v1)/125)*8, 125), 1) + (v2*4)) == (max(min(((v0 + v1)/125)*8, 125), 1) + (v2*4)));1;67;;;;;
 ((((v0 + -114)/4) + (v1*4)) == (((v0 + -114)/4) + (v1*4)));1;63;;;;;
 ((max(v0, 0) - (v1*156)) == (max(v0, 0) - (v1*156)));1;45;;;;;
 (((v0 + 25)/11) != 0);0;347;;;;;
 (((v0*2) - (((v1/8)*2) + v2)) == ((v0*2) - (((v1/8)*2) + v2)));1;42;;;;;
 (min((min((min((v0*126) + 121, v1)/2)*2, (v0*126) + 120) + (v2/2)) + 1, v3) == min((min((min((v0*126) + 121, v1)/2)*2, (v0*126) + 120) + (v2/2)) + 1, v3));1;78;;;;;
 ((0 - v0) > (1999 - v0));0;34;;;;;
 (((v0*8) + -4) >= ((((v0 - 1)*8) + 4) + 1));0;83;;;;;
 ((((v0 + v1)/2) + -7) == (((((v0 + v1)/2) + -7) + (((v0 + v1) % 2) + 16)) - 1));0;157;;;;;
 ((((v0 % 2)*24) + ((v1*4) + v2)) == (((v0 % 2)*24) + ((v1*4) + v2)));1;40;;;;;
 ((v0 + 7) != 0);0;227;;;;;
 (((v0*64) + ((v1*32) - min(((v0*2) + v1)*32, min((((((v2 + v3) + 1999)/2000)*256) - (v4*112)) - ((v3/2000)*256), -416) + 496))) == ((v0*64) + ((v1*32) - min(((v0*2) + v1)*32, min((((((v2 + v3) + 1999)/2000)*256) - (v4*112)) - ((v3/2000)*256), -416) + 496))));1;133;;;;;
 (((min((v0/2) + (((min((v1*64) + 56, v2) + 9)/2)*2), min(((v3 + v0) + 11)/2, ((v0/2) + (v1*64)) + 56) + 8) - (v1*64)) - (v0/2)) == ((min((v0/2) + (((min((v1*64) + 56, v2) + 9)/2)*2), min(((v3 + v0) + 11)/2, ((v0/2) + (v1*64)) + 56) + 8) - (v1*64)) - (v0/2)));1;177;;;;;
 ((((min(((v0 + v1) - (v2*125))*4, (min(v3*128, 372) + (v1*4)) + 131) + (v3*-128))*-8) + ((v4*4) + ((v1*32) + (v5*504)))) == (((min(((v0 + v1) - (v2*125))*4, (min(v3*128, 372) + (v1*4)) + 131) + (v3*-128))*-8) + ((v4*4) + ((v1*32) + (v5*504)))));1;105;;;;;
 (min((v0*4) + v1, (v2*8) + -159) == min((v0*4) + v1, (v2*8) + -159));1;78;;;;;
 (min(max(min(v0, 249), 0), v1 + 3) == min(max(min(v0, 249), 0), v1 + 3));1;46;;;;;
 (min(max(min(v0*2, 499), 0) - max(min((((min(v1, 969) + v2) + -1009)/8)*2, 499), 0), v3) == min(max(min(v0*2, 499), 0) - max(min((((min(v1, 969) + v2) + -1009)/8)*2, 499), 0), v3));1;184;;;;;
 (min(max(min(v0 + v1, 1875), -124) + 60, v2) == min(max(min(v0 + v1, 1875), -124) + 60, v2));1;55;;;;;
 ((max(min(min((v0*128) + 128, v1) + v2, 2000), 1) - (max(min((v0*128) + v2, 1999), 0) + (((v3*16) + ((v4*8) + v5))*4))) == (max(min(min((v0*128) + 128, v1) + v2, 2000), 1) - (max(min((v0*128) + v2, 1999), 0) + (((v3*16) + ((v4*8) + v5))*4))));1;98;;;;;
 ((264 - (max(min((v0/32)*4, 285), 36)*8)) == (2287 - (max(min((v0/32)*4, 285), 36)*8)));0;84;;;;;
 (max(-1461 - (v0*64), (v0*64) + 708) >= 0);0;1753;;;;;
 (min(124 - (v0*63), (max(min(v1*4, 246), -3) - ((v0*63) + v2)) + 39) == min(124 - (v0*63), (max(min(v1*4, 246), -3) - ((v0*63) + v2)) + 39));1;85;;;;;
 (min((((v0 + v1) + 87)/8)*8, v2 + 635) == min((((v0 + v1) + 87)/8)*8, v2 + 635));1;39;;;;;
 ((min((((((v0 + v1) + 64)/65)*8) - (v2*17)) - ((v1/65)*8), -20) + (((v1/65)*8) + ((((min((v2*-17) + (v3*8), 3) + 23)/8)*8) + (v2*17)))) == (min((((((v0 + v1) + 64)/65)*8) - (v2*17)) - ((v1/65)*8), -20) + (((v1/65)*8) + ((((min((v2*-17) + (v3*8), 3) + 23)/8)*8) + (v2*17)))));1;143;;;;;
 (((max(min((v1*-24) + (max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) - (max(min((v2*500) + v3, min(v4 + v3, 2499) + -500), 0) + (v5*12))), -488), -500)/4)*4) == max(min((v1*-24) + (max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) - (max(min((v2*500) + v3, min(v4 + v3, 2499) + -500), 0) + (v5*12))), -488), -500));0;2144;;;;;
 ((((((((v0 + v1) + -1)/62) - (v1/62))*8) + 43)/36) == (((((((v0 + v1) + -1)/62) - (v1/62))*8) + 43)/36));1;86;;;;;
 (((v0 + 21)/17) != 0);0;345;;;;;
 ((((-173 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*13)) == (((-173 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*13)));1;73;;;;;
 (((((max(min(((v0 + v1) + -1)/4, 499), 0)*4) - max(max(min(v1/4, 499), 0)*4, 5)) + 1007)/1000) == ((((max(min(((v0 + v1) + -1)/4, 499), 0)*4) - max(max(min(v1/4, 499), 0)*4, 5)) + 1007)/1000));1;336;;;;;
 (min(((v0*532) + v1) + 482, v2) == min(((v0*532) + v1) + 482, v2));1;47;;;;;
 ((((v0*-32) + ((((v1 + v2) + 7)/8) - (v3*128))) - (v2/8)) == (((v0*-32) + ((((v1 + v2) + 7)/8) - (v3*128))) - (v2/8)));1;78;;;;;
 (max(max(min(v0, 1006), 7)*8, (v1*8) + 113) == max(max(min(v0, 1006), 7)*8, (v1*8) + 113));1;57;;;;;
 ((((((v0 + v1) + -1)/16) - (v2*8)) - (v1/16)) == (((((v0 + v1) + -1)/16) - (v2*8)) - (v1/16)));1;66;;;;;
 ((((v0/63) + (v1*2)) + 1) < (min(max((v1 + 1)*2, -3), ((v1 + 1)*2) + -3) + (v0/63)));0;101;;;;;
 (((v0*503) + ((v1/4)*4)) == ((v0*503) + ((v1/4)*4)));1;47;;;;;
 ((((v0*5) + v1) + -7) >= (((((v0*5) + v1) + -7) + 11) - 1));0;61;;;;;
 (min(max(min((v0*24) + v1, 1003)*2, 7) + (v2*8), max(min(v3, 1996), -3) + 6) == min(max(min((v0*24) + v1, 1003)*2, 7) + (v2*8), max(min(v3, 1996), -3) + 6));1;84;;;;;
 (min((v0*505) + 488, v1) == min((v0*505) + 488, v1));1;23;;;;;
 (min(v0 + v1, v2) == min(v0 + v1, v2));1;52;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2 + 15) == min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2 + 15));1;290;;;;;
 (((v0*12) + (((v1/32) + v2)*32)) == ((v0*12) + (((v1/32) + v2)*32)));1;26;;;;;
 ((max(v0, 0) - ((v1*2) + v2)) == (max(v0, 0) - ((v1*2) + v2)));1;58;;;;;
 ((((min(v0*63, 62) + v1) % 504) + 574) >= 0);1;38;;;;;
 ((((v0 % 2)*28) + ((v1*4) + v2)) == (((v0 % 2)*28) + ((v1*4) + v2)));1;40;;;;;
 (min(((v0 + v1) + 255)/4, (min(v2*18, 19) + (((v0 + v1)/4) + (v3*36))) + 12) == min(((v0 + v1) + 255)/4, (min(v2*18, 19) + (((v0 + v1)/4) + (v3*36))) + 12));1;97;;;;;
 (((v0*129) + ((v1/63)*8)) == ((v0*129) + ((v1/63)*8)));1;33;;;;;
 (min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60), ((v3*64) + (max(min(v1/2, 999), 0) + (v4*34))) + 28) == min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60), ((v3*64) + (max(min(v1/2, 999), 0) + (v4*34))) + 28));1;133;;;;;
 (min(((v0 + v1) + -1)/4, ((v1/4) + ((v2/252)*252)) + 251) == min(((v0 + v1) + -1)/4, ((v1/4) + ((v2/252)*252)) + 251));1;54;;;;;
 (((((((v0 + v1) + 499)/500) - (v1/500)) + 4)/3) == ((((((v0 + v1) + 499)/500) - (v1/500)) + 4)/3));1;78;;;;;
 ((((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 71)/63) == (((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 71)/63));1;85;;;;;
 (min(v0 + 9, max(min((v1 + v2)/2, 1006), 7) + (v3*32)) == min(v0 + 9, max(min((v1 + v2)/2, 1006), 7) + (v3*32)));1;68;;;;;
 (((((((v0 + v1) + -1)/2) - (v2*252)) - (v3*4)) - (v1/2)) == ((((((v0 + v1) + -1)/2) - (v2*252)) - (v3*4)) - (v1/2)));1;66;;;;;
 ((((v0 - v1) + 600)/540) == (((v0 - v1) + 600)/540));1;53;;;;;
 (((v0*14) + (((min(v1/8, 0)/16)*4) + v2)) == ((v0*14) + (((min(v1/8, 0)/16)*4) + v2)));1;65;;;;;
 (min(max((((v0 + v1) + 124)/8)*8, (v0 + v1) + 119) - (((v0 + v1)/8)*8), (v2*12) + 3) == min(max((((v0 + v1) + 124)/8)*8, (v0 + v1) + 119) - (((v0 + v1)/8)*8), (v2*12) + 3));1;112;;;;;
 (min((max(min((((v0*2) + v1)*2) + v2, 1117), 118) + (v3*2)) + 2, v4) == min((max(min((((v0*2) + v1)*2) + v2, 1117), 118) + (v3*2)) + 2, v4));1;83;;;;;
 (((((((uint1)1 && (((v0*8) + v1) <= ((v0*8) + v1))) && (((v0*8) + v1) >= ((v0*8) + v1))) && ((((v2*4) + v3)*2) <= (((v2*4) + v3)*2))) && (((((v2*4) + v3)*2) + 1) >= ((((v2*4) + v3)*2) + 1))) && (((v4*4) + 0) <= ((v4*4) + 0))) && (((v4*4) + 3) >= ((v4*4) + ((4 + 0) - 1))));1;184;;;;;
 ((((max(((v0 + v1) + 7)/8, 0) - min(v1/8, 249))/126) + 1) == (((max(((v0 + v1) + 7)/8, 0) - min(v1/8, 249))/126) + 1));1;96;;;;;
 (min(min(((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8) - (v3*8), 3) + (((min(((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8) - (v3*8), 16 - max(v3*8, 9))/4)*4) + v4), v5) == min(min(((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8) - (v3*8), 3) + (((min(((((min(v0*125, v1 + -125) + v2) % 8) + 124)/8) - (v3*8), 16 - max(v3*8, 9))/4)*4) + v4), v5));1;764;;;;;
 ((min((((v0 + v1) + 15)/16)*8, (((v1/16) + (v2*8))*8) + 45) + (v3*8)) == (min((((v0 + v1) + 15)/16)*8, (((v1/16) + (v2*8))*8) + 45) + (v3*8)));1;50;;;;;
 (((min(((v3 % ((v4 + 7)/4))*64) + ((((max(min(v2, 2002), 3) + -3)/16)*16) + 13), (max(min(v1 + v2, 1999), 0)/16)*16)/4)*4) == min(((v3 % ((v4 + 7)/4))*64) + ((((max(min(v2, 2002), 3) + -3)/16)*16) + 13), (max(min(v1 + v2, 1999), 0)/16)*16));0;1914;;;;;
 (min((((v0 + v1) + 124)/125)*16, ((v2*139) + ((v1/125)*16)) + 117) == min((((v0 + v1) + 124)/125)*16, ((v2*139) + ((v1/125)*16)) + 117));1;72;;;;;
 (((min((min((v2*16) + (v1/2), (v1 + 311)/2)*-1) + ((v1 + 307)/2), 14)/2)*2) == min((min((v2*16) + (v1/2), (v1 + 311)/2)*-1) + ((v1 + 307)/2), 14));0;1295;;;;;
 (max((((v0 - v1)*8) + 44)/1044, 0) >= ((max((((v0 - v1)*8) + 44)/1044, 0) + (((((v0 - v1)*8) + 1091)/1044) - max((((v0 - v1)*8) + 44)/1044, 0))) - 1));0;1169;;;;;
 (min((((((min(v0/8, 0)/16)*2) + v1)*16) + v2)*4, (v3*8) + 61) == min((((((min(v0/8, 0)/16)*2) + v1)*16) + v2)*4, (v3*8) + 61));1;77;;;;;
 ((((-500 - ((min(v0*500, v1 + -500) + v2) % 4))/4) + ((v3*32) + v4)) == (((-500 - ((min(v0*500, v1 + -500) + v2) % 4))/4) + ((v3*32) + v4)));1;87;;;;;
 ((((max(min(v0 + v1, 1995), 1991) - max(min(v1, 9), 3)) + 33)/16) == (((max(min(v0 + v1, 1995), 1991) - max(min(v1, 9), 3)) + 33)/16));1;136;;;;;
 (((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36))*8) + 860)/508) == ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36))*8) + 860)/508));1;246;;;;;
 (((((v0 + v1) + 249)/4) - ((v2*2) + v3)) == ((((v0 + v1) + 249)/4) - ((v2*2) + v3)));1;54;;;;;
 ((((max(min(v0/8, 249), 0) + v1)*8) + ((v2*4) + v3)) == (((max(min(v0/8, 249), 0) + v1)*8) + ((v2*4) + v3)));1;74;;;;;
 ((min(v0, 0) + (v1*4)) == (min(v0, 0) + (v1*4)));1;20;;;;;
 ((max((((v0 + v1) + 7)/8)*8, 1994) - ((v2*126) + v3)) == (max((((v0 + v1) + 7)/8)*8, 1994) - ((v2*126) + v3)));1;80;;;;;
 (((((v0 % ((v1 + 255)/252))*-1008)/16)*16) == ((v0 % ((v1 + 255)/252))*-1008));1;45;;;;;
 (((((((uint1)1 && ((v0 + -3) <= (-3 + v0))) && ((v0 + 15) >= (0 + (v0 + 15)))) && (((min(v1*8, 55) + v2) + v3) <= (((min(v1*8, 55) + v2) + v3) + -3))) && (((min(v1*8, 55) + v2) + v3) >= (((min(v1*8, 55) + v2) + v3) + 0))) && (((0*4) + 0) <= ((0*4) + 0))) && (((2*4) + 3) >= ((2*4) + 3)));0;210;;;;;
 (min(((v0 + v1) + 62)/63, v2 + 16) == min(((v0 + v1) + 62)/63, v2 + 16));1;40;;;;;
 (((max(((v0 + v1) + 23)/8, 249) - (v2*17)) - min(v1/8, 4)) == ((max(((v0 + v1) + 23)/8, 249) - (v2*17)) - min(v1/8, 4)));1;82;;;;;
 (min((v0/4)*4, ((v0/8)*8) + 4) == min((v0/4)*4, ((v0/8)*8) + 4));1;69;;;;;
 (min(((v0 + v1) + 31)/32, ((v1/32) + ((v2/4)*4)) + 3) == min(((v0 + v1) + 31)/32, ((v1/32) + ((v2/4)*4)) + 3));1;232;;;;;
 ((((v0*-260)/4)*4) == (v0*-260));1;33;;;;;
 (0 == ((0 + (24 - (max(v0*32, 56)/4))) - 1));0;56;;;;;
 (min(max(v0, 0), (v1*4) + 3) == min(max(v0, 0), (v1*4) + 3));1;47;;;;;
 ((v0 - ((v1*32) + v2)) == (v0 - ((v1*32) + v2)));1;37;;;;;
 (max(min((((v0 + v1) + v2) + 3)/2, 999), min(max(min((((v0 + v1) + v3) + 5)/2, 999), 0), (max(min((((v0 + v1) + v2) + 3)/2, 999), 0) + ((v4/4)*4)) + 3) - max(v4, 0)) == max(min((((v0 + v1) + v2) + 3)/2, 999), min(max(min((((v0 + v1) + v3) + 5)/2, 999), 0), (max(min((((v0 + v1) + v2) + 3)/2, 999), 0) + ((v4/4)*4)) + 3) - max(v4, 0)));1;200;;;;;
 (min(min(v0, 1863) + (((v1 + 7)/4)*4), max(v2, -136) + 1) == min(min(v0, 1863) + (((v1 + 7)/4)*4), max(v2, -136) + 1));1;66;;;;;
 ((v0 + -1) >= ((v0 - 1) + 1));0;44;;;;;
 (0 == ((0 + ((min(v0, -1)*2) + 6)) - 1));0;57;;;;;
 (min(((((v0*24) + v1)*2) + v2)*4, (v3*8) + 189) == min(((((v0*24) + v1)*2) + v2)*4, (v3*8) + 189));1;62;;;;;
 (0 == ((0 + ((min(v0, 3)*4) + 4)) - 1));0;52;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0), (max(min(v1/2, 999), 0) + ((v2/4)*4)) + 3) == min(max(min(((v0 + v1) + 1)/2, 999), 0), (max(min(v1/2, 999), 0) + ((v2/4)*4)) + 3));1;96;;;;;
 (min((v0*4) + v1, (v2*2) + -65) == min((v0*4) + v1, (v2*2) + -65));1;56;;;;;
 ((min(((v0 + 13)/4)*-32, -8) + 8) >= 3);0;33;;;;;
 (min(max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45), v2) == min(max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45), v2));1;237;;;;;
 (min(max(min(v0*4, 1995), -4), max(min(v0*4, 1998), -1) + (v1*4)) == min(max(min(v0*4, 1995), -4), max(min(v0*4, 1998), -1) + (v1*4)));1;76;;;;;
 ((((max(min(min(((v0 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1), 31), 0) - max(min((v1/63) + (v2*2), 31), 0))*8) - (v3*14)) == (((max(min(min(((v0 + v1) + -1)/63, ((v1/63) + (v2*2)) + 1), 31), 0) - max(min((v1/63) + (v2*2), 31), 0))*8) - (v3*14)));1;319;;;;;
 (min(((v0 + v1) + -1)/4, ((v2*64) + ((v1/4) + (v3*8))) + 1) == min(((v0 + v1) + -1)/4, ((v2*64) + ((v1/4) + (v3*8))) + 1));1;64;;;;;
 ((((v0*32) + 163)/132) != 0);0;422;;;;;
 (min(((((v0 + v1) + 124)/125)*16) + 22, v2) == min(((((v0 + v1) + 124)/125)*16) + 22, v2));1;64;;;;;
 ((max(min(v0, 1), -2) + -3) == (((max(min(v0, 1), -2) + -3) + (5 - max(min(v0, 1), -2))) - 1));0;82;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 265)/251) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 265)/251));1;1416;;;;;
 (((v0*156) + ((v1/250)*32)) == ((v0*156) + ((v1/250)*32)));1;69;;;;;
 (((((((v0 + v1) + 9)/2) - (v1/2)) + 65)/63) == ((((((v0 + v1) + 9)/2) - (v1/2)) + 65)/63));1;36;;;;;
 (((v0 + 27)/17) != 0);0;342;;;;;
 ((v0 - (v1*252)) == (v0 - (v1*252)));1;60;;;;;
 (((v0*16) + (min(v1*125, v2 + -125) + v3)) == ((v0*16) + (min(v1*125, v2 + -125) + v3)));1;70;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*7) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*7) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*7) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*7) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*7) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*7) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*7) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*7) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))));1;185;;;;;
 (min(max(max(min(((min((v0*8) + 5, v1 + v2) + 31)/4) - (v3*2), min(((v1 + v2)/4) - (v3*2), ((v0 - v3)*2) + 2) + 7), ((v2 + 31)/4) - (v3*2)), -1), (min((max(((v4 + v5) + 23)/8, 249) - (v6*17)) - min(v5/8, 4), 12)*2) + 9) == min(max(max(min(((min((v0*8) + 5, v1 + v2) + 31)/4) - (v3*2), min(((v1 + v2)/4) - (v3*2), ((v0 - v3)*2) + 2) + 7), ((v2 + 31)/4) - (v3*2)), -1), (min((max(((v4 + v5) + 23)/8, 249) - (v6*17)) - min(v5/8, 4), 12)*2) + 9));1;255;;;;;
 (min((v0*4) + v1, ((((v2 + v3) + -1)/500)*64) + 85) == min((v0*4) + v1, ((((v2 + v3) + -1)/500)*64) + 85));1;67;;;;;
 (((v0/63) + ((v1/64)*8)) == ((v0/63) + ((v1/64)*8)));1;39;;;;;
 ((((v0*8) + 28)/17) != 0);0;460;;;;;
 (((((min((v0*-268) + (v1 - v2), 218) + 60)/56)*56) + (v0*268)) == ((((min((v0*-268) + (v1 - v2), 218) + 60)/56)*56) + (v0*268)));1;66;;;;;
 (min(v0 + v1, (min(v2*224, 444) + ((v3*668) + v1)) + 224) == min(v0 + v1, (min(v2*224, 444) + ((v3*668) + v1)) + 224));1;50;;;;;
 (min(((v0*113) + (v1*8)) + 94, v2) == min(((v0*113) + (v1*8)) + 94, v2));1;34;;;;;
 (min(v0*4, (v1*4) + 14) == min(v0*4, (v1*4) + 14));1;35;;;;;
 (((v0*9) + ((v1*76) + v2)) == ((v0*9) + ((v1*76) + v2)));1;38;;;;;
 (((((((v0 + v1) + 499)/500) - (v1/500)) + 7)/3) == ((((((v0 + v1) + 499)/500) - (v1/500)) + 7)/3));1;59;;;;;
 (min((((v0 + v1) + 511)/32) - (v1/32), v2 + 10) == min((((v0 + v1) + 511)/32) - (v1/32), v2 + 10));1;55;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 17)/9) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 17)/9));1;85;;;;;
 (((v0 + 9)/8) != 0);0;335;;;;;
 (min(((v0*16) + v1) + 15, v2) == min(((v0*16) + v1) + 15, v2));1;163;;;;;
 ((((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0))*2) + 4) == (((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0))*2) + 4));1;239;;;;;
 ((min(v0 + v1, 1999) + (v2*4)) == (min(v0 + v1, 1999) + (v2*4)));1;43;;;;;
 (min((((v0 + v1) + 314)/63) - (v1/63), v2) == min((((v0 + v1) + 314)/63) - (v1/63), v2));1;41;;;;;
 ((min(v0*8, 997) + (min(v1*1000, v2 + -1000) + v3)) == (min(v0*8, 997) + (min(v1*1000, v2 + -1000) + v3)));1;27;;;;;
 (((max(min((v0*-128) + v1, 112), -16)/4)*4) == max(min((v0*-128) + v1, 112), -16));0;592;;;;;
 ((max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) - (max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + (((v3*17) + v4)*4))) == (max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) - (max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + (((v3*17) + v4)*4))));1;128;;;;;
 (min(((v0 + v1) + -1)/8, v2 + -2) == min(((v0 + v1) + -1)/8, v2 + -2));1;45;;;;;
 (min(max(min(v0 + v1, 2000), 1), ((v2*500) + (max(min(v1, 1999), 0) + min(v3*128, 377))) + 123) == min(max(min(v0 + v1, 2000), 1), ((v2*500) + (max(min(v1, 1999), 0) + min(v3*128, 377))) + 123));1;87;;;;;
 ((((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7)) + 263)/256) == (((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7)) + 263)/256));1;307;;;;;
 ((((((v0 + v1) + 447)/32) - (v1/32)) + 20) == (((((v0 + v1) + 447)/32) - (v1/32)) + 20));1;68;;;;;
 (((v0*2) + v1) >= ((((v0 - 1)*2) + v1) + 1));1;69;;;;;
 (((v0*8) + -55) == ((((v0*8) + -55) + ((min(v1, -4)*8) + 187)) - 1));0;90;;;;;
 (((((v0 % ((v1/32) + 1))*32)/4)*4) == ((v0 % ((v1/32) + 1))*32));1;78;;;;;
 (((v0*250) + (v1 + v2)) == ((v0*250) + (v1 + v2)));1;27;;;;;
 ((((v0*16)/8)*8) == (v0*16));1;38;;;;;
 ((min((v0/65)*64, 4) + (v1*32)) == (min((v0/65)*64, 4) + (v1*32)));1;66;;;;;
 (((((((uint1)1 && ((((((v0*4) + 0)*4) + 0) + 1) <= ((v0*16) + 1))) && ((((((v0*4) + 3)*4) + 3) + 1) >= ((v0*16) + 16))) && (((max(v1*4, -10) + v2) + 5) <= ((((v1*4) + v2) + 0) + -5))) && ((((v1*4) + v2) + 8) >= ((((v1*4) + v2) + 3) + 5))) && (0 <= 0)) && (49 >= 49));0;247;;;;;
 (min(max((44 - (v0/8))/32, 0), (v1 + 44)/32) == min(max((44 - (v0/8))/32, 0), (v1 + 44)/32));1;68;;;;;
 (min((v0*2) + ((v1*4) + v2), v3 + 17) == min((v0*2) + ((v1*4) + v2), v3 + 17));1;66;;;;;
 (((v0*224) + ((v1*668) + v2)) == ((v0*224) + ((v1*668) + v2)));1;43;;;;;
 ((v0 + v1) <= ((v0 + v1) - 1));0;49;;;;;
 (((((v0/16) + v1)*4) + ((v2*2) + v3)) == ((((v0/16) + v1)*4) + ((v2*2) + v3)));1;50;;;;;
 (((min(((v0*8) + v1)*4, (v1*4) + 75) - (v0*32)) - (v1*4)) == ((min(((v0*8) + v1)*4, (v1*4) + 75) - (v0*32)) - (v1*4)));1;68;;;;;
 ((min(max(v0*500, -5) + (v1*4), (v0*500) + 496) + (min(v2*1000, v3 + -1000) + v4)) == (min(max(v0*500, -5) + (v1*4), (v0*500) + 496) + (min(v2*1000, v3 + -1000) + v4)));1;42;;;;;
 (((((v0 % (((v1*8) + 45)/36))*-36)/12)*12) == ((v0 % (((v1*8) + 45)/36))*-36));1;103;;;;;
 ((((v0*8) + 249)/185) != 0);0;495;;;;;
 (((max(min(v0/2, 999), 0) + (((v1*9) + v2)*2)) - min(max(min(((v3 + v0) + -1)/2, 999), 0) - (v4*64), max(min(v0/2, 999), 0) + 63)) == ((max(min(v0/2, 999), 0) + (((v1*9) + v2)*2)) - min(max(min(((v3 + v0) + -1)/2, 999), 0) - (v4*64), max(min(v0/2, 999), 0) + 63)));1;159;;;;;
 ((((max(v0, 0) - v1) + 17)/4) != 0);0;529;;;;;
 ((((((v0 + v1) + 62)/63)*8) - ((((v2*8) + v3)*4) + v4)) == (((((v0 + v1) + 62)/63)*8) - ((((v2*8) + v3)*4) + v4)));1;78;;;;;
 (min(max(v0 + -17, v1), (min(v2, 111) + v0) + 5) == min(max(v0 + -17, v1), (min(v2, 111) + v0) + 5));1;46;;;;;
 (max(min(-3 - max(min((v0 - (v1*16)) - v2, 15), 0), v3 + 1), max(min(((v1*16) + v2) - v0, 0), -15) + -3) == max(min(-3 - max(min((v0 - (v1*16)) - v2, 15), 0), v3 + 1), max(min(((v1*16) + v2) - v0, 0), -15) + -3));1;110;;;;;
 ((v0 + -1) == (((v0 + -1) + (29 - max(v1*13, 12))) - 1));0;93;;;;;
 ((max(min(v0/8, 249), 0) + (((v1/8)*130) - max(min(((v2 + v0) + 7)/8, 249), 0))) == (max(min(v0/8, 249), 0) + (((v1/8)*130) - max(min(((v2 + v0) + 7)/8, 249), 0))));1;86;;;;;
 (((v0*2) + -494) == ((((v0*2) + -494) + ((min(v1 - (v2*12), -22)*2) + 68)) - 1));0;147;;;;;
 (min((v0*2) + v1, v2 + 17) == min((v0*2) + v1, v2 + 17));1;47;;;;;
 (((((((v0 + v1) + 15)/16) - ((v1 + -2)/16)) + 69)/66) == ((((((v0 + v1) + 15)/16) - ((v1 + -2)/16)) + 69)/66));1;63;;;;;
 (min(((((v0 + v1) + -1)/8) - (v1/8)) + -63, v2) == min(((((v0 + v1) + -1)/8) - (v1/8)) + -63, v2));1;45;;;;;
 ((min(((((v0 + v1) + 21)/2) - (v2*514)) - (v1/2), 498) + 5) == (min(((((v0 + v1) + 21)/2) - (v2*514)) - (v1/2), 498) + 5));1;93;;;;;
 (((((v0 + v1) + 5)/2) - (v2*252)) == ((((v0 + v1) + 5)/2) - (v2*252)));1;69;;;;;
 (max(min(max(max(max(max(max(max(max(max(132 - (((v0 + v1)/32)*32), (((v0 + v1)/32)*-32) + 148), 136 - (((v0 + v1)/32)*32)), 140 - (((v0 + v1)/32)*32)), 144 - (((v0 + v1)/32)*32)), 152 - (((v0 + v1)/32)*32)), 156 - (((v0 + v1)/32)*32)), 160 - (((v0 + v1)/32)*32))/116, 0), ((((((v0 + v1) % 32) + 531)/32)*32) + 174)/116), (min(1917 - (((v0 + v1)/32)*32), (((((v0 + v1) % 32) + 531)/32)*32) + 58)/116) + 1) == max(min(max(max(max(max(max(max(max(max(132 - (((v0 + v1)/32)*32), (((v0 + v1)/32)*-32) + 148), 136 - (((v0 + v1)/32)*32)), 140 - (((v0 + v1)/32)*32)), 144 - (((v0 + v1)/32)*32)), 152 - (((v0 + v1)/32)*32)), 156 - (((v0 + v1)/32)*32)), 160 - (((v0 + v1)/32)*32))/116, 0), ((((((v0 + v1) % 32) + 531)/32)*32) + 174)/116), (min(1917 - (((v0 + v1)/32)*32), (((((v0 + v1) % 32) + 531)/32)*32) + 58)/116) + 1));1;362;;;;;
 (min(v0 - ((v1/8)*8), v2 + 511) == min(v0 - ((v1/8)*8), v2 + 511));1;56;;;;;
 ((max(min((v0*-16) + (((v1*-132) + (min((min((v2*32) + (v1*132), min(v1*132, 128) + 115) + ((v3 + v4)/2)) + 8, (((v3 + v4) + 1005)/2) + (v5*-256)) + (v2*-32))) - ((v3 + v4)/2)), -11), -27) + (v0*16)) == (max(min((v0*-16) + (((v1*-132) + (min((min((v2*32) + (v1*132), min(v1*132, 128) + 115) + ((v3 + v4)/2)) + 8, (((v3 + v4) + 1005)/2) + (v5*-256)) + (v2*-32))) - ((v3 + v4)/2)), -11), -27) + (v0*16)));1;206;;;;;
 (min((v0*60) + (((v1*4) + v2)*32), (v3*8) + 140) == min((v0*60) + (((v1*4) + v2)*32), (v3*8) + 140));1;70;;;;;
 (((((v0*2) + v1)*3) + (v2 + v3)) == ((((v0*2) + v1)*3) + (v2 + v3)));1;49;;;;;
 (min((((v0 + v1) + 15)/16)*8, (((v1/16) + (v2*64))*8) + 493) == min((((v0 + v1) + 15)/16)*8, (((v1/16) + (v2*64))*8) + 493));1;91;;;;;
 ((min(v0*96, 571) + (v1*3)) == (min(v0*96, 571) + (v1*3)));1;36;;;;;
 (max(min(min((((v3 + v4) - max(min(v2, 2004), 5)) + -3)/8, (min(max(min(v1 + v2, 1997), -2), (v3 + v4) + 4) - max(min(v2, 2004), 5))/8), (0 + ((v5 + 15)/8)) - 1) + 1, min(max(((v4 - max(min(v2, 2004), 5)) + 12)/8, 0), ((v5 + 15)/8) + 0)) <= min(max(((v4 - max(min(v2, 2004), 5)) + 12)/8, 0), ((v5 + 15)/8) + 0));0;2387;;;;;
 (0 == ((0 + (max(v0, 0)*2)) - 1));0;52;;;;;
 (max(v0*2, (((v1*2) + v0)*2) + 1) == max(v0*2, (((v1*2) + v0)*2) + 1));1;56;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*8, 117) + v3)/8) <= (((min(v2*8, 117) + 0) + v3)/8))) && ((((min(v2*8, 117) + v3) + 7)/8) >= (((min(v2*8, 117) + ((8 + 0) - 1)) + v3)/8))) && (v4 <= v4)) && (v4 >= v4));1;265;;;;;
 (((v0*2) + ((v1*68) + v2)) == ((v0*2) + ((v1*68) + v2)));1;45;;;;;
 ((((v0*4)/2)*2) == (v0*4));1;34;;;;;
 (min(84 - (max(max(min((v0/63)*8, 285), 36) + ((v1*16) - max(min((((v2 + v0) + -1)/63)*8, 244), -5)), 26)*2), (min((max(min((((v2 + v0) + -1)/63)*8, 244), -5) - (v1*16)) - max(min((v0/63)*8, 285), 36), -26)*2) + 85) == min(84 - (max(max(min((v0/63)*8, 285), 36) + ((v1*16) - max(min((((v2 + v0) + -1)/63)*8, 244), -5)), 26)*2), (min((max(min((((v2 + v0) + -1)/63)*8, 244), -5) - (v1*16)) - max(min((v0/63)*8, 285), 36), -26)*2) + 85));1;268;;;;;
 ((((max(min(min((v4*8) + ((v2 + v3)/8), ((v2 + v3) + 68)/8)*8, 1938), -61) + (max(min(min((v4*8) + ((v2 + v3)/8), ((v2 + v3) + 68)/8)*8, 2002), 3)*-1))/4)*4) == (max(min(min((v4*8) + ((v2 + v3)/8), ((v2 + v3) + 68)/8)*8, 1938), -61) + (max(min(min((v4*8) + ((v2 + v3)/8), ((v2 + v3) + 68)/8)*8, 2002), 3)*-1)));0;1921;;;;;
 ((((v0 + 5)/4) - (v1*251)) == (((v0 + 5)/4) - (v1*251)));1;37;;;;;
 (((min((min((v1*1000) + 1000, v2)*8) + (v3*8), (((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004) + (v1*8000)) + ((v3*8) + 4002))/8)*8) == min((min((v1*1000) + 1000, v2)*8) + (v3*8), (((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004) + (v1*8000)) + ((v3*8) + 4002)));0;1945;;;;;
 (((v0*8) + -1) == ((((v0*8) + -1) + 4) - 1));0;37;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;8627;;;;;
 (((((v0 + v1) + 124)/16) + ((((((v0 + v1) + 12) % 16) + 191)/64)*4)) == ((((v0 + v1) + 124)/16) + ((((((v0 + v1) + 12) % 16) + 191)/64)*4)));1;84;;;;;
 ((((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 52)/35) == (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 52)/35));1;94;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;5720;;;;;
 ((((v0 + -35)/4) + (v1*4)) == (((v0 + -35)/4) + (v1*4)));1;78;;;;;
 (min(-16 - (max(v0 - v1, -9)*8), (min(v1 - v0, 9)*8) + 11) == min(-16 - (max(v0 - v1, -9)*8), (min(v1 - v0, 9)*8) + 11));1;88;;;;;
 ((v0 - (((v1*4) + v2)*32)) == (v0 - (((v1*4) + v2)*32)));1;45;;;;;
 (((v0*36) + (max(min(v1/65, 31), 0)*16)) == ((v0*36) + (max(min(v1/65, 31), 0)*16)));1;51;;;;;
 (((min(min(((min((v0*252) + 64, v1) + -3)/4)*4, (v0*252) + 250) + -186, v1) + v2) - max(min((v0*-252) + v1, 252), -1)) == ((min(min(((min((v0*252) + 64, v1) + -3)/4)*4, (v0*252) + 250) + -186, v1) + v2) - max(min((v0*-252) + v1, 252), -1)));1;131;;;;;
 (min(((v0*16) + v1) + 4, v2) == min(((v0*16) + v1) + 4, v2));1;38;;;;;
 (min(max(v0 + v1, 1), min(v1, 1999) + (((v2 + 999)/1000)*1000)) == min(max(v0 + v1, 1), min(v1, 1999) + (((v2 + 999)/1000)*1000)));1;97;;;;;
 ((min(v0 - (v1*32), v2 + 31) - ((v3*2) + v2)) == (min(v0 - (v1*32), v2 + 31) - ((v3*2) + v2)));1;59;;;;;
 (min(((v0 + v1) + -1)/4, ((v2*128) + v3) + -2) == min(((v0 + v1) + -1)/4, ((v2*128) + v3) + -2));1;62;;;;;
 ((max(min(v0/16, 126), 2) + (v1*8)) == (max(min(v0/16, 126), 2) + (v1*8)));1;73;;;;;
 ((((max((((v0 + v1) + -1)/65)*8, 239) - v2) + 74)/64) == (((max((((v0 + v1) + -1)/65)*8, 239) - v2) + 74)/64));1;84;;;;;
 ((((v0*4) + v1)*8) == (((((v0*4) + v1)*8) + ((min(v2 - v1, 3)*8) + 8)) - 1));0;177;;;;;
 ((((((((v0 + v1) + 64)/65) - (v1/65))*8) + 49)/36) == (((((((v0 + v1) + 64)/65) - (v1/65))*8) + 49)/36));1;73;;;;;
 ((min((((v0 + v1) + 7)/8) - (v2*84), (v1/8) + 83) - ((v3*4) + ((v1/8) + (v4*16)))) == (min((((v0 + v1) + 7)/8) - (v2*84), (v1/8) + 83) - ((v3*4) + ((v1/8) + (v4*16)))));1;91;;;;;
 (min((v0*336) + v1, min(v2 + v1, 2335) + -336) == min((v0*336) + v1, min(v2 + v1, 2335) + -336));1;53;;;;;
 (((((v0*30) + v1)*8) + -20) == ((((((v0*30) + v1)*8) + -20) + (((v2 - v1)*8) + 170)) - 1));0;138;;;;;
 (min(max(((v0 - (min(v1, 249)*8)) + 20)/12, 0), ((v2*8) + 20)/12) == min(max(((v0 - (min(v1, 249)*8)) + 20)/12, 0), ((v2*8) + 20)/12));1;92;;;;;
 (((v0 + v1)*2) == ((((v0 + v1)*2) + ((min(v2, 0)*2) + 2)) - 1));0;103;;;;;
 ((((v0*-16)/8)*8) == (v0*-16));1;49;;;;;
 ((max(min(v0, 1999), 0) + (v1*63)) == (max(min(v0, 1999), 0) + (v1*63)));1;74;;;;;
 (((max(((v0 + v1) + -1)/8, 249) - (v2*125)) - min(v1/8, 0)) == ((max(((v0 + v1) + -1)/8, 249) - (v2*125)) - min(v1/8, 0)));1;77;;;;;
 (min(((((v0*4) + v1)*2) + v2) + v3, ((v4*2) + v2) + 2) == min(((((v0*4) + v1)*2) + v2) + v3, ((v4*2) + v2) + 2));1;96;;;;;
 (min(((v0 + v1) + -1)/32, ((v1/32) + ((v2/4)*4)) + 3) == min(((v0 + v1) + -1)/32, ((v1/32) + ((v2/4)*4)) + 3));1;88;;;;;
 (min((v0*4) + v1, v2 + 30) == min((v0*4) + v1, v2 + 30));1;41;;;;;
 (((v0 + v1)*4) >= ((((v0 + (v1 - 1))*4) + 3) + 1));1;63;;;;;
 ((((max(min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*64)) + 62)*8, 3994), -5) + 13)/2) - ((max(min(((v1/4) + (v2*64))*8, 4012), 13) + -17)/2)) == (((max(min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*64)) + 62)*8, 3994), -5) + 13)/2) - ((max(min(((v1/4) + (v2*64))*8, 4012), 13) + -17)/2)));1;140;;;;;
 ((((((v0 + v1) + 13)/2) - (v2*64)) - (v1/2)) == (((((v0 + v1) + 13)/2) - (v2*64)) - (v1/2)));1;83;;;;;
 (((((min(((((v0/63) + (v1*2))*2) + v2)*4, (min(((v3 + v0) + -1)/63, ((v0/63) + (v1*2)) + 1)*8) + 4)/4) - v2) - (v1*4)) - ((v0/63)*2)) == ((((min(((((v0/63) + (v1*2))*2) + v2)*4, (min(((v3 + v0) + -1)/63, ((v0/63) + (v1*2)) + 1)*8) + 4)/4) - v2) - (v1*4)) - ((v0/63)*2)));1;156;;;;;
 (min(max(((v0 - v1) + 6)/4, 0), (v2/4) + 4) == min(max(((v0 - v1) + 6)/4, 0), (v2/4) + 4));1;71;;;;;
 (((((((uint1)1 && ((v0 + 0) <= (0 + v0))) && ((v0 + 3) >= (((4 + 0) - 1) + v0))) && (((min(v1*6, 119) + ((v2*2) + v3)) + v4) <= ((min(v1*6, 119) + ((v2*2) + v3)) + v4))) && (((min(v1*6, 119) + ((v2*2) + v3)) + v4) >= ((min(v1*6, 119) + ((v2*2) + v3)) + v4))) && (v5 <= v5)) && (v5 >= v5));1;157;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 19)/9) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 19)/9));1;278;;;;;
 (min((((v0/63)*2) + v1)*4, ((((v2 + v0) + -1)/63)*8) + 8) == min((((v0/63)*2) + v1)*4, ((((v2 + v0) + -1)/63)*8) + 8));1;875;;;;;
 (min(((((v0 - v1)/2)*2) + v1) + 1, v0) == min(((((v0 - v1)/2)*2) + v1) + 1, v0));1;57;;;;;
 (min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*16))*16) + 242, v2) == min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*16))*16) + 242, v2));1;65;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;5185;;;;;
 (max(min(min(min((((v1 + v2) - max(min(v3, 1999), 0))/4) + -1, ((max(min(v3, 1956), -43) - max(min(v3, 1999), 0))/4) + 10), ((min(max(min(v3, 1956), -43) + 41, v1 + v2) - max(min(v3, 1999), 0)) + -1)/4), (0 + ((v4 + 47)/4)) - 1) + 1, min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 47)/4) + 0)) <= min(max(((v2 - max(min(v3, 1999), 0)) + 3)/4, 0), ((v4 + 47)/4) + 0));0;2968;;;;;
 ((((v0*64) + 330)/137) != 0);0;468;;;;;
 ((v0 - (v1*128)) == (v0 - (v1*128)));1;163;;;;;
 (((v0 + 76)/32) != 0);0;348;;;;;
 (max(v0*8, v1 + 4) == max(v0*8, v1 + 4));1;27;;;;;
 (min((((min(max(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 11, min(v0*128, v2 + -128) + v1) - min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128), (v3*32) + -96) + 134)/4)*4) + v4, v5 + 39) == min((((min(max(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 11, min(v0*128, v2 + -128) + v1) - min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128), (v3*32) + -96) + 134)/4)*4) + v4, v5 + 39));1;252;;;;;
 ((((((v0 + v1) + 755)/63)*16) - (((v1/63)*16) + v2)) == (((((v0 + v1) + 755)/63)*16) - (((v1/63)*16) + v2)));1;64;;;;;
 (((max(min((v1*-32) + (v3 + (v2*-128)), 32), 0)/4)*4) == max(min((v1*-32) + (v3 + (v2*-128)), 32), 0));0;991;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8))/4) + 1) == ((((((v0 + v1) + -1)/8) - (v1/8))/4) + 1));1;35;;;;;
 (((((((v0 + v1) + 265)/133) - (v1/133)) + 11)/6) == ((((((v0 + v1) + 265)/133) - (v1/133)) + 11)/6));1;68;;;;;
 ((max(min(v0/2, 999), 0) + (v1*33)) == (max(min(v0/2, 999), 0) + (v1*33)));1;48;;;;;
 (((v0/9) + 4) != 0);0;303;;;;;
 ((((v0*8) + 32)/9) != 0);0;467;;;;;
 (((((((uint1)1 && ((((v0*65) + v1) + -7) <= ((((v0*65) + v1) + 0) + -7))) && ((((v0*65) + v1) + 57) >= ((((v0*65) + v1) + ((65 + 0) - 1)) + -7))) && (((((0*4) + ((v2*4) + ((v3*120) + v4))) + 0) + -38) <= (((v2*4) + ((v3*120) + v4)) + -38))) && (((((0*4) + ((v2*4) + ((v3*120) + v4))) + 3) + -38) >= ((((v2*4) + ((v3*120) + v4)) + 3) + -38))) && (v5 <= v5)) && (v5 >= v5));1;253;;;;;
 (((((((v0 + v1) + 124)/125) - (v1/125))*4) + 21) == ((((((v0 + v1) + 124)/125) - (v1/125))*4) + 21));1;1464;;;;;
 (((((max(v0, 0) - v1)*8) + 630)/620) == ((((max(v0, 0) - v1)*8) + 630)/620));1;82;;;;;
 (((v0 + 39)/4) != 0);0;374;;;;;
 (((((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9))*8) + 380)/252) == ((((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9))*8) + 380)/252));1;242;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 98)/89) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 98)/89));1;68;;;;;
 (min(((((max((((v0 + v1) + -1)/65)*8, 239) - v2)/4) + 4)*4) + v2, max((((v0 + v1) + -1)/65)*8, 239) + 13) == min(((((max((((v0 + v1) + -1)/65)*8, 239) - v2)/4) + 4)*4) + v2, max((((v0 + v1) + -1)/65)*8, 239) + 13));1;193;;;;;
 ((((v0*8) + 16)/9) != 0);0;279;;;;;
 (min(min(v0 - max(min((v1*64) + v2, 1117), 118), 2) + min((max(min((v1*64) + v2, 1117), 118) + ((((v0 - max(min((v1*64) + v2, 1117), 118)) + -1)/2)*2)) + 1, v0), v0 + 1) == min(min(v0 - max(min((v1*64) + v2, 1117), 118), 2) + min((max(min((v1*64) + v2, 1117), 118) + ((((v0 - max(min((v1*64) + v2, 1117), 118)) + -1)/2)*2)) + 1, v0), v0 + 1));1;157;;;;;
 (max(min(504 - v0, (0 + 126) - 1) + 1, min(max(6 - v0, 0), 126 + 0)) <= min(max(6 - v0, 0), 126 + 0));0;766;;;;;
 (max(-428 - (v0*64), (v0*64) + 151) >= 0);0;515;;;;;
 ((min(281 - (v0/8), max(min((((v1 + v2) + 127)/32)*4, 246), -3) + 35) - ((v3*4) + v4)) == (min(281 - (v0/8), max(min((((v1 + v2) + 127)/32)*4, 246), -3) + 35) - ((v3*4) + v4)));1;114;;;;;
 ((((((v0 + v1) + 62)/63)*64) - ((v2*4) + v3)) == (((((v0 + v1) + 62)/63)*64) - ((v2*4) + v3)));1;63;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))/4) + 2) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))/4) + 2));1;236;;;;;
 (min(max((((v0/63)*-8) + 144)/136, 0), (v1 + 151)/136) == min(max((((v0/63)*-8) + 144)/136, 0), (v1 + 151)/136));1;1097;;;;;
 ((((v0*2) + 20)/9) != 0);0;458;;;;;
 ((max(min((v0*32) + v1, 1117), 118) + (v2*2)) == (max(min((v0*32) + v1, 1117), 118) + (v2*2)));1;53;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 9)/4) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 9)/4));1;252;;;;;
 (0 == ((0 + ((min(v0, -38)*2) + 86)) - 1));0;63;;;;;
 (((((((uint1)1 && ((((((v0*4) + v1)*4) + v2) + 0) <= ((((v0*4) + v1)*4) + v2))) && ((((((v0*4) + v1)*4) + v2) + 3) >= (((((v0*4) + v1)*4) + 3) + v2))) && (v3 <= v3)) && (((v4 + v3) - 1) >= ((v4 + v3) - 1))) && (v5 <= v5)) && (v5 >= v5));1;171;;;;;
 (((v0*2) + ((v1*58) + v2)) == ((v0*2) + ((v1*58) + v2)));1;62;;;;;
 ((((min((v0*64) + ((v1*32) + ((v2 + min(v3*1000, v4 + -1000))/8)), ((v2 + min(v3*1000, v4 + -1000)) + 1007)/8)*-8)/8)*8) == (min((v0*64) + ((v1*32) + ((v2 + min(v3*1000, v4 + -1000))/8)), ((v2 + min(v3*1000, v4 + -1000)) + 1007)/8)*-8));1;110;;;;;
 (((max(min(v0, 249), 0)*8) + -6) >= ((((max(min(v0, 249), 0)*8) + -6) + 13) - 1));0;93;;;;;
 ((min((v0*8) - (v1*21), (((v2*10) + v3)*8) + 10) - (((((v2*10) + v3)*2) + v4)*4)) == (min((v0*8) - (v1*21), (((v2*10) + v3)*8) + 10) - (((((v2*10) + v3)*2) + v4)*4)));1;104;;;;;
 (0 == ((0 + (16 - (max(min(v0, 8), 7)*2))) - 1));0;103;;;;;
 ((((v0*256) + 642)/284) != 0);0;428;;;;;
 (min((((v0 + v1) + 55)/8) - (v1/8), v2 + 5) == min((((v0 + v1) + 55)/8) - (v1/8), v2 + 5));1;51;;;;;
 ((((((((v0 + v1) + -1)/250) - (v1/250))*256) + 716)/280) == (((((((v0 + v1) + -1)/250) - (v1/250))*256) + 716)/280));1;61;;;;;
 (max(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min((((v4 + v2) - (v3*16))/24) + 1, (((v4 + v2) - (v3*16))/24) + 1), (((v4 + v2) - (v3*16))/24) + 1), (((v4 + v2) - (v3*16)) + 22)/24), (((v4 + v2) - (v3*16)) + 22)/24), (((v4 + v2) - (v3*16)) + 22)/24), (((v4 + v2) - (v3*16)) + 23)/24), (((v4 + v2) - (v3*16)) + 23)/24), (((v4 + v2) - (v3*16)) + 23)/24), (min((v4 + v2) - (v3*16), 369) + 45)/24), (min((v4 + v2) - (v3*16), 369) + 45)/24), (min((v4 + v2) - (v3*16), 369) + 45)/24), min((((v4 + v2) - (v3*16)) + 43)/24, 17)), min((((v4 + v2) - (v3*16)) + 43)/24, 17)), min((((v4 + v2) - (v3*16)) + 43)/24, 17)), min((((v4 + v2) - (v3*16)) + 44)/24, 17)), min((((v4 + v2) - (v3*16)) + 44)/24, 17)), min((((v4 + v2) - (v3*16)) + 44)/24, 17)), (0 + 19) - 1) + 1, min(max(max(max(((v2 - (v3*16)) + 67)/24, ((v2 - (v3*16)) + 68)/24), ((v2 - (v3*16)) + 69)/24), 0), 19 + 0)) <= min(max(max(max(((v2 - (v3*16)) + 67)/24, ((v2 - (v3*16)) + 68)/24), ((v2 - (v3*16)) + 69)/24), 0), 19 + 0));0;2791;;;;;
 ((((v0 - v1) + 80)/48) == (((v0 - v1) + 80)/48));1;68;;;;;
 ((min((v0*13) + ((v1/2) + (v2*24)), (min(v2*24, 43) + (v1/2)) + 14) + (v3*63)) == (min((v0*13) + ((v1/2) + (v2*24)), (min(v2*24, 43) + (v1/2)) + 14) + (v3*63)));1;82;;;;;
 ((max(min(v0, 249), 0) - max(min(v1, 249), 0)) == (max(min(v0, 249), 0) - max(min(v1, 249), 0)));1;133;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 9)/8) == (((max(min((((v0 + v1) + -1)/16)*2, 247), -2) - max(min(v1/16, 124)*2, -1)) + 9)/8));1;190;;;;;
 (max(min(min(1999, min(v1 + v2, 2000) + -1), (((((v5*32) + v4)*8) + -83) + ((min(v3 - v4, 18)*8) + 113)) - 1) + 1, min(max(max(0, max(v2, 0)), (((v5*32) + v4)*8) + -83), ((min(v3 - v4, 18)*8) + 113) + ((((v5*32) + v4)*8) + -83))) <= min(max(max(0, max(v2, 0)), (((v5*32) + v4)*8) + -83), ((min(v3 - v4, 18)*8) + 113) + ((((v5*32) + v4)*8) + -83)));0;2800;;;;;
 ((min((v0/16)*8, 4) + (v1*4)) == (min((v0/16)*8, 4) + (v1*4)));1;38;;;;;
 (((v0 + 263)/252) != 0);0;349;;;;;
 (max(min(max(v0, 1), v0 + 2), min(v0, 1999) + 2) == max(min(max(v0, 1), v0 + 2), min(v0, 1999) + 2));1;68;;;;;
 ((max(v0, 255) - min(v1/8, 0)) == (max(v0, 255) - min(v1/8, 0)));1;45;;;;;
 (((((v0 + v1) + 124)/125) - ((v2*2) + v3)) == ((((v0 + v1) + 124)/125) - ((v2*2) + v3)));1;42;;;;;
 (((v0*9) + ((min(v1/8, 0)/16)*16)) == ((v0*9) + ((min(v1/8, 0)/16)*16)));1;67;;;;;
 (min(max(v0, 0), (min(v1/8, 249) + (v2*64)) + 63) == min(max(v0, 0), (min(v1/8, 249) + (v2*64)) + 63));1;67;;;;;
 (((v0 + 78)/64) == ((v0 + 78)/64));1;32;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/125) + 1) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/125) + 1));1;293;;;;;
 ((((v0 - v1) + 323)/316) != 0);0;472;;;;;
 (((((max(min((v2*64) + (v1/4), 499), 0)/8)*-1)/2)*2) == ((max(min((v2*64) + (v1/4), 499), 0)/8)*-1));0;1282;;;;;
 (min(max(min(v0*8, 243), -6) + 132, v1) == min(max(min(v0*8, 243), -6) + 132, v1));1;47;;;;;
 (min(min(v0 - (v1*125), 125) + 5, v2) == min(min(v0 - (v1*125), 125) + 5, v2));1;52;;;;;
 (min(v0*8, ((v1*12) + ((v2/125)*8)) + -1) == min(v0*8, ((v1*12) + ((v2/125)*8)) + -1));1;53;;;;;
 ((((max(v0, 0) - v1) + 18)/12) != 0);0;525;;;;;
 (max(min(max(((v0 - v1) + 3)/4, 0), (min((max(v2, 1997) - (v3*8)) - min(v4, 0), 5) + 6)/4), min(min(v5 + v0, v6 + 3) - v1, min((max(v2, 1997) - (v3*8)) - min(v4, 0), 5) + 6)/4) == max(min(max(((v0 - v1) + 3)/4, 0), (min((max(v2, 1997) - (v3*8)) - min(v4, 0), 5) + 6)/4), min(min(v5 + v0, v6 + 3) - v1, min((max(v2, 1997) - (v3*8)) - min(v4, 0), 5) + 6)/4));1;193;;;;;
 ((-13 - max(v0, -9)) == (((-13 - max(v0, -9)) + (max(v0, -9) + 16)) - 1));0;75;;;;;
 (min(v0*8, (((v1*156) + ((v2*8) + v3))*8) + 52) == min(v0*8, (((v1*156) + ((v2*8) + v3))*8) + 52));1;50;;;;;
 (((((v0 % ((v1 + 127)/126))*-126)/63)*63) == ((v0 % ((v1 + 127)/126))*-126));1;105;;;;;
 (((((((v0 + v1) + -1)/1000)*256) - (v2*50)) - ((v1/1000)*256)) == ((((((v0 + v1) + -1)/1000)*256) - (v2*50)) - ((v1/1000)*256)));1;45;;;;;
 ((((max((((v0 + v1) + -1)/2)*2, 1997) - min(v1, 0)) + 18)/16) >= 0);1;58;;;;;
 ((min(v0*4, 5) + ((v1 + v2)*64)) == (min(v0*4, 5) + ((v1 + v2)*64)));1;51;;;;;
 (((((v0 + v1) + 7)/8) - (v1/8)) == ((((v0 + v1) + 7)/8) - (v1/8)));1;30;;;;;
 (((v0*116) + (((v1/63) + (v2*7))*64)) == ((v0*116) + (((v1/63) + (v2*7))*64)));1;61;;;;;
 (min(max(v0*8, 83), ((min(v1, 15) + v0)*8) + 169) == min(max(v0*8, 83), ((min(v1, 15) + v0)*8) + 169));1;65;;;;;
 (((v0*8) + ((v1*24) + v2)) == ((v0*8) + ((v1*24) + v2)));1;35;;;;;
 ((((v0*16)/8)*8) == (v0*16));1;255;;;;;
 (((max(v0, -1)*2) + 2) == ((((max(v0, -1)*2) + 2) + ((v1 - max(v0, -1))*2)) - 1));0;120;;;;;
 (min(min(((v0 + v1)*8) + 5, (v2*4) + v3) + 172, (((v0*2) + (((180 - v4)/4) + (v1*2)))*4) + v4) == min(min(((v0 + v1)*8) + 5, (v2*4) + v3) + 172, (((v0*2) + (((180 - v4)/4) + (v1*2)))*4) + v4));1;130;;;;;
 ((min((v0*1006) + v1, 2002) + ((((max(min((v0*1006) + 995, v2) + v1, -7) - min((v0*1006) + v1, 2002)) + 10)/252)*252)) == (min((v0*1006) + v1, 2002) + ((((max(min((v0*1006) + 995, v2) + v1, -7) - min((v0*1006) + v1, 2002)) + 10)/252)*252)));1;129;;;;;
 (min((((v0 + v1) + 43)/4) - (v1/4), v2 + 3) == min((((v0 + v1) + 43)/4) - (v1/4), v2 + 3));1;45;;;;;
 (((v0*32) + (min(((v1 + v2) + -1009)/8, (v2/8) + (v3*128)) + (v4*64))) == ((v0*32) + (min(((v1 + v2) + -1009)/8, (v2/8) + (v3*128)) + (v4*64))));1;72;;;;;
 (min(((v0 + v1) + 23)/8, v2 + 13) == min(((v0 + v1) + 23)/8, v2 + 13));1;59;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 26)/17) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 26)/17));1;66;;;;;
 (((v0*59) + ((v1*118) + v2)) == ((v0*59) + ((v1*118) + v2)));1;49;;;;;
 ((((88 - v0)/4) + ((((v1 + v2) + -1)/250)*16)) == (((88 - v0)/4) + ((((v1 + v2) + -1)/250)*16)));1;46;;;;;
 ((max(min(min(((v0 + v1) + -1)/8, ((v1/8) + (min(((min((v2*-4) + v3, (v4*12) + 3) + 5)/4)*4, (v4*12) + 5) + (v2*4))) + -2)*8, 1994), -5) - (max(min(((v2*4) + ((v1/8) + (v4*12)))*8, 2012), 13) + (v5*4))) == (max(min(min(((v0 + v1) + -1)/8, ((v1/8) + (min(((min((v2*-4) + v3, (v4*12) + 3) + 5)/4)*4, (v4*12) + 5) + (v2*4))) + -2)*8, 1994), -5) - (max(min(((v2*4) + ((v1/8) + (v4*12)))*8, 2012), 13) + (v5*4))));1;197;;;;;
 (min(((v0/65) + ((min((v1*4) + 3, v2)/4)*4)) + 3, v3) == min(((v0/65) + ((min((v1*4) + 3, v2)/4)*4)) + 3, v3));1;95;;;;;
 (min(min(10 - (max((v0/63) + ((v1*2) - (((v2 + v0) + -1)/63)), -1)*8), 252 - (v3*8)), (min(((((v2 + v0) + -1)/63) - (v1*2)) - (v0/63), 1)*8) + 12) == min(min(10 - (max((v0/63) + ((v1*2) - (((v2 + v0) + -1)/63)), -1)*8), 252 - (v3*8)), (min(((((v2 + v0) + -1)/63) - (v1*2)) - (v0/63), 1)*8) + 12));1;166;;;;;
 ((((min(v0*16, 116)*0)/4)*4) == (min(v0*16, 116)*0));1;52;;;;;
 ((((v0*4) + 267)/191) != 0);0;432;;;;;
 ((((((((v0 + v1) + 64)/65) - (v1/65))*2) + 21)/17) == (((((((v0 + v1) + 64)/65) - (v1/65))*2) + 21)/17));1;75;;;;;
 (((max(min((v2*-64) + ((max(min((v6*128) + (min(v5/8, 0) + (v7*128)), 122), -127) - max(min(max(min(((v4 + v5) + 7)/8, 376), 255), ((v6*128) + (min(v5/8, 0) + (v7*128))) + 127), 127)) + (v3*-32)), -228), -260)/4)*4) == max(min((v2*-64) + ((max(min((v6*128) + (min(v5/8, 0) + (v7*128)), 122), -127) - max(min(max(min(((v4 + v5) + 7)/8, 376), 255), ((v6*128) + (min(v5/8, 0) + (v7*128))) + 127), 127)) + (v3*-32)), -228), -260));0;3234;;;;;
 (min(((v0/8) + ((v1/4)*4)) + 3, v2) == min(((v0/8) + ((v1/4)*4)) + 3, v2));1;49;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (((min(v2*32, 93) + v3)/8) <= (((min(v2*32, 93) + 0) + v3)/8))) && ((((min(v2*32, 93) + v3) + 31)/8) >= (((min(v2*32, 93) + ((32 + 0) - 1)) + v3)/8))) && ((v4 + (v5/((v6 + 124)/125))) <= ((v5/((v6 + 124)/125)) + v4))) && ((v4 + (v5/((v6 + 124)/125))) >= ((v5/((v6 + 124)/125)) + v4)));1;309;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8))/64) + 1) == ((((((v0 + v1) + -1)/8) - (v1/8))/64) + 1));1;72;;;;;
 (max(min(70 - v0, (0 + 2) - 1) + 1, min(max(9 - v0, 0), 2 + 0)) <= min(max(9 - v0, 0), 2 + 0));0;767;;;;;
 (max(min(max(min(v0/8, 256), 10), (max(min(v0/8, 256), 7) + v1) + 14), min(max(min(v0/8, 256), 7) + v1, 245) + 14) == max(min(max(min(v0/8, 256), 10), (max(min(v0/8, 256), 7) + v1) + 14), min(max(min(v0/8, 256), 7) + v1, 245) + 14));1;116;;;;;
 ((v0 + 4) == (v0 + 4));1;22;;;;;
 (((((v0 % ((v1 + 68)/64))*-64)/32)*32) == ((v0 % ((v1 + 68)/64))*-64));1;54;;;;;
 ((((((((v0 + v1) + 64)/65) - (v1/65))*8) + 79)/66) == (((((((v0 + v1) + 64)/65) - (v1/65))*8) + 79)/66));1;82;;;;;
 ((((v0*8) + 75)/67) != 0);0;442;;;;;
 ((max(min(v0*8, 2082), 83) + (((v1 + 93)/56)*56)) == (max(min(v0*8, 2082), 83) + (((v1 + 93)/56)*56)));1;58;;;;;
 (min(130 - (v0*8), (((((v1 + v2) + 64)/65)*8) - ((v0*8) + v3)) + 13) == min(130 - (v0*8), (((((v1 + v2) + 64)/65)*8) - ((v0*8) + v3)) + 13));1;78;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 75)/36) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 75)/36));1;81;;;;;
 ((((-42 - (((min(v0*125, v1 + -125) + v2) + 1) % 2))/2) + (v3*2)) == (((-42 - (((min(v0*125, v1 + -125) + v2) + 1) % 2))/2) + (v3*2)));1;74;;;;;
 (max(((v0 - v1) + 13)/152, 0) >= ((max(((v0 - v1) + 13)/152, 0) + max((((v0 - v1) + 164)/152) - max(((v0 - v1) + 13)/152, 0), 0)) - 1));0;975;;;;;
 (max((27 - (v0 + v1))/32, 0 - ((v0 + v1)/32)) == max((27 - (v0 + v1))/32, 0 - ((v0 + v1)/32)));1;58;;;;;
 (((v0*-64) + (((((v1 + v2) + -1)/8) - (v3*128)) - (v2/8))) == ((v0*-64) + (((((v1 + v2) + -1)/8) - (v3*128)) - (v2/8))));1;81;;;;;
 (((v0 + 77)/64) != 0);0;363;;;;;
 (max((min(min(max(min(((v0 + v1) + 7)/8, 249), 0)*8, 1962) - max(max(min(v1/8, 256), 7)*8, 75), v2) + 139)/4, v3) == max((min(min(max(min(((v0 + v1) + 7)/8, 249), 0)*8, 1962) - max(max(min(v1/8, 256), 7)*8, 75), v2) + 139)/4, v3));1;114;;;;;
 ((min(((((v0 + v1) + -1)/63)*8) - ((v2/4)*65), ((v1/63)*8) + 55) - (((v1/63)*8) + (v3*34))) == (min(((((v0 + v1) + -1)/63)*8) - ((v2/4)*65), ((v1/63)*8) + 55) - (((v1/63)*8) + (v3*34))));1;102;;;;;
 (((((v0 + v1) + 31)/8) - ((((v2*2) + v3)*4) + v4)) == ((((v0 + v1) + 31)/8) - ((((v2*2) + v3)*4) + v4)));1;64;;;;;
 (((min((v1*-4) + (max(min((v2*125) + v3, min(v4 + v3, 2000) + -125), -124) - max(min((v2*125) + v3, min(v4 + v3, 2124) + -125), 0)), -124)/4)*4) == min((v1*-4) + (max(min((v2*125) + v3, min(v4 + v3, 2000) + -125), -124) - max(min((v2*125) + v3, min(v4 + v3, 2124) + -125), 0)), -124));0;3351;;;;;
 (((((v0 + v1) + 499)/250) - (v1/250)) == ((((v0 + v1) + 499)/250) - (v1/250)));1;64;;;;;
 (((min(((v0*32) + v1) + 31, v2) + (v0*-32)) - ((v3*2) + v1)) == ((min(((v0*32) + v1) + 31, v2) + (v0*-32)) - ((v3*2) + v1)));1;61;;;;;
 ((((v0*8) + ((v1*32) + v2)) + 4) < ((((v0 + 1)*8) + ((v1*32) + v2)) + -6));0;97;;;;;
 (max(-184 - (max(min(((v0/65)*-8) + ((v1*-131) + (min((((v2 + v0) + 64)/65)*8, ((v1*131) + ((v0/65)*8)) + 117) - (v3*4))), -20), -23)*8), (max(min(((((v0/65)*2) + v3)*4) - min(((((v2 + v0) + 64)/65)*8) - (v1*131), ((v0/65)*8) + 117), 23), 20)*8) + -184) == max(-184 - (max(min(((v0/65)*-8) + ((v1*-131) + (min((((v2 + v0) + 64)/65)*8, ((v1*131) + ((v0/65)*8)) + 117) - (v3*4))), -20), -23)*8), (max(min(((((v0/65)*2) + v3)*4) - min(((((v2 + v0) + 64)/65)*8) - (v1*131), ((v0/65)*8) + 117), 23), 20)*8) + -184));1;263;;;;;
 (((v0*17) + ((max(min(v1/8, 249), 0)/8)*8)) == ((v0*17) + ((max(min(v1/8, 249), 0)/8)*8)));1;86;;;;;
 (((v0*64) + (max(min((v1*1000) + v2, 1999), 0) - max(min(min((v1*1000) + 1000, v3) + v2, 2000), 1))) == ((v0*64) + (max(min((v1*1000) + v2, 1999), 0) - max(min(min((v1*1000) + 1000, v3) + v2, 2000), 1))));1;294;;;;;
 ((v0 - (((v1 + v2)/65)*8)) == (v0 - (((v1 + v2)/65)*8)));1;50;;;;;
 (0 == ((0 + (0 - (max(v0, -2)*2))) - 1));0;48;;;;;
 ((max(min(v0/2, 999), 0) + (v1*63)) == (max(min(v0/2, 999), 0) + (v1*63)));1;54;;;;;
 (((((((v0 + v1) + 447)/32) - (v1/32)) + 66)/48) == ((((((v0 + v1) + 447)/32) - (v1/32)) + 66)/48));1;54;;;;;
 ((((((((v0 + v1) + 64)/65) - (v1/65))*8) + 153)/134) == (((((((v0 + v1) + 64)/65) - (v1/65))*8) + 153)/134));1;80;;;;;
 ((max(v0*32, 1964) - min((v1/32)*32, 36)) == (max(v0*32, 1964) - min((v1/32)*32, 36)));1;60;;;;;
 (((min(max(min((v2*501) + ((v1/2) + 119), min(v3, 999)), 0) - max(min((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min((v2*501) + ((v1/2) + 119), min(v3, 999)), 0) - max(min((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;5747;;;;;
 (min(v0/2, v1 + 4) == min(v0/2, v1 + 4));1;57;;;;;
 (max(((v0 - v1) + 13)/8, 0) >= ((max(((v0 - v1) + 13)/8, 0) + ((((v0 - v1) + 21)/8) - max(((v0 - v1) + 13)/8, 0))) - 1));1;114;;;;;
 ((max(v0*64, -6) + ((v1 + v2)/8)) == (max(v0*64, -6) + ((v1 + v2)/8)));1;40;;;;;
 (((((((uint1)1 && ((v0 + -2) <= (-2 + v0))) && ((v1 + 8) >= (((11 + -2) - 1) + ((((v1 - v0) + 1) + v0) - 1)))) && (0 <= 0)) && (0 >= 0)) && (((v2*4) + 0) <= ((v2*4) + 0))) && (((v2*4) + 3) >= ((v2*4) + ((4 + 0) - 1))));1;146;;;;;
 (min((((v0 - v1)/2)*2) + v1, v0) == min((((v0 - v1)/2)*2) + v1, v0));1;59;;;;;
 (min((min(v0*64, 944) + ((v1*1008) + v2)) + 49, v3 + v2) == min((min(v0*64, 944) + ((v1*1008) + v2)) + 49, v3 + v2));1;66;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 28)/17) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 28)/17));1;70;;;;;
 (((v0*41) + ((v1*3) + v2)) == ((v0*41) + ((v1*3) + v2)));1;33;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*32, 3986), -13) - max(min((v1/16)*32, 4044), 45)) + 90)/32) == (((max(min((((v0 + v1) + -1)/16)*32, 3986), -13) - max(min((v1/16)*32, 4044), 45)) + 90)/32));1;223;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 0)) + 151)/128) == (((max(v0 + v1, 2000) - min(v1, 0)) + 151)/128));1;64;;;;;
 ((max(min(min(((v0 + v1) + -1)/8, ((v2*16) + v3) + 15), 249), 0) - (max(min((v2*16) + v3, 249), 0) + (v4*4))) == (max(min(min(((v0 + v1) + -1)/8, ((v2*16) + v3) + 15), 249), 0) - (max(min((v2*16) + v3, 249), 0) + (v4*4))));1;122;;;;;
 (min(((min(((v0*2) + v1)*2, 253)*2) + v2)*4, (v3*16) + 28) == min(((min(((v0*2) + v1)*2, 253)*2) + v2)*4, (v3*16) + 28));1;109;;;;;
 (((v0 + v1)*4) >= (((((v0 - 1) + v1)*4) + 5) + 1));0;108;;;;;
 ((((v0*8) + 75)/67) != 0);0;434;;;;;
 (((v0 + 15)/8) != 0);0;361;;;;;
 (((v0/251) + 1) == ((v0/251) + 1));1;18;;;;;
 ((((((v0 + v1) + 39)/32)*8) - ((((v1 + -8)/32)*8) + v2)) == (((((v0 + v1) + 39)/32)*8) - ((((v1 + -8)/32)*8) + v2)));1;66;;;;;
 (((((((v0 + v1) + 15)/8) - (v1/8)) + 5)/4) == ((((((v0 + v1) + 15)/8) - (v1/8)) + 5)/4));1;69;;;;;
 ((min(v0, 9) + -14) == (((min(v0, 9) + -14) + (15 - min(v0, 9))) - 1));0;79;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*32)) == (max(min(v0/2, 1006), 7) + (v1*32)));1;1553;;;;;
 (max((v0 + v1)*32, ((min((v0 + v1)*4, (v2*4) + 105)*8) + v3) + 26) == max((v0 + v1)*32, ((min((v0 + v1)*4, (v2*4) + 105)*8) + v3) + 26));1;92;;;;;
 ((v0 - (((v1*63) + ((v2*16) + ((v3*3) + v4)))*4)) == (v0 - (((v1*63) + ((v2*16) + ((v3*3) + v4)))*4)));1;75;;;;;
 (((((v0 % (((v1*8) + 54)/36))*36)/4)*4) == ((v0 % (((v1*8) + 54)/36))*36));1;78;;;;;
 (min((((v0 - v1)*8) + 1249)/1236, max(min((((v0 - v1)*8) + 13)/1236, (((v0 - v1)*2) + 3)/309), (((v0 - v1)*8) + 26)/1236) + 1) == min((((v0 - v1)*8) + 1249)/1236, max(min((((v0 - v1)*8) + 13)/1236, (((v0 - v1)*2) + 3)/309), (((v0 - v1)*8) + 26)/1236) + 1));1;147;;;;;
 ((((max(min(max(min((v2*70) + v3, min((v1 + 519)/8, 249)), 0)*8, (max(min((v2*70) + v3, min((v1 + 519)/8, 250)), 1)*8) + 7), 12)*-1)/4)*4) == (max(min(max(min((v2*70) + v3, min((v1 + 519)/8, 249)), 0)*8, (max(min((v2*70) + v3, min((v1 + 519)/8, 250)), 1)*8) + 7), 12)*-1));0;2237;;;;;
 (min((v0*4) + v1, (v2*2) + -676) == min((v0*4) + v1, (v2*2) + -676));1;60;;;;;
 (min((v0*4) + ((v1*16) + v2), v3 + 13) == min((v0*4) + ((v1*16) + v2), v3 + 13));1;55;;;;;
 (min(v0*2, ((v1*63) + (v2*2)) + 61) == min(v0*2, ((v1*63) + (v2*2)) + 61));1;55;;;;;
 (((v0 + v1) + -1) < (((v0 + 1) + v1) + -7));0;56;;;;;
 (((((max(min(((v0 + v1) + -1)/4, 499), 0) - max(min(v1/4, 499), 0))*4) + 133)/126) == ((((max(min(((v0 + v1) + -1)/4, 499), 0) - max(min(v1/4, 499), 0))*4) + 133)/126));1;269;;;;;
 ((v0 - (max(min(v1/2, 999), 0) + (v2*32))) == (v0 - (max(min(v1/2, 999), 0) + (v2*32))));1;58;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((-1*4) + v1) + 0) + 2) <= (v1 + -2))) && (((((((v2 - v1)/4)*4) + v1) + 3) + 2) >= (((((v2 - v1)/4)*4) + v1) + 5))) && (((v3*55) + v4) <= ((v3*55) + v4))) && (((v3*55) + v4) >= ((v3*55) + v4)));1;184;;;;;
 ((1 - v0) > (250 - v0));0;58;;;;;
 ((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - ((v2*4) + v3)) == (max(min((((v0 + v1) + -1)/63)*8, 244), -5) - ((v2*4) + v3)));1;71;;;;;
 (((((((uint1)1 && ((((((v0/65)*2) + v1)*4) + 0) <= (((((v0/65)*2) + v1)*4) + 0))) && ((((((v0/65)*2) + v1)*4) + 3) >= (((((v0/65)*2) + v1)*4) + ((4 + 0) - 1)))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (((302 + 0) - 1) >= ((302 + 0) - 1)));1;157;;;;;
 (((v0*16) + (max(min((v1/32)*4, 281), 32) + v2)) == ((v0*16) + (max(min((v1/32)*4, 281), 32) + v2)));1;54;;;;;
 (((v0 + v1) + -116) >= ((((v0 + v1) + -116) + 123) - 1));0;61;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8))/32) + 1) == ((((((v0 + v1) + -1)/8) - (v1/8))/32) + 1));1;71;;;;;
 ((max(min(v0/63, 31), 0) + (v1*20)) == (max(min(v0/63, 31), 0) + (v1*20)));1;124;;;;;
 (min(((v0 + v1) + 63)/8, ((v1/8) + (((v2 + 5)/4)*4)) + -2) == min(((v0 + v1) + 63)/8, ((v1/8) + (((v2 + 5)/4)*4)) + -2));1;96;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -1) <= ((((0*4) + 0) + v0) + -1))) && (((((8*4) + v0) + 3) + -1) >= ((((8*4) + ((4 + 0) - 1)) + v0) + -1))) && (((v1 + v2) + -1) <= ((v1 + v2) + -1))) && (((v1 + v2) + -1) >= ((v1 + v2) + -1))) && (0 <= 0)) && (((3 + 0) - 1) >= ((3 + 0) - 1)));1;182;;;;;
 ((v0 - max(v1*16, 45)) == (v0 - max(v1*16, 45)));1;35;;;;;
 (max(-594 - (v0*32), (v0*32) + 71) >= 0);0;504;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*33)) == (max(min(v0 + v1, 1999), 0) + (v2*33)));1;47;;;;;
 ((((max((v0*2) + v1, 3)*-32)/4)*4) == (max((v0*2) + v1, 3)*-32));1;97;;;;;
 ((((0 - (v0 % 2))/8) + (((v0 % 2) + 23)/8)) <= ((0 - (v0 % 2))/8));0;93;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2 + 126) == min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2 + 126));1;242;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((32 - 1) >= (32 - 1))) && ((((0*4) + ((v0/8) + (v1*4))) + 0) <= (0 + ((v0/8) + (v1*4))))) && ((((0*4) + ((v0/8) + (v1*4))) + 3) >= (((4 + 0) - 1) + ((v0/8) + (v1*4))))) && (v2 <= v2)) && (v2 >= v2));1;153;;;;;
 (((((v0 + v1) + 5)/2) - ((((v2*3) + v3)*2) + v4)) == ((((v0 + v1) + 5)/2) - ((((v2*3) + v3)*2) + v4)));1;75;;;;;
 (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*4) + 10) == ((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*4) + 10));1;85;;;;;
 (((((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8)*-2) + ((v3*3) + v4)) == ((((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8)*-2) + ((v3*3) + v4)));1;82;;;;;
 (((((((uint1)1 && (((((((((v0*2) + v1)*4) + v2)*2) + 0)*4) + 0) <= (((((v0*2) + v1)*4) + v2)*8))) && ((((((((((v0*2) + v1)*4) + v2)*2) + 7) + 0)*4) + 3) >= ((((((v0*2) + v1)*4) + v2)*8) + 31))) && (v3 <= v3)) && (v3 >= v3)) && (0 <= 0)) && (((302 + 0) - 1) >= ((302 + 0) - 1)));1;225;;;;;
 (((min(v0 + 3, v1)*-2) + ((v0*2) + v2)) == ((min(v0 + 3, v1)*-2) + ((v0*2) + v2)));1;63;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*32) + 85)/38) == (((((((v0 + v1) + 249)/250) - (v1/250))*32) + 85)/38));1;83;;;;;
 (min(((v0*32) + v1) + 20, v2) == min(((v0*32) + v1) + 20, v2));1;59;;;;;
 (max(min(max(v0, 1), (min(v1, 1) + v0) + 1), min(min(v1, 1) + v0, 30) + 1) == max(min(max(v0, 1), (min(v1, 1) + v0) + 1), min(min(v1, 1) + v0, 30) + 1));1;87;;;;;
 (max(min(min(((min(v1 + v2, max(min(v3, 1874), -125) + 126) - max(min(v3, 2000), 1)) + -15)/16, (min(v1 + v2, max(min(v3, 1874), -125) + 111) - max(min(v3, 2000), 1))/16), (0 + ((v4 + 142)/16)) - 1) + 1, min(max(max(((max(v2, 0) - max(min(v3, 2000), 1))/16) + 1, (1 - max(min(v3, 2000), 1))/16), 0), ((v4 + 142)/16) + 0)) <= min(max(max(((max(v2, 0) - max(min(v3, 2000), 1))/16) + 1, (1 - max(min(v3, 2000), 1))/16), 0), ((v4 + 142)/16) + 0));0;3034;;;;;
 ((min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + ((v2*42) + (min(v3*125, v4 + -125) + v5))) == (min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + ((v2*42) + (min(v3*125, v4 + -125) + v5))));1;91;;;;;
 (min(25 - (max(v0 - v1, -139)*2), (min(v1 - v0, 139)*2) + 26) == min(25 - (max(v0 - v1, -139)*2), (min(v1 - v0, 139)*2) + 26));1;87;;;;;
 ((max(min(min(((v0 + v1) + 3)/4, ((v1/4) + (v2*24)) + 23), 499), 0) - max(min((v1/4) + (v2*24), 499), 0)) == (max(min(min(((v0 + v1) + 3)/4, ((v1/4) + (v2*24)) + 23), 499), 0) - max(min((v1/4) + (v2*24), 499), 0)));1;300;;;;;
 (min((((v0 + v1) + 64)/65)*8, v2 + 3) == min((((v0 + v1) + 64)/65)*8, v2 + 3));1;47;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 257)/250) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 257)/250));1;124;;;;;
 (((min(v0, 0)*2) + v1) == ((min(v0, 0)*2) + v1));1;55;;;;;
 (min((v0*12) + (((v1/32) + (v2*3))*32), (min((((v3 + v1) + 447)/32)*4, (((v1/32) + (v2*3))*4) + -65)*8) + 604) == min((v0*12) + (((v1/32) + (v2*3))*32), (min((((v3 + v1) + 447)/32)*4, (((v1/32) + (v2*3))*4) + -65)*8) + 604));1;115;;;;;
 ((((max(min((v4*144) + (((v3/8)*8) + 37), min((((v2 + v3) + 47)/8)*8, 2102)), 103) + (max(min((v4*144) + (((v3/8)*8) + 37), min((((v2 + v3) + 47)/8)*8, 2030)), 31)*-1))/4)*4) == (max(min((v4*144) + (((v3/8)*8) + 37), min((((v2 + v3) + 47)/8)*8, 2102)), 103) + (max(min((v4*144) + (((v3/8)*8) + 37), min((((v2 + v3) + 47)/8)*8, 2030)), 31)*-1)));0;2608;;;;;
 ((((21 - v0)/4) + ((((v1 + v2) + 124)/125)*4)) == (((21 - v0)/4) + ((((v1 + v2) + 124)/125)*4)));1;66;;;;;
 (min(53 - (v0*4), ((v1*8) - ((v0*4) + v2)) + 107) == min(53 - (v0*4), ((v1*8) - ((v0*4) + v2)) + 107));1;69;;;;;
 ((((min((v0*128) + v1, (v2 + v1) + -128)*8)/8)*8) == (min((v0*128) + v1, (v2 + v1) + -128)*8));1;121;;;;;
 (((((max(min(((v0 + v1) + 71)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 556)/502) == ((((max(min(((v0 + v1) + 71)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 556)/502));1;285;;;;;
 (((((v0 - v1)*16) + 1602)/1005) == ((((v0 - v1)*16) + 1602)/1005));1;966;;;;;
 ((((v0 - v1) + 85)/36) == (((v0 - v1) + 85)/36));1;63;;;;;
 (min(v0 + 25, v1 + v2) == min(v0 + 25, v1 + v2));1;33;;;;;
 ((((v0*-24)/3)*3) == (v0*-24));1;35;;;;;
 (((v0*12) + v1) == ((v0*12) + v1));1;36;;;;;
 ((max(max(min(v0/2, 1003)*2, 7) - max(min((((v1 + v0) + 5)/2)*2, 1995), -4), (max(min((((v1 + v0) + 5)/2)*2, 1995), -4) - max(min(v0/2, 1003)*2, 7)) + 709) + -690) >= 0);0;2135;;;;;
 (v0 <= (v0 - 1));0;31;;;;;
 (min((v0 + 127)/128, 0 - min(v1/128, 0)) == min((v0 + 127)/128, 0 - min(v1/128, 0)));1;93;;;;;
 ((((v0 + v1) + v2) + v3) <= ((((((v0 - 1) + v1) + v2) + v3) + -6) - 1));0;86;;;;;
 (min((max(min(v0/8, 249), 0)*8) + (v1*12), min(max(min(((v2 + v0) + 7)/8, 249), 0)*8, (max(min(v0/8, 249), 0)*8) + 989) + 9) == min((max(min(v0/8, 249), 0)*8) + (v1*12), min(max(min(((v2 + v0) + 7)/8, 249), 0)*8, (max(min(v0/8, 249), 0)*8) + 989) + 9));1;148;;;;;
 (((v0*8) + ((v1*16) + v2)) == ((v0*8) + ((v1*16) + v2)));1;21;;;;;
 (((min(max(min((v3*64) + ((v2/8) + 63), min(((v1 + v2) + 7)/8, 249)), 0) - max(min((v3*64) + (v2/8), 249), 0), 30)/3)*3) == min(max(min((v3*64) + ((v2/8) + 63), min(((v1 + v2) + 7)/8, 249)), 0) - max(min((v3*64) + (v2/8), 249), 0), 30));0;2336;;;;;
 (max(min((((v0 + v1) + 79)/8) - (v1/8), v2 + 2) + 1, v3) == max(min((((v0 + v1) + 79)/8) - (v1/8), v2 + 2) + 1, v3));1;64;;;;;
 ((((v0*-1028)/4)*4) == (v0*-1028));1;21;;;;;
 (min((v0*4) + v1, v2 + 145) == min((v0*4) + v1, v2 + 145));1;47;;;;;
 (min(((((v0*3) + ((v1*76) + v2))*2) + v3)*4, (min((v0*3) + ((v1*76) + v2), v4 + 10)*8) + 24) == min(((((v0*3) + ((v1*76) + v2))*2) + v3)*4, (min((v0*3) + ((v1*76) + v2), v4 + 10)*8) + 24));1;83;;;;;
 (min(max((v0 - v1)/4, -1), (min(((v2*8) - (v3*252)) - (v4*8), 236)/4) + 4) == min(max((v0 - v1)/4, -1), (min(((v2*8) - (v3*252)) - (v4*8), 236)/4) + 4));1;61;;;;;
 (min(v0*8, v1 + 106) == min(v0*8, v1 + 106));1;43;;;;;
 ((((v0*1024)/32)*32) == (v0*1024));1;35;;;;;
 (((v0 + v1) + -1) == ((((v0 + v1) + -1) + 130) - 1));0;37;;;;;
 ((((v0*512) + 1485)/756) != 0);0;433;;;;;
 ((v0 + -37) >= (((v0 + -37) + (min((v1*8) + (v2 - (v3*8)), -21) + 22)) - 1));1;103;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 7) == min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 7));1;80;;;;;
 ((max(min((v0*4) + v1, 314), 65) + (v2*4)) == (max(min((v0*4) + v1, 314), 65) + (v2*4)));1;56;;;;;
 (min(((v0 + v1) + 63)/32, v2 + -2) == min(((v0 + v1) + 63)/32, v2 + -2));1;39;;;;;
 (((v0*3) + ((v1/1000)*256)) == ((v0*3) + ((v1/1000)*256)));1;44;;;;;
 ((((v0*2) + v1) - ((((v2 + v3) + 64)/65)*2)) == (((v0*2) + v1) - ((((v2 + v3) + 64)/65)*2)));1;62;;;;;
 ((((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 51)/40) == (((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 51)/40));1;301;;;;;
 (0 == ((0 + ((min((max(min(min((v0/500) + v1, 3)*8, 22), -7) - (v2*8)) - max(min((v0/500)*8, 36), 5), -20)*2) + 56)) - 1));0;231;;;;;
 (max(v0*32, ((v0 + v1)*32) + 3) == max(v0*32, ((v0 + v1)*32) + 3));1;52;;;;;
 (((((v0 + v1) + 251)/63) - (v2*4)) == ((((v0 + v1) + 251)/63) - (v2*4)));1;84;;;;;
 (((((v0*2) + v1) + v2) + -7) < ((((v0*2) + v1) + (v2 + 1)) + -7));1;79;;;;;
 (min(max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2), v2) == min(max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2), v2));1;148;;;;;
 (max(min((min((v0 + v1) + 1, v2)/4) - ((v3/8)*2), v4 + 1), min(max((v1/4) - ((v3/8)*2), -2), v4) + 1) == max(min((min((v0 + v1) + 1, v2)/4) - ((v3/8)*2), v4 + 1), min(max((v1/4) - ((v3/8)*2), -2), v4) + 1));1;1611;;;;;
 (((((v0/16) + (v1*4)) + v2) - min((((v3 + v0) + -1)/16) - (v4*16), (v0/16) + 15)) == ((((v0/16) + (v1*4)) + v2) - min((((v3 + v0) + -1)/16) - (v4*16), (v0/16) + 15)));1;91;;;;;
 (((min((((v0/2000)*8) + v1)*32, ((((v2 + v0) + 1999)/2000)*256) + 500) - (v1*32)) - ((v0/2000)*256)) == ((min((((v0/2000)*8) + v1)*32, ((((v2 + v0) + 1999)/2000)*256) + 500) - (v1*32)) - ((v0/2000)*256)));1;104;;;;;
 ((((v0*8) + 28)/17) != 0);0;442;;;;;
 (((v0/2) + (v1*63)) == ((v0/2) + (v1*63)));1;48;;;;;
 ((((v0 - v1) + 62)/63) != 0);0;460;;;;;
 ((((v0 + 23)/4) - ((v1/65)*2)) == (((v0 + 23)/4) - ((v1/65)*2)));1;57;;;;;
 ((((-128 - ((min(v0*128, v1 + -128) + v2) % 2))/2) + (((v3*2) + v4)*4)) == (((-128 - ((min(v0*128, v1 + -128) + v2) % 2))/2) + (((v3*2) + v4)*4)));1;91;;;;;
 ((((v0*8) + 30)/17) != 0);0;436;;;;;
 (0 == ((0 + ((((v0 + v1) % 8) + 156)/32)) - 1));0;1424;;;;;
 (((((((uint1)1 && ((max(((v0*8) + v1)*8, ((((v0*8) + v1) + v2)*8) + 3) + -13) <= ((((((v0*8) + v1) + v2)*8) + -5) + -8))) && ((((((v0*8) + v1) + v2)*8) + -3) >= ((((((v0*8) + v1) + v2)*8) + ((11 + -5) - 1)) + -8))) && (((v3*8) + v4) <= ((v3*8) + v4))) && (((v3*8) + v4) >= ((v3*8) + v4))) && (((0*4) + 0) <= ((0*4) + 0))) && (((3*4) + 3) >= ((3*4) + ((4 + 0) - 1))));0;312;;;;;
 (((v0*63) + ((v1*125) + ((v2*2) + v3))) == ((v0*63) + ((v1*125) + ((v2*2) + v3))));1;66;;;;;
 (min(max(min(v0, 999), 0), max(min(v0, 996), -3) + 6) == min(max(min(v0, 999), 0), max(min(v0, 996), -3) + 6));1;64;;;;;
 (((max(min(((v0 + v1) + 255)/32, 62), 0)*32) - ((v2*4) + v3)) == ((max(min(((v0 + v1) + 255)/32, 62), 0)*32) - ((v2*4) + v3)));1;80;;;;;
 (min(87 - (v0*30), (((((v1 + v2) + 64)/65)*8) - ((v0*30) + (v3*8))) + 13) == min(87 - (v0*30), (((((v1 + v2) + 64)/65)*8) - ((v0*30) + (v3*8))) + 13));1;92;;;;;
 (((v0*16) + (max(min(v1/8, 256), 7) + (v2*16))) == ((v0*16) + (max(min(v1/8, 256), 7) + (v2*16))));1;93;;;;;
 (min(max(min(v0, 1999), 0), max(min(v0, 1984), -15) + 15) == min(max(min(v0, 1999), 0), max(min(v0, 1984), -15) + 15));1;68;;;;;
 ((((v0*8) + (v1 + v2)) + -4) >= (((((v0*8) + (v1 + v2)) + -4) + 14) - 1));0;50;;;;;
 (((v0*32) + ((v1/16) + (v2*64))) == ((v0*32) + ((v1/16) + (v2*64))));1;51;;;;;
 (((v0*508) + (v1 + v2)) == ((v0*508) + (v1 + v2)));1;17;;;;;
 (min(251 - (((v0*32) + v1)*4), (((((v2 + v3) + 3)/4) - (((v0*32) + v1) + v4))*4) + 5) == min(251 - (((v0*32) + v1)*4), (((((v2 + v3) + 3)/4) - (((v0*32) + v1) + v4))*4) + 5));1;95;;;;;
 ((((v0*4) + 10)/3) != 0);0;442;;;;;
 (min(v0 + 1006, v1) == min(v0 + 1006, v1));1;30;;;;;
 ((((max(min((max((v1*4) + (v2 - v3), 9) + min((v1*-4) + (v3 - v2), -9))*8, 6), -2)*-1)/4)*4) == (max(min((max((v1*4) + (v2 - v3), 9) + min((v1*-4) + (v3 - v2), -9))*8, 6), -2)*-1));0;1686;;;;;
 (max(min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), (min(v4, 250) - v0) + -8)/8) + 1) == max(min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), (min(v4, 250) - v0) + -8)/8) + 1));1;1371;;;;;
 ((0 - (v0*116)) > (345 - (v0*116)));0;32;;;;;
 ((min(v0*32, 31) + (min(v1*125, v2 + -125) + v3)) == (min(v0*32, 31) + (min(v1*125, v2 + -125) + v3)));1;50;;;;;
 (((v0*2) + 1) == ((((v0*2) + 1) + 2) - 1));0;16;;;;;
 (((v0*2) + ((v1*251) + ((v2*2) + v3))) == ((v0*2) + ((v1*251) + ((v2*2) + v3))));1;52;;;;;
 (((v0 + 77)/64) != 0);0;340;;;;;
 (min((v0*4) + v1, v2 + 7) == min((v0*4) + v1, v2 + 7));1;42;;;;;
 (min((((v0 + v1) + -1)/8)*8, (((v1/8) + v2)*8) + 1) == min((((v0 + v1) + -1)/8)*8, (((v1/8) + v2)*8) + 1));1;68;;;;;
 (((v0*2) + ((v1*3) + v2)) == ((v0*2) + ((v1*3) + v2)));1;47;;;;;
 (((v0*2) + ((v1*32) + ((max(min(v2/8, 254), 5)*2) + v3))) == ((v0*2) + ((v1*32) + ((max(min(v2/8, 254), 5)*2) + v3))));1;75;;;;;
 ((((min((((v0 + v1) + -1)/4) - (v2*252), min((v3*68) + ((v1/4) + (v4*128)), (min(v4*128, 124) + (v1/4)) + 70) + 57) - (v3*68)) - (v4*128)) - (v1/4)) == (((min((((v0 + v1) + -1)/4) - (v2*252), min((v3*68) + ((v1/4) + (v4*128)), (min(v4*128, 124) + (v1/4)) + 70) + 57) - (v3*68)) - (v4*128)) - (v1/4)));1;148;;;;;
 ((((((v0 + v1) + 31)/8) - v2) + -3) == (((((v0 + v1) + 31)/8) - v2) + -3));1;73;;;;;
 (((((((v0 + v1) + -1)/16) - (v2*8)) - (v3*4)) - (v1/16)) == ((((((v0 + v1) + -1)/16) - (v2*8)) - (v3*4)) - (v1/16)));1;73;;;;;
 ((((v0*8) + 28)/17) != 0);0;434;;;;;
 (max(min(max(((v0 - ((v1/8)*8)) + 292)/236, 0), ((v2*8) + 291)/236), (min(min(((((v3 + v1) + 63)/8) - (v1/8))*8, (min((((v3 + v1) + 63)/8)*8, (v4 + v0) + -1) - ((v1/8)*8)) + 237), (v2*8) + 235) + 56)/236) == max(min(max(((v0 - ((v1/8)*8)) + 292)/236, 0), ((v2*8) + 291)/236), (min(min(((((v3 + v1) + 63)/8) - (v1/8))*8, (min((((v3 + v1) + 63)/8)*8, (v4 + v0) + -1) - ((v1/8)*8)) + 237), (v2*8) + 235) + 56)/236));1;224;;;;;
 ((((v0*9) + v1) + -1) < (((v0*9) + (v1 + 1)) + -9));0;64;;;;;
 (((v0*508) + ((v1*1004) + ((v2*4) + v3))) == ((v0*508) + ((v1*1004) + ((v2*4) + v3))));1;45;;;;;
 (((min(v0*128, 880)/4)*4) == min(v0*128, 880));1;90;;;;;
 ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36)) + 45)/4) == (((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36)) + 45)/4));1;254;;;;;
 ((((v0*8) + 1016)/1004) != 0);0;431;;;;;
 (max(min((v1 + v2) + -1, (((v3*63) + v4) + (127 - max(v3*63, 62))) - 1) + 1, min(max(v2, (v3*63) + v4), (127 - max(v3*63, 62)) + ((v3*63) + v4))) <= min(max(v2, (v3*63) + v4), (127 - max(v3*63, 62)) + ((v3*63) + v4)));0;1946;;;;;
 (max((((v0 + v1)/4) + v2)*4, (((((v0 + v1)/4) + v2)/2)*8) + 13) == max((((v0 + v1)/4) + v2)*4, (((((v0 + v1)/4) + v2)/2)*8) + 13));1;76;;;;;
 ((((max(min(v0 + v1, 1991), -8) - max(min(v1, 2005), 6)) + 273)/251) == (((max(min(v0 + v1, 1991), -8) - max(min(v1, 2005), 6)) + 273)/251));1;116;;;;;
 ((((((v0 + v1)/2) + (v2*8))*2) + 53) == (((((((v0 + v1)/2) + (v2*8))*2) + 53) + ((max(v2*8, 30)*-2) + 88)) - 1));0;147;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 38) == min(((v0 + v1) + -1)/8, v2 + 38));1;138;;;;;
 (((v0 + 66)/63) != 0);0;339;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*16) + v3)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2*16) + v3)));1;68;;;;;
 (min(((v0 + v1) + 13)/2, ((v2*64) + ((v1/2) + (v3*6))) + -11) == min(((v0 + v1) + 13)/2, ((v2*64) + ((v1/2) + (v3*6))) + -11));1;65;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*16) + 56)/35) == (((((((v0 + v1) + 124)/125) - (v1/125))*16) + 56)/35));1;63;;;;;
 (((min(v0 - (v1*4), (v2/8) + -3)*-2) + (((v2/8)*2) + v3)) == ((min(v0 - (v1*4), (v2/8) + -3)*-2) + (((v2/8)*2) + v3)));1;69;;;;;
 (((v0*12) + ((((v1 + v2)/8)*8) - max((((v1 + v2) + 124)/8)*8, (v1 + v2) + 119))) == ((v0*12) + ((((v1 + v2)/8)*8) - max((((v1 + v2) + 124)/8)*8, (v1 + v2) + 119))));1;102;;;;;
 (max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((v4 + -10) + (min(v3, 116) + 18)) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), v4 + -10), (min(v3, 116) + 18) + (v4 + -10))) <= min(max(max(max(0, 0), max(v2, 0)), v4 + -10), (min(v3, 116) + 18) + (v4 + -10)));0;1635;;;;;
 (((v0*3) + v1) >= ((((v0*3) + v1) + 3) - 1));0;55;;;;;
 (min(v0*8, (min(min((v1*-20) + v2, 17)*8, -22) + (((v3/63) - (max(min((v1*-20) + v2, 17)*-1, (v1*20) + ((v3/63) - (((v4 + v3) + 251)/63))) + (v1*-20)))*8)) + 24) == min(v0*8, (min(min((v1*-20) + v2, 17)*8, -22) + (((v3/63) - (max(min((v1*-20) + v2, 17)*-1, (v1*20) + ((v3/63) - (((v4 + v3) + 251)/63))) + (v1*-20)))*8)) + 24));1;213;;;;;
 (((((v0*8) + v1)*8) + (v2 - v3)) == ((((v0*8) + v1)*8) + (v2 - v3)));1;47;;;;;
 (((v0*-7) + (max(min((((v1 + v2) + 124)/125)*8, 113), -11) - max(min(((v1 + v2)/125)*8, 125), 1))) == ((v0*-7) + (max(min((((v1 + v2) + 124)/125)*8, 113), -11) - max(min(((v1 + v2)/125)*8, 125), 1))));1;259;;;;;
 ((min(v0*4, 165) + (v1*64)) == (min(v0*4, 165) + (v1*64)));1;46;;;;;
 (((((((min((v0*125) + v1, (v2 + v1) + -125) % 8) + 124)/8)*8)/65)*65) == ((((min((v0*125) + v1, (v2 + v1) + -125) % 8) + 124)/8)*8));0;105;;;;;
 (((v0*252) + (v1 + v2)) == ((v0*252) + (v1 + v2)));1;51;;;;;
 ((((v0*2) + ((v1*65) + v2)) - min((v3 - (v4*4)) + 8, (v1*65) + v2)) == (((v0*2) + ((v1*65) + v2)) - min((v3 - (v4*4)) + 8, (v1*65) + v2)));1;97;;;;;
 (max(min(((v1*-32) - (v2/4)) + 499, (0 + 32) - 1) + 1, min(max((((2 - v2)/4) + (v1*-32)) + 1, 0), 32 + 0)) <= min(max((((2 - v2)/4) + (v1*-32)) + 1, 0), 32 + 0));0;1489;;;;;
 (((v0 + 133)/129) != 0);0;364;;;;;
 (max(min((57 - v0)/20, 2), 13 - max(v0/20, 12)) == max(min((57 - v0)/20, 2), 13 - max(v0/20, 12)));1;106;;;;;
 (((((v0 % ((v1 + 18)/17))*-136)/68)*68) == ((v0 % ((v1 + 18)/17))*-136));1;51;;;;;
 (max((v0 + 23)/516, 0) >= ((max((v0 + 23)/516, 0) + max(((v0 + 538)/516) - max((v0 + 23)/516, 0), 0)) - 1));0;2318;;;;;
 ((min((((v0 + v1) + -1)/16) - (v2*8), (v1/16) + 7) - ((v1/16) + (v3*4))) == (min((((v0 + v1) + -1)/16) - (v2*8), (v1/16) + 7) - ((v1/16) + (v3*4))));1;80;;;;;
 (min(((v0 + v1) + -1)/8, ((v1/8) + ((v2/4)*4)) + 3) == min(((v0 + v1) + -1)/8, ((v1/8) + ((v2/4)*4)) + 3));1;926;;;;;
 ((v0 + -305) == (((v0 + -305) + (730 - max(v1*242, 483))) - 1));0;94;;;;;
 (min((v0/8) + (min((v1*-16) + v2, -15) + (((min((v1*16) + 15, v2) + 18)/4)*4)), v3) == min((v0/8) + (min((v1*-16) + v2, -15) + (((min((v1*16) + 15, v2) + 18)/4)*4)), v3));1;87;;;;;
 (((((((v0 + v1) + 3)/4) - (v1/4)) + 33)/32) == ((((((v0 + v1) + 3)/4) - (v1/4)) + 33)/32));1;74;;;;;
 ((((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 354)/334) == (((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 354)/334));1;157;;;;;
 (((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/12)*12) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -25)*4))) + 100) == ((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/12)*12) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -25)*4))) + 100));1;168;;;;;
 (max((min((((v0 + v1) + 249)/125) - (v1/125), v2 + 1) + 2)/3, max(v3/3, -1) + 1) == max((min((((v0 + v1) + 249)/125) - (v1/125), v2 + 1) + 2)/3, max(v3/3, -1) + 1));1;85;;;;;
 ((((((v0 + v1) + 314)/63)*32) - ((v2*4) + v3)) == (((((v0 + v1) + 314)/63)*32) - ((v2*4) + v3)));1;70;;;;;
 (min(((v0 + v1) + 132)/133, ((v1/133) + ((v2/4)*4)) + 3) == min(((v0 + v1) + 132)/133, ((v1/133) + ((v2/4)*4)) + 3));1;71;;;;;
 (max(((92 - v0)/4) + ((((v1 + v2) + -1)/63)*16), (((((v1 + v2) + -1)/63)*16) - (v0/4)) + 23) == max(((92 - v0)/4) + ((((v1 + v2) + -1)/63)*16), (((((v1 + v2) + -1)/63)*16) - (v0/4)) + 23));1;121;;;;;
 (min(max(min(v0, 126), 2) + (((v1 + 9)/4)*4), max(min(v2, 121), -3) + 6) == min(max(min(v0, 126), 2) + (((v1 + 9)/4)*4), max(min(v2, 121), -3) + 6));1;123;;;;;
 (((v0 - (v1*15)) - ((v2 + v3)/8)) == ((v0 - (v1*15)) - ((v2 + v3)/8)));1;61;;;;;
 (((((v0*34) + v1)*2) + -17) == ((((((v0*34) + v1)*2) + -17) + ((v2*2) + 30)) - 1));0;109;;;;;
 ((((max((((v0 + v1) + 7)/8)*8, 1994) - v2) + 275)/252) == (((max((((v0 + v1) + 7)/8)*8, 1994) - v2) + 275)/252));1;126;;;;;
 ((((v0 + -2)/16) + ((v1/16)*8)) == (((v0 + -2)/16) + ((v1/16)*8)));1;34;;;;;
 (((((((v0 + v1) + -1)/136) - (v1/136))/4) + 1) == ((((((v0 + v1) + -1)/136) - (v1/136))/4) + 1));1;77;;;;;
 ((((((((v0 + v1) + 63)/32) - (v1/32))*4) + 95)/71) == (((((((v0 + v1) + 63)/32) - (v1/32))*4) + 95)/71));1;72;;;;;
 (min(35 - (((v0*5) + v1)*4), ((max(v2, 249)*8) - ((((v0*5) + v1)*4) + v3)) + 95) == min(35 - (((v0*5) + v1)*4), ((max(v2, 249)*8) - ((((v0*5) + v1)*4) + v3)) + 95));1;107;;;;;
 ((((v0 + v1)/2) + (v2*10)) == (((v0 + v1)/2) + (v2*10)));1;45;;;;;
 ((((v0 % 3)*148) + ((v1*4) + v2)) == (((v0 % 3)*148) + ((v1*4) + v2)));1;45;;;;;
 (min(v0*8, v1 + 36) == min(v0*8, v1 + 36));1;50;;;;;
 (((((v0 - v1)/4) + (v2*-16)) + 3) == ((((v0 - v1)/4) + (v2*-16)) + 3));1;52;;;;;
 (min((v0*3) + v1, (((v2*2) + v3)*8) + 6) == min((v0*3) + v1, (((v2*2) + v3)*8) + 6));1;48;;;;;
 (min((v0*96) + (max(v1*264, -14) + v2), ((v1*264) + v2) + 168) == min((v0*96) + (max(v1*264, -14) + v2), ((v1*264) + v2) + 168));1;77;;;;;
 (max(v0*8, (min(((v1/63) + ((min((v2*4) + 3, v3)/4)*4)) + 3, v4)*8) + 7) == max(v0*8, (min(((v1/63) + ((min((v2*4) + 3, v3)/4)*4)) + 3, v4)*8) + 7));1;96;;;;;
 (((((v0 + v1) + -1)/8) - ((((v2*4) + v3)*4) + v4)) == ((((v0 + v1) + -1)/8) - ((((v2*4) + v3)*4) + v4)));1;82;;;;;
 ((max(min(v0/2, 999), 0) + (v1*2)) == (max(min(v0/2, 999), 0) + (v1*2)));1;46;;;;;
 (min(min((v0*6) + (max(min(v1/2, 999), 0) + (v2*32)), v3 + 26) + 5, v4) == min(min((v0*6) + (max(min(v1/2, 999), 0) + (v2*32)), v3 + 26) + 5, v4));1;80;;;;;
 ((max(min(v0 - v1, 62)*8, 369) + -497) >= (((max(min(v0 - v1, 62)*8, 369) + -497) + (499 - max(min(v0 - v1, 62)*8, 369))) - 1));0;109;;;;;
 (min(max(min(((v0 + v1) + 501)/2, 999), 0) - max(min((v0 + v1)/2, 875), -124), (v2*2) + 125) == min(max(min(((v0 + v1) + 501)/2, 999), 0) - max(min((v0 + v1)/2, 875), -124), (v2*2) + 125));1;353;;;;;
 ((((v0 - v1) + 38)/6) != 0);0;452;;;;;
 (((((((v0 + v1) + 7)/8) - (v1/8)) + 136)/130) == ((((((v0 + v1) + 7)/8) - (v1/8)) + 136)/130));1;68;;;;;
 (((((((uint1)1 && ((((((v0*4) + v1) + -2) + 0) + -83) <= (((((v0*4) + v1) + 0) + -2) + -83))) && ((((((v0*4) + v1) + ((4 + -2) - 1)) + 3) + -83) >= (((((v0*4) + v1) + ((4 + 0) - 1)) + ((4 + -2) - 1)) + -83))) && (((v2 + v3) % 4) <= ((v2 + v3) % 4))) && (((v2 + v3) % 4) >= ((v2 + v3) % 4))) && (v4 <= v4)) && (v4 >= v4));1;219;;;;;
 ((((v0*8) + 512)/501) != 0);0;463;;;;;
 ((((v0 + v1)/65) + ((((v0 + v1) % 65) + 189)/65)) == (((v0 + v1)/65) + ((((v0 + v1) % 65) + 189)/65)));1;60;;;;;
 ((max(min(v0, 1999), 9) + (v1*125)) == (max(min(v0, 1999), 9) + (v1*125)));1;68;;;;;
 ((min(max(min(v0 + v1, 2000), 1) - (v2*128), max(min(v1, 1999), 0) + 128) - ((((v3*2) + v4)*4) + (max(min(v1, 1999), 0) + (v5*16)))) == (min(max(min(v0 + v1, 2000), 1) - (v2*128), max(min(v1, 1999), 0) + 128) - ((((v3*2) + v4)*4) + (max(min(v1, 1999), 0) + (v5*16)))));1;142;;;;;
 ((min((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 5, v2) + 251) == (min((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 5, v2) + 251));1;69;;;;;
 (((v0 + 679)/670) == ((v0 + 679)/670));1;21;;;;;
 (min(max(v0, 249), (min(v1, 0) + (v2*16)) + 15) == min(max(v0, 249), (min(v1, 0) + (v2*16)) + 15));1;56;;;;;
 (0 == ((0 + (4 - (max(v0, 1)*2))) - 1));0;77;;;;;
 (min(((max(min(v0, 36), 5)*2) + v1)*4, (max(min(v2, 22), -9)*8) + 116) == min(((max(min(v0, 36), 5)*2) + v1)*4, (max(min(v2, 22), -9)*8) + 116));1;74;;;;;
 (((((min(v0*32, 968) + v1) + v2)/2) + 1) < (((min(v0*32, 968) + (v1 + 1)) + v2)/2));0;120;;;;;
 (((v0*128) + (((v1/4) + v2) - (min((((v3 + v1) + -1)/4) - (v4*252), min((v5*68) + ((v1/4) + (v0*128)), (min(v0*128, 124) + (v1/4)) + 70) + 57) + (v5*-68)))) == ((v0*128) + (((v1/4) + v2) - (min((((v3 + v1) + -1)/4) - (v4*252), min((v5*68) + ((v1/4) + (v0*128)), (min(v0*128, 124) + (v1/4)) + 70) + 57) + (v5*-68)))));1;155;;;;;
 (((((((uint1)1 && ((v0 + -49) <= (-4 + (v0 + -45)))) && ((min(max(min(v1, 248), -1)*8, v0 + 943) + 13) >= (((6 + -4) - 1) + (min(max(min(v1, 248), -1)*8, v0 + 943) + 12)))) && ((max(max(min(v2, 254), 5)*8, v3 + 50) + -49) <= (-4 + v3))) && ((v3 + 1) >= (((6 + -4) - 1) + v3))) && (((0*4) + 0) <= 0)) && (((((5 + 0) - 1)*4) + 3) >= 17));0;273;;;;;
 (max((((((v0 + v1) + 15)/4) - ((((v2*3) + v3)*8) + v4)) + -3)/4, (v5/4) - (((v2*3) + v3)*2)) == max((((((v0 + v1) + 15)/4) - ((((v2*3) + v3)*8) + v4)) + -3)/4, (v5/4) - (((v2*3) + v3)*2)));1;128;;;;;
 (max(((v0 + -114)/4) + (v1*4), (v0/4) + -32) == max(((v0 + -114)/4) + (v1*4), (v0/4) + -32));1;117;;;;;
 (((v0 - (v1*16)) - ((v2*8) + v3)) == ((v0 - (v1*16)) - ((v2*8) + v3)));1;65;;;;;
 ((min(max(min((((v0 + v1) + 127)/32)*4, 246), -3) - v2, -32) + 36) == (min(max(min((((v0 + v1) + 127)/32)*4, 246), -3) - v2, -32) + 36));1;138;;;;;
 (min((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3), v4 + 4) == min((((min((v0*4) + -8, v1) + 15)/4)*4) + ((v2*16) + v3), v4 + 4));1;88;;;;;
 (((((v0 + v1) + 15)/16) - ((v2*8) + v3)) == ((((v0 + v1) + 15)/16) - ((v2*8) + v3)));1;56;;;;;
 (max(-690 - (v0*8), (v0*8) + 18) >= 0);0;522;;;;;
 ((min(((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) - (v3*8)) + 3, v4) - ((v5*2) + v4)) == (min(((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) - (v3*8)) + 3, v4) - ((v5*2) + v4)));1;110;;;;;
 (((((min(((v0*4) + v1)*64, (min(v0*32, 92)*8) + 193) + -875)/4) - (v1*16)) - (v0*64)) == ((((min(((v0*4) + v1)*64, (min(v0*32, 92)*8) + 193) + -875)/4) - (v1*16)) - (v0*64)));1;94;;;;;
 (((v0/8) + (v1*88)) == ((v0/8) + (v1*88)));1;29;;;;;
 ((max(min(min(v0*8, ((v1*292) + (v2*8)) + 292), 999)*2, -1) - max(min((v1*584) + (v2*16), 1997), -2)) == (max(min(min(v0*8, ((v1*292) + (v2*8)) + 292), 999)*2, -1) - max(min((v1*584) + (v2*16), 1997), -2)));1;216;;;;;
 (((max(min((v1*-252) + ((v2*-252) + v3), 252), 0)/4)*4) == max(min((v1*-252) + ((v2*-252) + v3), 252), 0));0;2978;;;;;
 (((((v0 + v1) + 3)/4) - ((((v2*2) + v3)*4) + v4)) == ((((v0 + v1) + 3)/4) - ((((v2*2) + v3)*4) + v4)));1;59;;;;;
 (min(v0 + 32, v1) == min(v0 + 32, v1));1;77;;;;;
 (max(min(286 - v0, (0 + 85) - 1) + 1, min(max(37 - v0, 0), 85 + 0)) <= min(max(37 - v0, 0), 85 + 0));0;759;;;;;
 (((v0/8) + (((v1 + 31)/32)*4)) == ((v0/8) + (((v1 + 31)/32)*4)));1;49;;;;;
 ((((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 78)/63) == (((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 78)/63));1;228;;;;;
 (max(((max(v0, 0) - v1) + 1)/32, 0) >= ((max(((max(v0, 0) - v1) + 1)/32, 0) + ((max((max(v0, 0) - v1)/32, -1) - max(((max(v0, 0) - v1) + 1)/32, 0)) + 1)) - 1));0;1160;;;;;
 (min((v0 + -1883)/2, v1) == min((v0 + -1883)/2, v1));1;40;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 45)/33) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 45)/33));1;76;;;;;
 ((((max(min(((v0 + v1) + 499)/500, 3)*8, -7) - max(min((v1/500)*8, 36), 5)) + 18)/4) == (((max(min(((v0 + v1) + 499)/500, 3)*8, -7) - max(min((v1/500)*8, 36), 5)) + 18)/4));1;190;;;;;
 (0 >= ((0 + ((max((v0 % 4)*63, 187)*-2) + 500)) - 1));0;173;;;;;
 ((min(v0 + 2, v1) - ((v2*4) + v0)) == (min(v0 + 2, v1) - ((v2*4) + v0)));1;48;;;;;
 (min((v0/8)*8, ((((v1 + v0) + -1)/8)*8) + 22) == min((v0/8)*8, ((((v1 + v0) + -1)/8)*8) + 22));1;91;;;;;
 ((((v0*16) + v1) + ((v2*8) + v3)) == (((v0*16) + v1) + ((v2*8) + v3)));1;36;;;;;
 ((((v0*3) + v1) + -264) == (((((v0*3) + v1) + -264) + (233 - max(v0*3, 230))) - 1));0;135;;;;;
 ((((min(v0/8, 4)*2) + v1)*4) == (((min(v0/8, 4)*2) + v1)*4));1;79;;;;;
 (min(max(min(v0, 968), -31) - max(min(v0, 999), 0), (v1*16) + -16) == min(max(min(v0, 968), -31) - max(min(v0, 999), 0), (v1*16) + -16));1;151;;;;;
 (min(max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3), v2) == min(max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3), v2));1;219;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*16) + 167)/85) == (((((((v0 + v1) + 124)/125) - (v1/125))*16) + 167)/85));1;65;;;;;
 (min((((((((v0/500)*16) + v1)*2) + v2)*4) + v3)*4, v4 + 17) == min((((((((v0/500)*16) + v1)*2) + v2)*4) + v3)*4, v4 + 17));1;2107;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 21)/20) == ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 21)/20));1;99;;;;;
 ((v0 + -14) >= (((v0 + -14) + (min(min(((v1*8) - (v2*71)) - (((v3 + v4)/8)*8), 65) + v5, -9) + 10)) - 1));1;201;;;;;
 (((min(v0 + 19, v1)*-8) + ((v0*8) + (v2*82))) == ((min(v0 + 19, v1)*-8) + ((v0*8) + (v2*82))));1;52;;;;;
 (max(-923 - ((v0 - v1)*8), ((v0 - v1)*8) + 109) >= 0);0;732;;;;;
 ((max(((v0/16) + v1)*8, 1003) - min((v0/16)*8, 4)) == (max(((v0/16) + v1)*8, 1003) - min((v0/16)*8, 4)));1;80;;;;;
 (((v0*8) + (((((max(min((v1*-4) + (max(v2, 0) - v0), 3)*-1, (v1*4) + (v0 - max(v2, 0)))*-8) + 11)/20)*20) + (v1*32))) == ((v0*8) + (((((max(min((v1*-4) + (max(v2, 0) - v0), 3)*-1, (v1*4) + (v0 - max(v2, 0)))*-8) + 11)/20)*20) + (v1*32))));1;179;;;;;
 ((((v0*8) + 516)/505) != 0);0;439;;;;;
 (((v0*137) + (((v1/125)*16) + v2)) == ((v0*137) + (((v1/125)*16) + v2)));1;95;;;;;
 (min(((v0 + v1) + 3)/4, ((v2*84) + v3) + 27) == min(((v0 + v1) + 3)/4, ((v2*84) + v3) + 27));1;60;;;;;
 ((((max(min((v2*1044) + ((v3*8) + 944), v1*8), (v2*1044) + ((v3*8) + 940))*-1)/4)*4) == (max(min((v2*1044) + ((v3*8) + 944), v1*8), (v2*1044) + ((v3*8) + 940))*-1));0;1645;;;;;
 (max(min(min(min((((v4 + v5)/4) - ((((v2/63)*2) + v3)*8)) + 9, ((min(v1*8, (v4 + v5) + 11)/4) - ((((v2/63)*2) + v3)*8)) + 7), ((v1 - ((((v2/63)*2) + v3)*4))*2) + 7), (0 + ((v6*2) + 8)) - 1) + 1, min(max((((v5 + 39)/4) - ((((v2/63)*2) + v3)*8)) + 1, 0), ((v6*2) + 8) + 0)) <= min(max((((v5 + 39)/4) - ((((v2/63)*2) + v3)*8)) + 1, 0), ((v6*2) + 8) + 0));0;3493;;;;;
 (min(max(v0, 1), (min(v1, 1) + v0) + 1) == min(max(v0, 1), (min(v1, 1) + v0) + 1));1;54;;;;;
 ((((max(((v0 + v1) + 7)/8, 249) - min(v1/8, 0))/64) + 1) >= 0);1;43;;;;;
 (((v0*8) + ((v1*4) + (v2 + v3))) == ((v0*8) + ((v1*4) + (v2 + v3))));1;51;;;;;
 (((((v0*16) + v1)*4) + -4) == ((((((v0*16) + v1)*4) + -4) + ((v2*4) + 16)) - 1));0;111;;;;;
 (min(max(v0, 1997), (min(v1, 0) + (v2*8)) + 5) == min(max(v0, 1997), (min(v1, 0) + (v2*8)) + 5));1;57;;;;;
 (((v0 + 126)/125) == ((v0 + 126)/125));1;33;;;;;
 (((((v0 + v1) + -1)/4) - ((v2*8) + v3)) == ((((v0 + v1) + -1)/4) - ((v2*8) + v3)));1;54;;;;;
 ((((((((v0 + v1) + -1)/250) - (v1/250))*8) + 33)/23) == (((((((v0 + v1) + -1)/250) - (v1/250))*8) + 33)/23));1;63;;;;;
 (max(min(max((((((v0 + v1) + -65)/32) - (v1/32)) + 14)/15, 0), (v2 + 23)/15), (min((((v0 + v1) + -65)/32) - (v1/32), v2 + 8)/15) + 1) == max(min(max((((((v0 + v1) + -65)/32) - (v1/32)) + 14)/15, 0), (v2 + 23)/15), (min((((v0 + v1) + -65)/32) - (v1/32), v2 + 8)/15) + 1));1;137;;;;;
 ((((v0 - v1) + 92)/87) != 0);0;445;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*32) + 131)/78) == (((((((v0 + v1) + 249)/250) - (v1/250))*32) + 131)/78));1;65;;;;;
 ((v0 - (((v1 + v2) + 9)/2)) == (v0 - (((v1 + v2) + 9)/2)));1;52;;;;;
 (((((v0*32) + v1)*8) + (v2*5)) == ((((v0*32) + v1)*8) + (v2*5)));1;49;;;;;
 ((v0 + v1) <= (((v0 + (v1 - 1)) + -7) - 1));0;50;;;;;
 (((v0/8) + (v1*9)) == ((v0/8) + (v1*9)));1;33;;;;;
 (min((v0*4) + v1, v2 + 139) == min((v0*4) + v1, v2 + 139));1;42;;;;;
 (((((v0 + v1) + 499)/2) + (v2*250)) == ((((v0 + v1) + 499)/2) + (v2*250)));1;59;;;;;
 (min((v0*156) + ((v1/250)*32), ((((v2 + v1) + 249)/250)*32) + 54) == min((v0*156) + ((v1/250)*32), ((((v2 + v1) + 249)/250)*32) + 54));1;88;;;;;
 ((v0 - (v1*114)) == (v0 - (v1*114)));1;30;;;;;
 (min(max(min(min((((v0 + v1) + 1)/4) - (max(min(v2/8, 249), 0)*2), ((v3 - max(min(v2/8, 249), 0))*2) + -1), ((min(v3*8, (v0 + v1) + 7) + -3)/4) - (max(min(v2/8, 249), 0)*2)), max((v1/4) - (max(min(v2/8, 249), 0)*2), -2) + 1), v4*2) == min(max(min(min((((v0 + v1) + 1)/4) - (max(min(v2/8, 249), 0)*2), ((v3 - max(min(v2/8, 249), 0))*2) + -1), ((min(v3*8, (v0 + v1) + 7) + -3)/4) - (max(min(v2/8, 249), 0)*2)), max((v1/4) - (max(min(v2/8, 249), 0)*2), -2) + 1), v4*2));1;258;;;;;
 (min(min(7 - (max(((min((v0/65)*64, 4) + -6)/32) + (v1 - ((max((((v2 + v0) + 64)/65)*64, 1975) + 40)/32)), 0)*8), (((v3 + v4)/4) - ((((min((v0/65)*64, 4) + -6)/32) + v1)*8)) + -1), (min(v5, 0)*8) + 7) == min(min(7 - (max(((min((v0/65)*64, 4) + -6)/32) + (v1 - ((max((((v2 + v0) + 64)/65)*64, 1975) + 40)/32)), 0)*8), (((v3 + v4)/4) - ((((min((v0/65)*64, 4) + -6)/32) + v1)*8)) + -1), (min(v5, 0)*8) + 7));1;213;;;;;
 (min(((v0*12) + ((v1*252) + v2)) + 10, v2 + v3) == min(((v0*12) + ((v1*252) + v2)) + 10, v2 + v3));1;71;;;;;
 (min((((v0 + v1) + 3)/4)*4, v2 + 120) == min((((v0 + v1) + 3)/4)*4, v2 + 120));1;76;;;;;
 (((((v0/(((v1*8) + 48)/9))*144)/12)*12) == ((v0/(((v1*8) + 48)/9))*144));1;57;;;;;
 (((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && (((((v0*2) + v1)*4) + 0) <= (((v0*2) + v1)*4))) && (((((v0*2) + v1)*4) + 3) >= ((((v0*2) + v1)*4) + 3))) && (((v2*16) + 0) <= (v2*16))) && (((v2*16) + min((16 + 0) - 1, 301 - (v2*16))) >= (min(v2*16, 286) + 15)));1;213;;;;;
 (max(0, min(33 - ((v0 % 4)*9), (0 + 9) - 1) + 1) <= 0);0;68;;;;;
 (max(min(250 - v0, (0 + 64) - 1) + 1, min(max(1 - v0, 0), 64 + 0)) <= min(max(1 - v0, 0), 64 + 0));0;793;;;;;
 ((((min((v0*128) + v1, (v2 + v1) + -128)*8)/8)*8) == (min((v0*128) + v1, (v2 + v1) + -128)*8));1;135;;;;;
 (max(min(max(min((max(min(v0 + v1, 2000), 1) - v2)/64, 15), min(max(min(v0 + v1, 2000), 1) - v2, 1003)/64), max(min((max(min(v0 + v1, 2000), 1) - v2)/4, 250), min(max(min(v0 + v1, 2000), 1) - v2, 1003)/4)/16), (min((max(min(v0 + v1, 2000), 1) - (v3*1004)) - max(min(v1, 1999), 0), 1003) + 5)/64) == max(min(max(min((max(min(v0 + v1, 2000), 1) - v2)/64, 15), min(max(min(v0 + v1, 2000), 1) - v2, 1003)/64), max(min((max(min(v0 + v1, 2000), 1) - v2)/4, 250), min(max(min(v0 + v1, 2000), 1) - v2, 1003)/4)/16), (min((max(min(v0 + v1, 2000), 1) - (v3*1004)) - max(min(v1, 1999), 0), 1003) + 5)/64));1;301;;;;;
 (((((v0/(((v1*8) + 179)/60))*-134)/67)*67) == ((v0/(((v1*8) + 179)/60))*-134));1;50;;;;;
 (((((min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, 7914)/4) - (max(max(min(v1/2, 1006), 7)*8, 115)/4)) + 307)/252) == ((((min(max(min(((v0 + v1) + 1)/2, 999), 0)*8, 7914)/4) - (max(max(min(v1/2, 1006), 7)*8, 115)/4)) + 307)/252));1;127;;;;;
 (max(min(v0 + 1, v1), v2) == max(min(v0 + 1, v1), v2));1;31;;;;;
 ((((v0*24) + v1) + ((v2*12) + v3)) == (((v0*24) + v1) + ((v2*12) + v3)));1;44;;;;;
 (((((v0*63) + v1)*8) + 494) == ((((v0*63) + v1)*8) + 494));1;49;;;;;
 ((max(min(((v0*4) + v1)*32, 1999), 0) + (v2*4)) == (max(min(((v0*4) + v1)*32, 1999), 0) + (v2*4)));1;72;;;;;
 (0 == ((0 + (max(min(((v0/8) - v1)*4, -14), -22) + 22)) - 1));0;122;;;;;
 ((((v0 + v1)/8) + (v2*8)) == (((v0 + v1)/8) + (v2*8)));1;19;;;;;
 ((min(v0/4, 0) + v1) == (min(v0/4, 0) + v1));1;63;;;;;
 (((v0 + 254)/252) != 0);0;355;;;;;
 (max(min(min(min((v3 - ((v4*127) + v5)) + 5, ((min((v3*4) + 4, v1 + v2)/4) - ((v4*127) + v5)) + 4), (((v1 + v2) + 13)/4) - ((v4*127) + v5)), (0 + (min(v6 - v5, 124) + 6)) - 1) + 1, min(max(((v2/4) - ((v4*127) + v5)) + 5, 0), (min(v6 - v5, 124) + 6) + 0)) <= min(max(((v2/4) - ((v4*127) + v5)) + 5, 0), (min(v6 - v5, 124) + 6) + 0));0;3082;;;;;
 (((v0 + 43)/42) != 0);0;348;;;;;
 (min((v0*4) + v1, v2 + 93) == min((v0*4) + v1, v2 + 93));1;44;;;;;
 ((((v0 + 10)/4) + ((((v0 + 2) % 4) + 3)/4)) == (((v0 + 10)/4) + ((((v0 + 2) % 4) + 3)/4)));1;50;;;;;
 (max(((max(v0, 0) - v1) + 17)/4, v2) == max(((max(v0, 0) - v1) + 17)/4, v2));1;64;;;;;
 (((v0*50) + (max(min(v1, 249), 0)*8)) == ((v0*50) + (max(min(v1, 249), 0)*8)));1;50;;;;;
 (((((((uint1)1 && (((v0*8) + -4) <= (((((max(-1, 0)*4) + 0) + v0)*8) + -4))) && ((((v0*8) + 233) + -4) >= (((((3*4) + ((4 + 0) - 1)) + v0)*8) + ((10 + -4) - 1)))) && (((v1*8) + -4) <= ((v1*8) + -4))) && (((v1*8) + ((10 + -4) - 1)) >= ((v1*8) + ((10 + -4) - 1)))) && (0 <= 0)) && (0 >= 0));1;222;;;;;
 ((min(v0*4, 21) + ((((v1 % 4)*21) + v2)*24)) == (min(v0*4, 21) + ((((v1 % 4)*21) + v2)*24)));1;54;;;;;
 (((v0 - (((v1*125) + v2)*4)) - (v3*1000)) == ((v0 - (((v1*125) + v2)*4)) - (v3*1000)));1;42;;;;;
 (min(min(max(min(((v0 + v1) + 71)/8, 249), 0), v2 + 10)*8, (((v3*9) + v2)*8) + 13) == min(min(max(min(((v0 + v1) + 71)/8, 249), 0), v2 + 10)*8, (((v3*9) + v2)*8) + 13));1;99;;;;;
 (((((((uint1)1 && (((((0*4) + (v0*8)) + 0) + -6) <= ((v0*8) + -6))) && (((((32*4) + ((v0*8) + 100)) + 3) + -6) >= ((v0*8) + 128))) && (((v1*8) + -6) <= ((v1*8) + -6))) && (((v1*8) + 5) >= ((v1*8) + 5))) && (0 <= 0)) && (2 >= 2));1;165;;;;;
 (min(((v0/32) + v1)*4, (v2*4) + 63) == min(((v0/32) + v1)*4, (v2*4) + 63));1;67;;;;;
 (((v0/63) + (v1*2)) == ((v0/63) + (v1*2)));1;81;;;;;
 (0 == ((0 + (17 - max(v0*9, 8))) - 1));0;51;;;;;
 (max(min((v0 + 131)/128, 16), min(((v1 + v0) + -124)/128, 14) + 1) == max(min((v0 + 131)/128, 16), min(((v1 + v0) + -124)/128, 14) + 1));1;95;;;;;
 (min(v0*8, ((v1*55) + ((v2/63)*8)) + 9) == min(v0*8, ((v1*55) + ((v2/63)*8)) + 9));1;70;;;;;
 (((((v0 % ((v1 + 12)/8))*-8)/4)*4) == ((v0 % ((v1 + 12)/8))*-8));1;46;;;;;
 (((v0*1000) + (min(v1, 1999) + (v2*4))) == ((v0*1000) + (min(v1, 1999) + (v2*4))));1;36;;;;;
 ((max(min(((v0 + v1)/8)*8, 2002), 3) + (v2*34)) == (max(min(((v0 + v1)/8)*8, 2002), 3) + (v2*34)));1;54;;;;;
 (((((((uint1)1 && ((((((v0*128) + v1) + v2) + 0) + 127) <= (v2 + ((v0*128) + v1)))) && ((((((v0*128) + v1) + v2) + 3) + 127) >= (v2 + (((v0*128) + v1) + 127)))) && (((v3 + v4) % 4) <= ((v3 + v4) % 4))) && (((v3 + v4) % 4) >= ((v3 + v4) % 4))) && (v5 <= v5)) && (v5 >= v5));0;198;;;;;
 ((((v0*2) + v1)*2) == (((((v0*2) + v1)*2) + 2) - 1));0;57;;;;;
 (min(((v0 + v1) + 1)/2, v2 + 11) == min(((v0 + v1) + 1)/2, v2 + 11));1;59;;;;;
 (min(max(min((v0 + v1)/8, 249), 0) + (((v2 + 7)/4)*4), max(min(v3, 250), 1) + 4) == min(max(min((v0 + v1)/8, 249), 0) + (((v2 + 7)/4)*4), max(min(v3, 250), 1) + 4));1;116;;;;;
 (min((v0*4) + ((v1*32) + v2), v3 + 5) == min((v0*4) + ((v1*32) + v2), v3 + 5));1;47;;;;;
 (((v0*12) + ((((v1*130) + ((v2*258) + v3))*4) + v4)) == ((v0*12) + ((((v1*130) + ((v2*258) + v3))*4) + v4)));1;52;;;;;
 (((v0*4) + 5) != 0);1;30;;;;;
 (min(((v0 + v1) + 1015)/8, (((v0 + v1)/8) + (v2*4)) + -1) == min(((v0 + v1) + 1015)/8, (((v0 + v1)/8) + (v2*4)) + -1));1;76;;;;;
 (min((v0*4) + v1, v2 + -82) == min((v0*4) + v1, v2 + -82));1;35;;;;;
 ((v0 - ((v1*4) + ((v2*1004) + v3))) == (v0 - ((v1*4) + ((v2*1004) + v3))));1;49;;;;;
 ((((((((((v0*3) + ((v1*76) + v2))*2) + v3)*4)/4) - v3) - (v0*6)) - (((v1*76) + v2)*2)) == (((((((((v0*3) + ((v1*76) + v2))*2) + v3)*4)/4) - v3) - (v0*6)) - (((v1*76) + v2)*2)));1;127;;;;;
 (min(v0*8, (min(v1*28, 27) + v2) + 9) == min(v0*8, (min(v1*28, 27) + v2) + 9));1;71;;;;;
 ((((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 51)/38) == (((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 51)/38));1;300;;;;;
 (((max(min((v2*-64) + ((max(min(min(v5/8, 0) + (v6*128), 122), -127) - max(min(max(min(((v4 + v5) + 7)/8, 376), 255), (min(v5/8, 0) + (v6*128)) + 127), 127)) + (v3*-32)), -228), -260)/4)*4) == max(min((v2*-64) + ((max(min(min(v5/8, 0) + (v6*128), 122), -127) - max(min(max(min(((v4 + v5) + 7)/8, 376), 255), (min(v5/8, 0) + (v6*128)) + 127), 127)) + (v3*-32)), -228), -260));0;2926;;;;;
 (min((min((min(max((((v0 + v1) + -1)/65)*8, 239) - v2, (v3*4) + -13)/4) + 4, v3)*4) + v2, max((((v0 + v1) + -1)/65)*8, 239) + 13) == min((min((min(max((((v0 + v1) + -1)/65)*8, 239) - v2, (v3*4) + -13)/4) + 4, v3)*4) + v2, max((((v0 + v1) + -1)/65)*8, 239) + 13));1;146;;;;;
 ((((v0*2) - (v1*121)) - ((v2/2)*2)) == (((v0*2) - (v1*121)) - ((v2/2)*2)));1;56;;;;;
 (min(max(v0, 1997) - min(v1, 0), v2 + 7) == min(max(v0, 1997) - min(v1, 0), v2 + 7));1;67;;;;;
 (((((v0 + v1) + -1)/4) - ((v2*63) + v3)) == ((((v0 + v1) + -1)/4) - ((v2*63) + v3)));1;62;;;;;
 (((v0*35) + (((v1*8) + v2)*8)) == ((v0*35) + (((v1*8) + v2)*8)));1;53;;;;;
 (min(((v0*128) + v1) + 127, v2) == min(((v0*128) + v1) + 127, v2));1;98;;;;;
 (min(max(v0, 0) + 5, v1) == min(max(v0, 0) + 5, v1));1;58;;;;;
 (min(max(((v0 + 5)/4) - (max(min(v1/8, 249), 0)*2), -1), (v2*2) + 3) == min(max(((v0 + 5)/4) - (max(min(v1/8, 249), 0)*2), -1), (v2*2) + 3));1;96;;;;;
 (max(-508 - v0, v0 + 5) >= 0);0;365;;;;;
 ((((min(v0, 11)*8) + 37)/30) == (((min(v0, 11)*8) + 37)/30));1;60;;;;;
 ((((v0 - v1) + 323)/316) == (((v0 - v1) + 323)/316));1;46;;;;;
 ((min(v0*96, 572) + (v1 + v2)) == (min(v0*96, 572) + (v1 + v2)));1;39;;;;;
 (min(((max(min(v0*8, 378), 129)*4) + v1)*2, (max(min(v0*8, 243), -6)*8) + 1087) == min(((max(min(v0*8, 378), 129)*4) + v1)*2, (max(min(v0*8, 243), -6)*8) + 1087));1;92;;;;;
 (min(max(min((v0 + v1)/8, 249), 0) + (((v2 + 7)/4)*4), max(min(v3, 250), 1) + 4) == min(max(min((v0 + v1)/8, 249), 0) + (((v2 + 7)/4)*4), max(min(v3, 250), 1) + 4));1;100;;;;;
 ((((v0 + v1)/8) + ((((v0 + v1) % 8) + 124)/8)) == (((v0 + v1)/8) + ((((v0 + v1) % 8) + 124)/8)));1;788;;;;;
 (((max(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 11, min(v0*128, v2 + -128) + v1) - min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128)) - (v3*32)) == ((max(max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) + 11, min(v0*128, v2 + -128) + v1) - min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128)) - (v3*32)));1;1262;;;;;
 (min((v0*4) + ((v1*126) + v2), v3 + 25) == min((v0*4) + ((v1*126) + v2), v3 + 25));1;53;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 23)/18) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 23)/18));1;229;;;;;
 (min(((v0*64) + v1) + 14, v2) == min(((v0*64) + v1) + 14, v2));1;59;;;;;
 (min(((v0 + v1) + 76)/8, (((v0 + v1)/8) + (v2*8)) + -5) == min(((v0 + v1) + 76)/8, (((v0 + v1)/8) + (v2*8)) + -5));1;65;;;;;
 ((((v0*57) + v1) + ((v2*513) + v3)) == (((v0*57) + v1) + ((v2*513) + v3)));1;36;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + 64)/65) - (v2*2)) - (v1/65), 1)*2) + 6)) - 1));0;131;;;;;
 (min(max(((v0 - ((v1/2000)*2048)) + 2074)/192, 0), (v2 + 556)/24) == min(max(((v0 - ((v1/2000)*2048)) + 2074)/192, 0), (v2 + 556)/24));1;84;;;;;
 (((v0*4) + (((v1 + v2)/8) + (v3*8))) == ((v0*4) + (((v1 + v2)/8) + (v3*8))));1;65;;;;;
 (((v0*1012) + (((max(min(v1, 2002), 3) + -3)/16)*16)) == ((v0*1012) + (((max(min(v1, 2002), 3) + -3)/16)*16)));1;64;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 145)/132) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 145)/132));1;86;;;;;
 (min(((((v0 + v1) + 31)/32)*2) + 1, v2) == min(((((v0 + v1) + 31)/32)*2) + 1, v2));1;58;;;;;
 (min((((v0 + -5)/8) - (v1/8)) + 1, v2) == min((((v0 + -5)/8) - (v1/8)) + 1, v2));1;86;;;;;
 ((((v0*8) + 252)/186) != 0);0;451;;;;;
 (min((v0*6) + v1, v2 + 7) == min((v0*6) + v1, v2 + 7));1;75;;;;;
 (((v0*8) + -2) >= ((((v0 - 1)*8) + 5) + 1));1;92;;;;;
 (min((v0*4) + (max(v1*66, -13) + (v2*4)), ((v1*66) + (v2*4)) + 62) == min((v0*4) + (max(v1*66, -13) + (v2*4)), ((v1*66) + (v2*4)) + 62));1;86;;;;;
 (max(min(max(((v0 - (v1*2)) + 1155)/1064, 0), ((v2 - v1) + 581)/532), min(((v2 - v1) + -486)/532, (((v3 + v0) - (v1*2)) + 91)/1064) + 1) == max(min(max(((v0 - (v1*2)) + 1155)/1064, 0), ((v2 - v1) + 581)/532), min(((v2 - v1) + -486)/532, (((v3 + v0) - (v1*2)) + 91)/1064) + 1));1;141;;;;;
 (((max(min(v0 + v1, 1999), 0)/16) - ((v2*4) + v3)) == ((max(min(v0 + v1, 1999), 0)/16) - ((v2*4) + v3)));1;74;;;;;
 ((min((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 1, v2) + 63) == (min((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 1, v2) + 63));1;264;;;;;
 (min(max((v0*8) + -20, v1), (max(v2*8, 239)*8) + 150) == min(max((v0*8) + -20, v1), (max(v2*8, 239)*8) + 150));1;73;;;;;
 (((v0*60) + (((((v1*500) + (v2 + v3))/32)*32) + (v4*116))) == ((v0*60) + (((((v1*500) + (v2 + v3))/32)*32) + (v4*116))));1;93;;;;;
 (max(min(min(min(min((((v7 + v4) - max(max(min(v5/8, 256), 7)*8, 75)) + -947)/1008, (((v7 + v4) - max(max(min(v5/8, 256), 7)*8, 75)) + -947)/1008), ((min(max(min(v6*8, 2074), 75), (v7 + v4) + 1090) - max(max(min(v5/8, 256), 7)*8, 75)) + -1007)/1008), ((min(max(min(v6*8, 2074), 75), (v7 + v4) + 1090) - max(max(min(v5/8, 256), 7)*8, 75)) + -1007)/1008), (0 + ((v3/1008) + 1)) - 1) + 1, min(max(((v4 - max(max(min(v5/8, 256), 7)*8, 75)) + 1091)/1008, 0), ((v3/1008) + 1) + 0)) <= min(max(((v4 - max(max(min(v5/8, 256), 7)*8, 75)) + 1091)/1008, 0), ((v3/1008) + 1) + 0));0;4319;;;;;
 (((((((uint1)1 && ((0 + (((min(v0, 4) + v1) + -4)/8)) <= (((min(v0, 4) + v1) + -4)/8))) && ((3 + ((((min(v0, 4) + v1) + -4)/8) + (((((((((max(v0, 4) + 3)/4)*4) + (min(v0, 4) + v1)) + 4)/8) - (((min(v0, 4) + v1) + -4)/8))/4)*4))) >= ((((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1))/8) + 1))) && ((v2/8) <= (v2/8))) && (((v2/8) + (((v2 % 8) + 132)/8)) >= (((((v2 % 8) + 140)/8) + (v2/8)) - 1))) && ((v3*64) <= (v3*64))) && (((v3*64) + 63) >= ((v3*64) + 63)));0;5088;;;;;
 ((v0*2) >= ((((v0 - 1)*2) + 4) + 1));0;53;;;;;
 (((v0 + 69)/64) != 0);0;307;;;;;
 (min(max(min(v0*2, 2117), 118) + (((v1 + 35)/4)*4), max(min(v2, 1043)*2, 87) + 32) == min(max(min(v0*2, 2117), 118) + (((v1 + 35)/4)*4), max(min(v2, 1043)*2, 87) + 32));1;90;;;;;
 (((((v0 + v1) + 15)/2) - ((v2*32) + v3)) == ((((v0 + v1) + 15)/2) - ((v2*32) + v3)));1;84;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*8) + 105)/91) == (((((((v0 + v1) + 62)/63) - (v1/63))*8) + 105)/91));1;79;;;;;
 ((((min(v0*125, v1 + -125)*8)/8)*8) == (min(v0*125, v1 + -125)*8));1;65;;;;;
 (min((v0*128) + 124, v1) == min((v0*128) + 124, v1));1;44;;;;;
 (max(min((242 + 21)/4, max(((9 - v0)/4) + (v1*-63), -1) + 1), min((min(242 + 3, 242) + 14)/4, ((2006 - v0)/4) + (v1*-63)) + 1) == max(min((242 + 21)/4, max(((9 - v0)/4) + (v1*-63), -1) + 1), min((min(242 + 3, 242) + 14)/4, ((2006 - v0)/4) + (v1*-63)) + 1));1;228;;;;;
 (min(max(v0, 15) + 19, v1) == min(max(v0, 15) + 19, v1));1;41;;;;;
 (((min(max(max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127) + 11, min(v1*128, v3 + -128) + v2) - min(min(max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) + -11, (v1*128) + v2), (v3 + v2) + -128), -96)/4)*4) == min(max(max(min((v1*128) + v2, min(v3 + v2, 2000) + -128), -127) + 11, min(v1*128, v3 + -128) + v2) - min(min(max(min((v1*128) + v2, min(v3 + v2, 2127) + -128), 0) + -11, (v1*128) + v2), (v3 + v2) + -128), -96));0;2406;;;;;
 (min(max(((v0 + 223)/32) - max(min(v1/32, 63), 1), -1), v2 + 13) == min(max(((v0 + 223)/32) - max(min(v1/32, 63), 1), -1), v2 + 13));1;93;;;;;
 (min(max(min((v0 + v1)/8, 258), 9), max(min((v0 + v1)/8, 259), 10)) == min(max(min((v0 + v1)/8, 258), 9), max(min((v0 + v1)/8, 259), 10)));1;149;;;;;
 (((max(min(v0, 1009), 10) + -7)/504) == ((((max(min(v0, 1009), 10) + -7)/504) + ((((max(min(v0, 1009), 10) + 497) % 504) + 503)/504)) - 1));0;749;;;;;
 (min((((((v0/2000)*4) + v1)*4) + v2)*16, v3 + 52) == min((((((v0/2000)*4) + v1)*4) + v2)*16, v3 + 52));1;77;;;;;
 ((((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 39)/28) == (((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 39)/28));1;241;;;;;
 (((v0 + 1)/128) >= ((((v0 + 1)/128) + ((254 - (v0 % 128))/128)) - 1));0;828;;;;;
 (min(min((((v0 + v1) + -1)/8) - (v1/8), ((v2/4)*4) + 3), v2) == min(min((((v0 + v1) + -1)/8) - (v1/8), ((v2/4)*4) + 3), v2));1;83;;;;;
 (min(((((v0 - v1)/4)*4) + v1) + 3, v0) == min(((((v0 - v1)/4)*4) + v1) + 3, v0));1;312;;;;;
 (((max(min(v0/63, 31), 0)*8) + (v1*17)) == ((max(min(v0/63, 31), 0)*8) + (v1*17)));1;52;;;;;
 ((v0 + 2) == (((v0 + 2) + 4) - 1));0;36;;;;;
 (min(max(min(((v0 + v1) + 71)/8, 249), 0), (max(min(v1/8, 254), 5) + (v2*16)) + 10) == min(max(min(((v0 + v1) + 71)/8, 249), 0), (max(min(v1/8, 254), 5) + (v2*16)) + 10));1;116;;;;;
 (min(max(((v0 - (max(min(v1/8, 249), 0)*8)) + 44)/32, 0), (v2/4) + 2) == min(max(((v0 - (max(min(v1/8, 249), 0)*8)) + 44)/32, 0), (v2/4) + 2));1;101;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*9) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*9) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*9) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*9) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*9) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*9) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*9) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*9) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))));1;186;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 0)) + 151)/128) >= 0);1;47;;;;;
 (min(((((v0 + v1) + -1)/17) - (v2*8)) - (v1/17), 7) == min(((((v0 + v1) + -1)/17) - (v2*8)) - (v1/17), 7));1;83;;;;;
 (min(v0 + -14, v1) == min(v0 + -14, v1));1;36;;;;;
 (((((((uint1)1 && ((0 + (((min(v0, 4) + v1) + -4)/8)) <= (0 + (((min(v0, 4) + v1) + -4)/8)))) && ((3 + ((((min(v0, 4) + v1) + -4)/8) + ((v2/4)*4))) >= (3 + ((((min(v0, 4) + v1) + -4)/8) + ((v2/4)*4))))) && (((v3/8) + (v4*9)) <= ((v3/8) + (v4*9)))) && ((((v3/8) + (v4*9)) + 8) >= (((v3/8) + (v4*9)) + 8))) && (0 <= 0)) && (0 >= 0));1;185;;;;;
 ((((v0*5336)/8)*8) == (v0*5336));1;29;;;;;
 (((v0/64) + 1) != 0);0;321;;;;;
 (((((((v0 + v1) + -1)/4) - (v2*250)) - (v3*63)) - (v1/4)) == ((((((v0 + v1) + -1)/4) - (v2*250)) - (v3*63)) - (v1/4)));1;73;;;;;
 (((((((v0/63)*2) + v1)*2) + v2)*2) == ((((((v0/63)*2) + v1)*2) + v2)*2));1;67;;;;;
 (max(-11 - max(min(((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - (v2*32)) - (v3*4)) - v4, -8), -11), max(min(v5, 11), 8) + -11) == max(-11 - max(min(((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - (v2*32)) - (v3*4)) - v4, -8), -11), max(min(v5, 11), 8) + -11));1;150;;;;;
 (min(max((v0 + 11)/8, v1 + -77), v1 + 19) == min(max((v0 + 11)/8, v1 + -77), v1 + 19));1;51;;;;;
 ((((v0 - v1) + 132)/127) == (((v0 - v1) + 132)/127));1;106;;;;;
 (min(((v0 + v1) + 191)/32, v2 + 10) == min(((v0 + v1) + 191)/32, v2 + 10));1;50;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 334)/252) == (((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 334)/252));1;261;;;;;
 (((v0*4) + (((v1/8)*2) + v2)) == ((v0*4) + (((v1/8)*2) + v2)));1;47;;;;;
 (((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))*16) + 116)/20) == ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))*16) + 116)/20));1;249;;;;;
 ((v0 - (((v1*63) + ((v2*2) + v3))*16)) == (v0 - (((v1*63) + ((v2*2) + v3))*16)));1;54;;;;;
 ((min(v0/8, (max(v1, 247) - (v2*4)) + 3) - min(v0/8, 4)) == (min(v0/8, (max(v1, 247) - (v2*4)) + 3) - min(v0/8, 4)));1;228;;;;;
 ((v0 - max(min(v1/2, 1003)*2, 7)) == (v0 - max(min(v1/2, 1003)*2, 7)));1;65;;;;;
 (min(max(max(((v0*2) + v1) + 3, v2), v3 + v2), ((v0*2) + v1) + 19) == min(max(max(((v0*2) + v1) + 3, v2), v3 + v2), ((v0*2) + v1) + 19));1;76;;;;;
 (max(min(max(((v0 - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), (v2 + 13)/4), min(min((((v3 + v0) - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 4)/32, ((max(min(((((((v4 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 6)/4), (v2 + 9)/4) + 1) == max(min(max(((v0 - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), (v2 + 13)/4), min(min((((v3 + v0) - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 4)/32, ((max(min(((((((v4 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 6)/4), (v2 + 9)/4) + 1));1;499;;;;;
 (((((((v0 + v1) + -1)/63)*8) - (v2*132)) - ((v1/63)*8)) == ((((((v0 + v1) + -1)/63)*8) - (v2*132)) - ((v1/63)*8)));1;75;;;;;
 (((min((v0*1000) + (((v1/2)*8) + -2), ((((v2 + v1) + -1)/2)*8) + -994)/64)*64) == min((v0*1000) + (((v1/2)*8) + -2), ((((v2 + v1) + -1)/2)*8) + -994));0;158;;;;;
 ((min((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 1, v2) + 63) == (min((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 1, v2) + 63));1;275;;;;;
 (max(min(max((v0 + 7)/8, v1 + -301), (min(v2, -326) + v1) + 52), min(((v3 + v0) + -1)/8, (min(v2, -326) + v1) + 51) + 1) == max(min(max((v0 + 7)/8, v1 + -301), (min(v2, -326) + v1) + 52), min(((v3 + v0) + -1)/8, (min(v2, -326) + v1) + 51) + 1));1;128;;;;;
 (min(max(min(((v0 + v1) + 71)/8, 249), 0), (max(min(v1/8, 254), 5) + (v2*16)) + 10) == min(max(min(((v0 + v1) + 71)/8, 249), 0), (max(min(v1/8, 254), 5) + (v2*16)) + 10));1;100;;;;;
 (((v0*128) + ((v1*252) + ((v2*4) + v3))) == ((v0*128) + ((v1*252) + ((v2*4) + v3))));1;47;;;;;
 ((((v0*-42)/14)*14) == (v0*-42));1;37;;;;;
 ((((max(min((((v0 + v1) + -1)/16)*32, 3986), -13) - max(min((v1/16)*32, 4044), 45)) + 124)/63) == (((max(min((((v0 + v1) + -1)/16)*32, 3986), -13) - max(min((v1/16)*32, 4044), 45)) + 124)/63));1;239;;;;;
 (((((((uint1)1 && ((0 + ((min(v1*252, 248) + (v2*500)) + v3)) <= (((v2*500) + min(v1*252, 248)) + v3))) && ((3 + (((min(v1*252, 248) + (v2*500)) + v3) + 248)) >= (((v2*500) + (min(v1*252, 248) + 251)) + v3))) && ((v4 + v5) <= (v4 + v5))) && ((v4 + v5) >= (v4 + v5))) && (v6 <= v6)) && (v6 >= v6));0;2176;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((((v2*2) + v3)*4) + v4)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((((v2*2) + v3)*4) + v4)));1;80;;;;;
 (((v0*7) + (max(min((min(v1*125, v2 + -125) + v3)/8, 250), 1) + v4)) == ((v0*7) + (max(min((min(v1*125, v2 + -125) + v3)/8, 250), 1) + v4)));1;73;;;;;
 ((max(min((v0*64) + v1, min(v2 + v1, 2000) + -64), -63) - (max(min((v0*64) + v1, min(v2 + v1, 2063) + -64), 0) + (v3*4))) == (max(min((v0*64) + v1, min(v2 + v1, 2000) + -64), -63) - (max(min((v0*64) + v1, min(v2 + v1, 2063) + -64), 0) + (v3*4))));1;1854;;;;;
 (min(((v0 + v1) + 188)/63, v2 + -6) == min(((v0 + v1) + 188)/63, v2 + -6));1;34;;;;;
 (((((v0 + v1) + 507)/8) - ((v2*4) + v3)) == ((((v0 + v1) + 507)/8) - ((v2*4) + v3)));1;58;;;;;
 (min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -1, (v0*128) + v1), (v2 + v1) + -128) == min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -1, (v0*128) + v1), (v2 + v1) + -128));1;98;;;;;
 ((min(v0*128, 372) + (min(v1*500, v2 + -500) + v3)) == (min(v0*128, 372) + (min(v1*500, v2 + -500) + v3)));1;71;;;;;
 (((((v0 - v1)*8) + 414)/308) == ((((v0 - v1)*8) + 414)/308));1;70;;;;;
 (((((((v0 + v1) + 31)/32) - (v1/32))/4) + 1) == ((((((v0 + v1) + 31)/32) - (v1/32))/4) + 1));1;74;;;;;
 (min(max((((v0 + v1) + -1)/65)*8, 239), ((((max((((v0 + v1) + -1)/65)*8, 239) - v2)/4)*4) + v2) + 3) == min(max((((v0 + v1) + -1)/65)*8, 239), ((((max((((v0 + v1) + -1)/65)*8, 239) - v2)/4)*4) + v2) + 3));1;121;;;;;
 ((((((v0 + v1) + 1999)/2000)*16) - (((v1/2000)*16) + v2)) == (((((v0 + v1) + 1999)/2000)*16) - (((v1/2000)*16) + v2)));1;61;;;;;
 (min(((v0 + v1) + -1)/2, (min((min((v2*64) + 63, v3)/4)*4, (v2*64) + 60) + (v1/2)) + 3) == min(((v0 + v1) + -1)/2, (min((min((v2*64) + 63, v3)/4)*4, (v2*64) + 60) + (v1/2)) + 3));1;94;;;;;
 (min(v0*8, ((min(min((((max(min(((v1 + v2) + -1)/63, 31), 0)*2) - v3)*4) - v4, -16)*8, -158) + (max(v4 - (((max(min(((v1 + v2) + -1)/63, 31), 0)*2) - v3)*4), 18)*-8)) + v5) + 288) == min(v0*8, ((min(min((((max(min(((v1 + v2) + -1)/63, 31), 0)*2) - v3)*4) - v4, -16)*8, -158) + (max(v4 - (((max(min(((v1 + v2) + -1)/63, 31), 0)*2) - v3)*4), 18)*-8)) + v5) + 288));1;182;;;;;
 (min((v0*4) + ((v1*264) + v2), v3 + 267) == min((v0*4) + ((v1*264) + v2), v3 + 267));1;56;;;;;
 (((((((uint1)1 && (((v0*8) + v1) <= ((v0*8) + v1))) && (((v0*8) + v1) >= ((v0*8) + v1))) && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && (((v2*4) + 0) <= ((v2*4) + 0))) && (((v2*4) + 3) >= ((v2*4) + ((4 + 0) - 1))));1;133;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 114)/32) == (((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 114)/32));1;225;;;;;
 (((((((uint1)1 && ((0 + (((v0*4) + ((v1*520) + v2)) + -1)) <= (-1 + ((v0*4) + ((v1*520) + v2))))) && ((3 + (((v0*4) + ((v1*520) + v2)) + 10)) >= (((12 + -1) - 1) + (((v0*4) + ((v1*520) + v2)) + 3)))) && (v3 <= v3)) && (v3 >= v3)) && (v4 <= v4)) && (v4 >= v4));1;142;;;;;
 (((v0/4) + (v1*2)) == ((v0/4) + (v1*2)));1;39;;;;;
 ((max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (((v3*17) + v4)*4))) == (max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (((v3*17) + v4)*4))));1;145;;;;;
 (((v0 + 524)/508) == ((v0 + 524)/508));1;20;;;;;
 ((((max((v2*8) - max(min(((v3 + min((v4 + v5)*1000, v6 + -1000)) + 999)/8, 249) - max(min((v3 + min((v4 + v5)*1000, v6 + -1000))/8, 249), 0), 0), -4)*-1)/4)*4) == (max((v2*8) - max(min(((v3 + min((v4 + v5)*1000, v6 + -1000)) + 999)/8, 249) - max(min((v3 + min((v4 + v5)*1000, v6 + -1000))/8, 249), 0), 0), -4)*-1));0;2416;;;;;
 (max(min(max(((v0 + 35)/4) - (v1*4), -1), (min((max(min(((v2 + v3) + 47)/16, 124), 0) - (v4*2)) - max(min(v3/16, 126), 2), -1)*4) + 11), min(min((v5 - v1)*4, (min(v5*16, (v6 + v0) + 4)/4) - (v1*4)), (min((max(min(((v2 + v3) + 47)/16, 124), 0) - (v4*2)) - max(min(v3/16, 126), 2), -1)*4) + 4) + 7) == max(min(max(((v0 + 35)/4) - (v1*4), -1), (min((max(min(((v2 + v3) + 47)/16, 124), 0) - (v4*2)) - max(min(v3/16, 126), 2), -1)*4) + 11), min(min((v5 - v1)*4, (min(v5*16, (v6 + v0) + 4)/4) - (v1*4)), (min((max(min(((v2 + v3) + 47)/16, 124), 0) - (v4*2)) - max(min(v3/16, 126), 2), -1)*4) + 4) + 7));1;289;;;;;
 ((-3 - (((138 - max(v0*36, 97))/4)*4)) == (((-3 - (((138 - max(v0*36, 97))/4)*4)) + ((((138 - max(v0*36, 97))/4)*4) + 6)) - 1));0;133;;;;;
 (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 31) == min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 31));1;140;;;;;
 (min(6 - (max((v0/32) + ((v1*32) - (((v2 + v0) + -1)/32)), -31)*4), (min(((((v2 + v0) + -1)/32) - (v1*32)) - (v0/32), 31)*4) + 8) == min(6 - (max((v0/32) + ((v1*32) - (((v2 + v0) + -1)/32)), -31)*4), (min(((((v2 + v0) + -1)/32) - (v1*32)) - (v0/32), 31)*4) + 8));1;126;;;;;
 (((v0 + 10)/8) != 0);0;380;;;;;
 (min(max((v0*32) + (v1 + v2), 1), ((v0*32) + (v1 + v2)) + 37) == min(max((v0*32) + (v1 + v2), 1), ((v0*32) + (v1 + v2)) + 37));1;52;;;;;
 ((v0 - (((v1*500) + ((v2*8) + v3))*2)) == (v0 - (((v1*500) + ((v2*8) + v3))*2)));1;55;;;;;
 (((((((v0 + v1) + 127)/32) - (v1/32)) + 26)/19) == ((((((v0 + v1) + 127)/32) - (v1/32)) + 26)/19));1;73;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 32) == min(((v0*2) + v1)*4, (v2*8) + 32));1;62;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 14)/9) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 14)/9));1;121;;;;;
 (min((((v0 + v1) + 63)/32)*4, (v2*4) + 35) == min((((v0 + v1) + 63)/32)*4, (v2*4) + 35));1;98;;;;;
 ((min(v0*4, 3) + (v1*4)) == (min(v0*4, 3) + (v1*4)));1;46;;;;;
 (((min((((((v0 + v1) + 3)/2) - (v2*504)) - (v3*127)) - (v1/2), min(v4*44, 86) + 32)/2) - (v4*22)) == ((min((((((v0 + v1) + 3)/2) - (v2*504)) - (v3*127)) - (v1/2), min(v4*44, 86) + 32)/2) - (v4*22)));1;124;;;;;
 (((v0*28) + (v1*16)) == ((v0*28) + (v1*16)));1;28;;;;;
 (min((v0 + 1005)/1004, max((0 - v1)/1004, -1) + 1) == min((v0 + 1005)/1004, max((0 - v1)/1004, -1) + 1));1;56;;;;;
 (((v0*504) + ((v1/2) + ((v2*127) - (((v3 + v1) + 5)/2)))) == ((v0*504) + ((v1/2) + ((v2*127) - (((v3 + v1) + 5)/2)))));1;65;;;;;
 (max(-769 - (v0*8), (v0*8) + 60) >= 0);0;521;;;;;
 (((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126) - (max((max(min((v1/4)*8, 4004), 5) + -13)/2, 0)/63))*8) + 40)/33) == ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126) - (max((max(min((v1/4)*8, 4004), 5) + -13)/2, 0)/63))*8) + 40)/33));1;148;;;;;
 ((min((max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*64)) + 63), 249), 0) - max(min((v1/8) + (v2*64), 249), 0)) - (v3*32), 30) - (v4*3)) == (min((max(min(min(((v0 + v1) + 7)/8, ((v1/8) + (v2*64)) + 63), 249), 0) - max(min((v1/8) + (v2*64), 249), 0)) - (v3*32), 30) - (v4*3)));1;352;;;;;
 ((max(min(v0, 552), 58) + -553) >= (((max(min(v0, 552), 58) + -553) + (555 - max(min(v0, 552), 58))) - 1));0;96;;;;;
 (min(((((v0*24) + v1)*2) + v2)*4, (v3*8) + 191) == min(((((v0*24) + v1)*2) + v2)*4, (v3*8) + 191));1;58;;;;;
 ((((v0*64) + ((v1*1008) + v2)) + 49) == (((v0*64) + ((v1*1008) + v2)) + 49));1;58;;;;;
 (min(1003 - (((v0*126) + v1)*4), (v2 - (((v3*251) + ((v0*126) + v1))*4)) + 4) == min(1003 - (((v0*126) + v1)*4), (v2 - (((v3*251) + ((v0*126) + v1))*4)) + 4));1;88;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && ((((((v0*4) + v1) + -3) + 0) + -45) <= (((((v0*4) + 0) + v1) + -3) + -45))) && ((((((v0*4) + v1) + ((4 + -3) - 1)) + 3) + -45) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((4 + -3) - 1)) + -45))) && (v2 <= v2)) && (v2 >= v2));1;207;;;;;
 (((v0 + 20)/12) != 0);0;350;;;;;
 (((v0 + v1) + -125) >= ((((v0 + v1) + -125) + 133) - 1));0;59;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 30)/16) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 30)/16));1;272;;;;;
 (((v0 + 39)/4) == ((v0 + 39)/4));1;43;;;;;
 (((((((min((v0*64) + v1, (v2 + v1) + -64) % 4) + 79)/4)*4)/29)*29) == ((((min((v0*64) + v1, (v2 + v1) + -64) % 4) + 79)/4)*4));0;101;;;;;
 (min(max((v0*8) + -56, v1), ((min(v2, 15) + v0)*8) + 44) == min(max((v0*8) + -56, v1), ((min(v2, 15) + v0)*8) + 44));1;66;;;;;
 (((v0 - (v1/8))*2) == ((v0 - (v1/8))*2));1;43;;;;;
 ((max(min(v0/2, 999), 0) + ((v1*32) + (((min((min((max(min(v0/2, 999), 0) + min(v1*32, 468)) + 31, max(min(((v2 + v0) + -1)/2, 999), 0) + (v3*-500)) - (v1*32)) - max(min(v0/2, 999), 0), min(min(v1*32, 468) + 31, (v3*-500) + v4) - (v1*32))/6)*6) + (v3*500)))) == (max(min(v0/2, 999), 0) + ((v1*32) + (((min((min((max(min(v0/2, 999), 0) + min(v1*32, 468)) + 31, max(min(((v2 + v0) + -1)/2, 999), 0) + (v3*-500)) - (v1*32)) - max(min(v0/2, 999), 0), min(min(v1*32, 468) + 31, (v3*-500) + v4) - (v1*32))/6)*6) + (v3*500)))));1;219;;;;;
 (((((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1))*32) + 463)/40) == ((((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1))*32) + 463)/40));1;241;;;;;
 (((v0 - (v1*4)) - ((v2 + v3)/8)) == ((v0 - (v1*4)) - ((v2 + v3)/8)));1;47;;;;;
 ((max(min(v0/2, 1003)*2, 7) + (v1*64)) == (max(min(v0/2, 1003)*2, 7) + (v1*64)));1;467;;;;;
 ((((max(v0*8, -2)*-1)/2)*2) == (max(v0*8, -2)*-1));0;881;;;;;
 (((((((v0 + v1) + 191)/64) - ((v1 + -136)/64))/13) + 1) == ((((((v0 + v1) + 191)/64) - ((v1 + -136)/64))/13) + 1));1;99;;;;;
 (((v0*4) + ((v1*48) + ((v2*128) + ((v3*252) + ((v4*2) + v5))))) == ((v0*4) + ((v1*48) + ((v2*128) + ((v3*252) + ((v4*2) + v5))))));1;81;;;;;
 (max(min(min(min(((min((v1 + v2) - v4, min((v3*1000) + 1000, v5) + 7)/4) + (v3*-250)) + 1, (((v1 + v2) - ((v3*1000) + v4)) + 1)/4), (min(v5 - (v3*1000), 1000) + 11)/4), (0 + ((min(v6, 1000) + 18)/4)) - 1) + 1, min(max((((v2 - v4)/4) + (v3*-250)) + 2, 0), ((min(v6, 1000) + 18)/4) + 0)) <= min(max((((v2 - v4)/4) + (v3*-250)) + 2, 0), ((min(v6, 1000) + 18)/4) + 0));0;4046;;;;;
 (min(((((v0 + v1) + -1)/250) - (v1/250))*32, (v2*32) + 55) == min(((((v0 + v1) + -1)/250) - (v1/250))*32, (v2*32) + 55));1;100;;;;;
 (((((v0*16) + v1)*8) + -5) == ((((((v0*16) + v1)*8) + -5) + ((min(v2 - v1, 15)*8) + 13)) - 1));0;157;;;;;
 ((((((((v0 + v1) + 63)/8) - (v1/8))*8) + 766)/706) == (((((((v0 + v1) + 63)/8) - (v1/8))*8) + 766)/706));1;943;;;;;
 (((((((uint1)1 && (((v0 + v1) + 1) <= (((v0 + v1) + 0) + 1))) && (((v0 + v1) + 1) >= (((v0 + v1) + 3) + 1))) && (((0 + ((v2*8) + v3)) + -3) <= (((v2*8) + v3) + -3))) && (((3 + (((v2*8) + v3) + 8)) + -3) >= (((v2*8) + v3) + 8))) && (0 <= 0)) && (2 >= 2));0;202;;;;;
 (min((v0*32) + v1, v2 + 37) == min((v0*32) + v1, v2 + 37));1;59;;;;;
 (max(min(min(min(min((((v7 + v4) - max(min(v5, 2002), 3)) + -122)/125, (((v7 + v4) - max(min(v5, 2002), 3)) + -122)/125), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 121) - max(min(v5, 2002), 3)) + -119)/125), ((min(max(min(v6 + v5, 1997), -2), (v7 + v4) + 121) - max(min(v5, 2002), 3)) + -119)/125), (0 + ((v3 + 130)/125)) - 1) + 1, min(max(((v4 - max(min(v5, 2002), 3)) + 127)/125, 0), ((v3 + 130)/125) + 0)) <= min(max(((v4 - max(min(v5, 2002), 3)) + 127)/125, 0), ((v3 + 130)/125) + 0));0;3185;;;;;
 (min((v0*128) + ((v1/2) + (((((min(((v2 + v1) + 5)/2, (min(v0*128, 380) + ((v1/2) + (v3*504))) + 119) - (v0*128)) - (v1/2)) + 95)/72)*72)), v4 + 24) == min((v0*128) + ((v1/2) + (((((min(((v2 + v1) + 5)/2, (min(v0*128, 380) + ((v1/2) + (v3*504))) + 119) - (v0*128)) - (v1/2)) + 95)/72)*72)), v4 + 24));1;161;;;;;
 ((v0 + (((v1/16) + v2)*4)) == (v0 + (((v1/16) + v2)*4)));1;556;;;;;
 (min((v0*12) + (v1*32), (v2*8) + 604) == min((v0*12) + (v1*32), (v2*8) + 604));1;50;;;;;
 (max(-745 - (v0*256), (v0*256) + 433) >= 0);0;553;;;;;
 (min(62 - (v0*16), (v1 - ((v2*252) + ((v0*16) + (v3*63)))) + 11) == min(62 - (v0*16), (v1 - ((v2*252) + ((v0*16) + (v3*63)))) + 11));1;71;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((3*4) + v0) + 3) >= (((3*4) + v0) + 3))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (0 >= 0));1;147;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2) - ((max(min((v1/4)*8, 4012), 13) + -19)/2))/504) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2) - ((max(min((v1/4)*8, 4012), 13) + -19)/2))/504) + 1));1;136;;;;;
 ((max(min(min(((v0 + v1) + -1)/16, ((v1/16) + (v2*4)) + 3)*16, 1996), -3) - max(min(((v1/16) + (v2*4))*16, 1999), 0)) == (max(min(min(((v0 + v1) + -1)/16, ((v1/16) + (v2*4)) + 3)*16, 1996), -3) - max(min(((v1/16) + (v2*4))*16, 1999), 0)));1;341;;;;;
 (((min((((min(v0/8, 0)/16)*2) + v1)*8, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 31) - (v1*8)) - ((min(v0/8, 0)/16)*16)) == ((min((((min(v0/8, 0)/16)*2) + v1)*8, ((max(((v2 + v0) + 7)/8, 255)/16)*16) + 31) - (v1*8)) - ((min(v0/8, 0)/16)*16)));1;170;;;;;
 (max(min(249, (((v1*63) + v2) + 63) - 1) + 1, min(max(0, (v1*63) + v2), 63 + ((v1*63) + v2))) <= min(max(0, (v1*63) + v2), 63 + ((v1*63) + v2)));0;1301;;;;;
 ((min((v0 - v1)*8, 79) + -82) == (((min((v0 - v1)*8, 79) + -82) + (85 - min((v0 - v1)*8, 79))) - 1));0;115;;;;;
 (((v0*8) + ((v1*4) + v2)) == ((v0*8) + ((v1*4) + v2)));1;70;;;;;
 (min((v0 + v1)*4, ((((v2 + v1) + v0)/2)*8) + 4) == min((v0 + v1)*4, ((((v2 + v1) + v0)/2)*8) + 4));1;69;;;;;
 (min(496 - v0, min(v1*8, -1) + 8) == min(496 - v0, min(v1*8, -1) + 8));1;54;;;;;
 (((v0*508) + (min((v1/16)*8, 4) + (v2*128))) == ((v0*508) + (min((v1/16)*8, 4) + (v2*128))));1;695;;;;;
 ((((v0*-96)/4)*4) == (v0*-96));1;25;;;;;
 (((((v0 % ((v1 + 36)/32))*-32)/4)*4) == ((v0 % ((v1 + 36)/32))*-32));1;57;;;;;
 ((((v0 - v1) + 514)/508) != 0);0;457;;;;;
 (max(((v0 - (v1/8)) + 135)/129, v2) == max(((v0 - (v1/8)) + 135)/129, v2));1;51;;;;;
 ((((max(min(v0 + v1, 1999), 0) - max(min(v1, 2002), 3)) + 67)/64) == (((max(min(v0 + v1, 1999), 0) - max(min(v1, 2002), 3)) + 67)/64));1;181;;;;;
 (0 == ((0 + (122 - (max(min(v0, 61), 59)*2))) - 1));0;89;;;;;
 (((((((v0 + v1) + 251)/63) - (v1/63)) + 12)/10) == ((((((v0 + v1) + 251)/63) - (v1/63)) + 12)/10));1;63;;;;;
 (min((v0*334) + 334, v1) == min((v0*334) + 334, v1));1;34;;;;;
 (((((v0/3)*4) + v1) + ((v2*2) + v3)) == ((((v0/3)*4) + v1) + ((v2*2) + v3)));1;45;;;;;
 (((max(min((v1*-500) + (v2 - (v3*128)), 128), 0)/4)*4) == max(min((v1*-500) + (v2 - (v3*128)), 128), 0));0;974;;;;;
 ((((v0 + v1) - (v2*8)) - (v3*4)) == (((v0 + v1) - (v2*8)) - (v3*4)));1;53;;;;;
 (min(v0 + 119, v1) == min(v0 + 119, v1));1;55;;;;;
 ((max(min(v0, 2007), 8) + (v1*4)) == (max(min(v0, 2007), 8) + (v1*4)));1;63;;;;;
 (((v0 + 51)/38) != 0);0;3930;;;;;
 (max(v0*-1, (v1/65) + ((v2*2) + ((v3*4) - min(((v4 + v1) + 64)/65, min((v1/65) + ((min((((v3*2) + v2)*2) + 1, v5)/2)*2), (v2*2) + ((v1/65) + (v3*4))) + 1)))) == max(v0*-1, (v1/65) + ((v2*2) + ((v3*4) - min(((v4 + v1) + 64)/65, min((v1/65) + ((min((((v3*2) + v2)*2) + 1, v5)/2)*2), (v2*2) + ((v1/65) + (v3*4))) + 1)))));1;143;;;;;
 (((((((v0 + v1) + 15)/16) - (v1/16))/2) + 1) == ((((((v0 + v1) + 15)/16) - (v1/16))/2) + 1));1;71;;;;;
 (max(min(v0, 4), min(min((249 - v1)/8, (v2 + 5)/63) - ((v3*4) + v4), 3) + 1) == max(min(v0, 4), min(min((249 - v1)/8, (v2 + 5)/63) - ((v3*4) + v4), 3) + 1));1;109;;;;;
 (min(v0 + 7, v1 + v2) == min(v0 + 7, v1 + v2));1;49;;;;;
 (max(min(min(min(104, (min((v1 + v2) - (v3*256), 243)/4) + 44), (((v1 + v2) + 173)/4) - (v3*64)), (0 + 106) - 1) + 1, min(max(((v2/4) - (v3*64)) + 45, 0), 106 + 0)) <= min(max(((v2/4) - (v3*64)) + 45, 0), 106 + 0));0;2159;;;;;
 (min(59 - (((v0*4) + v1)*4), (((((v2 + v3) + 127)/32) - (((v0*4) + v1) + v4))*4) + 35) == min(59 - (((v0*4) + v1)*4), (((((v2 + v3) + 127)/32) - (((v0*4) + v1) + v4))*4) + 35));1;127;;;;;
 (min(((v0 + v1) + 132)/8, (((v0 + v1) + 110)/8) + (v2*5)) == min(((v0 + v1) + 132)/8, (((v0 + v1) + 110)/8) + (v2*5)));1;68;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*500)) + 499) == min(max(min(((v0 + v1) + -1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*500)) + 499));1;85;;;;;
 (min(131 - (((v0*4) + v1)*4), (((((v2 + v3) + 15)/16) - ((((v0*4) + v1)*2) + v4))*2) + 7) == min(131 - (((v0*4) + v1)*4), (((((v2 + v3) + 15)/16) - ((((v0*4) + v1)*2) + v4))*2) + 7));1;138;;;;;
 (((((v0*125) + v1)*4) + ((v2*1000) + v3)) == ((((v0*125) + v1)*4) + ((v2*1000) + v3)));1;51;;;;;
 (min((min((v0*16) + -65, v1)/16) + 5, v0) == min((min((v0*16) + -65, v1)/16) + 5, v0));1;52;;;;;
 ((v0 - max(min(((min(v1, 449) + v2) + -505)/8, 249), 0)) == (v0 - max(min(((min(v1, 449) + v2) + -505)/8, 249), 0)));1;61;;;;;
 (min(((((v0*12) + v1)*2) + v2)*4, (v3*8) + 30) == min(((((v0*12) + v1)*2) + v2)*4, (v3*8) + 30));1;65;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && ((((0*4) + v1) + 0) <= (((0*4) + v1) + 0))) && ((((125*4) + v1) + 3) >= (((((126 + 0) - 1)*4) + v1) + ((4 + 0) - 1)))) && (((v2*2) + v3) <= ((v2*2) + v3))) && (((v2*2) + v3) >= ((v2*2) + v3)));1;166;;;;;
 ((max(min(min(v0*8, ((v1*132) + ((v2/63)*8)) + 119)*8, 1938), -61) - max(min((v1*1056) + ((v2/63)*64), 2044), 45)) == (max(min(min(v0*8, ((v1*132) + ((v2/63)*8)) + 119)*8, 1938), -61) - max(min((v1*1056) + ((v2/63)*64), 2044), 45)));1;253;;;;;
 ((v0 - (((v1*32) + ((v2*16) + ((v3*8) + v4)))*4)) == (v0 - (((v1*32) + ((v2*16) + ((v3*8) + v4)))*4)));1;56;;;;;
 (((((v0 + v1) + -2)/16) + (v2*2)) == ((((v0 + v1) + -2)/16) + (v2*2)));1;49;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2) - ((max(min((v1/4)*8, 4012), 13) + -19)/2))/126) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2) - ((max(min((v1/4)*8, 4012), 13) + -19)/2))/126) + 1));1;132;;;;;
 (min((v0*4) + v1, (v2*8) + 8) == min((v0*4) + v1, (v2*8) + 8));1;42;;;;;
 (max(min(max(((v0 - max(min(v1*2, 1997), -2)) + 1)/4, 0), (v2 + 3)/4), (min(min(v3 + v0, min(max(min(v4, 999)*2, -1), (v3 + v0) + 1) + 2) - max(min(v1*2, 1997), -2), v2 + 5) + -2)/4) == max(min(max(((v0 - max(min(v1*2, 1997), -2)) + 1)/4, 0), (v2 + 3)/4), (min(min(v3 + v0, min(max(min(v4, 999)*2, -1), (v3 + v0) + 1) + 2) - max(min(v1*2, 1997), -2), v2 + 5) + -2)/4));1;224;;;;;
 ((v0 + -4) >= (((v0 - 1) + 5) + 1));0;77;;;;;
 ((max(min(v0/8, 250), 1) + (v1*4)) == (max(min(v0/8, 250), 1) + (v1*4)));1;52;;;;;
 (min(max(max(min(min((((v0 + v1) + 19)/4) - (((v2 + -2)/16)*4), ((v3 - (((v2 + -2)/16)*2))*2) + 7), ((min((v3*8) + 9, v0 + v1) + 22)/4) - (((v2 + -2)/16)*4)), ((v1 + 22)/4) - (((v2 + -2)/16)*4)), -1), (v4*2) + 8) == min(max(max(min(min((((v0 + v1) + 19)/4) - (((v2 + -2)/16)*4), ((v3 - (((v2 + -2)/16)*2))*2) + 7), ((min((v3*8) + 9, v0 + v1) + 22)/4) - (((v2 + -2)/16)*4)), ((v1 + 22)/4) - (((v2 + -2)/16)*4)), -1), (v4*2) + 8));1;218;;;;;
 ((v0/(((max(v1, 0) - v2) + 17)/4)) == (v0/(((max(v1, 0) - v2) + 17)/4)));1;66;;;;;
 (min((((((v0/1000)*2) + v1)*4) + v2)*4, ((((v3 + v0) + -1)/1000)*32) + 62) == min((((((v0/1000)*2) + v1)*4) + v2)*4, ((((v3 + v0) + -1)/1000)*32) + 62));1;90;;;;;
 (((max(min(v0, 0), -3)*8) + -5) >= ((((max(min(v0, 0), -3)*8) + -5) + (11 - (max(min(v0, 0), -3)*8))) - 1));0;93;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;5242;;;;;
 (((v0/2) + (v1*503)) == ((v0/2) + (v1*503)));1;23;;;;;
 (((max(((min((v4*64) + ((((max(min(v3, 2002), 3) + -3)/16)*16) + 25), (max(min(v2 + v3, 1999), 0)/16)*16) + 27)/8)*8, min((v4*64) + ((((max(min(v3, 2002), 3) + -3)/16)*16) + 25), (max(min(v2 + v3, 1999), 0)/16)*16) + 23)/4)*4) == max(((min((v4*64) + ((((max(min(v3, 2002), 3) + -3)/16)*16) + 25), (max(min(v2 + v3, 1999), 0)/16)*16) + 27)/8)*8, min((v4*64) + ((((max(min(v3, 2002), 3) + -3)/16)*16) + 25), (max(min(v2 + v3, 1999), 0)/16)*16) + 23));0;2079;;;;;
 (((((v0 - v1)*8) + 740)/188) != 0);0;550;;;;;
 (((((((v0 + v1) + -1)/1000) - (v1/1000))*8) + 17) == ((((((v0 + v1) + -1)/1000) - (v1/1000))*8) + 17));1;87;;;;;
 (v0 != 0);0;3217;;;;;
 (((((v0*125) + v1) + v2) + 4) < ((((v0*125) + v1) + (v2 + 1)) + -2));0;76;;;;;
 ((((((min(v0*64, v1 + -64) + v2) % 8) + 63)/8) - (v3*4)) == (((((min(v0*64, v1 + -64) + v2) % 8) + 63)/8) - (v3*4)));1;76;;;;;
 (((v0 + 1030)/1012) == ((v0 + 1030)/1012));1;35;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9)) + 78)/64) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9)) + 78)/64));1;316;;;;;
 ((((max((v0*-4) + ((v1 + min(v2*16, v3 + -16))/2), ((v1 + min(v2*16, v3 + -16)) + 1)/2)*-2)/2)*2) == (max((v0*-4) + ((v1 + min(v2*16, v3 + -16))/2), ((v1 + min(v2*16, v3 + -16)) + 1)/2)*-2));1;115;;;;;
 (((max(v0, -4)*4) + -12) == ((((max(v0, -4)*4) + -12) + ((max(v0, -4)*-4) + 16)) - 1));0;80;;;;;
 ((((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 544)/506) == (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 544)/506));1;117;;;;;
 ((((v0*256) + 643)/112) != 0);0;485;;;;;
 (min(88 - (max(v0 - ((v1*-4) + (v2 - (v3*19))), 9)*8), (min(((v2 - (v3*19)) - (v1*4)) - v0, -9)*8) + 107) == min(88 - (max(v0 - ((v1*-4) + (v2 - (v3*19))), 9)*8), (min(((v2 - (v3*19)) - (v1*4)) - v0, -9)*8) + 107));1;131;;;;;
 ((((max(v0 + v1, -7) - min(v1, 2002)) + 74)/64) == (((max(v0 + v1, -7) - min(v1, 2002)) + 74)/64));1;61;;;;;
 (((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && (((((0*16) + v2) + 0) + -7) <= ((((0*16) + v2) + 0) + -7))) && (((((((85 - max(v3*4, 3))/16)*16) + v2) + 15) + -7) >= (((((((((3 - max(v3*4, 3)) + 98)/16) + 0) - 1)*16) + v2) + ((16 + 0) - 1)) + -7))) && (0 <= 0)) && (0 >= 0));1;278;;;;;
 (max(min(max(max(max(max(max(max(max(max(132 - (((v0 + v1)/32)*32), (((v0 + v1)/32)*-32) + 148), 136 - (((v0 + v1)/32)*32)), 140 - (((v0 + v1)/32)*32)), 144 - (((v0 + v1)/32)*32)), 152 - (((v0 + v1)/32)*32)), 156 - (((v0 + v1)/32)*32)), 160 - (((v0 + v1)/32)*32))/116, 0), ((((((v0 + v1) % 32) + 531)/32)*32) + 174)/116), (min(1917 - (((v0 + v1)/32)*32), (((((v0 + v1) % 32) + 531)/32)*32) + 58)/116) + 1) == max(min(max(max(max(max(max(max(max(max(132 - (((v0 + v1)/32)*32), (((v0 + v1)/32)*-32) + 148), 136 - (((v0 + v1)/32)*32)), 140 - (((v0 + v1)/32)*32)), 144 - (((v0 + v1)/32)*32)), 152 - (((v0 + v1)/32)*32)), 156 - (((v0 + v1)/32)*32)), 160 - (((v0 + v1)/32)*32))/116, 0), ((((((v0 + v1) % 32) + 531)/32)*32) + 174)/116), (min(1917 - (((v0 + v1)/32)*32), (((((v0 + v1) % 32) + 531)/32)*32) + 58)/116) + 1));1;343;;;;;
 (min((((v0 + v1) + 62)/63)*8, (((v1/63) + v2)*8) + 3) == min((((v0 + v1) + 62)/63)*8, (((v1/63) + v2)*8) + 3));1;647;;;;;
 (0 == ((0 + (510 - max(min(v0, 255)*2, 507))) - 1));0;90;;;;;
 ((max(min(v0/8, 249), 0) + (v1*12)) == (max(min(v0/8, 249), 0) + (v1*12)));1;39;;;;;
 (((v0*8) + -5) >= ((((v0*8) + -5) + 21) - 1));0;32;;;;;
 ((v0 - ((v1*17) + v2)) == (v0 - ((v1*17) + v2)));1;35;;;;;
 ((min((v0 % 8)*33, 225) + (v1*3)) == (min((v0 % 8)*33, 225) + (v1*3)));1;34;;;;;
 (min((v0*4) + v1, v2 + 18) == min((v0*4) + v1, v2 + 18));1;46;;;;;
 ((min(v0*128, 872) + (v1 + v2)) == (min(v0*128, 872) + (v1 + v2)));1;36;;;;;
 ((5 - v0) > (254 - v0));0;25;;;;;
 ((max(min(v0/2, 1006), 7) - max(min(((v1 + v0) + 1)/2, 999), 0)) == (max(min(v0/2, 1006), 7) - max(min(((v1 + v0) + 1)/2, 999), 0)));1;172;;;;;
 (((v0*3) + (max(min(v1/2, 999), 0)*2)) == ((v0*3) + (max(min(v1/2, 999), 0)*2)));1;94;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 63) == min(((v0 + v1) + -1)/8, v2 + 63));1;60;;;;;
 (((((max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1))*16) + 270)/63) == ((((max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1))*16) + 270)/63));1;446;;;;;
 ((-19 - max(min(((min(v0 + 19, v1)*8) - (v2*82)) - (v0*8), 70), -13)) == (-19 - max(min(((min(v0 + 19, v1)*8) - (v2*82)) - (v0*8), 70), -13)));1;113;;;;;
 (min(max(max(min((v0 + v1)/2, 1006), 7)*8, 115) + (v2*240), max(min((max(min((v0 + v1)/2, 1006), 7) + v3)*8, 7410), -589) + 474) == min(max(max(min((v0 + v1)/2, 1006), 7)*8, 115) + (v2*240), max(min((max(min((v0 + v1)/2, 1006), 7) + v3)*8, 7410), -589) + 474));1;172;;;;;
 (min(max(min((v0*6) + (v1 + v2), 1999), 0) + (((v3 + 10)/4)*4), max(min((v0*6) + (v1 + v2), 1994), -5) + 7) == min(max(min((v0*6) + (v1 + v2), 1999), 0) + (((v3 + 10)/4)*4), max(min((v0*6) + (v1 + v2), 1994), -5) + 7));1;114;;;;;
 ((((v0/63)*64) + ((v1*512) + ((((min((v1*-8) + ((((v2 + v0) + -1)/63) - (v0/63)), 7)*8) + 9)/33)*264))) == (((v0/63)*64) + ((v1*512) + ((((min((v1*-8) + ((((v2 + v0) + -1)/63) - (v0/63)), 7)*8) + 9)/33)*264))));1;112;;;;;
 (((((v0 % ((v1/20) + 1))*-20)/4)*4) == ((v0 % ((v1/20) + 1))*-20));1;68;;;;;
 (((v0 + 514)/504) != 0);0;335;;;;;
 (0 == ((0 + (51 - max((v0 % 8)*7, 44))) - 1));0;51;;;;;
 (min((v0*500) + 500, v1) == min((v0*500) + 500, v1));1;505;;;;;
 (min(max(v0 + -12, v1), ((max(v2, 0) - max(min(v3 + v4, 2007), max(v2, 1) + 13)) + v0) + 2) == min(max(v0 + -12, v1), ((max(v2, 0) - max(min(v3 + v4, 2007), max(v2, 1) + 13)) + v0) + 2));1;208;;;;;
 ((v0 + 40) != 0);0;231;;;;;
 (max(v0 + v1, v2 + -1) == max(v0 + v1, v2 + -1));1;32;;;;;
 (((v0*64) + (max(min(v1/2, 1006), 7) + (v2*16))) == ((v0*64) + (max(min(v1/2, 1006), 7) + (v2*16))));1;52;;;;;
 (((min((v3*-4) + max(min(((v2 + min(v4*125, v5 + -125)) + 132)/8, 249) - max(min((v2 + min(v4*125, v5 + -125))/8, 249), 0), 0), 2)/2)*2) == min((v3*-4) + max(min(((v2 + min(v4*125, v5 + -125)) + 132)/8, 249) - max(min((v2 + min(v4*125, v5 + -125))/8, 249), 0), 0), 2));0;2085;;;;;
 (((((v0 % ((v1 + 21)/16))*-16)/4)*4) == ((v0 % ((v1 + 21)/16))*-16));1;58;;;;;
 (min(max((v0/4) - (v1*2), -4), v2) == min(max((v0/4) - (v1*2), -4), v2));1;47;;;;;
 (max(v0/4, 0) >= ((max(v0/4, 0) + max(((v0 + 3)/4) - max(v0/4, 0), 0)) - 1));0;625;;;;;
 (0 == ((0 + (((v0 + v1) % 2) + 63)) - 1));0;153;;;;;
 (((v0*8) + (v1*2004)) == ((v0*8) + (v1*2004)));1;29;;;;;
 (((v0*12) + (v1 - v2)) == ((v0*12) + (v1 - v2)));1;52;;;;;
 (min(((v0/8) + (((v1 + 128)/126)*126))*8, ((((v2 + v0) + -1)/8)*8) + 23) == min(((v0/8) + (((v1 + 128)/126)*126))*8, ((((v2 + v0) + -1)/8)*8) + 23));1;81;;;;;
 (((v0 + 135)/130) != 0);0;345;;;;;
 ((max(min(v0/2, 999), 0) + (v1*500)) == (max(min(v0/2, 999), 0) + (v1*500)));1;1073;;;;;
 (min((v0*125) + v1, min(v2 + v1, 2129) + -125) == min((v0*125) + v1, min(v2 + v1, 2129) + -125));1;61;;;;;
 ((min(max(((max(min(v0, 36), 5) - max(min(v1, 22), -9))*2) + v2, 29)*32, 952) + (v3*8)) == (min(max(((max(min(v0, 36), 5) - max(min(v1, 22), -9))*2) + v2, 29)*32, 952) + (v3*8)));1;178;;;;;
 (((((((uint1)1 && ((v0/8) <= (v0/8))) && (((v0/8) + (((v0 % 8) + 507)/8)) >= (((((v0 % 8) + 515)/8) + (v0/8)) - 1))) && ((((0*4) + v1) + 0) <= (((0*4) + v1) + 0))) && ((((1*4) + v1) + 3) >= (((((2 + 0) - 1)*4) + v1) + ((4 + 0) - 1)))) && (((v2*2) + v3) <= ((v2*2) + v3))) && (((v2*2) + v3) >= ((v2*2) + v3)));1;246;;;;;
 (min(max(min(v0*2, 1995), -4) - (v1*504), v2 + 240) == min(max(min(v0*2, 1995), -4) - (v1*504), v2 + 240));1;58;;;;;
 (min(((((v0 + v1) + 64)/65) - (v1/65)) + -3, v2) == min(((((v0 + v1) + 64)/65) - (v1/65)) + -3, v2));1;189;;;;;
 (min(((v0 + v1) + 159)/32, ((v1/32) + (v2*6)) + -7) == min(((v0 + v1) + 159)/32, ((v1/32) + (v2*6)) + -7));1;72;;;;;
 (min(((((v0 + v1) + 314)/63)*8) + 29, v2) == min(((((v0 + v1) + 314)/63)*8) + 29, v2));1;57;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;5899;;;;;
 ((((v0/63)*8) + -116) == (((((v0/63)*8) + -116) + ((v1*8) + 192)) - 1));0;91;;;;;
 ((((min(max(min(((v0 + v1) + 7)/8, 249), 0)*8, 1962) - max(max(min(v1/8, 256), 7)*8, 75)) + 388)/256) == (((min(max(min(((v0 + v1) + 7)/8, 249), 0)*8, 1962) - max(max(min(v1/8, 256), 7)*8, 75)) + 388)/256));1;127;;;;;
 (max(v0/16, 0) >= ((max(v0/16, 0) + max(((v0 + 15)/16) - max(v0/16, 0), 0)) - 1));0;628;;;;;
 (((v0*3) + ((v1*12) + v2)) == ((v0*3) + ((v1*12) + v2)));1;55;;;;;
 (((max(min((v1*-1000) + (v2 + v3), (min(v4*252, 748) + v3) + 252) - ((v4*252) + v3), 0)/4)*4) == max(min((v1*-1000) + (v2 + v3), (min(v4*252, 748) + v3) + 252) - ((v4*252) + v3), 0));0;1506;;;;;
 (min(max(((v0*32) + v1) + -5, v2), (min(v3, 18) + ((v0*32) + v1)) + 12) == min(max(((v0*32) + v1) + -5, v2), (min(v3, 18) + ((v0*32) + v1)) + 12));1;76;;;;;
 ((((v0*-6)/3)*3) == (v0*-6));1;25;;;;;
 ((((min(((min(v0/8, 4)*2) + v1)*4, (max(((v2 + v0) + 23)/8, 249)*8) + 36)/4) - v1) - (min(v0/8, 4)*2)) == (((min(((min(v0/8, 4)*2) + v1)*4, (max(((v2 + v0) + 23)/8, 249)*8) + 36)/4) - v1) - (min(v0/8, 4)*2)));1;121;;;;;
 (((v0 - (v1*48)) - (v2/2)) == ((v0 - (v1*48)) - (v2/2)));1;55;;;;;
 (((v0*16) + (max(min(v1/8, 256), 7) + (v2*128))) == ((v0*16) + (max(min(v1/8, 256), 7) + (v2*128))));1;70;;;;;
 (((max(min(v0, 13), -18)*8) + -107) >= ((((max(min(v0, 13), -18)*8) + -107) + (113 - (max(min(v0, 13), -18)*8))) - 1));0;83;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 50)/32) == (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 50)/32));1;256;;;;;
 ((max(v0*2, 5) - (v1*2)) == (max(v0*2, 5) - (v1*2)));1;45;;;;;
 (((v0/8) + 1) != 0);0;1540;;;;;
 (max(min(min(min(min(3, 3), (226 - v0)/24), (226 - v0)/24), (0 + 5) - 1) + 1, min(max(0 - (v0/24), 0), 5 + 0)) <= min(max(0 - (v0/24), 0), 5 + 0));0;917;;;;;
 (((min(v0, 1000) + 249)/250) == ((min(v0, 1000) + 249)/250));1;77;;;;;
 (((((v0 + v1)/2)*2) + -6) >= ((((((v0 + v1)/2)*2) + -6) + 140) - 1));0;79;;;;;
 (min((max(min(((v0 + v1)/4)*8, 3746), -253) + 211)/2, ((max(min(((v0 + v1)/4)*8, 4012), 13) + -19)/2) + (v2*29)) == min((max(min(((v0 + v1)/4)*8, 3746), -253) + 211)/2, ((max(min(((v0 + v1)/4)*8, 4012), 13) + -19)/2) + (v2*29)));1;125;;;;;
 (max(min((v0 + 13)/4, max((0 - (v1/32))/4, -1) + 1), (min(60 - (v1/32), v0 + 9)/4) + 1) == max(min((v0 + 13)/4, max((0 - (v1/32))/4, -1) + 1), (min(60 - (v1/32), v0 + 9)/4) + 1));1;102;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 689)/670) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 689)/670));1;1360;;;;;
 ((((((((v0 + v1) + 7)/8) - (v1/8))*8) + 564)/516) == (((((((v0 + v1) + 7)/8) - (v1/8))*8) + 564)/516));1;79;;;;;
 (((((((v0 + v1) + 15)/16) - ((v1 + -2)/16))/2) + 1) == ((((((v0 + v1) + 15)/16) - ((v1 + -2)/16))/2) + 1));1;81;;;;;
 (((v0*16) + ((v1*48) + (max(v2*128, -1) + (min(max(min((v3/8) + v4, 249), 0), max(min(v3/8, 256), 7) + 114)*8)))) == ((v0*16) + ((v1*48) + (max(v2*128, -1) + (min(max(min((v3/8) + v4, 249), 0), max(min(v3/8, 256), 7) + 114)*8)))));1;116;;;;;
 (((min((v0 + v1) - (v2*1000), v1 + 1000)*-4) + ((v3*250) + (((v4*500) + v1)*4))) == ((min((v0 + v1) - (v2*1000), v1 + 1000)*-4) + ((v3*250) + (((v4*500) + v1)*4))));1;86;;;;;
 (((v0/2) + (v1*143)) == ((v0/2) + (v1*143)));1;61;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 528)/510) >= 0);1;69;;;;;
 ((min(v0, 2002) + (((v1 + 7)/4)*4)) == (min(v0, 2002) + (((v1 + 7)/4)*4)));1;56;;;;;
 (max(0 - ((v0*4) + v1), ((v0*4) + v1) + -1999) == max(0 - ((v0*4) + v1), ((v0*4) + v1) + -1999));1;54;;;;;
 ((((((v0 + v1) + -1)/63) - (v2*12)) - (v1/63)) == (((((v0 + v1) + -1)/63) - (v2*12)) - (v1/63)));1;69;;;;;
 (min(min((((((v0 + v1) + -1)/8) - (v2*36)) - (v3*12)) - (v1/8), 11) + -3, v4) == min(min((((((v0 + v1) + -1)/8) - (v2*36)) - (v3*12)) - (v1/8), 11) + -3, v4));1;88;;;;;
 ((((((min(v0*1000, v1 + -1000) + v2) % 8) + 999)/8) - (v3*16)) == (((((min(v0*1000, v1 + -1000) + v2) % 8) + 999)/8) - (v3*16)));1;68;;;;;
 (max(min(max(max((v0 + 55)/4, 13) - (v1*2), 0), (min((max(min(((v2 + v3) + 71)/8, 249), 0) - (v4*16)) - max(min(v3/8, 254), 5), 10)*2) + 15), min(min(min((((v5 + v0) + 51)/4) - (v1*2), ((v6 - v1)*2) + 13), min(((v5 + v0)/4) - (v1*2), ((v6 - v1)*2) + 1) + 12), (min((max(min(((v2 + v3) + 71)/8, 249), 0) - (v4*16)) - max(min(v3/8, 254), 5), 10)*2) + 14) + 1) == max(min(max(max((v0 + 55)/4, 13) - (v1*2), 0), (min((max(min(((v2 + v3) + 71)/8, 249), 0) - (v4*16)) - max(min(v3/8, 254), 5), 10)*2) + 15), min(min(min((((v5 + v0) + 51)/4) - (v1*2), ((v6 - v1)*2) + 13), min(((v5 + v0)/4) - (v1*2), ((v6 - v1)*2) + 1) + 12), (min((max(min(((v2 + v3) + 71)/8, 249), 0) - (v4*16)) - max(min(v3/8, 254), 5), 10)*2) + 14) + 1));1;357;;;;;
 ((((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32) - ((min((v1/65)*64, 4) + -6)/32))/9) + 1) >= 0);1;106;;;;;
 ((max(min(v0, 249), 0) + ((((max(min(min((v1*4) + 4, v2) + (v3/8), 250), 1) - max(min((v3/8) + (v1*4), 249), 0)) + -1)/4)*4)) == (max(min(v0, 249), 0) + ((((max(min(min((v1*4) + 4, v2) + (v3/8), 250), 1) - max(min((v3/8) + (v1*4), 249), 0)) + -1)/4)*4)));1;283;;;;;
 (min(max(max(((v0*31) + v1) + -509, v2), v3 + v2), (((v0*31) + v1) + v4) + -476) == min(max(max(((v0*31) + v1) + -509, v2), v3 + v2), (((v0*31) + v1) + v4) + -476));1;72;;;;;
 (min(max(min(v0, 994), -5) + 7, v1) == min(max(min(v0, 994), -5) + 7, v1));1;77;;;;;
 (min((((min((((((min(v0*125, v1 + -125) + v2) % 133) + 390)/133)*8) - (v3*36), -12)/4)*4) + v4) + 12, v5) == min((((min((((((min(v0*125, v1 + -125) + v2) % 133) + 390)/133)*8) - (v3*36), -12)/4)*4) + v4) + 12, v5));1;64;;;;;
 (min(max((((v0 + v1) + -1)/65)*8, 239), ((((max((((v0 + v1) + -1)/65)*8, 239) - v2)/4)*4) + v2) + 3) == min(max((((v0 + v1) + -1)/65)*8, 239), ((((max((((v0 + v1) + -1)/65)*8, 239) - v2)/4)*4) + v2) + 3));1;135;;;;;
 ((max(min(v0, 1999), 0) + (v1*1000)) == (max(min(v0, 1999), 0) + (v1*1000)));1;73;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*3) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*3) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*3) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*3) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*3) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*3) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*3) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*3) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))));1;185;;;;;
 (max(min((v0 + 505)/504, max((0 - v1)/504, -1) + 1), (min(1497 - v1, v0 + 1)/504) + 1) == max(min((v0 + 505)/504, max((0 - v1)/504, -1) + 1), (min(1497 - v1, v0 + 1)/504) + 1));1;99;;;;;
 (((v0 + 170)/128) != 0);0;339;;;;;
 (min(((v0*44) + v1) + 38, v2) == min(((v0*44) + v1) + 38, v2));1;43;;;;;
 ((((max(v0, 0) - v1)/3) + 3) != 0);0;488;;;;;
 ((max(min((v0 + v1)/2, 1006), 7) + (v2*32)) == (max(min((v0 + v1)/2, 1006), 7) + (v2*32)));1;65;;;;;
 ((min(max(v0, -27)*4, 23) + -26) == (((min(max(v0, -27)*4, 23) + -26) + (29 - min(max(v0, -27)*4, 23))) - 1));0;99;;;;;
 (((((((uint1)1 && (((((0*4) + max(max(min(v2 - ((((v3 + v4) + 62)/63)*8), 10), -57) + min((((v3 + v4) + 62)/63)*8, v2 + 57), v2)) + 0) + -9) <= (max(max(min(v2 - ((((v3 + v4) + 62)/63)*8), 10), -57) + -15, -5) + (v2 + -4)))) && (((((((min(((((v3 + v4) + 62)/63)*8) - v2, -15) + 15)/4)*4) + max(min((((v3 + v4) + 62)/63)*8, v2 + 57) + 15, v2)) + 3) + -9) >= (0 + (min((((v3 + v4) + 62)/63)*8, (min(((((v3 + v4) + 62)/63)*8) - v2, -7) + (min(((10 - v2)/4) + ((((v3 + v4) + 62)/63)*2), 16)*4)) + v2) + 6)))) && ((-5 + v5) <= (-5 + v5))) && ((((6 + -5) - 1) + v5) >= (((6 + -5) - 1) + v5))) && (((v6*7) + 0) <= ((v6*7) + 0))) && (((v6*7) + ((7 + 0) - 1)) >= ((v6*7) + ((7 + 0) - 1))));0;5637;;;;;
 (min(max(((v0 + 35)/4) - (min(((v1*2) + v2)*2, 253)*2), -1), (v3*2) + 7) == min(max(((v0 + 35)/4) - (min(((v1*2) + v2)*2, 253)*2), -1), (v3*2) + 7));1;102;;;;;
 (max(((max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (v3*32))) + 130)/8, ((v4 + 130)/8) - (v3*4)) == max(((max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (v3*32))) + 130)/8, ((v4 + 130)/8) - (v3*4)));1;195;;;;;
 (min(((min((1 - (((v0*32) - min((max(min(((v1 + v2) + -1)/2, 999), 0) - (v3*500)) - max(min(v2/2, 999), 0), min(v0*32, 468) + 31))*2))/4, 2)*2) - max((v0*32) - min((max(min(((v1 + v2) + -1)/2, 999), 0) - (v3*500)) - max(min(v2/2, 999), 0), min(v0*32, 468) + 31), -1)) + v4, v5) == min(((min((1 - (((v0*32) - min((max(min(((v1 + v2) + -1)/2, 999), 0) - (v3*500)) - max(min(v2/2, 999), 0), min(v0*32, 468) + 31))*2))/4, 2)*2) - max((v0*32) - min((max(min(((v1 + v2) + -1)/2, 999), 0) - (v3*500)) - max(min(v2/2, 999), 0), min(v0*32, 468) + 31), -1)) + v4, v5));1;216;;;;;
 ((min(v0, 1000) - (v1*250)) == (min(v0, 1000) - (v1*250)));1;50;;;;;
 ((((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 160)/127) == (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))*16) + 160)/127));1;123;;;;;
 (((max(min((v2*-252) + (v1 - min(v1, 4)), 248), -4)/4)*4) == max(min((v2*-252) + (v1 - min(v1, 4)), 248), -4));0;854;;;;;
 (((((max(min(((v0 + v1) + 7)/64, 30), 0) - max(min(v1/64, 30), 0))*8) + 131)/124) == ((((max(min(((v0 + v1) + 7)/64, 30), 0) - max(min(v1/64, 30), 0))*8) + 131)/124));1;260;;;;;
 ((((v0*8)/3) + 5) != 0);0;403;;;;;
 (0 == ((0 + ((max(min((((v0 + v1) + 1)/2) - v2, 1), -1)*2) + 2)) - 1));0;157;;;;;
 (min((((v0 + -1)/1040)*1040) + ((v1/63)*64), v2) == min((((v0 + -1)/1040)*1040) + ((v1/63)*64), v2));1;66;;;;;
 ((((-128 - ((min(v0*128, v1 + -128) + v2) % 2))/2) + (((v3*2) + v4)*4)) == (((-128 - ((min(v0*128, v1 + -128) + v2) % 2))/2) + (((v3*2) + v4)*4)));1;82;;;;;
 ((max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) - (max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + (v3*4))) == (max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) - (max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + (v3*4))));1;106;;;;;
 ((min((v0 + 56)/32, (((v1 + v0) + 39)/32) - (v2*3)) - (((v0 + -8)/32) + v3)) == (min((v0 + 56)/32, (((v1 + v0) + 39)/32) - (v2*3)) - (((v0 + -8)/32) + v3)));1;79;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 133)/128) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 133)/128));1;262;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 14)/9) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 14)/9));1;135;;;;;
 (((((v0 % (((v1*64) + 291)/140))*140)/4)*4) == ((v0 % (((v1*64) + 291)/140))*140));1;56;;;;;
 (0 == ((0 + (497 - max(min(v0*32, 497), 465))) - 1));0;93;;;;;
 ((((max(v0 + v1, 2000) - min(v1, 5)) + 67)/63) == (((max(v0 + v1, 2000) - min(v1, 5)) + 67)/63));1;64;;;;;
 (min(max(min(v0 + v1, 2000), 1), (max(min(v1, 1999), 0) + (v2*1004)) + 998) == min(max(min(v0 + v1, 2000), 1), (max(min(v1, 1999), 0) + (v2*1004)) + 998));1;77;;;;;
 (min(((v0*4) + ((v1*128) + v2)) + -3, v2 + v3) == min(((v0*4) + ((v1*128) + v2)) + -3, v2 + v3));1;67;;;;;
 (min(max(max((v0 + v1)/2, (((v0 + v1)/126)*63) + 62), (((v0 + v1)/126)*64) + 23) - min(((v0 + v1)/126)*64, min((v0 + v1)/2, (((v0 + v1)/126)*63) + 6) + 24), (v2*4) + -125) == min(max(max((v0 + v1)/2, (((v0 + v1)/126)*63) + 62), (((v0 + v1)/126)*64) + 23) - min(((v0 + v1)/126)*64, min((v0 + v1)/2, (((v0 + v1)/126)*63) + 6) + 24), (v2*4) + -125));1;153;;;;;
 ((max(min(v0, 999), 0) + (v1*11)) == (max(min(v0, 999), 0) + (v1*11)));1;59;;;;;
 (((max(min((v1*-500) + (((v2/500)*-500) + v2), 500), 0)/4)*4) == max(min((v1*-500) + (((v2/500)*-500) + v2), 500), 0));0;979;;;;;
 ((((v0/8)*8) + (v1*36)) == (((v0/8)*8) + (v1*36)));1;41;;;;;
 (min(((v0 + v1) + 127)/4, (v2*16) + (((v0 + v1)/4) + v3)) == min(((v0 + v1) + 127)/4, (v2*16) + (((v0 + v1)/4) + v3)));1;80;;;;;
 (min(((v0 + v1) + 62)/63, v2 + 15) == min(((v0 + v1) + 62)/63, v2 + 15));1;71;;;;;
 (((v0*16) + ((v1*128) + (v2 + v3))) == ((v0*16) + ((v1*128) + (v2 + v3))));1;48;;;;;
 (((((v0 % ((v1/12) + 1))*-96)/3)*3) == ((v0 % ((v1/12) + 1))*-96));1;60;;;;;
 ((((v0*2) + v1) + -48) >= (((((v0*2) + v1) + -48) + 6) - 1));0;64;;;;;
 ((max(min(v0 + v1, 2001), 2) + (v2*4)) == (max(min(v0 + v1, 2001), 2) + (v2*4)));1;64;;;;;
 (min(((((v0/8) + v1)*2) + v2)*4, ((((v3 + v0) + 7)/8)*8) + 18) == min(((((v0/8) + v1)*2) + v2)*4, ((((v3 + v0) + 7)/8)*8) + 18));1;75;;;;;
 (min((v0*4) + ((v1*4) + v2), v3 + -3) == min((v0*4) + ((v1*4) + v2), v3 + -3));1;109;;;;;
 ((((max(((v0 + v1) + 7)/8, 255)/16)*4) - ((v2*4) + v3)) == (((max(((v0 + v1) + 7)/8, 255)/16)*4) - ((v2*4) + v3)));1;76;;;;;
 ((((v0*-128)/4)*4) == (v0*-128));1;12;;;;;
 (((v0 - (v1/500)) + -3) == ((v0 - (v1/500)) + -3));1;37;;;;;
 ((((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32) - ((min((v1/65)*64, 4) + -6)/32))/9) + 1) >= 0);1;113;;;;;
 (min(v0*16, ((((v1 + v2) + -1)/63)*64) + 9) == min(v0*16, ((((v1 + v2) + -1)/63)*64) + 9));1;58;;;;;
 ((((v0*8) + 45)/33) != 0);0;437;;;;;
 ((((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0)) + 17)/16) == (((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0)) + 17)/16));1;230;;;;;
 (min(((v0 + v1) + -1)/4, ((v1/4) + (v2*4)) + 3) == min(((v0 + v1) + -1)/4, ((v1/4) + (v2*4)) + 3));1;41;;;;;
 (min(((v0 + v1) + 249)/4, v2 + 15) == min(((v0 + v1) + 249)/4, v2 + 15));1;107;;;;;
 (min(min(v0, 1017) + -18, v1) == min(min(v0, 1017) + -18, v1));1;351;;;;;
 ((min((v0 % 2)*12, 11) - ((((v0 % 2)*3) + v1)*4)) == (min((v0 % 2)*12, 11) - ((((v0 % 2)*3) + v1)*4)));1;71;;;;;
 (min((v0/500)*64, ((((v1 + v0) + -1)/500)*64) + 89) == min((v0/500)*64, ((((v1 + v0) + -1)/500)*64) + 89));1;64;;;;;
 ((v0 + -3) >= (((v0 + -3) + (min(v1 - ((v2*8) + (v3 + v4)), -4) + 5)) - 1));1;120;;;;;
 (min((v0*4) + v1, (v2*2) + -65) == min((v0*4) + v1, (v2*2) + -65));1;50;;;;;
 (((v0/2) + 8) != 0);0;299;;;;;
 (((((((uint1)1 && ((((((v0*4) + v1) + -1) + 0) + -2) <= (((((v0*4) + 0) + v1) + -1) + -2))) && ((((((v0*4) + v1) + ((5 + -1) - 1)) + 3) + -2) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((5 + -1) - 1)) + -2))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (v4 <= v4)) && (v4 >= v4));1;227;;;;;
 (v0 != 0);0;1837;;;;;
 (((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*63)) - max(min(v1/2, 1006), 7)) == ((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*63)) - max(min(v1/2, 1006), 7)));1;56;;;;;
 (max((((((v0 + v1) + 129)/65) - ((v1/65) + (v2*8))) + -1)/2, ((((((v0 + v1) + 64)/65) - (v1/65))/2) - (v2*4)) + 1) == max((((((v0 + v1) + 129)/65) - ((v1/65) + (v2*8))) + -1)/2, ((((((v0 + v1) + 64)/65) - (v1/65))/2) - (v2*4)) + 1));1;142;;;;;
 (max((min((((v0 + v1) + 1)/2) - (v1/2), v2 + 1) + 3)/4, max(v3/4, -1) + 1) == max((min((((v0 + v1) + 1)/2) - (v1/2), v2 + 1) + 3)/4, max(v3/4, -1) + 1));1;99;;;;;
 (min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5), v2) == min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5), v2));1;228;;;;;
 ((((v0*8) + 379)/251) != 0);0;430;;;;;
 (((((v0*8) + v1)*8) + -12) == ((((((v0*8) + v1)*8) + -12) + ((v2*8) + 18)) - 1));0;107;;;;;
 (min(((v0 + v1) + 7)/8, ((v2*8) + v3) + 7) == min(((v0 + v1) + 7)/8, ((v2*8) + v3) + 7));1;44;;;;;
 (((((v0 % ((v1 + 77)/64))*-64)/16)*16) == ((v0 % ((v1 + 77)/64))*-64));1;57;;;;;
 (min((((v0 + v1) + 132)/8)*8, (((v0 + v1)/8)*8) + 162) == min((((v0 + v1) + 132)/8)*8, (((v0 + v1)/8)*8) + 162));1;71;;;;;
 (max(((v0 - v1) + 1)/4, 0) >= ((max(((v0 - v1) + 1)/4, 0) + ((((v0 - v1)/4) - max(((v0 - v1) + 1)/4, 0)) + 1)) - 1));1;143;;;;;
 ((((max(v0, 249) - min(v1, 0))/8) + 1) == (((max(v0, 249) - min(v1, 0))/8) + 1));1;61;;;;;
 (((((((v0 + v1) + 15)/4) - (v1/4)) + 11)/8) == ((((((v0 + v1) + 15)/4) - (v1/4)) + 11)/8));1;68;;;;;
 (max(4 - (max(min((v0/8) + (((min((v1*16) + 15, v2) + 9)/4)*4), min(((v3 + v0) + -1)/8, ((v0/8) + (v1*16)) + 15) + 6) - ((v0/8) + (v1*16)), 1)*8), (max(min((v0/8) + ((v1*16) - (((v3 + v0) + -1)/8)), 5), -15)*8) + -44) == max(4 - (max(min((v0/8) + (((min((v1*16) + 15, v2) + 9)/4)*4), min(((v3 + v0) + -1)/8, ((v0/8) + (v1*16)) + 15) + 6) - ((v0/8) + (v1*16)), 1)*8), (max(min((v0/8) + ((v1*16) - (((v3 + v0) + -1)/8)), 5), -15)*8) + -44));1;233;;;;;
 (min((v0*4) + v1, v2 + 5) == min((v0*4) + v1, v2 + 5));1;34;;;;;
 (v0 != 0);0;2312;;;;;
 ((max(min(v0, 1329), 330) + (v1*88)) == (max(min(v0, 1329), 330) + (v1*88)));1;84;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 273)/255) == (((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 273)/255));1;76;;;;;
 ((max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) - (max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + (v3*4))) == (max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) - (max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + (v3*4))));1;113;;;;;
 (max(min(max(((((v0 + 2)/4) - (v1/4)) + 257)/256, 0), (v2 + 266)/256), (min(min(((v3 + v0) + -1)/4, min(((v3 + v0) + 983)/4, v4) + 9) - (v1/4), v2 + 264) + 2)/256) == max(min(max(((((v0 + 2)/4) - (v1/4)) + 257)/256, 0), (v2 + 266)/256), (min(min(((v3 + v0) + -1)/4, min(((v3 + v0) + 983)/4, v4) + 9) - (v1/4), v2 + 264) + 2)/256));1;182;;;;;
 (min(((v0 + v1) + 31)/32, ((v1/32) + (v2*32)) + 31) == min(((v0 + v1) + 31)/32, ((v1/32) + (v2*32)) + 31));1;77;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*64) + 863)/712) == (((((((v0 + v1) + -1)/63) - (v1/63))*64) + 863)/712));1;112;;;;;
 (((((v0 + v1) + 43)/4) - (v2*4)) == ((((v0 + v1) + 43)/4) - (v2*4)));1;54;;;;;
 ((min(v0*64, 188) + (v1 + v2)) == (min(v0*64, 188) + (v1 + v2)));1;27;;;;;
 (min(max(min(((((((v0 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5), (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4) + (v2*12)) + 2) == min(max(min(((((((v0 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5), (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4) + (v2*12)) + 2));1;133;;;;;
 ((v0 - ((v1*8) + v2)) == (v0 - ((v1*8) + v2)));1;46;;;;;
 (min((v0*256) + (max(v1*500, -11) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 244) == min((v0*256) + (max(v1*500, -11) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 244));1;90;;;;;
 (((v0*12) + (max(min(v1*32, 1999), 0) + (v2*4))) == ((v0*12) + (max(min(v1*32, 1999), 0) + (v2*4))));1;69;;;;;
 (((v0 + 14)/9) != 0);0;384;;;;;
 ((min(max(v0*500, -5) + (v1*32), (v0*500) + 468) + (min(v2*1000, v3 + -1000) + v4)) == (min(max(v0*500, -5) + (v1*32), (v0*500) + 468) + (min(v2*1000, v3 + -1000) + v4)));1;76;;;;;
 (((((min(v0 + ((v1*4) + min((v2 + min(v3*125, v4 + -125))/8, max(min((v2 + min(v3*125, v4 + -125))/64, 30), 0)*8)), min(max(((v2 + min(v3*125, v4 + -125)) + 132)/8, (max(min(((v2 + min(v3*125, v4 + -125)) + 132)/64, 30), 0)*8) + 7), ((v1*4) + min((v2 + min(v3*125, v4 + -125))/8, max(min((v2 + min(v3*125, v4 + -125))/64, 30), 0)*8)) + 3)) - min(v0 + ((v1*4) + min((v2 + min(v3*125, v4 + -125))/8, max(min((v2 + min(v3*125, v4 + -125))/64, 30), 0)*8)), min(max(((v2 + min(v3*125, v4 + -125)) + 132)/8, (max(min(((v2 + min(v3*125, v4 + -125)) + 132)/64, 30), 0)*8) + 7), ((v1*4) + min((v2 + min(v3*125, v4 + -125))/8, max(min((v2 + min(v3*125, v4 + -125))/64, 30), 0)*8)) + 3) + 1))*8)/4)*4) == ((min(v0 + ((v1*4) + min((v2 + min(v3*125, v4 + -125))/8, max(min((v2 + min(v3*125, v4 + -125))/64, 30), 0)*8)), min(max(((v2 + min(v3*125, v4 + -125)) + 132)/8, (max(min(((v2 + min(v3*125, v4 + -125)) + 132)/64, 30), 0)*8) + 7), ((v1*4) + min((v2 + min(v3*125, v4 + -125))/8, max(min((v2 + min(v3*125, v4 + -125))/64, 30), 0)*8)) + 3)) - min(v0 + ((v1*4) + min((v2 + min(v3*125, v4 + -125))/8, max(min((v2 + min(v3*125, v4 + -125))/64, 30), 0)*8)), min(max(((v2 + min(v3*125, v4 + -125)) + 132)/8, (max(min(((v2 + min(v3*125, v4 + -125)) + 132)/64, 30), 0)*8) + 7), ((v1*4) + min((v2 + min(v3*125, v4 + -125))/8, max(min((v2 + min(v3*125, v4 + -125))/64, 30), 0)*8)) + 3) + 1))*8));1;407;;;;;
 ((12 - ((v0*131) + v1)) > (261 - ((v0*131) + v1)));0;57;;;;;
 (((max(min(v0, 0), -1)*8) + -2) >= ((((max(min(v0, 0), -1)*8) + -2) + ((max(min(v0, 0), -1)*-8) + 8)) - 1));0;98;;;;;
 (min((v0*336) + v1, min(v2 + v1, 2000) + -336) == min((v0*336) + v1, min(v2 + v1, 2000) + -336));1;246;;;;;
 ((max(min(v0, 999), 0) + (v1*16)) == (max(min(v0, 999), 0) + (v1*16)));1;132;;;;;
 ((max(v0*8, 239) - ((v1*4) + ((v2*132) + v3))) == (max(v0*8, 239) - ((v1*4) + ((v2*132) + v3))));1;70;;;;;
 (min(((min(v0, 1)*8) + 12)/7, 0 - ((max((v1/8) + ((v2*2) - (((v3 + v1) + 7)/8)), -1)*8)/7)) == min(((min(v0, 1)*8) + 12)/7, 0 - ((max((v1/8) + ((v2*2) - (((v3 + v1) + 7)/8)), -1)*8)/7)));1;122;;;;;
 (((v0 + v1) + 4) == ((((v0 + v1) + 4) + (max(494, 374) + -374)) - 1));0;67;;;;;
 (((v0*2) - ((((v1*4) + v2)*2) + v3)) == ((v0*2) - ((((v1*4) + v2)*2) + v3)));1;39;;;;;
 ((((max(min(v0, 2002), 3) + -3)/16) + (v1*8)) == (((max(min(v0, 2002), 3) + -3)/16) + (v1*8)));1;83;;;;;
 (((v0*34) + ((v1/250)*64)) == ((v0*34) + ((v1/250)*64)));1;63;;;;;
 (max(min(min(min(min(min(min((v2/125) + -1, (v2/125) + -1), (1871 - v1)/125), (1871 - v1)/125), min(min(1871 - v1, v2 + -125), (((((v3 + v4) + -125)/4)*4) - v1) + -1)/125), min(min(2003 - v1, v2 + -125), ((((v3 + v4)/4)*4) - v1) + 3)/125), (0 + ((v2 + 124)/125)) - 1) + 1, min(max(max(max(max((((max(v4/4, 0)*4) - v1) + 128)/125, (-4 - v1)/125), (128 - v1)/125), (128 - v1)/125), 0), ((v2 + 124)/125) + 0)) <= min(max(max(max(max((((max(v4/4, 0)*4) - v1) + 128)/125, (-4 - v1)/125), (128 - v1)/125), (128 - v1)/125), 0), ((v2 + 124)/125) + 0));0;3625;;;;;
 (((v0*-3) + (max(v1, 0) - v2)) == ((v0*-3) + (max(v1, 0) - v2)));1;45;;;;;
 ((min((((v0/8)*2) + v1)*4, v2 + -1) - (((((v0/8)*2) + v3) + v1)*4)) == (min((((v0/8)*2) + v1)*4, v2 + -1) - (((((v0/8)*2) + v3) + v1)*4)));1;80;;;;;
 (max(min((v1 + v2) + -1, ((v3*64) + 9) - 1) + 1, min(max(v2, v3*64), 9 + (v3*64))) <= min(max(v2, v3*64), 9 + (v3*64)));0;1263;;;;;
 (min(((v0 - v1) + 15)/16, max(((v2/8) - v1)/16, -1) + 1) == min(((v0 - v1) + 15)/16, max(((v2/8) - v1)/16, -1) + 1));1;68;;;;;
 (min(max(max(((v0 - (max(min(v1/2, 999), 0)*2)) + 7)/4, 1 - (max(min(v1/2, 999), 0)/2)), 0), (min(v2, 498) + 7)/2) == min(max(max(((v0 - (max(min(v1/2, 999), 0)*2)) + 7)/4, 1 - (max(min(v1/2, 999), 0)/2)), 0), (min(v2, 498) + 7)/2));1;143;;;;;
 ((v0 + -17) == (((v0 + -17) + (min((((((v1 + v2) + 3)/4)*4) - (v3*126)) - ((v2/4)*4), 114) + 24)) - 1));0;204;;;;;
 (max(((v0 + -114)/4) + (v1*4), (v0/4) + -32) == max(((v0 + -114)/4) + (v1*4), (v0/4) + -32));1;61;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((15*4) + v0) + 3) >= (((((16 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3));1;146;;;;;
 ((min(max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0), v2) + 2) == (min(max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0), v2) + 2));1;226;;;;;
 (min(v0*8, ((v1*671) + ((v2/8)*8)) + 660) == min(v0*8, ((v1*671) + ((v2/8)*8)) + 660));1;72;;;;;
 (max(0, min(13 - ((v0 % 5)*3), (0 + 3) - 1) + 1) <= 0);0;75;;;;;
 ((max(min(v0/2, 999), 0) + (v1*32)) == (max(min(v0/2, 999), 0) + (v1*32)));1;65;;;;;
 ((max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) - (max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + (v3*32))) == (max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) - (max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + (v3*32))));1;163;;;;;
 (((v0*8) - (((v1 + v2) + -1)/16)) == ((v0*8) - (((v1 + v2) + -1)/16)));1;48;;;;;
 (((v0*8) + -60) == ((((v0*8) + -60) + ((min((((((v1 + v2) + 124)/125)*16) - (v3*18)) - ((v2/125)*16), -4)*8) + 187)) - 1));0;234;;;;;
 (((v0*80) + ((v1*156) + v2)) == ((v0*80) + ((v1*156) + v2)));1;33;;;;;
 ((((min(min((min(v3*125, v4 + -125) + v2)/8, 249)*8, (min(max((min(v3*125, v4 + -125) + (v2 + 124))/8, 0), min((min(v3*125, v4 + -125) + v2)/8, 249) + -1)*8) + 18)*-1)/4)*4) == (min(min((min(v3*125, v4 + -125) + v2)/8, 249)*8, (min(max((min(v3*125, v4 + -125) + (v2 + 124))/8, 0), min((min(v3*125, v4 + -125) + v2)/8, 249) + -1)*8) + 18)*-1));0;2494;;;;;
 (min((v0/32)*32, (v1*32) + 1028) == min((v0/32)*32, (v1*32) + 1028));1;59;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 729)/671) == ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 729)/671));1;291;;;;;
 (min(v0 - ((v1/8)*8), v2 + 511) == min(v0 - ((v1/8)*8), v2 + 511));1;50;;;;;
 ((v0 + 3) < ((v0 + 1) + -4));0;39;;;;;
 (min((v0/2) + ((((min(((((v1 + v0) + 5)/2) - (v2*128)) - (v0/2), (v3*504) + 119) + 95)/72)*72) + (v2*128)), v4 + 24) == min((v0/2) + ((((min(((((v1 + v0) + 5)/2) - (v2*128)) - (v0/2), (v3*504) + 119) + 95)/72)*72) + (v2*128)), v4 + 24));1;155;;;;;
 (((((((v0 + v1) + 31)/32) - v2) + 1)/4) >= ((((((v0 + v1) + 63)/32) - v2) + -1)/4));0;1132;;;;;
 (((((((uint1)1 && ((((((v0*2) + 0)*4) + v1) + 0) <= ((v0*8) + v1))) && ((((((v0*2) + 1)*4) + v1) + 3) >= (((v0*8) + 7) + v1))) && ((((v2*4) + v3) + v4) <= (((v2*4) + v3) + v4))) && ((((v2*4) + v3) + v4) >= (((v2*4) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5));1;177;;;;;
 (max(min(max(((v0 - (v1*2)) + 155)/64, 0), ((v2 - v1) + 31)/32), min((((v3 + v0) - (v1*2)) + 91)/64, ((v2 - v1)/32) + -1) + 1) == max(min(max(((v0 - (v1*2)) + 155)/64, 0), ((v2 - v1) + 31)/32), min((((v3 + v0) - (v1*2)) + 91)/64, ((v2 - v1)/32) + -1) + 1));1;154;;;;;
 (min((max(min(v0/2, 999), 0) + (v1*126)) + 122, v2) == min((max(min(v0/2, 999), 0) + (v1*126)) + 122, v2));1;780;;;;;
 (min((min(((v0 + v1) + 47)/8, 254) - v2)/4, (509 - (v2*2))/8) == min((min(((v0 + v1) + 47)/8, 254) - v2)/4, (509 - (v2*2))/8));1;73;;;;;
 (((max(max(min((v0 + v1)/2, 1006), 7)*8, 115)/4) + (v2*4)) == ((max(max(min((v0 + v1)/2, 1006), 7)*8, 115)/4) + (v2*4)));1;88;;;;;
 (max(min(max(max((290 - (v0*8))/292, 0 - ((v0*4)/146)), 0), (((v1 - v0)*8) + 291)/292), (((v1 - v0)*8) + -28)/292) == max(min(max(max((290 - (v0*8))/292, 0 - ((v0*4)/146)), 0), (((v1 - v0)*8) + 291)/292), (((v1 - v0)*8) + -28)/292));1;164;;;;;
 (min((((v0 - v1)*8) + 171)/124, max(min((((v0 - v1)*8) + 47)/124, (((v0 - v1)*2) + 11)/31), (((v0 - v1)*8) + 44)/124) + 1) == min((((v0 - v1)*8) + 171)/124, max(min((((v0 - v1)*8) + 47)/124, (((v0 - v1)*2) + 11)/31), (((v0 - v1)*8) + 44)/124) + 1));1;86;;;;;
 (((min(v0 - v1, 64) + 3)/4) == ((min(v0 - v1, 64) + 3)/4));1;64;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 27)/17) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 27)/17));1;240;;;;;
 ((max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (((v3*8) + ((v4*2) + v5))*4))) == (max(min((v0*128) + v1, min(v2 + v1, 2000) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + (((v3*8) + ((v4*2) + v5))*4))));1;147;;;;;
 (((min(v0*63, 187) + v1) + v2) < ((min(v0*63, 187) + (v1 + 1)) + v2));1;81;;;;;
 (max((v0 + v1) + 8, v2) == max((v0 + v1) + 8, v2));1;57;;;;;
 ((max(min((v0*4) + v1, 999), 0) + (v2*4)) == (max(min((v0*4) + v1, 999), 0) + (v2*4)));1;75;;;;;
 ((((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/16) + 1) == (((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/16) + 1));1;263;;;;;
 ((((v0/2)*35) + ((v1/63)*8)) == (((v0/2)*35) + ((v1/63)*8)));1;62;;;;;
 (min(((v0*180) + v1) + 130, v2) == min(((v0*180) + v1) + 130, v2));1;39;;;;;
 ((min((v0/32)*32, (max((((v1 + v0) + 31)/32)*32, 1964) - (v2*33)) + 45) - min((v0/32)*32, 36)) == (min((v0/32)*32, (max((((v1 + v0) + 31)/32)*32, 1964) - (v2*33)) + 45) - min((v0/32)*32, 36)));1;338;;;;;
 (min(min(max(min(((v0 + v1) + 71)/8, 249), 0), v2 + 10)*8, (((v3*9) + v2)*8) + 13) == min(min(max(min(((v0 + v1) + 71)/8, 249), 0), v2 + 10)*8, (((v3*9) + v2)*8) + 13));1;107;;;;;
 (((((((v0 + v1) + 62)/63) - (v1/63))*2) + 3) == ((((((v0 + v1) + 62)/63) - (v1/63))*2) + 3));1;57;;;;;
 (((v0 + 264)/121) == ((v0 + 264)/121));1;36;;;;;
 ((min((v0 + v1) - (v2*504), v1 + 501) - ((v3*4) + ((v4*256) + v1))) == (min((v0 + v1) - (v2*504), v1 + 501) - ((v3*4) + ((v4*256) + v1))));1;77;;;;;
 (((((v0 % ((v1 + 46)/34))*-34)/17)*17) == ((v0 % ((v1 + 46)/34))*-34));1;111;;;;;
 (((((v0 + v1) + 55)/8) - (v2*3)) == ((((v0 + v1) + 55)/8) - (v2*3)));1;26;;;;;
 (((v0*1115) + ((v1/125)*128)) == ((v0*1115) + ((v1/125)*128)));1;81;;;;;
 (min(max(min(v0 + v1, 1999), 0) + (((v2 + 133)/4)*4), max(min(v0 + v1, 1875), -124) + 130) == min(max(min(v0 + v1, 1999), 0) + (((v2 + 133)/4)*4), max(min(v0 + v1, 1875), -124) + 130));1;109;;;;;
 (((((((uint1)1 && (min(v4, 0) <= min(v4, 0))) && (((min(v4, 0) + v5) + -1) >= ((v5 + min(v4, 0)) - 1))) && ((((0*4) + ((v1*8) + ((v2*128) + v3))) + 0) <= (((v2*128) + v3) + (v1*8)))) && ((((1*4) + ((v1*8) + ((v2*128) + v3))) + 3) >= (((v2*128) + v3) + ((v1*8) + 7)))) && (((v6*3) + v7) <= ((v6*3) + v7))) && (((v6*3) + v7) >= ((v6*3) + v7)));0;2042;;;;;
 (((v0*63) + ((v1*251) + ((max(min((v2/63)*8, 285), 36)*2) + v3))) == ((v0*63) + ((v1*251) + ((max(min((v2/63)*8, 285), 36)*2) + v3))));1;99;;;;;
 ((((v0*17) + v1) + -7) == (((((v0*17) + v1) + -7) + 23) - 1));0;65;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 507)/500) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 507)/500));1;156;;;;;
 (min(((max(v0*16, 10)*-8) + 280)/60, max(((max(v0*16, 10)*-2) + 55)/15, ((max(v0*16, 10)*-8) + 225)/60) + 1) == min(((max(v0*16, 10)*-8) + 280)/60, max(((max(v0*16, 10)*-2) + 55)/15, ((max(v0*16, 10)*-8) + 225)/60) + 1));1;109;;;;;
 (min(v0*2, ((v1*13) + ((v2/8)*2)) + 3) == min(v0*2, ((v1*13) + ((v2/8)*2)) + 3));1;60;;;;;
 ((v0 + -1) >= (((v0 - 1) + 7) + 1));0;75;;;;;
 (((min(v0, 1000) + 19)/4) == ((min(v0, 1000) + 19)/4));1;86;;;;;
 (((((((uint1)1 && ((((((v0*4) + v1) + -1) + 0) + -502) <= (((((v0*4) + 0) + v1) + -1) + -502))) && ((((((v0*4) + v1) + ((5 + -1) - 1)) + 3) + -502) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((5 + -1) - 1)) + -502))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (v4 <= v4)) && (v4 >= v4));1;229;;;;;
 (max(min(191 - (v0*24), (0 + 24) - 1) + 1, min(max(0 - (v0*24), 0), 24 + 0)) <= min(max(0 - (v0*24), 0), 24 + 0));0;899;;;;;
 ((((min((v0*8) + ((v1 + min((v2 + v3)*1000, v4 + -1000))/16), ((v1 + min((v2 + v3)*1000, v4 + -1000)) + 1015)/16)*-16)/16)*16) == (min((v0*8) + ((v1 + min((v2 + v3)*1000, v4 + -1000))/16), ((v1 + min((v2 + v3)*1000, v4 + -1000)) + 1015)/16)*-16));1;118;;;;;
 ((((((((v0 + v1) + 63)/8) - (v1/8))*8) + 123)/68) == (((((((v0 + v1) + 63)/8) - (v1/8))*8) + 123)/68));1;75;;;;;
 (min(max(min((v0 + v1)/8, 258), 9) + (((v2 + 18)/4)*4), max(min(((v0 + v1) + 132)/8, 249), 0) + 15) == min(max(min((v0 + v1)/8, 258), 9) + (((v2 + 18)/4)*4), max(min(((v0 + v1) + 132)/8, 249), 0) + 15));1;143;;;;;
 ((((max(v0, 249) - min(v1, 0)) + 71)/68) == (((max(v0, 249) - min(v1, 0)) + 71)/68));1;55;;;;;
 (((((((uint1)1 && ((((0*4) + (v0/32)) + 0) <= (0 + (v0/32)))) && ((((0*4) + ((v0/32) + 8)) + 3) >= (((4 + 0) - 1) + ((v0/32) + 8)))) && (v1 <= v1)) && (v1 >= v1)) && (((v2*824) + 0) <= ((v2*824) + 0))) && (((v2*824) + ((824 + 0) - 1)) >= ((v2*824) + ((824 + 0) - 1))));1;173;;;;;
 (((v0*124) + (v1*16)) == ((v0*124) + (v1*16)));1;42;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && (((((v0*8) + v1) + 0) + -8) <= ((((0 + v0)*8) + v1) + -32))) && (((((v0*8) + v1) + 3) + -8) >= ((((((4 + 0) - 1) + v0)*8) + v1) + -32))) && (max(min(v2, 2), 0) <= max(min(v2, 2), 0))) && (max(min(v2, 2), 0) >= max(min(v2, 2), 0)));0;242;;;;;
 ((max(min(((v0 + v1)/2) + (v2*4), 943), -56) + (v3*4)) == (max(min(((v0 + v1)/2) + (v2*4), 943), -56) + (v3*4)));1;79;;;;;
 (min(((((v0 + v1) + -1)/63) - (v1/63))*64, (v2*64) + 693) == min(((((v0 + v1) + -1)/63) - (v1/63))*64, (v2*64) + 693));1;75;;;;;
 (min((v0*18) + v1, v2 + 1) == min((v0*18) + v1, v2 + 1));1;44;;;;;
 (((v0 + 9)/4) != 0);0;392;;;;;
 (((v0*64) + ((v1*1008) + v2)) == ((v0*64) + ((v1*1008) + v2)));1;49;;;;;
 ((((min((v0*3) + v1, (v2 + v1) + -3)*4)/2)*2) == (min((v0*3) + v1, (v2 + v1) + -3)*4));1;71;;;;;
 (min(499 - (((v0*63) + ((v1*2) + v2))*4), 251 - (((v1*2) + v2)*4)) == min(499 - (((v0*63) + ((v1*2) + v2))*4), 251 - (((v1*2) + v2)*4)));1;124;;;;;
 (max(min(max(((v0 - max(min(v1*16, 1999), 0)) + 27)/28, 0), (v2 + 31)/28), min(min(min(max(min(v3*16, 1996), -3), (v4 + v0) + 3) + 4, v4 + v0) - max(min(v1*16, 1999), 0), v2 + 31)/28) == max(min(max(((v0 - max(min(v1*16, 1999), 0)) + 27)/28, 0), (v2 + 31)/28), min(min(min(max(min(v3*16, 1996), -3), (v4 + v0) + 3) + 4, v4 + v0) - max(min(v1*16, 1999), 0), v2 + 31)/28));1;252;;;;;
 (min((v0*8) + 68, v1) == min((v0*8) + 68, v1));1;38;;;;;
 (((v0*13) + ((v1/8)*2)) == ((v0*13) + ((v1/8)*2)));1;45;;;;;
 ((min(max(v0, 249) - (v1*128), min(v2, 0) + 127) - (min(v2, 0) + (v3*4))) == (min(max(v0, 249) - (v1*128), min(v2, 0) + 127) - (min(v2, 0) + (v3*4))));1;95;;;;;
 (((v0*126) + (((v1/2)*2) + (v2*7))) == ((v0*126) + (((v1/2)*2) + (v2*7))));1;54;;;;;
 (((v0*25) + ((v1/2000)*256)) == ((v0*25) + ((v1/2000)*256)));1;40;;;;;
 ((max(min(v0, 2928), 929) + (v1*4)) == (max(min(v0, 2928), 929) + (v1*4)));1;39;;;;;
 (0 >= ((0 + ((((v0 + v1) % 8) + 94)/32)) - 1));0;46;;;;;
 (min((v0 + v1)*64, (v2*8) + 98) == min((v0 + v1)*64, (v2*8) + 98));1;55;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + -7) <= ((((v0*4) + 0) + v1) + -7))) && (((((v0*4) + v1) + 3) + -7) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -7))) && (((((v2*8) + v3) + v4)*2) <= ((((v2*8) + v3) + v4)*2))) && (((((v2*8) + v3) + v4)*2) >= ((((v2*8) + v3) + v4)*2))) && (v5 <= v5)) && (v5 >= v5));1;193;;;;;
 (((v0*340) + (((v1*116) - min((v2 + v3) - (v4*1008), min(min(v1*116, 224) + ((v0*340) + v3), v3 + 897) + 101)) + v3)) == ((v0*340) + (((v1*116) - min((v2 + v3) - (v4*1008), min(min(v1*116, 224) + ((v0*340) + v3), v3 + 897) + 101)) + v3)));1;104;;;;;
 ((((v0 + v1)/4) + (v2*32)) == (((v0 + v1)/4) + (v2*32)));1;309;;;;;
 (((((v0 - v1)*16) + 974)/377) != 0);0;582;;;;;
 (min(max(min((v0 + v1)/2, 999), 0) + (((max(v2, 0) + 5)/2)*2), max(min(((v0 + v1) + 501)/2, 999), 0) + 4) == min(max(min((v0 + v1)/2, 999), 0) + (((max(v2, 0) + 5)/2)*2), max(min(((v0 + v1) + 501)/2, 999), 0) + 4));1;108;;;;;
 (max(min((((min((min((min((v0*126) + 121, v1)/2)*2, (v0*126) + 120) + (v2/2)) + 1, v3) - (v0*126)) - (v2/2)) + 13)/6, max(((3 - (v2/2))/6) + (v0*-21), -1) + 1), min((min(min((min((min((v0*126) + 121, v1)/2)*2, (v0*126) + 120) + (v2/2)) + 1, v3) - ((v2/2) + (v0*126)), ((min((min((min((v0*126) + 121, v1)/2)*2, (v0*126) + 120) + (v2/2)) + 1, v3) - (v0*126)) - (v2/2)) + 5) + 2)/6, ((997 - (v2/2))/6) + (v0*-21)) + 1) == max(min((((min((min((min((v0*126) + 121, v1)/2)*2, (v0*126) + 120) + (v2/2)) + 1, v3) - (v0*126)) - (v2/2)) + 13)/6, max(((3 - (v2/2))/6) + (v0*-21), -1) + 1), min((min(min((min((min((v0*126) + 121, v1)/2)*2, (v0*126) + 120) + (v2/2)) + 1, v3) - ((v2/2) + (v0*126)), ((min((min((min((v0*126) + 121, v1)/2)*2, (v0*126) + 120) + (v2/2)) + 1, v3) - (v0*126)) - (v2/2)) + 5) + 2)/6, ((997 - (v2/2))/6) + (v0*-21)) + 1));1;305;;;;;
 ((((max(min(v0 + v1, 1983), -16) - max(min(v1, 2006), 7)) + 157)/128) == (((max(min(v0 + v1, 1983), -16) - max(min(v1, 2006), 7)) + 157)/128));1;149;;;;;
 (max(min(min(min(min(min(((min(v3 + v4, min(v2, 1995) + 5) - v5)/4) + -1, ((v2 - v5) + 1)/4), ((v2 - v5) + 1)/4), ((min(v3 + v4, min(v2, 1998) + 2) - v5) + -1)/4), (1996 - v5)/4), (0 + (((min((max(min((v6/4)*8, 4012), 13) + 483)/2, ((max(min((((v7 + v6) + -1)/4)*8, 3994), -5) + 19)/2) - (v8*252)) - ((max(min((v6/4)*8, 4012), 13) + -19)/2))/4) + 2)) - 1) + 1, min(max(max(max(0 - (v5/4), (0 - v5)/4), max(((v4 - v5) + 3)/4, 0 - (v5/4))), 0), (((min((max(min((v6/4)*8, 4012), 13) + 483)/2, ((max(min((((v7 + v6) + -1)/4)*8, 3994), -5) + 19)/2) - (v8*252)) - ((max(min((v6/4)*8, 4012), 13) + -19)/2))/4) + 2) + 0)) <= min(max(max(max(0 - (v5/4), (0 - v5)/4), max(((v4 - v5) + 3)/4, 0 - (v5/4))), 0), (((min((max(min((v6/4)*8, 4012), 13) + 483)/2, ((max(min((((v7 + v6) + -1)/4)*8, 3994), -5) + 19)/2) - (v8*252)) - ((max(min((v6/4)*8, 4012), 13) + -19)/2))/4) + 2) + 0));0;5362;;;;;
 (max(((v0 - v1) + 13)/64, 0) >= ((max(((v0 - v1) + 13)/64, 0) + max((((v0 - v1) + 76)/64) - max(((v0 - v1) + 13)/64, 0), 0)) - 1));0;972;;;;;
 ((v0 - (((v1 + v2) + -1)/17)) == (v0 - (((v1 + v2) + -1)/17)));1;42;;;;;
 (((((((uint1)1 && (((v0 + v1) % 16) <= ((v0 + v1) % 16))) && (((v0 + v1) % 16) >= ((v0 + v1) % 16))) && ((((((v2/4) + v3)*4) + 0) + -7) <= (((((v2/4) + v3)*4) + 0) + -7))) && ((((((v2/4) + v3)*4) + 3) + -7) >= (((((v2/4) + v3)*4) + ((4 + 0) - 1)) + -7))) && (v4 <= v4)) && (v4 >= v4));1;235;;;;;
 ((v0 - ((v1/6)*63)) == (v0 - ((v1/6)*63)));1;38;;;;;
 ((max(min(v0, 5), -26) + -5) == (((max(min(v0, 5), -26) + -5) + (7 - max(min(v0, 5), -26))) - 1));0;103;;;;;
 (min(v0/2, min(max((v0/2) + v1, 999), (min(v0/2, 2) + ((v2/2)*2)) + 1) + 1) == min(v0/2, min(max((v0/2) + v1, 999), (min(v0/2, 2) + ((v2/2)*2)) + 1) + 1));1;86;;;;;
 (min((max(v0, 249) - (v1*16)) - min(v2, 0), min(v3, 15) + 8) == min((max(v0, 249) - (v1*16)) - min(v2, 0), min(v3, 15) + 8));1;83;;;;;
 ((((max(min(((v0 + v1)/4)*8, 4012), 13) + -13)/2) + (v2*68)) == (((max(min(((v0 + v1)/4)*8, 4012), 13) + -13)/2) + (v2*68)));1;75;;;;;
 ((min(v0 + 116, v1) - ((v2*4) + ((v3*60) + v0))) == (min(v0 + 116, v1) - ((v2*4) + ((v3*60) + v0))));1;73;;;;;
 ((((min((((v0/65)*2) + v1)*4, ((((v2 + v0) + 64)/65)*8) + 4)/4) - v1) - ((v0/65)*2)) == (((min((((v0/65)*2) + v1)*4, ((((v2 + v0) + 64)/65)*8) + 4)/4) - v1) - ((v0/65)*2)));1;102;;;;;
 (((v0*4) + ((v1/4) - (((v2 + v1) + 31)/4))) == ((v0*4) + ((v1/4) - (((v2 + v1) + 31)/4))));1;48;;;;;
 ((v0 - (v1*532)) == (v0 - (v1*532)));1;599;;;;;
 (((min(v0 - v1, 60) + 11)/12) == ((min(v0 - v1, 60) + 11)/12));1;98;;;;;
 (min(min((2007 - (v0*8))/3, 669 - ((v0*8)/3)), ((min((max(min(((v1 + v2) + 31)/8, 249), 0) - ((v3/4)*63)) - max(min(v2/8, 250), 1), 61)*8)/3) + 5) == min(min((2007 - (v0*8))/3, 669 - ((v0*8)/3)), ((min((max(min(((v1 + v2) + 31)/8, 249), 0) - ((v3/4)*63)) - max(min(v2/8, 250), 1), 61)*8)/3) + 5));1;137;;;;;
 ((((((v0 + v1) + 31)/32)*4) - ((v2*65) + v3)) == (((((v0 + v1) + 31)/32)*4) - ((v2*65) + v3)));1;1381;;;;;
 ((((min(((min(v0/8, 4)*2) + v1)*4, (max(((v2 + v0) + 23)/8, 249)*8) + 36)/4) - v1) - (min(v0/8, 4)*2)) == (((min(((min(v0/8, 4)*2) + v1)*4, (max(((v2 + v0) + 23)/8, 249)*8) + 36)/4) - v1) - (min(v0/8, 4)*2)));1;135;;;;;
 ((((((v0 + v1) + 3)/2) - (v2*504)) - (v1/2)) == (((((v0 + v1) + 3)/2) - (v2*504)) - (v1/2)));1;47;;;;;
 ((((((v0 + v1) + 3)/4) - (v2*252)) - (v1/4)) == (((((v0 + v1) + 3)/4) - (v2*252)) - (v1/4)));1;61;;;;;
 ((((((v0 + v1) + -1)/63)*64) - ((v2*4) + v3)) == (((((v0 + v1) + -1)/63)*64) - ((v2*4) + v3)));1;55;;;;;
 (max((v0 + 1)/32, 0) >= ((max((v0 + 1)/32, 0) + ((max(v0/32, -1) - max((v0 + 1)/32, 0)) + 1)) - 1));0;702;;;;;
 (max((min(v0, 15) + 15)/4, max(min(v1, 15)/4, -3) + 3) == max((min(v0, 15) + 15)/4, max(min(v1, 15)/4, -3) + 3));1;67;;;;;
 (0 == ((0 + (11 - max(v0*4, 7))) - 1));0;58;;;;;
 (((v0*2) + 1) >= ((((v0 - 1)*2) + 2) + 1));1;46;;;;;
 (((((((uint1)1 && (((0 + (v0 + 1)) + -7) <= (((((0*4) + v0) + 0) + max(-3, 0)) + -6))) && (((3 + (v0 + 7)) + -7) >= (((((((((0 + 7)/4) + 0) - 1)*4) + v0) + ((4 + 0) - 1)) + 3) + -6))) && (((((v1*2) + v2) + (v3 + v4)) + -3) <= ((((v1*2) + v2) + (v3 + v4)) + -3))) && (((((v1*2) + v2) + (v3 + v4)) + -3) >= ((((v1*2) + v2) + (v3 + v4)) + -3))) && (v5 <= v5)) && (v5 >= v5));1;223;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 18)/16) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 18)/16));1;251;;;;;
 (max(min(249, (((v1*2) + 1) + 128) - 1) + 1, min(max(0, (v1*2) + 1), 128 + ((v1*2) + 1))) <= min(max(0, (v1*2) + 1), 128 + ((v1*2) + 1)));0;1073;;;;;
 ((((v0/8)*132) + (max(min((v1/500)*8, 67), 36)*8)) == (((v0/8)*132) + (max(min((v1/500)*8, 67), 36)*8)));1;72;;;;;
 ((max(min(v0*2, 499), 0) - ((v1*4) + v2)) == (max(min(v0*2, 499), 0) - ((v1*4) + v2)));1;54;;;;;
 (min(((v0 + v1) + 5)/2, v2 + 30) == min(((v0 + v1) + 5)/2, v2 + 30));1;56;;;;;
 (min(max(min(v0/2, 999), 0) + v1, ((v2*16) + v3) + 12) == min(max(min(v0/2, 999), 0) + v1, ((v2*16) + v3) + 12));1;70;;;;;
 (((((v0 % (((v1*8) + 54)/36))*-288)/32)*32) == ((v0 % (((v1*8) + 54)/36))*-288));1;82;;;;;
 ((v0 + 6) == (v0 + 6));1;42;;;;;
 (max(-799 - ((v0 - v1)*8), ((v0 - v1)*8) + 296) >= 0);0;758;;;;;
 (min(507 - (((v0*32) + v1)*4), (((((v2 + v3) + 15)/4) - (((v0*32) + v1) + v4))*4) + 10) == min(507 - (((v0*32) + v1)*4), (((((v2 + v3) + 15)/4) - (((v0*32) + v1) + v4))*4) + 10));1;99;;;;;
 (min(((v0 + v1) + -999)/2, ((v1/2) + (v2*503)) + -2) == min(((v0 + v1) + -999)/2, ((v1/2) + (v2*503)) + -2));1;83;;;;;
 (((((v0 + v1) + -1)/8) - ((((v2*8) + v3)*4) + v4)) == ((((v0 + v1) + -1)/8) - ((((v2*8) + v3)*4) + v4)));1;85;;;;;
 (min((v0*3) + (max(min(v1, 31), 0)*8), v2 + 24) == min((v0*3) + (max(min(v1, 31), 0)*8), v2 + 24));1;63;;;;;
 (min((v0*8) + 201, v1) == min((v0*8) + 201, v1));1;43;;;;;
 (((v0*256) + -60) == ((((v0*256) + -60) + ((min(v1, 1)*256) + 437)) - 1));0;93;;;;;
 (((((((uint1)1 && ((0 + ((v0*32) + v1)) <= ((v0*32) + v1))) && ((3 + (((v0*32) + v1) + 28)) >= (((v0*32) + 31) + v1))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (v4 <= v4)) && (v4 >= v4));1;127;;;;;
 ((((v0*65) + v1) + -7) == (((((v0*65) + v1) + -7) + 71) - 1));0;61;;;;;
 ((((v0*48)/2)*2) == (v0*48));1;36;;;;;
 (((v0 + 255)/252) != 0);0;350;;;;;
 ((((-149 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*7)) == (((-149 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*7)));1;62;;;;;
 (min(max(min(v0, 1001), 2) + 32, v1) == min(max(min(v0, 1001), 2) + 32, v1));1;72;;;;;
 (min((((v0 + v1) + 62)/63)*8, v2 + 7) == min((((v0 + v1) + 62)/63)*8, v2 + 7));1;89;;;;;
 ((((v0*2) + v1) - ((v2*-12) + (min((((min(((v2*3) + v3)*4, (v4 - v1) + 8) + 7)/4)*4) + v1, min((v3*4) + ((v2*12) + v1), min((v2*12) + v1, v4) + 8) + 4) + (v3*-4)))) == (((v0*2) + v1) - ((v2*-12) + (min((((min(((v2*3) + v3)*4, (v4 - v1) + 8) + 7)/4)*4) + v1, min((v3*4) + ((v2*12) + v1), min((v2*12) + v1, v4) + 8) + 4) + (v3*-4)))));1;211;;;;;
 ((min(v0*8, ((min(v1 + 9, v0)*8) - (v2*20)) + 16) - (((v0*2) + v3)*4)) == (min(v0*8, ((min(v1 + 9, v0)*8) - (v2*20)) + 16) - (((v0*2) + v3)*4)));1;57;;;;;
 (((((((uint1)1 && ((((((v0*3) + v1)*4) + v2) + 0) <= ((((v0*3) + v1)*4) + v2))) && ((((((v0*3) + v1)*4) + v2) + 3) >= (((((v0*3) + v1)*4) + 3) + v2))) && (v3 <= (0 + v3))) && ((v3 + 124) >= (((125 + 0) - 1) + v3))) && (v4 <= v4)) && (((v5 + v4) + -1) >= ((v5 + v4) - 1)));1;210;;;;;
 (((((v0 % (((v1*64) + 140)/56))*56)/4)*4) == ((v0 % (((v1*64) + 140)/56))*56));1;90;;;;;
 ((((((((v0 + v1) + -1)/1000) - (v1/1000))*256) + 739)/208) == (((((((v0 + v1) + -1)/1000) - (v1/1000))*256) + 739)/208));1;85;;;;;
 ((v0 + 5) == (v0 + 5));1;11;;;;;
 ((v0 + 4) != 0);0;262;;;;;
 (min(((((v0 - v1) + 17)/4)*4) + v1, v0 + 14) == min(((((v0 - v1) + 17)/4)*4) + v1, v0 + 14));1;70;;;;;
 (0 >= ((0 + ((v0 - (max(((v1/32)*4) - v2, (v0*4) + 39)/4)) + 10)) - 1));0;888;;;;;
 (((((v0 + v1) + 83)/4) + (((((v0 + v1) + 3) % 4) + 45)/4)) == ((((v0 + v1) + 83)/4) + (((((v0 + v1) + 3) % 4) + 45)/4)));1;71;;;;;
 ((v0 + v1) >= ((v0 + (v1 - 1)) + 1));1;109;;;;;
 (min(max(((max(min(v0, 3994), -5) + 5)/2) - ((max(min(v1, 4012), 13) + -7)/2), (((max(min(v0, 3994), -5) + 7)/2) - ((max(min(v1, 4012), 13) + -13)/2)) + -1), v2) == min(max(((max(min(v0, 3994), -5) + 5)/2) - ((max(min(v1, 4012), 13) + -7)/2), (((max(min(v0, 3994), -5) + 7)/2) - ((max(min(v1, 4012), 13) + -13)/2)) + -1), v2));1;174;;;;;
 (max(min((v1 + v2) + -1, (((((v3*23) + v4)*2) + -4) + ((max(v3*23, 44)*-2) + 138)) - 1) + 1, min(max(v2, (((v3*23) + v4)*2) + -4), ((max(v3*23, 44)*-2) + 138) + ((((v3*23) + v4)*2) + -4))) <= min(max(v2, (((v3*23) + v4)*2) + -4), ((max(v3*23, 44)*-2) + 138) + ((((v3*23) + v4)*2) + -4)));0;2497;;;;;
 (((((((v0 + v1) + -1)/32) - (v1/32)) + 11)/9) == ((((((v0 + v1) + -1)/32) - (v1/32)) + 11)/9));1;68;;;;;
 (min((((v0 + v1) + 124)/125)*16, v2 + 117) == min((((v0 + v1) + 124)/125)*16, v2 + 117));1;53;;;;;
 ((max(min(v0, 36), 5) + (v1*4)) == (max(min(v0, 36), 5) + (v1*4)));1;32;;;;;
 (min(((v0 + v1) + -1)/2, ((v2*32) + v3) + 31) == min(((v0 + v1) + -1)/2, ((v2*32) + v3) + 31));1;49;;;;;
 (0 == ((0 + (107 - max(((v0*14) + v1)*4, 103))) - 1));0;69;;;;;
 (min((v0*20) + (((v1*4) + v2)*8), (min(((v3 + v4) + 251)/63, ((v1*4) + v2) + 1)*8) + 9) == min((v0*20) + (((v1*4) + v2)*8), (min(((v3 + v4) + 251)/63, ((v1*4) + v2) + 1)*8) + 9));1;102;;;;;
 (((v0*4) + ((v1*156) + v2)) == ((v0*4) + ((v1*156) + v2)));1;55;;;;;
 ((max(min((v0*128) + v1, min(v2 + v1, 1997) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 9) + (v3*4))) == (max(min((v0*128) + v1, min(v2 + v1, 1997) + -128), -127) - (max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 9) + (v3*4))));1;143;;;;;
 ((v0 - (((v1*16) + v2)*4)) == (v0 - (((v1*16) + v2)*4)));1;23;;;;;
 ((((max(v0, 0) - v1) + 104)/103) != 0);0;530;;;;;
 (min((((v0 + v1) + 15)/16)*8, (v2*8) + 55) == min((((v0 + v1) + 15)/16)*8, (v2*8) + 55));1;56;;;;;
 ((max(min(v0, 999), 0) - (((v1*16) + v2)*4)) == (max(min(v0, 999), 0) - (((v1*16) + v2)*4)));1;66;;;;;
 ((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 39)/28) == (((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 39)/28));1;289;;;;;
 (min(v0*8, (((v1*4) + v2)*8) + 20) == min(v0*8, (((v1*4) + v2)*8) + 20));1;51;;;;;
 (min(((v0*4) + v1)*8, (v2*8) + 18) == min(((v0*4) + v1)*8, (v2*8) + 18));1;47;;;;;
 ((((v0 + v1)*2) + -240) >= (((((v0 + v1)*2) + -240) + 2) - 1));0;64;;;;;
 (min(((v0 + v1) + -97)/16, (v1/16) + (v2*8)) == min(((v0 + v1) + -97)/16, (v1/16) + (v2*8)));1;51;;;;;
 (min((((v0 + v1) + 124)/125)*128, ((v2*1116) + ((v1/125)*128)) + 934) == min((((v0 + v1) + 124)/125)*128, ((v2*1116) + ((v1/125)*128)) + 934));1;95;;;;;
 (max(-490 - (max(min(((v0*32) - (v1*636)) - ((v2/63)*32), 392), -243)*2), (max(min(v3, 243), -392)*2) + -490) == max(-490 - (max(min(((v0*32) - (v1*636)) - ((v2/63)*32), 392), -243)*2), (max(min(v3, 243), -392)*2) + -490));1;111;;;;;
 (min(125 - (v0*63), v1 - (max((v2*500) - v3, -500) + (((v0*63) + (v4*125)) + ((v5*250) + v1)))) == min(125 - (v0*63), v1 - (max((v2*500) - v3, -500) + (((v0*63) + (v4*125)) + ((v5*250) + v1)))));1;101;;;;;
 ((((((v0 + v1) + 124)/125)*16) - ((v2*9) + v3)) == (((((v0 + v1) + 124)/125)*16) - ((v2*9) + v3)));1;64;;;;;
 (((((v0 % ((v1 + 65)/64))*-64)/32)*32) == ((v0 % ((v1 + 65)/64))*-64));1;66;;;;;
 (((v0*8) + (((((max(min((v1*-4) + ((max(min(((v2 + v3) + -1)/63, 31), 0)*8) - v0), -16)*-1, (v1*4) + (v0 - (max(min(((v2 + v3) + -1)/63, 31), 0)*8)))*-8) + 161)/20)*20) + (v1*32))) == ((v0*8) + (((((max(min((v1*-4) + ((max(min(((v2 + v3) + -1)/63, 31), 0)*8) - v0), -16)*-1, (v1*4) + (v0 - (max(min(((v2 + v3) + -1)/63, 31), 0)*8)))*-8) + 161)/20)*20) + (v1*32))));1;208;;;;;
 (((((max(min(((v0 + v1) + 135)/64, 31), 0) - max(min(v1/64, 36), 5))*8) + 165)/125) == ((((max(min(((v0 + v1) + 135)/64, 31), 0) - max(min(v1/64, 36), 5))*8) + 165)/125));1;312;;;;;
 (((((v0 - ((max(min(v1/8, 249), 0)/8)*8))*8) + 69)/36) == ((((v0 - ((max(min(v1/8, 249), 0)/8)*8))*8) + 69)/36));1;84;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 34)/16) >= 0);1;82;;;;;
 (((min(max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 999)), 0) - max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 1125)), 126), -128)/8)*8) == min(max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 999)), 0) - max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 1125)), 126), -128));0;2397;;;;;
 ((((v0 + v1)/2) + -8) == (((((v0 + v1)/2) + -8) + 40) - 1));0;56;;;;;
 ((((min(v0*125, v1 + -125) + v2)/4) + (v3*8)) == (((min(v0*125, v1 + -125) + v2)/4) + (v3*8)));1;55;;;;;
 ((min((((v0 + v1) + 1)/2) - (v2*504), (v1/2) + 503) - ((v1/2) + (v3*4))) == (min((((v0 + v1) + 1)/2) - (v2*504), (v1/2) + 503) - ((v1/2) + (v3*4))));1;1789;;;;;
 ((v0*8) == (((v0*8) + (((v1 - v0)*8) + 8)) - 1));0;67;;;;;
 ((max(min(v0/8, 249), 0) + (v1*36)) == (max(min(v0/8, 249), 0) + (v1*36)));1;47;;;;;
 (((((v0 % ((v1 + 47)/36))*-36)/4)*4) == ((v0 % ((v1 + 47)/36))*-36));1;48;;;;;
 (((((((v0 + v1) + 7)/8) - (v1/8))/128) + 1) == ((((((v0 + v1) + 7)/8) - (v1/8))/128) + 1));1;39;;;;;
 ((((106 - min(min((v0*140) + ((v1/63)*8), ((((v2 + v1) + 62)/63)*8) + 19)*8, ((v0*1120) + ((v1/63)*64)) + 7))/4) + (min((((v2 + v1) + 62)/63)*8, ((v0*140) + ((v1/63)*8)) + 121)*2)) == (((106 - min(min((v0*140) + ((v1/63)*8), ((((v2 + v1) + 62)/63)*8) + 19)*8, ((v0*1120) + ((v1/63)*64)) + 7))/4) + (min((((v2 + v1) + 62)/63)*8, ((v0*140) + ((v1/63)*8)) + 121)*2)));1;191;;;;;
 ((((-938 - ((min(v0*1000, v1 + -1000) + v2) % 62))/62) + (v3*4)) == (((-938 - ((min(v0*1000, v1 + -1000) + v2) % 62))/62) + (v3*4)));1;73;;;;;
 ((((max(v0 + v1, -8) - min(v1, 2007)) + 1025)/1009) == (((max(v0 + v1, -8) - min(v1, 2007)) + 1025)/1009));1;71;;;;;
 (min(((v0*2) + v1)*4, (max(min(((v2 + v3) + 7)/8, 249), 0)*8) + 14) == min(((v0*2) + v1)*4, (max(min(((v2 + v3) + 7)/8, 249), 0)*8) + 14));1;110;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*64) + 803)/697) == (((((((v0 + v1) + -1)/63) - (v1/63))*64) + 803)/697));1;59;;;;;
 (((min(v0*252, 748)/4)*4) == min(v0*252, 748));1;82;;;;;
 (max((((v0 - v1)*8) + 88)/1220, 0) >= ((max((((v0 - v1)*8) + 88)/1220, 0) + max(((((v0 - v1)*8) + 1327)/1220) - max((((v0 - v1)*8) + 88)/1220, 0), 0)) - 1));0;1148;;;;;
 ((((v0*16) + 460)/284) != 0);0;419;;;;;
 (min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7), max(min((v1/500)*8, 36), 5) + v2) == min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7), max(min((v1/500)*8, 36), 5) + v2));1;112;;;;;
 ((v0 + -240) >= (((v0 + -240) + (min(v1 - (max(v2, 16)*2), -46) + 47)) - 1));1;98;;;;;
 (((v0*3) + v1) < ((v0*3) + (v1 + 1)));1;43;;;;;
 (min(max(max(((v0/250)*256) + -60, v1), v2 + v1), ((((v0/250)*32) + v3)*8) + -55) == min(max(max(((v0/250)*256) + -60, v1), v2 + v1), ((((v0/250)*32) + v3)*8) + -55));1;78;;;;;
 (((min(v0 - (v1*16), ((v2 + v3)/8) + 15)*-8) + ((v4*4) + ((((v2 + v3)/8)*8) + (v5*12)))) == ((min(v0 - (v1*16), ((v2 + v3)/8) + 15)*-8) + ((v4*4) + ((((v2 + v3)/8)*8) + (v5*12)))));1;107;;;;;
 ((min((v0 - v1)*64, 207) + -207) >= (((min((v0 - v1)*64, 207) + -207) + (212 - min((v0 - v1)*64, 207))) - 1));0;71;;;;;
 ((((((((v0 + v1) + 64)/65) - (v1/65))*64) + 919)/726) == (((((((v0 + v1) + 64)/65) - (v1/65))*64) + 919)/726));1;56;;;;;
 (((v0 - (v1*503)) - (v2*63)) == ((v0 - (v1*503)) - (v2*63)));1;45;;;;;
 (((v0*-32) + ((((v1 + v2) + -1)/16) - v3)) == ((v0*-32) + ((((v1 + v2) + -1)/16) - v3)));1;57;;;;;
 (((v0 + 258)/251) != 0);0;351;;;;;
 (((v0*2) + v1) == ((v0*2) + v1));1;64;;;;;
 (min(((v0 + v1) + 63)/8, ((v2*4) + v3) + -3) == min(((v0 + v1) + 63)/8, ((v2*4) + v3) + -3));1;64;;;;;
 (0 >= ((0 + (13 - max((v0 % 2)*7, 6))) - 1));0;57;;;;;
 ((max((((v0 + v1) + -1)/65)*8, 239) - ((v2*128) + v3)) == (max((((v0 + v1) + -1)/65)*8, 239) - ((v2*128) + v3)));1;71;;;;;
 (min(((v0 + v1) + 376)/63, v2 + -3) == min(((v0 + v1) + 376)/63, v2 + -3));1;46;;;;;
 (((((((uint1)1 && ((v0/8) <= (v0/8))) && (((v0 + 1007)/8) >= ((v0 + 1007)/8))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (((0*4) + 0) <= 0)) && (((4*4) + 3) >= 19));1;132;;;;;
 (((((((v0 + v1) + 1)/2) - (v1/2))/16) + 1) == ((((((v0 + v1) + 1)/2) - (v1/2))/16) + 1));1;75;;;;;
 (max(min(max(max((v0 + 15)/16, v1), 0), (min(v2, 3) + v1) + 1), min(min(((v3 + v0) + -4)/16, min(v2, 3) + v1), 124) + 1) == max(min(max(max((v0 + 15)/16, v1), 0), (min(v2, 3) + v1) + 1), min(min(((v3 + v0) + -4)/16, min(v2, 3) + v1), 124) + 1));1;129;;;;;
 (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - (v2*4)) - max(min((v1/63)*8, 285), 36)) == ((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - (v2*4)) - max(min((v1/63)*8, 285), 36)));1;95;;;;;
 (min((v0*8) + 98, v1) == min((v0*8) + 98, v1));1;52;;;;;
 (((32 - v0) - (v1/8)) == ((32 - v0) - (v1/8)));1;31;;;;;
 (((v0/32) + (((v0 % 32) + 156)/32)) <= (v0/32));0;44;;;;;
 (((v0/8) + (v1*42)) == ((v0/8) + (v1*42)));1;52;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 15) == min(((v0 + v1) + -1)/8, v2 + 15));1;1202;;;;;
 (((max(((v0 + v1) + 7)/8, 249) - (v2*4)) - ((v3*2) + v4)) == ((max(((v0 + v1) + 7)/8, 249) - (v2*4)) - ((v3*2) + v4)));1;64;;;;;
 (min((((max(v0, 3) + -3)/16)*16) + 53, v1) == min((((max(v0, 3) + -3)/16)*16) + 53, v1));1;54;;;;;
 (max(min(((v0 - min(v1*16, (v2*16) + 787)) + 752)/3, 2), min((min((v3 + v0) - min((((((v2 - v1) + 57)/8)*8) + v1)*16, (v2*16) + 787), ((v3 + v0) - min(v1*16, (v2*16) + 787)) + 127) + 622)/3, 1) + 1) == max(min(((v0 - min(v1*16, (v2*16) + 787)) + 752)/3, 2), min((min((v3 + v0) - min((((((v2 - v1) + 57)/8)*8) + v1)*16, (v2*16) + 787), ((v3 + v0) - min(v1*16, (v2*16) + 787)) + 127) + 622)/3, 1) + 1));1;210;;;;;
 (((v0 + 513)/503) == ((v0 + 513)/503));1;42;;;;;
 (((v0*4) + ((v1*500) + (v2 + v3))) == ((v0*4) + ((v1*500) + (v2 + v3))));1;49;;;;;
 (((v0/63) + (v1*9)) == ((v0/63) + (v1*9)));1;58;;;;;
 (min(max(min((v0/63)*8, 285), 36)*8, (v1*8) + 7) == min(max(min((v0/63)*8, 285), 36)*8, (v1*8) + 7));1;85;;;;;
 (max(min(19 - (v0*7), (0 + 7) - 1) + 1, min(max(0 - (v0*7), 0), 7 + 0)) <= min(max(0 - (v0*7), 0), 7 + 0));0;807;;;;;
 (min(2 - (max((v0/32) + ((v1*4) - (((v2 + v0) + -1)/32)), -3)*4), (min(((((v2 + v0) + -1)/32) - (v1*4)) - (v0/32), 3)*4) + 8) == min(2 - (max((v0/32) + ((v1*4) - (((v2 + v0) + -1)/32)), -3)*4), (min(((((v2 + v0) + -1)/32) - (v1*4)) - (v0/32), 3)*4) + 8));1;437;;;;;
 (min(v0*2, ((max(min(v1/2, 999), 0)*2) + ((v2*502) + ((((min((v2*-251) + v3, 247)*2) + 11)/253)*253))) + 241) == min(v0*2, ((max(min(v1/2, 999), 0)*2) + ((v2*502) + ((((min((v2*-251) + v3, 247)*2) + 11)/253)*253))) + 241));1;123;;;;;
 (((v0*-12) + (((((v1 + v2) + -1)/8) - (v3*36)) - (v2/8))) == ((v0*-12) + (((((v1 + v2) + -1)/8) - (v3*36)) - (v2/8))));1;107;;;;;
 ((((((v0 + v1) + 499)/500)*8) - ((((v2*3) + v3)*4) + v4)) == (((((v0 + v1) + 499)/500)*8) - ((((v2*3) + v3)*4) + v4)));1;73;;;;;
 (((v0*8) - ((v1*31) + v2)) == ((v0*8) - ((v1*31) + v2)));1;36;;;;;
 (min(994 - (max(min(v0/2, 999), 0) + (v1*63)), min((max(min(((v2 + v0) + 1)/2, 999), 0) - (v1*63)) - max(min(v0/2, 999), 0), 59) + 5) == min(994 - (max(min(v0/2, 999), 0) + (v1*63)), min((max(min(((v2 + v0) + 1)/2, 999), 0) - (v1*63)) - max(min(v0/2, 999), 0), 59) + 5));1;155;;;;;
 (((v0 + 71)/64) != 0);0;387;;;;;
 ((((((((v0 + v1) + -1)/8) - (v1/8))*8) + 81)/63) == (((((((v0 + v1) + -1)/8) - (v1/8))*8) + 81)/63));1;90;;;;;
 (min(min(v0 + 60, v1), ((v2*8) + v0) + 2) == min(min(v0 + 60, v1), ((v2*8) + v0) + 2));1;47;;;;;
 (((((((v0 + v1) + 127)/32) - (v1/32)) + 9)/2) == ((((((v0 + v1) + 127)/32) - (v1/32)) + 9)/2));1;70;;;;;
 (min(((v0 + v1) + 503)/4, v2 + 3) == min(((v0 + v1) + 503)/4, v2 + 3));1;60;;;;;
 ((((v0*8) - (v1*63)) - ((v2*4) + (((v3/8)*8) + (v4*36)))) == (((v0*8) - (v1*63)) - ((v2*4) + (((v3/8)*8) + (v4*36)))));1;92;;;;;
 ((max(min(v0/2, 999), 0) + (v1*250)) == (max(min(v0/2, 999), 0) + (v1*250)));1;69;;;;;
 ((((((v0 + -1)/31) - (v1*12)) - (v2*4)) - (v3/62)) == (((((v0 + -1)/31) - (v1*12)) - (v2*4)) - (v3/62)));1;64;;;;;
 ((((((v0 + v1) + 314)/63)*2) - ((v2*2) + v3)) == (((((v0 + v1) + 314)/63)*2) - ((v2*2) + v3)));1;70;;;;;
 (((v0*1012) + ((v1/8)*8)) == ((v0*1012) + ((v1/8)*8)));1;71;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0)*2, ((v2*125) + (max(min(v1/2, 999), 0)*2)) + 123) == min(max(min(((v0 + v1) + 1)/2, 999), 0)*2, ((v2*125) + (max(min(v1/2, 999), 0)*2)) + 123));1;90;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0) - ((v2*4) + v3), 62 - (v2*4)) == min(max(min(((v0 + v1) + -1)/2, 999), 0) - ((v2*4) + v3), 62 - (v2*4)));1;84;;;;;
 ((min(max(min(v0, 250), 1) - (v1*128), max(min(((min(v2, 57) + v3) + -113)/8, 249), 0) + 128) - (max(min(((min(v2, 57) + v3) + -113)/8, 249), 0) + (v4*16))) == (min(max(min(v0, 250), 1) - (v1*128), max(min(((min(v2, 57) + v3) + -113)/8, 249), 0) + 128) - (max(min(((min(v2, 57) + v3) + -113)/8, 249), 0) + (v4*16))));1;167;;;;;
 ((max(v0, 9) - min(v1, 2007)) == (max(v0, 9) - min(v1, 2007)));1;83;;;;;
 (max(-799 - ((v0 - v1)*8), ((v0 - v1)*8) + 296) >= 0);0;749;;;;;
 ((min(v0*6, 26) + ((v1*32) + ((v2/16) + (v3*64)))) == (min(v0*6, 26) + ((v1*32) + ((v2/16) + (v3*64)))));1;73;;;;;
 (min(((v0 + v1) + 15)/8, v2 + -1) == min(((v0 + v1) + 15)/8, v2 + -1));1;87;;;;;
 (min(v0*8, v1 + 244) == min(v0*8, v1 + 244));1;40;;;;;
 ((v0 - ((v1/7)*500)) == (v0 - ((v1/7)*500)));1;35;;;;;
 (min(((v0 + v1) + -1)/16, ((v1/16) + ((v2/4)*4)) + 3) == min(((v0 + v1) + -1)/16, ((v1/16) + ((v2/4)*4)) + 3));1;44;;;;;
 (min((v0 + 6)/4, max((v1 - max(min((v2/8)*8, 2082), 83))/4, -22) + 22) == min((v0 + 6)/4, max((v1 - max(min((v2/8)*8, 2082), 83))/4, -22) + 22));1;98;;;;;
 (max(min(501 - (v0*4), (0 + 4) - 1) + 1, min(max(2 - (v0*4), 0), 4 + 0)) <= min(max(2 - (v0*4), 0), 4 + 0));0;999;;;;;
 ((((((v0 + v1)*2) + v2)*8) + -20) >= (((((((v0 + v1)*2) + v2)*8) + -20) + 8) - 1));0;89;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 183)/125) == (((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 183)/125));1;231;;;;;
 (((v0*8) + (v1*252)) == ((v0*8) + (v1*252)));1;44;;;;;
 (((((v0 + v1) + 63)/32) - (v2*2)) == ((((v0 + v1) + 63)/32) - (v2*2)));1;52;;;;;
 (((((((uint1)1 && ((((((v0*2) + 0)*4) + 0) + 1) <= ((v0*8) + 1))) && ((((((v0*2) + 1)*4) + 3) + 1) >= ((v0*8) + 8))) && (((((v1*4) + v2)*63) + 1) <= ((((v1*4) + v2)*63) + 1))) && (((((v1*4) + v2)*63) + 252) >= ((((v1*4) + v2)*63) + 252))) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)));1;238;;;;;
 (((v0 + v1) + -1) < (((v0 + 1) + v1) + -7));0;50;;;;;
 ((min(v0 + 218, v1) - ((v2*8) + v0)) == (min(v0 + 218, v1) - ((v2*8) + v0)));1;49;;;;;
 (min(max(max((289 - ((v0/125)*32))/274, (1157 - ((v0/125)*128))/1096), 0), ((v1*128) + 1239)/1096) == min(max(max((289 - ((v0/125)*32))/274, (1157 - ((v0/125)*128))/1096), 0), ((v1*128) + 1239)/1096));1;103;;;;;
 (min(max(((v0 - v1) + 3)/4, 0), (((v2 + v3) - v1) + 9)/4) == min(max(((v0 - v1) + 3)/4, 0), (((v2 + v3) - v1) + 9)/4));1;85;;;;;
 (((v0*2) + 4) != 0);0;315;;;;;
 ((((v0 + v1) + v2) + -3) >= (((((v0 - 1) + v1) + v2) + 1) + 1));0;75;;;;;
 (min(max(min(v0, 2005), 6) + (v1*16), max(min(v2 + v0, 1991), -8) + 7) == min(max(min(v0, 2005), 6) + (v1*16), max(min(v2 + v0, 1991), -8) + 7));1;66;;;;;
 ((min(v0*68, 64) + (min(v1*16, 52) + v2)) == (min(v0*68, 64) + (min(v1*16, 52) + v2)));1;101;;;;;
 (0 == ((0 + ((min((max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*4)) - max(min(v1/8, 249), 0), 2)*2) + 6)) - 1));0;185;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 1011)/1000) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 1011)/1000));1;199;;;;;
 (min(((v0 + v1) + -1)/8, ((v2*32) + v3) + 31) == min(((v0 + v1) + -1)/8, ((v2*32) + v3) + 31));1;60;;;;;
 (min((((v0 + v1) + -1)/65)*8, v2 + 23) == min((((v0 + v1) + -1)/65)*8, v2 + 23));1;45;;;;;
 (min((v0*4) + v1, min(v2, 1992) + 5) == min((v0*4) + v1, min(v2, 1992) + 5));1;57;;;;;
 ((((v0*-256)/32)*32) == (v0*-256));1;1333;;;;;
 (min((((v0 + v1) + 189)/65)*8, (v2*8) + -1) == min((((v0 + v1) + 189)/65)*8, (v2*8) + -1));1;61;;;;;
 (max(min(min((min((v1 + v2) - v3, min(1999 - v3, v4) + 1) + -7)/8, min((v1 + v2) - v3, min(2006 - v3, v4) + -6)/8), (0 + ((v4 + 9)/8)) - 1) + 1, min(max(max(((max(v2, 0) - v3)/8) + 1, (1 - v3)/8), 0), ((v4 + 9)/8) + 0)) <= min(max(max(((max(v2, 0) - v3)/8) + 1, (1 - v3)/8), 0), ((v4 + 9)/8) + 0));0;1535;;;;;
 ((((((v0/63)*64) + ((((min((v1*-124) + (v2*64), 28) + 95)/32)*32) + (v1*124))) + (min(((v3*64) - (v1*124)) - ((v0/63)*64), -92) + (min(min(((v3*64) - (v1*124)) - ((v0/63)*64), 28)/4, -16)*4))) + 64) == (((((v0/63)*64) + ((((min((v1*-124) + (v2*64), 28) + 95)/32)*32) + (v1*124))) + (min(((v3*64) - (v1*124)) - ((v0/63)*64), -92) + (min(min(((v3*64) - (v1*124)) - ((v0/63)*64), 28)/4, -16)*4))) + 64));1;170;;;;;
 ((((min((min(min((v4*17) + (((v3/65)*8) + 3), (((v2 + v3) + 64)/65)*8) + 24, ((((min((v4*-17) + (((((v2 + v3) + 64)/65)*8) - ((v3/65)*8)), 3) + 23)/8)*8) + (v4*17)) + ((v3/65)*8))*8) + 2, ((((min((v4*-17) + (((((v2 + v3) + 64)/65)*8) - ((v3/65)*8)), 3) + 23)/8)*64) + (v4*136)) + ((v3/65)*64))*-1)/4)*4) == (min((min(min((v4*17) + (((v3/65)*8) + 3), (((v2 + v3) + 64)/65)*8) + 24, ((((min((v4*-17) + (((((v2 + v3) + 64)/65)*8) - ((v3/65)*8)), 3) + 23)/8)*8) + (v4*17)) + ((v3/65)*8))*8) + 2, ((((min((v4*-17) + (((((v2 + v3) + 64)/65)*8) - ((v3/65)*8)), 3) + 23)/8)*64) + (v4*136)) + ((v3/65)*64))*-1));0;4283;;;;;
 (min(((v0/63) + (((min((v1*2) + 1, v2) + 9)/2)*2))*8, (v3*8) + 61) == min(((v0/63) + (((min((v1*2) + 1, v2) + 9)/2)*2))*8, (v3*8) + 61));1;97;;;;;
 (((v0/8) + (((min((v1*16) + 15, v2)/8)*8) + (min((v1*-16) + v2, 3) + (min(min((v1*-16) + v2, 15)/4, 1)*4)))) == ((v0/8) + (((min((v1*16) + 15, v2)/8)*8) + (min((v1*-16) + v2, 3) + (min(min((v1*-16) + v2, 15)/4, 1)*4)))));1;108;;;;;
 ((min((v0*32) + 32, v1) + ((v2*4) + v3)) == (min((v0*32) + 32, v1) + ((v2*4) + v3)));1;49;;;;;
 (((v0 + 142)/132) != 0);0;337;;;;;
 ((max(max(max(min(v0/8, 254), 5)*8, 52) - (max(min(((v1 + v0) + 7)/8, 249), 0)*8), ((max(min(((v1 + v0) + 7)/8, 249), 0)*8) - max(max(min(v0/8, 254), 5)*8, 52)) + 784) + -726) >= 0);0;2663;;;;;
 (((((((v0 + v1) + 31)/32) - (v1/32))/2) + 3) == ((((((v0 + v1) + 31)/32) - (v1/32))/2) + 3));1;78;;;;;
 (((((((uint1)1 && (((v3*8) + -3) <= ((v3*8) + -3))) && (((v3*8) + 125) >= ((v3*8) + 125))) && ((max(((v0*3) + v1)*4, ((((v0*3) + v2) + v1)*4) + 1) + -2) <= ((max(((v0*3) + v1)*8, ((((v0*3) + v2) + v1)*8) + 1) + -3)/2))) && ((((((v0*3) + v2) + v1)*4) + 2) >= (((((v0*3) + v2) + v1)*4) + 2))) && (((0*4) + 0) <= 0)) && (((1*4) + 3) >= 4));0;2230;;;;;
 (min(((v0*12) + v1) + 6, v2) == min(((v0*12) + v1) + 6, v2));1;53;;;;;
 (((min(v0 + v1, 249)*8) + -13) == ((((min(v0 + v1, 249)*8) + -13) + (((v2 - min(v0 + v1, 249))*8) + 18)) - 1));0;131;;;;;
 (((v0*6) + ((v1*128) + v2)) == ((v0*6) + ((v1*128) + v2)));1;53;;;;;
 (min((min((((((v0 + v1) + -1)/500)*16) - (((v1/500)*16) + v2))*4, -85)/2) + 45, v3) == min((min((((((v0 + v1) + -1)/500)*16) - (((v1/500)*16) + v2))*4, -85)/2) + 45, v3));1;91;;;;;
 (min(((((v0 + v1) + 7)/8) - (v1/8)) + -83, v2) == min(((((v0 + v1) + 7)/8) - (v1/8)) + -83, v2));1;71;;;;;
 (min(((v0/63)*64) + (min((v1*-520) + (v2*64), 164) + (((min(v2*64, (v1*520) + 424) + 95)/260)*260)), v3) == min(((v0/63)*64) + (min((v1*-520) + (v2*64), 164) + (((min(v2*64, (v1*520) + 424) + 95)/260)*260)), v3));1;94;;;;;
 (((v0 + 37)/16) != 0);0;347;;;;;
 (max(min(v0 + 13, v1 + v2) - max(min((((v1 + v2) - ((v3/2)*251)) - (v4*32)) - v2, 29), -4), v0) == max(min(v0 + 13, v1 + v2) - max(min((((v1 + v2) - ((v3/2)*251)) - (v4*32)) - v2, 29), -4), v0));1;119;;;;;
 (min(((v0 + v1) + 11)/2, ((v2*114) + v3) + 106) == min(((v0 + v1) + 11)/2, ((v2*114) + v3) + 106));1;68;;;;;
 (((v0*-8) + (((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8))) == ((v0*-8) + (((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8))));1;61;;;;;
 ((((((((v0 + v1) + 15)/16) - (v1/16))*8) + 521)/508) == (((((((v0 + v1) + 15)/16) - (v1/16))*8) + 521)/508));1;69;;;;;
 ((v0 + 7) != 0);0;1291;;;;;
 (max((326 - max(v0*82, 245))/41, 7 - (v0*2)) == max((326 - max(v0*82, 245))/41, 7 - (v0*2)));1;52;;;;;
 (v0 >= ((v0 + 5) - 1));0;24;;;;;
 ((((((((v0 + v1) + 63)/32) - (v1/32))*32) + 949)/750) == (((((((v0 + v1) + 63)/32) - (v1/32))*32) + 949)/750));1;323;;;;;
 (min((v0*1000) + v1, min(v2 + v1, 3003) + -1000) == min((v0*1000) + v1, min(v2 + v1, 3003) + -1000));1;42;;;;;
 ((3167 - (v0*8)) == (3167 - (v0*8)));1;36;;;;;
 ((((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 265)/252) == (((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 265)/252));1;86;;;;;
 (((((v0 % ((v1 + 51)/40))*-40)/4)*4) == ((v0 % ((v1 + 51)/40))*-40));1;43;;;;;
 (min((v0*4) + v1, (v2*8) + 4) == min((v0*4) + v1, (v2*8) + 4));1;59;;;;;
 (((((((uint1)1 && ((((max(v0*4, -5) + v1) + 0) + -84) <= (((((v0*4) + 0) + v1) + -2) + -87))) && ((((max(v0*4, -5) + v1) + 3) + -84) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((6 + -2) - 1)) + -87))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (v2 <= v2)) && (v2 >= v2));0;280;;;;;
 (min(((v0 + v1) + 55)/8, v2 + 126) == min(((v0 + v1) + 55)/8, v2 + 126));1;45;;;;;
 ((max((((v0 + v1) + -1)/65)*8, 239) + (v2*-16)) == (max((((v0 + v1) + -1)/65)*8, 239) + (v2*-16)));1;82;;;;;
 (max(min(min(min(((((v3 + v4) - v2)/4) + (v1*-16)) + -1, (((max(min(min(v1*64, 63) + v2, 1936), -63) - v2)/4) + (v1*-16)) + 15), ((min(max(min(min(v1*64, 63) + v2, 1936), -63) + 61, v3 + v4) - ((v1*64) + v2)) + -1)/4), (0 + ((v5 + 67)/4)) - 1) + 1, min(max(((v4 - ((v1*64) + v2)) + 3)/4, 0), ((v5 + 67)/4) + 0)) <= min(max(((v4 - ((v1*64) + v2)) + 3)/4, 0), ((v5 + 67)/4) + 0));0;3908;;;;;
 (((((((v0 + v1) + 132)/133) - (v1/133))/2) + 1) == ((((((v0 + v1) + 132)/133) - (v1/133))/2) + 1));1;60;;;;;
 ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 5)/2) - ((max(min((v1/4)*8, 4004), 5) + -13)/2))/1004) + 1) == (((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 5)/2) - ((max(min((v1/4)*8, 4004), 5) + -13)/2))/1004) + 1));1;159;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1947), -52) - max(min((v1/63)*64, 2098), 99)) + 818)/667) == (((max(min((((v0 + v1) + -1)/63)*64, 1947), -52) - max(min((v1/63)*64, 2098), 99)) + 818)/667));1;208;;;;;
 ((max(min((v0/500)*8, 36), 5) + (((v1/4)*12) - max(min(min(((v2 + v0) + 499)/500, 3)*8, 22), -7))) == (max(min((v0/500)*8, 36), 5) + (((v1/4)*12) - max(min(min(((v2 + v0) + 499)/500, 3)*8, 22), -7))));1;111;;;;;
 (max(v0*4, (v1 + v2) + 4) == max(v0*4, (v1 + v2) + 4));1;48;;;;;
 ((min(((((v0 + v1) + 124)/125)*64) - v2, 0) + (v3*-16)) == (min(((((v0 + v1) + 124)/125)*64) - v2, 0) + (v3*-16)));1;73;;;;;
 (((((v0 + v1) + 9)/2) - ((v2*4) + v3)) == ((((v0 + v1) + 9)/2) - ((v2*4) + v3)));1;48;;;;;
 (min(26 - (max((v0/8) + ((v1*17) - (((v2 + v0) + 63)/8)), -15)*8), (min(v3, 15)*8) + 55) == min(26 - (max((v0/8) + ((v1*17) - (((v2 + v0) + 63)/8)), -15)*8), (min(v3, 15)*8) + 55));1;98;;;;;
 (((min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*500), (max(min(v1/2, 999), 0) + min(v3*32, 468)) + 31) - (v3*32)) - max(min(v1/2, 999), 0)) == ((min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*500), (max(min(v1/2, 999), 0) + min(v3*32, 468)) + 31) - (v3*32)) - max(min(v1/2, 999), 0)));1;843;;;;;
 (((((v0 % (((v1*16) + 460)/284))*284)/4)*4) == ((v0 % (((v1*16) + 460)/284))*284));1;96;;;;;
 (min((v0*1008) + 999, v1) == min((v0*1008) + 999, v1));1;51;;;;;
 (((v0 - (v1/8)) + -127) == ((v0 - (v1/8)) + -127));1;965;;;;;
 (min((v0*7) + v1, (((min(v0*7, -2)/2)*2) + (max(v0*7, -2) + v1)) + 3) == min((v0*7) + v1, (((min(v0*7, -2)/2)*2) + (max(v0*7, -2) + v1)) + 3));1;88;;;;;
 (min((((v0 + v1)*2) + v2)*4, (v3*8) + 36) == min((((v0 + v1)*2) + v2)*4, (v3*8) + 36));1;64;;;;;
 (((((((v0 + v1) + 499)/500) - (v1/500)) + 9)/5) == ((((((v0 + v1) + 499)/500) - (v1/500)) + 9)/5));1;88;;;;;
 (((max(min(min((v0*1000) + 1000, v1) + v2, 2000), 1) - max(min((v0*1000) + v2, 1999), 0)) - (v3*63)) == ((max(min(min((v0*1000) + 1000, v1) + v2, 2000), 1) - max(min((v0*1000) + v2, 1999), 0)) - (v3*63)));1;209;;;;;
 (((((v0 % ((v1 + 127)/128))*-128)/4)*4) == ((v0 % ((v1 + 127)/128))*-128));1;56;;;;;
 ((((((((v0 + v1) + -1)/65) - (v1/65))*2) + 13)/9) == (((((((v0 + v1) + -1)/65) - (v1/65))*2) + 13)/9));1;114;;;;;
 (((v0*128) + ((v1*256) + (v2 + v3))) == ((v0*128) + ((v1*256) + (v2 + v3))));1;37;;;;;
 (min(max(((v0 - ((v1/8)*8)) + 292)/236, 0), ((v2*8) + 291)/236) == min(max(((v0 - ((v1/8)*8)) + 292)/236, 0), ((v2*8) + 291)/236));1;109;;;;;
 (max(0, min((((min(v0*125, v1 + -125) + v2) % 16) + 92)/64, (0 + 3) - 1) + 1) <= 0);0;72;;;;;
 ((v0 + -5) >= (((v0 + -5) + (min(min((max(min(v1*8, 1994), -5) - (v2*67)) - max(min(((v3 + v4)/8)*8, 2002), 3), 53) + v5, -15) + 16)) - 1));1;297;;;;;
 ((max(v0*252, 248) + (v1*8)) == (max(v0*252, 248) + (v1*8)));1;34;;;;;
 ((min((v0 - (v1*8)) + 53, v2) - ((v3*2) + v2)) == (min((v0 - (v1*8)) + 53, v2) - ((v3*2) + v2)));1;73;;;;;
 (min((v0*8) + 99, v1) == min((v0*8) + 99, v1));1;25;;;;;
 ((((v0*8) + 144)/131) != 0);0;457;;;;;
 (((min(((v0/8) + v1)*8, (((((v2 + v0) + -1)/8)*8) - (v3*126)) + 5) - (v1*8)) - ((v0/8)*8)) == ((min(((v0/8) + v1)*8, (((((v2 + v0) + -1)/8)*8) - (v3*126)) + 5) - (v1*8)) - ((v0/8)*8)));1;111;;;;;
 (min(max(min(min(((v0*127) + v1) + 119, v2), 999), 0) + 128, v3) == min(max(min(min(((v0*127) + v1) + 119, v2), 999), 0) + 128, v3));1;83;;;;;
 (min((v0*116) + (((v1*29) + v2)*8), (v3*8) + 609) == min((v0*116) + (((v1*29) + v2)*8), (v3*8) + 609));1;94;;;;;
 (min((v0*4) + v1, (v2*8) + 25) == min((v0*4) + v1, (v2*8) + 25));1;52;;;;;
 ((((max(min(v0/8, 249), 0) + v1)*2) - ((max(min(v0/8, 249), 0)*2) + v2)) == (((max(min(v0/8, 249), 0) + v1)*2) - ((max(min(v0/8, 249), 0)*2) + v2)));1;93;;;;;
 (min(((v0 + v1) + -1)/32, ((v2*4) + v3) + 3) == min(((v0 + v1) + -1)/32, ((v2*4) + v3) + 3));1;62;;;;;
 ((((v0*8) + 188)/132) != 0);0;430;;;;;
 (max(min(max((30 - max(min(v0/2, 1006), 7))/16, 0), (v1 + 40)/16), (min(max(min(((v2 + v0) + 1)/2, 989), 0) - max(min(v0/2, 1006), 7), v1 + 15) + 25)/16) == max(min(max((30 - max(min(v0/2, 1006), 7))/16, 0), (v1 + 40)/16), (min(max(min(((v2 + v0) + 1)/2, 989), 0) - max(min(v0/2, 1006), 7), v1 + 15) + 25)/16));1;431;;;;;
 (((((((v0 + v1) + 7)/8) - (v2*4)) - (v3*12)) - (v1/8)) == ((((((v0 + v1) + 7)/8) - (v2*4)) - (v3*12)) - (v1/8)));1;62;;;;;
 (((((((v0 + v1) + -1)/8) - v2) + 1)/4) >= ((((((v0 + v1) + 7)/8) - v2) + -1)/4));0;1047;;;;;
 (((((max(v0, 0) - v1)*8) + 1249)/1236) == ((((max(v0, 0) - v1)*8) + 1249)/1236));1;81;;;;;
 ((v0 + 11) != 0);0;216;;;;;
 (((((v0 + v1) + 440)/63) - ((v2*3) + v3)) == ((((v0 + v1) + 440)/63) - ((v2*3) + v3)));1;58;;;;;
 ((((v0*4) + 105)/74) != 0);0;447;;;;;
 (max(min((((((v0 + v1) + 87)/8) - v2) + 3)/4, 9), max(min((((((v0 + v1) + 39)/8) - v2) + 2)/4, 8), -1) + 1) == max(min((((((v0 + v1) + 87)/8) - v2) + 3)/4, 9), max(min((((((v0 + v1) + 39)/8) - v2) + 2)/4, 8), -1) + 1));1;135;;;;;
 (min(v0*8, v1 + 807) == min(v0*8, v1 + 807));1;77;;;;;
 (min(v0*4, v1 + -2) == min(v0*4, v1 + -2));1;41;;;;;
 (min((v0*-13) + v1, v2 + 5) == min((v0*-13) + v1, v2 + 5));1;37;;;;;
 (((((min((min(v2*14, 41)*4) + (((v4*8) + (v5*55))*4), (v3*32) + 60)*2) + (min(min((v2*56) + (((v4*8) + (v5*55))*4), (v3*32) + 116)*2, (v2*112) + ((((v4*8) + (v5*55))*8) + 1))*-1))/4)*4) == ((min((min(v2*14, 41)*4) + (((v4*8) + (v5*55))*4), (v3*32) + 60)*2) + (min(min((v2*56) + (((v4*8) + (v5*55))*4), (v3*32) + 116)*2, (v2*112) + ((((v4*8) + (v5*55))*8) + 1))*-1)));0;2790;;;;;
 (((((max(v0, 0) - v1)*8) + 165)/155) != 0);0;635;;;;;
 (min(((v0 + v1) + 27)/2, v2 + 228) == min(((v0 + v1) + 27)/2, v2 + 228));1;59;;;;;
 (((v0*2) + 2) <= (v0*2));0;28;;;;;
 (((v0*127) + (v1*36)) == ((v0*127) + (v1*36)));1;39;;;;;
 (((v0*2) + -494) == ((((v0*2) + -494) + ((min(v1 - (v2*12), -54)*2) + 132)) - 1));0;135;;;;;
 (((v0*-4) + ((max(min(((v1 + v2) + 47)/16, 124), 0) - (v3*64)) - max(min(v2/16, 126), 2))) == ((v0*-4) + ((max(min(((v1 + v2) + 47)/16, 124), 0) - (v3*64)) - max(min(v2/16, 126), 2))));1;114;;;;;
 (((v0 % 500) + 562) >= 0);1;21;;;;;
 ((min(((v0*4) + v1) + 3, max(v2, 0) + (v3*-8)) + (v0*-4)) == (min(((v0*4) + v1) + 3, max(v2, 0) + (v3*-8)) + (v0*-4)));1;62;;;;;
 ((((v0 + -6)/16) + (v1*4)) == (((v0 + -6)/16) + (v1*4)));1;51;;;;;
 ((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 28)/15) == (((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 28)/15));1;284;;;;;
 (min((min(v0*32, 488) + (v1/2)) + 8, (v2*-508) + v3) == min((min(v0*32, 488) + (v1/2)) + 8, (v2*-508) + v3));1;63;;;;;
 (min(max((123 - ((max(min(v0/8, 254), 5) + (v1*16))*8))/72, 0), (min((max(min(((v2 + v0) + 71)/8, 249), 0) - (v1*16)) - max(min(v0/8, 254), 5), 10) + 16)/9) == min(max((123 - ((max(min(v0/8, 254), 5) + (v1*16))*8))/72, 0), (min((max(min(((v2 + v0) + 71)/8, 249), 0) - (v1*16)) - max(min(v0/8, 254), 5), 10) + 16)/9));1;211;;;;;
 (0 == ((0 + (18 - max(min(v0*4, 18), 14))) - 1));0;63;;;;;
 (min((((v0 + v1) + -1)/8) + (v2*-64), (v1/8) + 63) == min((((v0 + v1) + -1)/8) + (v2*-64), (v1/8) + 63));1;63;;;;;
 (min((v0*4) + ((v1*72) + v2), v3 + 7) == min((v0*4) + ((v1*72) + v2), v3 + 7));1;82;;;;;
 ((97 - ((v0*4) + v1)) > (2099 - ((v0*4) + v1)));0;59;;;;;
 ((((max(((v0 + v1) + 7)/8, 255) - min(v1/8, 0))/16) + 1) >= 0);1;62;;;;;
 ((max(min(v0*2, 2021), 22) + (v1*4)) == (max(min(v0*2, 2021), 22) + (v1*4)));1;64;;;;;
 ((((((v0*4) + v1)*4) + v2) - max(min(((v3 + v4) + -1)/8, 249), 0)) == (((((v0*4) + v1)*4) + v2) - max(min(((v3 + v4) + -1)/8, 249), 0)));1;91;;;;;
 ((min(v0*8, ((min(v1*1000, v2 + -1000) + v3) % 2) + 13) - (((v0*2) + v4)*4)) == (min(v0*8, ((min(v1*1000, v2 + -1000) + v3) % 2) + 13) - (((v0*2) + v4)*4)));1;99;;;;;
 (min(max(v0 + v1, 1), ((v2*32) + v3) + 32) == min(max(v0 + v1, 1), ((v2*32) + v3) + 32));1;63;;;;;
 (min((((v0 + v1) + 7)/8) + (v2*-8), (v1/8) + 7) == min((((v0 + v1) + 7)/8) + (v2*-8), (v1/8) + 7));1;59;;;;;
 (((v0*8) + ((v1*24) + (((v2/8)*2) + v3))) == ((v0*8) + ((v1*24) + (((v2/8)*2) + v3))));1;58;;;;;
 (0 == ((0 + (-13 - (((-109 - ((v0 + v1) % 16))/16)*4))) - 1));0;95;;;;;
 ((0 - (v0*8)) >= (1999 - (v0*8)));0;52;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 45) == min(((v0*2) + v1)*4, (v2*8) + 45));1;53;;;;;
 (((((v0/((v1/24) + 1))*-6)/2)*2) == ((v0/((v1/24) + 1))*-6));1;45;;;;;
 (((((((v0 + v1) + 251)/63) - (v1/63)) + 15)/13) == ((((((v0 + v1) + 251)/63) - (v1/63)) + 15)/13));1;63;;;;;
 (min(((((v0/8) + v1) - (v2*84)) - (v3*12)) - (v0/8), v4 + 3) == min(((((v0/8) + v1) - (v2*84)) - (v3*12)) - (v0/8), v4 + 3));1;78;;;;;
 (0 == ((0 + (76 - (max(min(((v0 % 2)*2) + v1, 4), 3)*19))) - 1));0;96;;;;;
 (min((v0*4) + v1, (v2*8) + -50) == min((v0*4) + v1, (v2*8) + -50));1;72;;;;;
 (((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))/32) + 1) == ((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))/32) + 1));1;42;;;;;
 (((min((min(((min((v3*124) + 112, (max(v1, 0) - v2)*8)/4)*4) + (((v2*2)*4) + 2), max(v1, 0)*8) - (v3*124)) - (v2*8), 112)/4)*4) == min((min(((min((v3*124) + 112, (max(v1, 0) - v2)*8)/4)*4) + (((v2*2)*4) + 2), max(v1, 0)*8) - (v3*124)) - (v2*8), 112));0;2000;;;;;
 ((((max(((v0 + v1) + 7)/2, 999) - min(v1/2, 2)) + 505)/503) >= 0);1;67;;;;;
 ((((((v0 + v1) + 314)/63)*8) - ((v2*8) + v3)) == (((((v0 + v1) + 314)/63)*8) - ((v2*8) + v3)));1;97;;;;;
 (min(((v0 + v1) + -1)/65, ((v2*2) + v3) + 1) == min(((v0 + v1) + -1)/65, ((v2*2) + v3) + 1));1;61;;;;;
 (max(min(min(min(1999, 1999), min(v1 + v2, 2000) + -1), ((((v3*65) + v4) + -3) + (132 - max(v3*65, 64))) - 1) + 1, min(max(max(max(0, 0), max(v2, 0)), ((v3*65) + v4) + -3), (132 - max(v3*65, 64)) + (((v3*65) + v4) + -3))) <= min(max(max(max(0, 0), max(v2, 0)), ((v3*65) + v4) + -3), (132 - max(v3*65, 64)) + (((v3*65) + v4) + -3)));0;2305;;;;;
 (min((min(v0*20, 16) + ((v1*36) + v2)) + 14, v3) == min((min(v0*20, 16) + ((v1*36) + v2)) + 14, v3));1;63;;;;;
 ((min((v0 + v1) - (v2*504), (min(v3*128, 378) + v1) + 118) - (v3*128)) == (min((v0 + v1) - (v2*504), (min(v3*128, 378) + v1) + 118) - (v3*128)));1;77;;;;;
 (((((v0*2) + v1)*32) + v2) == ((((((v0*2) + v1)*32) + v2) + 32) - 1));0;62;;;;;
 (max(0, min(64 - ((v0 % 8)*9), (0 + 9) - 1) + 1) <= 0);0;65;;;;;
 ((min(v0*-256, 352) + -353) == (((min(v0*-256, 352) + -353) + (359 - min(v0*-256, 352))) - 1));0;81;;;;;
 (((v0*4) + (min(v1*500, v2 + -500) + v3)) == ((v0*4) + (min(v1*500, v2 + -500) + v3)));1;35;;;;;
 ((((v0*8) + v1) + ((v2*2) + v3)) < (((v0*8) + v1) + ((v2*2) + (v3 + 1))));1;68;;;;;
 (min((v0*4) + v1, max(min(v2*8, 3986), -13) + 58) == min((v0*4) + v1, max(min(v2*8, 3986), -13) + 58));1;98;;;;;
 (((v0*4) + ((v1*24) + v2)) == ((v0*4) + ((v1*24) + v2)));1;2316;;;;;
 (((v0*1000) + ((v1*128) + v2)) == ((v0*1000) + ((v1*128) + v2)));1;44;;;;;
 (((v0*-64) + ((max(min(v1 + v2, 2000), 1) - (v3*128)) - max(min(v2, 1999), 0))) == ((v0*-64) + ((max(min(v1 + v2, 2000), 1) - (v3*128)) - max(min(v2, 1999), 0))));1;106;;;;;
 ((v0 - max(min((v1 + v2)/2, 1006), 7)) == (v0 - max(min((v1 + v2)/2, 1006), 7)));1;46;;;;;
 (min(max(((v0 + v1) + 7)/8, 249), v2 + 62) == min(max(((v0 + v1) + 7)/8, 249), v2 + 62));1;58;;;;;
 (((v0 + 19)/14) != 0);0;359;;;;;
 (((min((((v0/32) + v1) - v2)*4, 63)*-8) + -36) == ((((min((((v0/32) + v1) - v2)*4, 63)*-8) + -36) + ((min((((v0/32) + v1) - v2)*4, 63)*8) + 40)) - 1));0;184;;;;;
 (min(max((v0 + 114)/32, 3) - ((min(v1/8, 0)/16)*4), (v2*4) + 10) == min(max((v0 + 114)/32, 3) - ((min(v1/8, 0)/16)*4), (v2*4) + 10));1;97;;;;;
 ((((max(min((v1*-502) + v2, 498), -4) + (v1*502))/2)*2) == (max(min((v1*-502) + v2, 498), -4) + (v1*502)));0;914;;;;;
 ((max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - (min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125) + (((v3*3) + v4)*4))) == (max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - (min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125) + (((v3*3) + v4)*4))));1;211;;;;;
 (max(min((v0 + 9)/2, max((0 - (v1/65))/2, -2) + 2), (min(32 - (v1/65), v0 + 7)/2) + 1) == max(min((v0 + 9)/2, max((0 - (v1/65))/2, -2) + 2), (min(32 - (v1/65), v0 + 7)/2) + 1));1;108;;;;;
 ((max(v0, 1007) + (v1*504)) == (max(v0, 1007) + (v1*504)));1;36;;;;;
 ((((v0 + v1)/8) + (v2*2)) == (((v0 + v1)/8) + (v2*2)));1;42;;;;;
 (min(((((v0 + v1) + 64)/65)*8) + 7, v2) == min(((((v0 + v1) + 64)/65)*8) + 7, v2));1;51;;;;;
 (((max(v0*4, -2) + v1) + -1002) == ((((max(v0*4, -2) + v1) + -1002) + (min(v0*4, -2) + 6)) - 1));0;141;;;;;
 (min(max(v0, 0), v1 + 3) == min(max(v0, 0), v1 + 3));1;28;;;;;
 (min(((v0 + v1) + 1)/2, ((v1/2) + ((v2/32)*32)) + 31) == min(((v0 + v1) + 1)/2, ((v1/2) + ((v2/32)*32)) + 31));1;106;;;;;
 ((min(((v0*8) + v1)*8, (v2*8) + 44) - ((v0*64) + ((v3*4) + ((v1*8) + (v4*12))))) == (min(((v0*8) + v1)*8, (v2*8) + 44) - ((v0*64) + ((v3*4) + ((v1*8) + (v4*12))))));1;90;;;;;
 (min((v0/2) + ((min((v1*506) + 497, v2)/2)*2), v3 + 1) == min((v0/2) + ((min((v1*506) + 497, v2)/2)*2), v3 + 1));1;64;;;;;
 (((v0*124) + (((v1*152) + v2)*8)) == ((v0*124) + (((v1*152) + v2)*8)));1;40;;;;;
 (max(min(min(min(min(min((max(min(((((((v2 + v3) + 7)/8)*8) + 68)/63)*8, 244), -5) - v4) + 9, (((v0 + v1) + 28)/8) - v4), (((v0 + v1) + 28)/8) - v4), (((v0 + v1) + 36)/8) - v4), (((v0 + v1) + 36)/8) - v4), (0 + 63) - 1) + 1, min(max((((v1 + 36)/8) - v4) + 1, 0), 63 + 0)) <= min(max((((v1 + 36)/8) - v4) + 1, 0), 63 + 0));0;2728;;;;;
 (min(min((v0/8) + v1, 279)*2, (v2*2) + 49) == min(min((v0/8) + v1, 279)*2, (v2*2) + 49));1;57;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 996), 0), (max(min(v1/2, 999), 2) + (v2*64)) + 58) == min(max(min(((v0 + v1) + 1)/2, 996), 0), (max(min(v1/2, 999), 2) + (v2*64)) + 58));1;78;;;;;
 ((((-500 - (((v0*500) + (v1 + v2)) % 8))/8) + (v3*4)) == (((-500 - (((v0*500) + (v1 + v2)) % 8))/8) + (v3*4)));1;66;;;;;
 (((((v0 + v1) + v2) + v3) + 2) <= ((((((v0 - 1) + v1) + v2) + v3) + -5) - 1));0;94;;;;;
 (((v0 + v1) + 4) < (((v0 + 1) + v1) + -2));0;57;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 551) == min(((v0*2) + v1)*4, (v2*8) + 551));1;68;;;;;
 (((v0*392) + ((v1/2000)*2048)) == ((v0*392) + ((v1/2000)*2048)));1;37;;;;;
 (max(min(max((v0*32) + (v1 + v2), 1), ((v0*32) + (v1 + v2)) + 37), min((v0*32) + (v1 + v2), 1964) + 37) == max(min(max((v0*32) + (v1 + v2), 1), ((v0*32) + (v1 + v2)) + 37), min((v0*32) + (v1 + v2), 1964) + 37));1;126;;;;;
 (((((((uint1)1 && (((((0*4) + ((v0*12) + v1)) + 0) + -1) <= (((v0*12) + v1) + -1))) && (((((0*4) + (((v0*12) + v1) + 8)) + 3) + -1) >= ((((v0*12) + v1) + 11) + -1))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3));1;151;;;;;
 (min(min(7 - (((((v0 + -5)/63)*8) + ((v1*4) - min(((((v0 + -5)/63)*2) + v1)*4, ((((v2 + v0) + 62)/63)*8) + 4)))*2), (((v3 + v4)/4) - (((((v0 + -5)/63)*2) + v1)*8)) + 3), (v5*2) + 7) == min(min(7 - (((((v0 + -5)/63)*8) + ((v1*4) - min(((((v0 + -5)/63)*2) + v1)*4, ((((v2 + v0) + 62)/63)*8) + 4)))*2), (((v3 + v4)/4) - (((((v0 + -5)/63)*2) + v1)*8)) + 3), (v5*2) + 7));1;201;;;;;
 (min((((v0 + v1) + 31)/32) - (v2*4), (v1/32) + 3) == min((((v0 + v1) + 31)/32) - (v2*4), (v1/32) + 3));1;56;;;;;
 (((((((v0 + v1) + 15)/16) - ((v1 + -2)/16)) + 21)/18) == ((((((v0 + v1) + 15)/16) - ((v1 + -2)/16)) + 21)/18));1;91;;;;;
 ((min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + (min(v2*125, v3 + -125) + v4)) == (min(max(v0*6, -2) + (v1*4), (v0*6) + 2) + (min(v2*125, v3 + -125) + v4)));1;100;;;;;
 (((v0*53) + (max(min(v1, 286), 37)*4)) == ((v0*53) + (max(min(v1, 286), 37)*4)));1;73;;;;;
 (((((v0 + v1) + -1)/2) - ((v2*125) + v3)) == ((((v0 + v1) + -1)/2) - ((v2*125) + v3)));1;49;;;;;
 (min(((((v0 + v1) + 3)/2) - (v2*63)) - (v1/2), min(v3, 25) + 7) == min(((((v0 + v1) + 3)/2) - (v2*63)) - (v1/2), min(v3, 25) + 7));1;803;;;;;
 (min(((v0 + v1) + -1)/2, ((v1/2) + ((v2/4)*4)) + 3) == min(((v0 + v1) + -1)/2, ((v1/2) + ((v2/4)*4)) + 3));1;89;;;;;
 (((v0 + 30)/23) != 0);0;363;;;;;
 (((((((v0 + v1) + 1)/2) - (v1/2))/32) + 1) == ((((((v0 + v1) + 1)/2) - (v1/2))/32) + 1));1;73;;;;;
 (min((v0/4) + v1, v2 + 248) == min((v0/4) + v1, v2 + 248));1;40;;;;;
 (min(((v0/32) + v1)*4, (((v0/32) + (((v1 + 18)/17)*17))*4) + -5) == min(((v0/32) + v1)*4, (((v0/32) + (((v1 + 18)/17)*17))*4) + -5));1;72;;;;;
 ((v0 - (v1*17)) == (v0 - (v1*17)));1;17;;;;;
 (max((v0 + v1)/4, (((v0 + v1) + 31)/4) + (v2*125)) == max((v0 + v1)/4, (((v0 + v1) + 31)/4) + (v2*125)));1;63;;;;;
 (min(max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1), v2) == min(max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1), v2));1;177;;;;;
 (max(((v0 - v1) + 13)/8, 0) >= ((max(((v0 - v1) + 13)/8, 0) + max((((v0 - v1) + 20)/8) - max(((v0 - v1) + 13)/8, 0), 0)) - 1));0;1085;;;;;
 (((((((uint1)1 && ((((max(-2*4, -7) + v0) + 0) + 3) <= (v0 + -4))) && ((((max(1*4, -7) + v0) + 3) + 3) >= (v0 + 10))) && ((((min(v1*4, 62) + v2) + v3) + 3) <= (((min(v1*4, 62) + v2) + v3) + -4))) && ((((min(v1*4, 62) + v2) + v3) + 3) >= (((min(v1*4, 62) + v2) + v3) + 3))) && (0 <= 0)) && (2 >= 2));0;244;;;;;
 ((((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*4)) == (((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*4)));1;69;;;;;
 (min(max(min(v0 + v1, 1999), 0) + (v2*4), v3 + 10) == min(max(min(v0 + v1, 1999), 0) + (v2*4), v3 + 10));1;59;;;;;
 (min((v0*4) + v1, v2 + -500) == min((v0*4) + v1, v2 + -500));1;53;;;;;
 (min(max(max(v0 + -3, v1), v2 + v1), (min(v3, 121) + v0) + 5) == min(max(max(v0 + -3, v1), v2 + v1), (min(v3, 121) + v0) + 5));1;61;;;;;
 (((v0/2) + (v1*114)) == ((v0/2) + (v1*114)));1;45;;;;;
 ((((v0*8) + 48)/20) != 0);0;447;;;;;
 (min((v0*4) + -8, v1) == min((v0*4) + -8, v1));1;60;;;;;
 (((v0*38) + (v1*64)) == ((v0*38) + (v1*64)));1;30;;;;;
 (min(((v0*4) + ((v1*3) + v2)) + 2, (v1*3) + v3) == min(((v0*4) + ((v1*3) + v2)) + 2, (v1*3) + v3));1;82;;;;;
 (min(v0*8, ((v1*124) + (v2*8)) + 16) == min(v0*8, ((v1*124) + (v2*8)) + 16));1;39;;;;;
 (min(((v0 + v1) + -1)/2, ((v1/2) + (v2*500)) + 499) == min(((v0 + v1) + -1)/2, ((v1/2) + (v2*500)) + 499));1;64;;;;;
 ((((v0 % 2)*80) + ((v1*4) + v2)) == (((v0 % 2)*80) + ((v1*4) + v2)));1;44;;;;;
 (((((((uint1)1 && (((v0/500) + (v1*4)) <= (0 + ((v0/500) + (v1*4))))) && ((((v0/500) + (v1*4)) + 3) >= (((4 + 0) - 1) + ((v0/500) + (v1*4))))) && (((v2/500) + (v3 % v4)) <= ((v2/500) + (v3 % v4)))) && (((v2/500) + (v3 % v4)) >= ((v2/500) + (v3 % v4)))) && (0 <= 0)) && (299 >= ((284 + 0) - 1)));1;153;;;;;
 (((((v0 + v1) + 62)/63) - (v2*4)) == ((((v0 + v1) + 62)/63) - (v2*4)));1;24;;;;;
 (((max(min((max(v2*2, 71)*-1) + (71 - (v1*4)), -4), -8)/2)*2) == max(min((max(v2*2, 71)*-1) + (71 - (v1*4)), -4), -8));0;1025;;;;;
 (min(3 - (max(max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0)), -3)*4), (min(v3, 3)*4) + 3) == min(3 - (max(max(min(v0/8, 249), 0) + ((v1*4) - max(min(((v2 + v0) + 7)/8, 249), 0)), -3)*4), (min(v3, 3)*4) + 3));1;147;;;;;
 (max((v0 + 5)/253, 0) >= ((max((v0 + 5)/253, 0) + max(((v0 + 257)/253) - max((v0 + 5)/253, 0), 0)) - 1));0;2448;;;;;
 (min(max(v0, 249), (min(v1, 0) + (v2*16)) + 15) == min(max(v0, 249), (min(v1, 0) + (v2*16)) + 15));1;50;;;;;
 (((((((uint1)1 && ((0 + (min(min(v0, 16) + v1, 24) + -24)) <= (min(min(v0, 16) + v1, 24) + -24))) && ((3 + (min(min(min(v0, 16) + v1, 24) + ((((max(v0 + v1, 1994) - min(min(v0, 16) + v1, 24)) + 29)/4)*4), max(v0 + v1, 1994) + 26) + -24)) >= (max(max(min(min(v0, 16) + v1, 19) + ((((max(v0 + v1, 1995) - min(min(v0, 16) + v1, 19)) + 23)/4)*4), ((((max(v0, 16) + 7)/4)*4) + (min(v0, 16) + v1)) + 1), (((max(v0, 16) + 7)/4)*4) + (min(v0, 16) + v1)) + -16))) && ((v2 + v3) <= ((v2 + v3) + -2))) && ((v2 + v3) >= (v2 + v3))) && (min(v4, 0) <= min(v4, 0))) && ((max(v5 + v4, 3) + -1) >= (max(v5 + v4, 3) + -1)));0;564;;;;;
 (min((v0*8) + v1, v2 + -7) == min((v0*8) + v1, v2 + -7));1;39;;;;;
 ((((v0*-64)/16)*16) == (v0*-64));1;44;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))*8) + 512)/501) == ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))*8) + 512)/501));1;224;;;;;
 (((v0 - (v1/8)) + -127) == ((v0 - (v1/8)) + -127));1;90;;;;;
 (min(((v0*2) + v1)*2, (v2*2) + 163) == min(((v0*2) + v1)*2, (v2*2) + 163));1;47;;;;;
 (((((((uint1)1 && (((v0 + v1)*8) <= ((v0 + v1)*8))) && (((v0 + v1)*8) >= ((v0 + v1)*8))) && ((((v2*4) + v3) + 0) <= (((v2*4) + 0) + v3))) && ((((v2*4) + v3) + 3) >= (((v2*4) + ((4 + 0) - 1)) + v3))) && (v4 <= v4)) && (v4 >= v4));1;158;;;;;
 ((((max(min((max((v1*4) + (v2 - v3), 65)*8) + (((min((v1*-4) + (v3 - v2), -65)*8)/12)*12), 3), -11)*-1)/4)*4) == (max(min((max((v1*4) + (v2 - v3), 65)*8) + (((min((v1*-4) + (v3 - v2), -65)*8)/12)*12), 3), -11)*-1));0;1917;;;;;
 ((max(min(v0, 5), 2) + -7) >= (((max(min(v0, 5), 2) + -7) + (12 - max(min(v0, 5), 2))) - 1));0;70;;;;;
 (((min(max(min(v0 + v1, 2000), 1) - (v2*500), (max(min(v1, 1999), 0) + min(v3*128, 377)) + 123) - (v3*128)) - max(min(v1, 1999), 0)) == ((min(max(min(v0 + v1, 2000), 1) - (v2*500), (max(min(v1, 1999), 0) + min(v3*128, 377)) + 123) - (v3*128)) - max(min(v1, 1999), 0)));1;143;;;;;
 ((((min(((min(v3*125, v4 + -125) + v2)/4)*4, (((min(v3*125, v4 + -125) + v2)/8)*8) + 4)*-1)/2)*2) == (min(((min(v3*125, v4 + -125) + v2)/4)*4, (((min(v3*125, v4 + -125) + v2)/8)*8) + 4)*-1));0;1862;;;;;
 (((v0 + 18)/17) != 0);0;406;;;;;
 (min((((v0 + v1) + 47)/16) - ((v1 + -2)/16), v2 + 2) == min((((v0 + v1) + 47)/16) - ((v1 + -2)/16), v2 + 2));1;64;;;;;
 (min(88 - (max(v0 - v1, 9)*8), (min(v1 - v0, -9)*8) + 107) == min(88 - (max(v0 - v1, 9)*8), (min(v1 - v0, -9)*8) + 107));1;110;;;;;
 (max(min(min(min((((v0 + v1) + 37)/4) - ((((v2/63)*2) + v3)*8), ((v4 - ((((v2/63)*2) + v3)*4))*2) + 9), ((min(v4*8, (v0 + v1) + 1) + 39)/4) - ((((v2/63)*2) + v3)*8)), (v5*2) + 10), min(max((v1/4) - ((((v2/63)*2) + v3)*8), -11), v5*2) + 10) == max(min(min(min((((v0 + v1) + 37)/4) - ((((v2/63)*2) + v3)*8), ((v4 - ((((v2/63)*2) + v3)*4))*2) + 9), ((min(v4*8, (v0 + v1) + 1) + 39)/4) - ((((v2/63)*2) + v3)*8)), (v5*2) + 10), min(max((v1/4) - ((((v2/63)*2) + v3)*8), -11), v5*2) + 10));1;241;;;;;
 (((v0*4) + -2) == ((((v0*4) + -2) + 6) - 1));0;29;;;;;
 (min(min(max(min((v0*252) + v1, min(v2 + v1, 2251) + -252), 0) + -11, (v0*252) + v1), (v2 + v1) + -252) == min(min(max(min((v0*252) + v1, min(v2 + v1, 2251) + -252), 0) + -11, (v0*252) + v1), (v2 + v1) + -252));1;80;;;;;
 ((((v0*32) + 92)/39) != 0);0;438;;;;;
 (min(max(min(v0, 1990), -9) + 18, v1) == min(max(min(v0, 1990), -9) + 18, v1));1;79;;;;;
 ((max(min(v0*8, 2082), 83) + (v1*248)) == (max(min(v0*8, 2082), 83) + (v1*248)));1;65;;;;;
 (((((((uint1)1 && ((((v0 + v1) + 0) + 1) <= ((v0 + v1) + -3))) && ((((v0 + v1) + 3) + 1) >= ((v0 + v1) + 1))) && ((v2 + -3) <= ((((0*4) + v2) + 0) + -3))) && ((v2 + 8) >= ((((1*4) + v2) + 3) + 1))) && (0 <= 0)) && (0 >= 0));0;199;;;;;
 (((((v0*4) + v1)*8) + 29) < (min(max(v1*8, ((((v0 + 1)*4) + v1)*8) + 4), (((v0 + 1)*4) + v1)*8) + -6));0;199;;;;;
 (((v0 + 59)/4) == ((v0 + 59)/4));1;24;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/16) + 1) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/16) + 1));1;246;;;;;
 (((max(min((v1*-32) + ((max(min((v3*500) + v4, min(v5 + v4, 2000) + -500), -499) - max(min((v3*500) + v4, min(v5 + v4, 2499) + -500), 0)) + (v2*-64)), -468), -500)/4)*4) == max(min((v1*-32) + ((max(min((v3*500) + v4, min(v5 + v4, 2000) + -500), -499) - max(min((v3*500) + v4, min(v5 + v4, 2499) + -500), 0)) + (v2*-64)), -468), -500));0;3889;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/125) + 1) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/125) + 1));1;217;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && ((((((v0*2) + v1)*4) + -1) + 0) <= (((((v0*2) + v1)*4) + 0) + -1))) && ((((((v0*2) + v1)*4) + ((5 + -1) - 1)) + 3) >= (((((v0*2) + v1)*4) + ((4 + 0) - 1)) + ((5 + -1) - 1)))) && (v2 <= v2)) && (v2 >= v2));1;210;;;;;
 (((v0*8) + 6) == ((((v0*8) + 6) + ((min(max(min(((v1 + v2) + 31)/8, 249), 0), max(min(v2/8, 250), 1) + 123) - v0)*8)) - 1));0;222;;;;;
 (min(((v0 + v1) + 1031)/4, ((min(((((min(v2*1000, v3 + -1000) + v0) % 4) + 1039)/16) + (v4*-17), 16)*4) + v5) + 1) == min(((v0 + v1) + 1031)/4, ((min(((((min(v2*1000, v3 + -1000) + v0) % 4) + 1039)/16) + (v4*-17), 16)*4) + v5) + 1));1;109;;;;;
 ((((((v0/3) % (((v1 - v2) + 50)/38))*-38)/19)*19) == (((v0/3) % (((v1 - v2) + 50)/38))*-38));1;61;;;;;
 (min(max((v0 - ((v1/2)*2))/16, -1), v2/8) == min(max((v0 - ((v1/2)*2))/16, -1), v2/8));1;63;;;;;
 (min(((v0*64) + 1272)/1108, max(min(((((((v1 + v2) + 62)/63) - (v2/63))*64) + 164)/1108, ((((((v1 + v2) + 62)/63) - (v2/63))*16) + 41)/277), ((((((v1 + v2) + 62)/63) - (v2/63))*64) + 169)/1108) + 1) == min(((v0*64) + 1272)/1108, max(min(((((((v1 + v2) + 62)/63) - (v2/63))*64) + 164)/1108, ((((((v1 + v2) + 62)/63) - (v2/63))*16) + 41)/277), ((((((v1 + v2) + 62)/63) - (v2/63))*64) + 169)/1108) + 1));1;158;;;;;
 (min(max(v0, 249), (min(v1, 0) + ((v2/4)*4)) + 3) == min(max(v0, 249), (min(v1, 0) + ((v2/4)*4)) + 3));1;89;;;;;
 (((v0*8) - ((((v1*16) + v2)*4) + v3)) == ((v0*8) - ((((v1*16) + v2)*4) + v3)));1;43;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 562)/501) == (((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 562)/501));1;241;;;;;
 (((v0/32) + (((v1 + 9)/12)*12)) == ((v0/32) + (((v1 + 9)/12)*12)));1;44;;;;;
 (max(min(max(((v0 - v1) + 3)/4, 0), (v2 + 3)/4), min((v3 + v0) - v1, v2)/4) == max(min(max(((v0 - v1) + 3)/4, 0), (v2 + 3)/4), min((v3 + v0) - v1, v2)/4));1;91;;;;;
 (max(-8 - max(min(v0, 995), -7), max(min(v1, 7), -995) + -8) == max(-8 - max(min(v0, 995), -7), max(min(v1, 7), -995) + -8));1;69;;;;;
 (max((v0 + -24)/1000, 0) >= ((max((v0 + -24)/1000, 0) + (((v0 + 999)/1000) - max((v0 + -24)/1000, 0))) - 1));0;578;;;;;
 ((((v0*96)/8)*8) == (v0*96));1;24;;;;;
 ((((v0*32) + 951)/752) != 0);0;457;;;;;
 ((v0 - (v1*40)) == (v0 - (v1*40)));1;44;;;;;
 ((((v0*8) + 41)/34) != 0);0;473;;;;;
 (((max(min(v0 + v1, 2000), 1) - (v2*126)) - max(min(v1, 1999), 0)) == ((max(min(v0 + v1, 2000), 1) - (v2*126)) - max(min(v1, 1999), 0)));1;133;;;;;
 (max(-2 - max(min(((((v0 + v1) + -1)/2) - (v2*64)) - (v1/2), 63), 0), max(min(v3, 0), -63) + -2) == max(-2 - max(min(((((v0 + v1) + -1)/2) - (v2*64)) - (v1/2), 63), 0), max(min(v3, 0), -63) + -2));1;114;;;;;
 (((((v0*71) + v1) + v2) + -7) < ((((v0*71) + v1) + (v2 + 1)) + -8));0;75;;;;;
 (((((((uint1)1 && ((((((v0 + v1)*8) + v2) + -32) % 16) <= (((((v0 + v1)*8) + v2) + -32) % 16))) && ((((((v0 + v1)*8) + v2) + -32) % 16) >= (((((v0 + v1)*8) + v2) + -32) % 16))) && ((((v3*8) + v4) % 16) <= (((v3*8) + v4) % 16))) && ((((v3*8) + v4) % 16) >= (((v3*8) + v4) % 16))) && (((0*4) + 0) <= ((0*4) + 0))) && (((1*4) + 3) >= ((((2 + 0) - 1)*4) + ((4 + 0) - 1))));1;222;;;;;
 ((v0 - (v1*125)) == (v0 - (v1*125)));1;42;;;;;
 (min((v0*32) + v1, min(v2, 2023) + -24) == min((v0*32) + v1, min(v2, 2023) + -24));1;56;;;;;
 ((min(v0 - (v1*32), ((v2*12) + ((v3/8)*8)) + 9) - (((v2*3) + (((v3/8)*2) + v4))*4)) == (min(v0 - (v1*32), ((v2*12) + ((v3/8)*8)) + 9) - (((v2*3) + (((v3/8)*2) + v4))*4)));1;88;;;;;
 ((v0 + 4) < ((v0 + 1) + -6));0;31;;;;;
 (min(max(min(((v0*2) + v1)*4, 1999), 0), (v2*4) + v3) == min(max(min(((v0*2) + v1)*4, 1999), 0), (v2*4) + v3));1;78;;;;;
 (((v0 + 677)/670) == ((v0 + 677)/670));1;99;;;;;
 ((((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/8)*8) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -26)*4))) == (((v0*8) + ((((min((v1*-124) + ((v2 - v0)*8), 16) + 109)/8)*8) + (v1*124))) + (min(((v2*8) - (v1*124)) - (v0*8), -106) + (min(min(((v2*8) - (v1*124)) - (v0*8), 16)/4, -26)*4))));1;148;;;;;
 (min((v0*3) + ((((v1*18) + v2)*8) + v3), ((((v1*18) + v2) + v4)*8) + -77) == min((v0*3) + ((((v1*18) + v2)*8) + v3), ((((v1*18) + v2) + v4)*8) + -77));1;81;;;;;
 (min((((((v0 + v1) + -1)/2) - (v2*500)) - (v3*250)) - (v1/2), v4) == min((((((v0 + v1) + -1)/2) - (v2*500)) - (v3*250)) - (v1/2), v4));1;88;;;;;
 (min(((v0 + v1) + 124)/125, ((v1/125) + ((v2/4)*4)) + 3) == min(((v0 + v1) + 124)/125, ((v1/125) + ((v2/4)*4)) + 3));1;75;;;;;
 (min(max(min(v0/8, 256), 10), (max(min(v0/8, 256), 7) + v1) + 14) == min(max(min(v0/8, 256), 10), (max(min(v0/8, 256), 7) + v1) + 14));1;76;;;;;
 (min((((v0 + v1) + 999)/8)*8, (((v2*2) + v3)*8) + 5) == min((((v0 + v1) + 999)/8)*8, (((v2*2) + v3)*8) + 5));1;76;;;;;
 ((min(v0, 63) + -65) >= (((min(v0, 63) + -65) + (69 - min(v0, 63))) - 1));0;65;;;;;
 (((v0*8) + ((v1*126) + v2)) == ((v0*8) + ((v1*126) + v2)));1;38;;;;;
 (((v0*1012) + ((v1*4) + v2)) == ((v0*1012) + ((v1*4) + v2)));1;56;;;;;
 ((((((v0 + v1) + -1)/63)*8) - ((((v2*2) + v3)*4) + v4)) == (((((v0 + v1) + -1)/63)*8) - ((((v2*2) + v3)*4) + v4)));1;66;;;;;
 (min(((v0/8) + (v1*63)) + 61, v2) == min(((v0/8) + (v1*63)) + 61, v2));1;42;;;;;
 ((((v0 - v1) + 176)/120) == (((v0 - v1) + 176)/120));1;43;;;;;
 (((v0*1020) + (((v1 + -11)/8)*8)) == ((v0*1020) + (((v1 + -11)/8)*8)));1;40;;;;;
 ((min(((((v0 + v1) + 15)/16) - (v2*64)) - (v1/16), 63) + 3) == (min(((((v0 + v1) + 15)/16) - (v2*64)) - (v1/16), 63) + 3));1;105;;;;;
 (((v0*8) + ((v1/4) - (((v2 + v1) + 3)/4))) == ((v0*8) + ((v1/4) - (((v2 + v1) + 3)/4))));1;61;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;5114;;;;;
 ((((((v0 + v1) + 159)/32) - ((v2/101)*38)) - (v1/32)) == (((((v0 + v1) + 159)/32) - ((v2/101)*38)) - (v1/32)));1;57;;;;;
 (((((((uint1)1 && (((min(v0*9, 8) + v1) + -3) <= (-3 + (min(v0*9, 8) + v1)))) && (((min(v0*9, 8) + v1) + 9) >= (1 + ((min(v0*9, 8) + v1) + 8)))) && (((v2 + v3) + 1) <= ((v2 + v3) + -3))) && (((v2 + v3) + 1) >= ((v2 + v3) + 1))) && ((min(v4*4, 13) + 0) <= (min(v4*4, 13) + 0))) && ((min(v4*4, 13) + 3) >= (min(v4*4, 13) + 3)));0;234;;;;;
 ((v0 - max(min(v1, 254), 5)) == (v0 - max(min(v1, 254), 5)));1;47;;;;;
 (min(max(min(v0, 1999), 0) + (((v1 + 5)/4)*4), max(min(v2 + v0, 1998), -1) + 2) == min(max(min(v0, 1999), 0) + (((v1 + 5)/4)*4), max(min(v2 + v0, 1998), -1) + 2));1;644;;;;;
 (((((v0*3) + v1)*4) + -1) == ((((((v0*3) + v1)*4) + -1) + ((min(v2 - v1, 2)*4) + 6)) - 1));0;140;;;;;
 (min(84 - (max(max(min((v0/63)*8, 285), 36) + ((v1*16) - max(min((((v2 + v0) + -1)/63)*8, 244), -5)), 26)*2), (min((max(min((((v2 + v0) + -1)/63)*8, 244), -5) - (v1*16)) - max(min((v0/63)*8, 285), 36), -26)*2) + 85) == min(84 - (max(max(min((v0/63)*8, 285), 36) + ((v1*16) - max(min((((v2 + v0) + -1)/63)*8, 244), -5)), 26)*2), (min((max(min((((v2 + v0) + -1)/63)*8, 244), -5) - (v1*16)) - max(min((v0/63)*8, 285), 36), -26)*2) + 85));1;1062;;;;;
 (((min(v0 - v1, 60) + 11)/12) == ((min(v0 - v1, 60) + 11)/12));1;42;;;;;
 (min((v0/65) + 7, (((v1 + v0) + 64)/65) + (v2*-8)) == min((v0/65) + 7, (((v1 + v0) + 64)/65) + (v2*-8)));1;61;;;;;
 (min(((v0*34) + v1) + 21, v2) == min(((v0*34) + v1) + 21, v2));1;60;;;;;
 (min(((v0 + v1) + -1)/16, ((v2*4) + ((v3*16) + ((v1/16) + (v4*32)))) + 3) == min(((v0 + v1) + -1)/16, ((v2*4) + ((v3*16) + ((v1/16) + (v4*32)))) + 3));1;81;;;;;
 (min(max(((v0 - ((v1/65)*64)) + 571)/528, 0), ((v2*8) + 79)/66) == min(max(((v0 - ((v1/65)*64)) + 571)/528, 0), ((v2*8) + 79)/66));1;90;;;;;
 ((max(min(v0, 1003)*2, 7) + (((v1*33) + v2)*4)) == (max(min(v0, 1003)*2, 7) + (((v1*33) + v2)*4)));1;51;;;;;
 (min(max((max(v0, 1) + v1)/2, ((v2*65) + v3) + -7), (min(v4 - v3, 53) + ((v2*65) + v3)) + 5) == min(max((max(v0, 1) + v1)/2, ((v2*65) + v3) + -7), (min(v4 - v3, 53) + ((v2*65) + v3)) + 5));1;110;;;;;
 ((v0 - ((v1/63)*64)) == (v0 - ((v1/63)*64)));1;37;;;;;
 (min((v0*8) + 94, v1) == min((v0*8) + 94, v1));1;48;;;;;
 ((((v0*4) - (((v1 + v2) + 188)/63)) + v3) == (((v0*4) - (((v1 + v2) + 188)/63)) + v3));1;69;;;;;
 (min((v0*4) + v1, (v2*16) + 66) == min((v0*4) + v1, (v2*16) + 66));1;53;;;;;
 ((((v0 + v1)/63) + (v2*4)) == (((v0 + v1)/63) + (v2*4)));1;903;;;;;
 (min((v0*4) + (max(min((v1/63)*8, 285), 36) + (v2*16)), max(min((((v3 + v1) + -1)/63)*8, 244), -5) + 38) == min((v0*4) + (max(min((v1/63)*8, 285), 36) + (v2*16)), max(min((((v3 + v1) + -1)/63)*8, 244), -5) + 38));1;143;;;;;
 (((((v0 + v1)*2) + v2)*4) >= ((((((v0 + v1)*2) + v2)*4) + 7) - 1));0;71;;;;;
 (((((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37))*4) + 579)/250) == ((((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37))*4) + 579)/250));1;297;;;;;
 (((max(min(min(((v0 + v1) + -1)/2, ((v1/2) + (v2*250)) + 249), 999), 0) - max(min((v1/2) + (v2*250), 999), 0)) - (v3*128)) == ((max(min(min(((v0 + v1) + -1)/2, ((v1/2) + (v2*250)) + 249), 999), 0) - max(min((v1/2) + (v2*250), 999), 0)) - (v3*128)));1;307;;;;;
 ((((v0*16) + 291)/253) != 0);0;433;;;;;
 (max(((v0 % 8) + 23)/8, ((((min(v1*8, 242) + v0) + 15)/8) - min((min(v1*8, 242) + v0)/8, ((v0 + 15)/8) + v1)) + 1) <= 1024);0;1575;;;;;
 (((v0*4) + ((v1*252) + v2)) == ((v0*4) + ((v1*252) + v2)));1;58;;;;;
 ((((((v0/((v1/32) + 1)) % ((v2/36) + 1))*-36)/18)*18) == (((v0/((v1/32) + 1)) % ((v2/36) + 1))*-36));1;73;;;;;
 ((min(v0*228, 457) + (v1 + v2)) == (min(v0*228, 457) + (v1 + v2)));1;48;;;;;
 ((((((v0 + v1) + 755)/63)*16) - (((v1/63)*16) + v2)) == (((((v0 + v1) + 755)/63)*16) - (((v1/63)*16) + v2)));1;52;;;;;
 (min(v0*96, v1 + -96) == min(v0*96, v1 + -96));1;52;;;;;
 (((v0*32) - min((((((v1 + v2) + 1999)/2000)*256) - (v3*112)) - ((v2/2000)*256), -416)) == ((v0*32) - min((((((v1 + v2) + 1999)/2000)*256) - (v3*112)) - ((v2/2000)*256), -416)));1;94;;;;;
 (max(-790 - (v0*64), (v0*64) + 95) >= 0);0;507;;;;;
 (max(0, min(6 - ((v0 % 2)*4), (0 + 4) - 1) + 1) <= 0);0;69;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + v0) + 0))) && ((((7*4) + v0) + 3) >= (((7*4) + v0) + 3))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (6 >= 6));1;139;;;;;
 ((((max(min((((v0 + v1) + 47)/8)*8, 1994), -5) - max(min((v1/8)*8, 2100), 101)) + 234)/128) == (((max(min((((v0 + v1) + 47)/8)*8, 1994), -5) - max(min((v1/8)*8, 2100), 101)) + 234)/128));1;239;;;;;
 (min(max(min(v0, 249), 0), (max(min(v1/8, 249), 0) + ((v2/4)*4)) + 3) == min(max(min(v0, 249), 0), (max(min(v1/8, 249), 0) + ((v2/4)*4)) + 3));1;93;;;;;
 (((((((v0 + v1) + 124)/125)*16) - (((v1/125)*16) + (v2*18))) + 1) == ((((((v0 + v1) + 124)/125)*16) - (((v1/125)*16) + (v2*18))) + 1));1;76;;;;;
 ((1 - max(v0, 1)) >= (((1 - max(v0, 1)) + (max(v0, 1) + 2)) - 1));0;63;;;;;
 (max(min(max(max(max(9 - ((v0/63)*8), ((v0/63)*-8) + 11), 12 - ((v0/63)*8))/3, 0), (v1/3) + 3), min(min(((min(v2, 252) - ((v0/63)*8)) + 4)/3, 85 - (((v0/63)*8)/3)), (v1/3) + 2) + 1) == max(min(max(max(max(9 - ((v0/63)*8), ((v0/63)*-8) + 11), 12 - ((v0/63)*8))/3, 0), (v1/3) + 3), min(min(((min(v2, 252) - ((v0/63)*8)) + 4)/3, 85 - (((v0/63)*8)/3)), (v1/3) + 2) + 1));1;159;;;;;
 (min(v0 + v1, v2 + 16) == min(v0 + v1, v2 + 16));1;52;;;;;
 (min(((v0*16) + v1) + 15, v2) == min(((v0*16) + v1) + 15, v2));1;83;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 22) == min(((v0*2) + v1)*4, (v2*8) + 22));1;65;;;;;
 (((((((v0 + v1) + 64)/65)*8) - (v2*66)) - ((v1/65)*8)) == ((((((v0 + v1) + 64)/65)*8) - (v2*66)) - ((v1/65)*8)));1;37;;;;;
 (max(-553 - max(((v0*8) - (v1*990)) - (v2*8), -552), min(v3, 552) + -553) == max(-553 - max(((v0*8) - (v1*990)) - (v2*8), -552), min(v3, 552) + -553));1;89;;;;;
 (((min(v0*32, 968)/8)*8) == min(v0*32, 968));1;60;;;;;
 ((((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 519)/506) == (((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 519)/506));1;71;;;;;
 (max((((((v0 + v1) + 62)/63)*2) - (v2/4)) + 1, ((10 - v2)/4) + ((((v0 + v1) + 62)/63)*2)) == max((((((v0 + v1) + 62)/63)*2) - (v2/4)) + 1, ((10 - v2)/4) + ((((v0 + v1) + 62)/63)*2)));1;121;;;;;
 (((((((uint1)1 && (((((v0*125) + v1) + v2) + -2) <= ((((v0*125) + v1) + v2) + -2))) && (((((v0*125) + v1) + v2) + ((7 + -2) - 1)) >= ((((v0*125) + v1) + v2) + ((7 + -2) - 1)))) && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((v3*4) + 0) <= ((v3*4) + 0))) && (((v3*4) + 3) >= ((v3*4) + ((4 + 0) - 1))));1;182;;;;;
 (min(1 - min((v0/8)*2, 1), (v1*2) + 3) == min(1 - min((v0/8)*2, 1), (v1*2) + 3));1;62;;;;;
 ((min((v0/16)*8, (max((((v1 + v0) + 15)/16)*8, 995) - (v2*4)) + 5) - min((v0/16)*8, 4)) == (min((v0/16)*8, (max((((v1 + v0) + 15)/16)*8, 995) - (v2*4)) + 5) - min((v0/16)*8, 4)));1;309;;;;;
 ((-200 - max(v0, -195)) == (((-200 - max(v0, -195)) + (max(v0, -195) + 202)) - 1));0;78;;;;;
 (((v0*87) + v1) == ((v0*87) + v1));1;35;;;;;
 ((v0 - ((v1*4) + ((v2*64) + v3))) == (v0 - ((v1*4) + ((v2*64) + v3))));1;63;;;;;
 ((max(v0*4, 7) + (((min(v1 + 63, v2)*-2) + ((v1*2) + v3))*4)) == (max(v0*4, 7) + (((min(v1 + 63, v2)*-2) + ((v1*2) + v3))*4)));1;79;;;;;
 (((((((v0 + v1) + 71)/64) - (v1/64))/17) + 1) == ((((((v0 + v1) + 71)/64) - (v1/64))/17) + 1));1;41;;;;;
 ((((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 867)/668) == (((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 867)/668));1;211;;;;;
 (min(max(min(v0/8, 249), 0) + (((v1 + 65)/64)*64), max(min(((v2 + v0) + 7)/8, 249), 0) + 2) == min(max(min(v0/8, 249), 0) + (((v1 + 65)/64)*64), max(min(((v2 + v0) + 7)/8, 249), 0) + 2));1;98;;;;;
 (min(max((v0/4) - (((max(min(v1, 2002), 3) + -3)/16)*4), -6), v2 + 1) == min(max((v0/4) - (((max(min(v1, 2002), 3) + -3)/16)*4), -6), v2 + 1));1;1982;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + -1)/32) - (v2*4)) - (v1/32), 3)*8) + 19)) - 1));0;141;;;;;
 (min(((v0*4) + v1)*2, (v2*8) + 71) == min(((v0*4) + v1)*2, (v2*8) + 71));1;57;;;;;
 (((((v0 + v1) + 11)/4) - ((((v2*3) + v3)*8) + v4)) == ((((v0 + v1) + 11)/4) - ((((v2*3) + v3)*8) + v4)));1;79;;;;;
 ((max(min(min(v0*32, 223) + v1, 1244), 245) + (v2*8)) == (max(min(min(v0*32, 223) + v1, 1244), 245) + (v2*8)));1;72;;;;;
 (min(max(min(v0, 1117), 118) + (((v1 + 21)/4)*4), max(min(v0, 1102), 103) + 18) == min(max(min(v0, 1117), 118) + (((v1 + 21)/4)*4), max(min(v0, 1102), 103) + 18));1;78;;;;;
 ((max(min(v0*8, 2044), 45) + (v1*12)) == (max(min(v0*8, 2044), 45) + (v1*12)));1;64;;;;;
 (max(min(max(((v0 - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), (v2 + 13)/4), min(min((((v3 + v0) - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 4)/32, ((max(min(((((((v4 + v1) + -1)/8)*8) + 5)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 6)/4), (v2 + 9)/4) + 1) == max(min(max(((v0 - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), (v2 + 13)/4), min(min((((v3 + v0) - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 4)/32, ((max(min(((((((v4 + v1) + -1)/8)*8) + 5)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 6)/4), (v2 + 9)/4) + 1));1;537;;;;;
 (0 == ((0 + (63 - (max(min(v0, 21), 20)*3))) - 1));0;69;;;;;
 (max(0, min(35 - ((v0 % 8)*5), (0 + 5) - 1) + 1) <= 0);0;64;;;;;
 (max(((v0 - v1)*8)/126, 0) >= ((max(((v0 - v1)*8)/126, 0) + max(((((v0 - v1)*8) + 125)/126) - max(((v0 - v1)*8)/126, 0), 0)) - 1));0;1028;;;;;
 (min(v0*2, ((v1*253) + (v2*2)) + 241) == min(v0*2, ((v1*253) + (v2*2)) + 241));1;84;;;;;
 (min(((((v0 + v1) + 249)/250)*32) + 34, v2) == min(((((v0 + v1) + 249)/250)*32) + 34, v2));1;63;;;;;
 (((v0 + 310)/252) != 0);0;348;;;;;
 ((min(v0, 0) + (v1*88)) == (min(v0, 0) + (v1*88)));1;62;;;;;
 (min((v0*4) + v1, (v2*8) + 37) == min((v0*4) + v1, (v2*8) + 37));1;49;;;;;
 (((((v0 % ((v1 + 31)/16))*-16)/8)*8) == ((v0 % ((v1 + 31)/16))*-16));1;70;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 300)/251) == ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 254), 5))*8) + 300)/251));1;288;;;;;
 ((min(max((v0*8) + v1, 14)*16, 236) + -237) == (((min(max((v0*8) + v1, 14)*16, 236) + -237) + (243 - min(max((v0*8) + v1, 14)*16, 236))) - 1));0;122;;;;;
 ((max((v0*64) - v1, -63) + (v2*4)) == (max((v0*64) - v1, -63) + (v2*4)));1;47;;;;;
 ((((v0 + -1)/4) - (((v1*3) + v2)*8)) == (((v0 + -1)/4) - (((v1*3) + v2)*8)));1;53;;;;;
 (min((v0*16) + 16, v1) == min((v0*16) + 16, v1));1;12;;;;;
 (((v0*132) + ((v1/65)*8)) == ((v0*132) + ((v1/65)*8)));1;48;;;;;
 ((max(min((v0/8)*8, 2082), 83) + (v1*32)) == (max(min((v0/8)*8, 2082), 83) + (v1*32)));1;46;;;;;
 (((v0*2) + ((v1*60) + v2)) == ((v0*2) + ((v1*60) + v2)));1;33;;;;;
 (min((((v0 + v1) + 127)/32) - (v1/32), v2 + 36) == min((((v0 + v1) + 127)/32) - (v1/32), v2 + 36));1;66;;;;;
 (min(min((v0 - ((v1*8) + v2))*8, -44) + 33, v3) == min(min((v0 - ((v1*8) + v2))*8, -44) + 33, v3));1;88;;;;;
 (min((v0*4) + v1, (v2 + v3) + 9) == min((v0*4) + v1, (v2 + v3) + 9));1;63;;;;;
 (((((((uint1)1 && ((((v0*2) + v1) + v2) <= (((v0*2) + v1) + v2))) && ((((v0*2) + v1) + v2) >= (((v0*2) + v1) + v2))) && ((0 + v3) <= (0 + v3))) && ((3 + v3) >= (((4 + 0) - 1) + v3))) && (v4 <= v4)) && (v4 >= v4));1;136;;;;;
 ((min(v0*64, 65) + (max(min(v1/2, 999), 0) + (v2*126))) == (min(v0*64, 65) + (max(min(v1/2, 999), 0) + (v2*126))));1;82;;;;;
 ((((-128 - ((min(v0*128, v1 + -128) + v2) % 4))/4) + (v3*4)) == (((-128 - ((min(v0*128, v1 + -128) + v2) % 4))/4) + (v3*4)));1;75;;;;;
 ((((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 63)/46) == (((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*8) + 63)/46));1;101;;;;;
 (min(((v0*131) + v1) + 125, v2) == min(((v0*131) + v1) + 125, v2));1;49;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + ((4 + 0) - 1)))) && ((((v2*1001) + v3) + -1) <= ((((v2*1001) + v3) + 0) + -1))) && ((((v2*1001) + v3) + 999) >= ((((v2*1001) + v3) + ((1001 + 0) - 1)) + -1))) && (0 <= 0)) && (0 >= 0));1;226;;;;;
 ((((v0 - v1) + 44)/33) == (((v0 - v1) + 44)/33));1;759;;;;;
 (min(v0*8, ((v1*116) + (v2*8)) + 98) == min(v0*8, ((v1*116) + (v2*8)) + 98));1;59;;;;;
 (((v0 + v1) + v2) >= (((v0 + v1) + (v2 - 1)) + 1));1;70;;;;;
 ((max(v0, 0) + (((v1 + 5)/4)*4)) == (max(v0, 0) + (((v1 + 5)/4)*4)));1;60;;;;;
 (((v0 + 30)/23) != 0);0;340;;;;;
 ((((((v0 + v1) + -1)/63)*8) - ((((v2*4) + v3)*4) + v4)) == (((((v0 + v1) + -1)/63)*8) - ((((v2*4) + v3)*4) + v4)));1;55;;;;;
 ((((v0*8) + 60)/19) != 0);0;428;;;;;
 (((((v0*3) + v1)*8) + -15) == ((((((v0*3) + v1)*8) + -15) + (((v2 - ((v0*3) + v1))*8) + 21)) - 1));0;116;;;;;
 (min(((v0 + v1) + 499)/32, (((v0 + v1)/32) + (v2*8)) + 7) == min(((v0 + v1) + 499)/32, (((v0 + v1)/32) + (v2*8)) + 7));1;77;;;;;
 (min(((v0 + v1) + -1)/8, ((v1/8) + (v2*64)) + 63) == min(((v0 + v1) + -1)/8, ((v1/8) + (v2*64)) + 63));1;88;;;;;
 (((((v0 % (((v1*8) + 59)/36))*-288)/32)*32) == ((v0 % (((v1*8) + 59)/36))*-288));1;55;;;;;
 (max(min(min(248, 249), ((((v1*65) + v2) + -1) + 65) - 1) + 1, min(max(max(-1, 0), ((v1*65) + v2) + -1), 65 + (((v1*65) + v2) + -1))) <= min(max(max(-1, 0), ((v1*65) + v2) + -1), 65 + (((v1*65) + v2) + -1)));0;1349;;;;;
 (((((((min(v0*125, v1 + -125) + v2) % 8) + 188)/8)*-2) + ((v3*18) + v4)) == ((((((min(v0*125, v1 + -125) + v2) % 8) + 188)/8)*-2) + ((v3*18) + v4)));1;85;;;;;
 ((((min(((v3 % (((v4*64) + 1066)/828))*828) + (((v2/63)*64) + 589), (((v1 + v2) + 251)/63)*64)*-1)/4)*4) == (min(((v3 % (((v4*64) + 1066)/828))*828) + (((v2/63)*64) + 589), (((v1 + v2) + 251)/63)*64)*-1));0;2020;;;;;
 (((v0*8) + (v1*1220)) == ((v0*8) + (v1*1220)));1;31;;;;;
 (((v0*21) + (max(min((v1 + v2)/2, 999), 0) - max(min((v1 + v2)/2, 937), -62))) == ((v0*21) + (max(min((v1 + v2)/2, 999), 0) - max(min((v1 + v2)/2, 937), -62))));1;256;;;;;
 (min((v0*8) + v1, min(v2*8, 1980) + 16) == min((v0*8) + v1, min(v2*8, 1980) + 16));1;61;;;;;
 (min(((v0 + v1) + 7)/8, v2 + 62) == min(((v0 + v1) + 7)/8, v2 + 62));1;47;;;;;
 (max((v0/4)*4, (v1*4) + 2) == max((v0/4)*4, (v1*4) + 2));1;48;;;;;
 (((min(min(min((v0/2) + (((min(((v1 + v0) + -1)/2, min((min(v2*32, 302) + v3) + 28, (v0/2) + ((v4*334) + ((min((v4*-334) + v5, 333)/4)*4))) + 3) - (v0/2))/2)*2), ((v2*32) + v3) + 30) + 1, v6) - (v2*32), ((v7*16) + v3) + 15) + (v7*-16)) - ((v8*2) + v3)) == ((min(min(min((v0/2) + (((min(((v1 + v0) + -1)/2, min((min(v2*32, 302) + v3) + 28, (v0/2) + ((v4*334) + ((min((v4*-334) + v5, 333)/4)*4))) + 3) - (v0/2))/2)*2), ((v2*32) + v3) + 30) + 1, v6) - (v2*32), ((v7*16) + v3) + 15) + (v7*-16)) - ((v8*2) + v3)));1;252;;;;;
 ((max(min(v0/2, 1006), 7) - max(min(((v1 + v0) + 1)/2, 999), 0)) == (max(min(v0/2, 1006), 7) - max(min(((v1 + v0) + 1)/2, 999), 0)));1;197;;;;;
 (max(min((((v0 - v1)*8) + 1326)/1220, max(min((((v0 - v1)*8) + 106)/1220, (((v0 - v1)*2) + 26)/305), (((v0 - v1)*8) + 107)/1220) + 1), (((v0 - v1)*8) + 107)/1220) == max(min((((v0 - v1)*8) + 1326)/1220, max(min((((v0 - v1)*8) + 106)/1220, (((v0 - v1)*2) + 26)/305), (((v0 - v1)*8) + 107)/1220) + 1), (((v0 - v1)*8) + 107)/1220));1;176;;;;;
 ((v0 + v1) >= ((((v0 - 1) + v1) + 3) + 1));0;61;;;;;
 (((v0/4) - ((v1 + v2)*4)) == ((v0/4) - ((v1 + v2)*4)));1;58;;;;;
 (((((v0 % (((v1*8) + 35)/12))*12)/4)*4) == ((v0 % (((v1*8) + 35)/12))*12));1;57;;;;;
 (((((((uint1)1 && ((((((v0*4) + v1) + -3) + 0) + -45) <= (((((v0*4) + 0) + v1) + -3) + -45))) && ((((((v0*4) + v1) + ((4 + -3) - 1)) + 3) + -45) >= (((((v0*4) + ((4 + 0) - 1)) + v1) + ((4 + -3) - 1)) + -45))) && (((((v2 + v3) + v4) + -45) % 4) <= ((((v2 + v3) + v4) + -45) % 4))) && (((((v2 + v3) + v4) + -45) % 4) >= ((((v2 + v3) + v4) + -45) % 4))) && (v5 <= v5)) && (v5 >= v5));1;277;;;;;
 ((((v0 + v1)/2) + (v2*2)) == (((v0 + v1)/2) + (v2*2)));1;1311;;;;;
 (((((max(v0, 249) - min(v1, 0))*8) + 1163)/1068) == ((((max(v0, 249) - min(v1, 0))*8) + 1163)/1068));1;78;;;;;
 ((((((v0 + v1) + -1)/63) - (v2*2)) - (v1/63)) == (((((v0 + v1) + -1)/63) - (v2*2)) - (v1/63)));1;43;;;;;
 (((min(min((min(max(v0, 249) - (v1*128), min(v2, 0) + 127) - (v3*4)) + 8, v2), 0)*8) - ((min(v2, 0)*8) + (v4*12))) == ((min(min((min(max(v0, 249) - (v1*128), min(v2, 0) + 127) - (v3*4)) + 8, v2), 0)*8) - ((min(v2, 0)*8) + (v4*12))));1;131;;;;;
 ((v0 - (((v1*250) + ((v2*125) + v3))*4)) == (v0 - (((v1*250) + ((v2*125) + v3))*4)));1;55;;;;;
 ((((v0 + 19)/4) - (((v1 + v2)/63)*2)) == (((v0 + 19)/4) - (((v1 + v2)/63)*2)));1;61;;;;;
 (((((((uint1)1 && ((v0 + -4) <= ((((0*4) + 0) + v0) + -4))) && (((v0 + 1007) + -4) >= ((((((250 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + -4))) && (v1 <= v1)) && (((125 + v1) - 1) >= ((125 + v1) - 1))) && (v2 <= v2)) && (v2 >= v2));1;153;;;;;
 (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 95) == min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 95));1;128;;;;;
 ((((min(((v0/5)*192) + ((max(min(v1/65, 34), 3)*16) + (v2*28)), (min(((v0/5)*12) + (max(min(v1/65, 34), 3) + 1), max(min(((v3 + v1) + 64)/65, 27), -4))*16) + 149)*4)/4)*4) == (min(((v0/5)*192) + ((max(min(v1/65, 34), 3)*16) + (v2*28)), (min(((v0/5)*12) + (max(min(v1/65, 34), 3) + 1), max(min(((v3 + v1) + 64)/65, 27), -4))*16) + 149)*4));1;202;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*32, 468) + (v1*4)) + v2)) <= ((min(v0*32, 468) + (v1*4)) + v2))) && ((3 + ((min(v0*32, 468) + (v1*4)) + v2)) >= (((min(v0*32, 468) + (v1*4)) + 3) + v2))) && (((min(v3*8, 117) + v4) + v5) <= ((min(v3*8, 117) + v4) + v5))) && (((min(v3*8, 117) + v4) + v5) >= ((min(v3*8, 117) + v4) + v5))) && (v6 <= v6)) && (v6 >= v6));1;224;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= (0 + v2))) && ((v2 + 7) >= (((8 + 0) - 1) + v2))) && (0 <= 0)) && (0 >= 0));1;167;;;;;
 ((min(v0, -1) + (v1/8)) == (min(v0, -1) + (v1/8)));1;35;;;;;
 ((((((v0 + v1)/250) - (v1/250))/5) + 1) == (((((v0 + v1)/250) - (v1/250))/5) + 1));1;132;;;;;
 (((min(v0*4, (((v1/32) + (v2*33))*4) + 123) - (v2*132)) - ((v1/32)*4)) == ((min(v0*4, (((v1/32) + (v2*33))*4) + 123) - (v2*132)) - ((v1/32)*4)));1;90;;;;;
 (min(((v0 + v1) + 124)/16, v2 - max(((-109 - ((min(v3*125, v4 + -125) + v0) % 16))/16) + (v5*4), -3)) == min(((v0 + v1) + 124)/16, v2 - max(((-109 - ((min(v3*125, v4 + -125) + v0) % 16))/16) + (v5*4), -3)));1;82;;;;;
 ((min(v0*2, 1) + -1) == (((min(v0*2, 1) + -1) + (5 - min(v0*2, 1))) - 1));0;78;;;;;
 (((v0*2) + ((v1*4) + v2)) == ((v0*2) + ((v1*4) + v2)));1;84;;;;;
 (((((v0 + v1) + -1)/8) - (v2*128)) == ((((v0 + v1) + -1)/8) - (v2*128)));1;71;;;;;
 (max((min((((v0 + v1) + -1)/500) - (v1/500), v2)*64) + 16, v3) == max((min((((v0 + v1) + -1)/500) - (v1/500), v2)*64) + 16, v3));1;81;;;;;
 (min(((((v0*32) + 735)/620)*620) + ((v1/63)*32), ((((v2 + v1) + 251)/63)*32) + 116) == min(((((v0*32) + 735)/620)*620) + ((v1/63)*32), ((((v2 + v1) + 251)/63)*32) + 116));1;2124;;;;;
 (((((v0 + v1) + 499)/250) - (v1/250)) == ((((v0 + v1) + 499)/250) - (v1/250)));1;52;;;;;
 (min(((v0 + v1) + 31)/32, ((v1/32) + ((v2/32)*32)) + 31) == min(((v0 + v1) + 31)/32, ((v1/32) + ((v2/32)*32)) + 31));1;1570;;;;;
 (min(v0*16, ((v1/8)*16) + 54) == min(v0*16, ((v1/8)*16) + 54));1;57;;;;;
 ((((max(min(v0, 2002), 3) + -3)/16) + (v1*16)) == (((max(min(v0, 2002), 3) + -3)/16) + (v1*16)));1;92;;;;;
 (min(((((v0 + v1) + 5)/2) - (v2*504)) - ((v1/2) + (v3*128)), min(v4, 119) + 15) == min(((((v0 + v1) + 5)/2) - (v2*504)) - ((v1/2) + (v3*128)), min(v4, 119) + 15));1;127;;;;;
 (((v0*8) + ((v1*32) + ((v2*96) + ((v3*286) + v4)))) == ((v0*8) + ((v1*32) + ((v2*96) + ((v3*286) + v4)))));1;45;;;;;
 ((((v0 + v1) + v2) + 1) <= (((((v0 - 1) + v1) + v2) + -5) - 1));0;71;;;;;
 (((v0 + 37)/32) == ((v0 + 37)/32));1;22;;;;;
 (((((((v0 + v1) + -1)/8) + (v2*-12)) - (v3*84)) - (v1/8)) == ((((((v0 + v1) + -1)/8) + (v2*-12)) - (v3*84)) - (v1/8)));1;84;;;;;
 (min((v0/4) + v1, ((v2*16) + v3) + 11) == min((v0/4) + v1, ((v2*16) + v3) + 11));1;58;;;;;
 (((v0*56) + ((min(v1/8, 0)/16)*16)) == ((v0*56) + ((min(v1/8, 0)/16)*16)));1;92;;;;;
 (min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60), ((v3*34) + v2) + 28) == min(min(max(min(((v0 + v1) + 1)/2, 999), 0), v2 + 60), ((v3*34) + v2) + 28));1;104;;;;;
 ((max(min(((v0*16) + v1) - v2, 14), -1) + max(min(v3, 1), -14)) == (max(min(((v0*16) + v1) - v2, 14), -1) + max(min(v3, 1), -14)));1;62;;;;;
 (((v0/2) + (v1*15)) == ((v0/2) + (v1*15)));1;36;;;;;
 (((v0*2) + -17) == ((((v0*2) + -17) + ((min((v1 - (v2*18)) - v3, 6)*2) + 30)) - 1));0;148;;;;;
 ((((min(((v3 % (((v4*512) + 1485)/756))*756) + (((v2/500)*512) + 26), (((v1 + v2) + -1)/500)*512)*-1)/4)*4) == (min(((v3 % (((v4*512) + 1485)/756))*756) + (((v2/500)*512) + 26), (((v1 + v2) + -1)/500)*512)*-1));0;2010;;;;;
 (min(max(min(((v0 + v1) + -1)/63, 31), 0)*8, ((max(min(v1/63, 31), 0) + (v2*4))*8) + 12) == min(max(min(((v0 + v1) + -1)/63, 31), 0)*8, ((max(min(v1/63, 31), 0) + (v2*4))*8) + 12));1;123;;;;;
 (((v0 - (v1*129)) - ((max(min(v2/8, 249), 0)/8)*8)) == ((v0 - (v1*129)) - ((max(min(v2/8, 249), 0)/8)*8)));1;74;;;;;
 (((max(min(v0, 38), 7) + (v1*12))*8) == ((max(min(v0, 38), 7) + (v1*12))*8));1;38;;;;;
 ((((v0*32) + 354)/276) != 0);0;462;;;;;
 ((min(v0*4, 126) + (min(v1*128, v2 + -128) + v3)) == (min(v0*4, 126) + (min(v1*128, v2 + -128) + v3)));1;42;;;;;
 (((((v0 % ((v1/32) + 3))*-32)/8)*8) == ((v0 % ((v1/32) + 3))*-32));1;60;;;;;
 (min(((v0 + v1) + 156)/32, v2) == min(((v0 + v1) + 156)/32, v2));1;44;;;;;
 (max(min(((v0/8) + (v1*32)) - min(((v2 + v0) + -1)/8, (min((min((((v2 + v0) + -1)/8) - (v0/8), (v1*32) + 31)/4)*4, (v1*32) + 28) + (v0/8)) + 3), v3 + 3), (v0/8) + ((v1*32) - (((v2 + v0) + -1)/8))) == max(min(((v0/8) + (v1*32)) - min(((v2 + v0) + -1)/8, (min((min((((v2 + v0) + -1)/8) - (v0/8), (v1*32) + 31)/4)*4, (v1*32) + 28) + (v0/8)) + 3), v3 + 3), (v0/8) + ((v1*32) - (((v2 + v0) + -1)/8))));1;188;;;;;
 ((min(max(v0 + v1, -1)*4, -1) + -9) == (((min(max(v0 + v1, -1)*4, -1) + -9) + (12 - min(max(v0 + v1, -1)*4, -1))) - 1));0;108;;;;;
 ((((v0*8) + 43)/34) != 0);0;442;;;;;
 (((877 - max(v0*251, 752)) - (v1*126)) == ((877 - max(v0*251, 752)) - (v1*126)));1;53;;;;;
 ((((v0 + v1)/133) + (v2*4)) == (((v0 + v1)/133) + (v2*4)));1;35;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 1032)/1004) == (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 1032)/1004));1;234;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 52)/8) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 52)/8));1;214;;;;;
 (((v0 + 51)/32) != 0);0;340;;;;;
 ((((((v0 + v1) + 3)/4) - (v2*8)) - (v1/4)) == (((((v0 + v1) + 3)/4) - (v2*8)) - (v1/4)));1;76;;;;;
 (((v0*268) + (v1*8)) == ((v0*268) + (v1*8)));1;30;;;;;
 (((v0*3) + ((v1*47) + v2)) == ((v0*3) + ((v1*47) + v2)));1;43;;;;;
 (((((v0/63)*8) + ((((min((v1*-129) + (v2*8), 119) + 12)/68)*68) + (v1*129))) + (min((((((v3 + v0) + -1)/63)*8) - (v1*129)) - ((v0/63)*8), -9) + (min(min((((((v3 + v0) + -1)/63)*8) - (v1*129)) - ((v0/63)*8), 119)/4, 13)*4))) == ((((v0/63)*8) + ((((min((v1*-129) + (v2*8), 119) + 12)/68)*68) + (v1*129))) + (min((((((v3 + v0) + -1)/63)*8) - (v1*129)) - ((v0/63)*8), -9) + (min(min((((((v3 + v0) + -1)/63)*8) - (v1*129)) - ((v0/63)*8), 119)/4, 13)*4))));1;170;;;;;
 (max(-61 - max(((v0*-32) + ((min((((v0*2) + v1)*64) + 60, v2)/4) + (v1*-16)))*32, -56), min((min(v3, 60)/4)*-32, 56) + -61) == max(-61 - max(((v0*-32) + ((min((((v0*2) + v1)*64) + 60, v2)/4) + (v1*-16)))*32, -56), min((min(v3, 60)/4)*-32, 56) + -61));1;148;;;;;
 (((((((uint1)1 && ((((v0*16) + v1) + -2) <= ((((v0*16) + 0) + v1) + -2))) && ((((v0*16) + v1) + 13) >= ((((v0*16) + ((16 + 0) - 1)) + v1) + -2))) && (((((v2/4) + 0)*4) + 0) <= ((0 + (v2/4))*4))) && (((((v2/4) + (((v3/4)*4) + 3))*4) + 3) >= ((((4 + 0) - 1) + ((v2/4) + ((v3/4)*4)))*4))) && (v4 <= v4)) && (v4 >= v4));1;274;;;;;
 (((((max(min(v0 + v1, 1991), -8)/4) - ((max(min(v1, 2005), 6) + -10)/4)) + 11)/8) == ((((max(min(v0 + v1, 1991), -8)/4) - ((max(min(v1, 2005), 6) + -10)/4)) + 11)/8));1;93;;;;;
 (min(((min(v0*32, 93) + (v1 + v2)) + 31)/8, (((min(v0*32, 93) + (v1 + v2))/8) + (((((min(v0*32, 93) + (v1 + v2)) % 8) + 63)/32)*4)) + -1) == min(((min(v0*32, 93) + (v1 + v2)) + 31)/8, (((min(v0*32, 93) + (v1 + v2))/8) + (((((min(v0*32, 93) + (v1 + v2)) % 8) + 63)/32)*4)) + -1));1;141;;;;;
 (((min((((v0 + v1) + 3)/4) - (v2*16), (v1/4) + 15) + (v3*-4)) - (v1/4)) == ((min((((v0 + v1) + 3)/4) - (v2*16), (v1/4) + 15) + (v3*-4)) - (v1/4)));1;74;;;;;
 (min((v0*4) + v1, max(min(((v2*4) + (min(v3*20, 19) + v4))*8, 2227), 228) + -231) == min((v0*4) + v1, max(min(((v2*4) + (min(v3*20, 19) + v4))*8, 2227), 228) + -231));1;123;;;;;
 (((((min(v0/8, 0)/16)*4) + v1)*4) == ((((min(v0/8, 0)/16)*4) + v1)*4));1;66;;;;;
 ((((v0 - v1)/4) + (v2*-9)) == (((v0 - v1)/4) + (v2*-9)));1;39;;;;;
 ((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))/2) + 6) == (((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))/2) + 6));1;218;;;;;
 ((min(v0, 244) + 9) == (min(v0, 244) + 9));1;34;;;;;
 (((((((uint1)1 && (((v0*2) + -8) <= ((v0*2) + -8))) && ((((v0*2) + 1999) + -8) >= (((v0*2) + 1999) + -8))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (0 >= 0));1;120;;;;;
 ((max(min(((((v0/8)*8) + -5)/63)*8, 253), 4) + (v1*16)) == (max(min(((((v0/8)*8) + -5)/63)*8, 253), 4) + (v1*16)));1;95;;;;;
 ((max(min(v0, 499)*4, -3) - max(min(v0*4, 1999), 0)) == (max(min(v0, 499)*4, -3) - max(min(v0*4, 1999), 0)));1;105;;;;;
 ((min(max(min((v0 + v1)*2, 3999), 0)/2, (((v0 + v1)/8)*8) + 1) + (v2*4)) == (min(max(min((v0 + v1)*2, 3999), 0)/2, (((v0 + v1)/8)*8) + 1) + (v2*4)));1;94;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*4) + 24)/19) == (((((((v0 + v1) + 249)/250) - (v1/250))*4) + 24)/19));1;64;;;;;
 (((((((v0 + v1) + 62)/63) - (v1/63))/8) + 1) == ((((((v0 + v1) + 62)/63) - (v1/63))/8) + 1));1;84;;;;;
 ((max((((max(v0*32, 220)/4)*-4) + ((v0*32) + v1)) - (min(v0*32, 220) + v1), -218) + 254) <= 1024);0;1077;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 124) == min(((v0 + v1) + -1)/8, v2 + 124));1;27;;;;;
 (max(0, min((((min(v0*125, v1 + -125) + v2) % 8) + 100)/32, (0 + (((v3 % 8) + 156)/32)) - 1) + 1) <= 0);0;91;;;;;
 ((((-252 - ((min(v0*252, v1 + -252) + v2) % 2))/2) + (((v3*4) + v4)*4)) == (((-252 - ((min(v0*252, v1 + -252) + v2) % 2))/2) + (((v3*4) + v4)*4)));1;84;;;;;
 (((v0/15) + 1) != 0);0;306;;;;;
 (((((v0/((v1 + 19)/17))*-4)/2)*2) == ((v0/((v1 + 19)/17))*-4));1;56;;;;;
 (((v0*524) + (v1*8)) == ((v0*524) + (v1*8)));1;29;;;;;
 (((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1))*32) + 443)/20) == ((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1))*32) + 443)/20));1;286;;;;;
 ((min(v0*32, 124) + (((v1 + v2)/4)*4)) == (min(v0*32, 124) + (((v1 + v2)/4)*4)));1;52;;;;;
 (min((v0*4) + v1, (max(v2 + v3, 0)*8) + 10) == min((v0*4) + v1, (max(v2 + v3, 0)*8) + 10));1;67;;;;;
 (min(((v0 + v1) + 251)/63, v2 + 2) == min(((v0 + v1) + 251)/63, v2 + 2));1;43;;;;;
 (max(((v0 - v1) + 1)/128, 0) >= ((max(((v0 - v1) + 1)/128, 0) + ((max((v0 - v1)/128, -1) - max(((v0 - v1) + 1)/128, 0)) + 1)) - 1));0;2329;;;;;
 (((min(max(v0, 249) - (v1*16), min(v2, 0) + 15)*-2) + (((min(v2, 0) + (v3*4))*2) + v4)) == ((min(max(v0, 249) - (v1*16), min(v2, 0) + 15)*-2) + (((min(v2, 0) + (v3*4))*2) + v4)));1;104;;;;;
 ((min((((min(v0*125, v1 + -125) + v2) % 8) + 156)/8, (v3*7) + 5) - ((v3*7) + (v4*4))) == (min((((min(v0*125, v1 + -125) + v2) % 8) + 156)/8, (v3*7) + 5) - ((v3*7) + (v4*4))));1;98;;;;;
 (max(min(max(v0/8, 5), ((v0/8) + v1) + 6), min((v0/8) + v1, 249) + 6) == max(min(max(v0/8, 5), ((v0/8) + v1) + 6), min((v0/8) + v1, 249) + 6));1;86;;;;;
 (((v0 + 101)/32) != 0);0;346;;;;;
 ((v0 + 9) != 0);0;228;;;;;
 ((((((v0 + v1) + 1)/2) - (v1/2)) + -15) == (((((v0 + v1) + 1)/2) - (v1/2)) + -15));1;47;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))*4) + 60) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))*4) + 60));1;252;;;;;
 (min(max(min(v0 + v1, 1999), 0), max(min(v0 + v1, 1875), -124) + 125) == min(max(min(v0 + v1, 1999), 0), max(min(v0 + v1, 1875), -124) + 125));1;92;;;;;
 ((((v0*256) + 919)/392) != 0);0;464;;;;;
 (min(max(min(v0/8, 256), 7) + (((min((v1*128) + 120, v2) + 13)/16)*16), v3 + 14) == min(max(min(v0/8, 256), 7) + (((min((v1*128) + 120, v2) + 13)/16)*16), v3 + 14));1;95;;;;;
 (min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 19)/2, v2 + 251) == min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 19)/2, v2 + 251));1;82;;;;;
 (min(max(min(v0 + v1, 1999), 0) + (((v2 + 67)/4)*4), max(min(v0 + v1, 1937), -62) + 64) == min(max(min(v0 + v1, 1999), 0) + (((v2 + 67)/4)*4), max(min(v0 + v1, 1937), -62) + 64));1;96;;;;;
 (min(v0 + 7, v1) == min(v0 + 7, v1));1;35;;;;;
 (((((((uint1)1 && (((((v0*128) + v1) + 0) + 125) <= ((v1 + (v0*128)) + -2))) && (((((v0*128) + v1) + 3) + 125) >= ((v1 + ((v0*128) + 127)) + -2))) && ((max(min(v2, 249), 0) + -1) <= (-1 + max(min(v2, 249), 0)))) && (((max(min(v2, 249), 0) + v3) + 16) >= (((3 + -1) - 1) + (((v3 + 16) + max(min(v2, 249), 0)) - 1)))) && (0 <= 0)) && (355 >= ((356 + 0) - 1)));0;320;;;;;
 (((((v0 + v1) + 7)/4) - ((v2*4) + v3)) == ((((v0 + v1) + 7)/4) - ((v2*4) + v3)));1;68;;;;;
 ((min(v0*76, 75) + (v1 + v2)) == (min(v0*76, 75) + (v1 + v2)));1;39;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + -503) <= ((((v0*4) + 0) + v1) + -503))) && (((((v0*4) + v1) + 3) + -503) >= ((((v0*4) + ((4 + 0) - 1)) + v1) + -503))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (0 >= 0));1;149;;;;;
 ((v0 + 4) < (min(max(v1/8, (v0 + 1) + 5), v0 + 1) + -1));0;91;;;;;
 (min((v0*4) + v1, (v2*4) + 3) == min((v0*4) + v1, (v2*4) + 3));1;93;;;;;
 (max((((v0 - v1)*8) + 36)/1044, 0) >= ((max((((v0 - v1)*8) + 36)/1044, 0) + (((((v0 - v1)*8) + 1091)/1044) - max((((v0 - v1)*8) + 36)/1044, 0))) - 1));0;1002;;;;;
 ((max(min(((v0 + v1) + 255)/32, 62), 0) - ((((v2*5) + v3)*4) + v4)) == (max(min(((v0 + v1) + 255)/32, 62), 0) - ((((v2*5) + v3)*4) + v4)));1;77;;;;;
 (((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((v2*4) + v3) + 0) <= (((v2*4) + v3) + 0))) && ((((v2*4) + v3) + 3) >= (((v2*4) + v3) + ((4 + 0) - 1)))) && (v4 <= v4)) && (v4 >= v4));1;127;;;;;
 (((((((uint1)1 && ((((((v0*16) + v1)*4) + 0) + -1883) <= (((((v0*16) + v1)*4) + 0) + -1883))) && ((((((v0*16) + v1)*4) + 3) + -1883) >= (((((v0*16) + v1)*4) + ((4 + 0) - 1)) + -1883))) && (0 <= 0)) && (0 >= 0)) && (v2 <= v2)) && (v2 >= v2));1;147;;;;;
 (min(v0*16, ((v1*264) + (v2*16)) + 194) == min(v0*16, ((v1*264) + (v2*16)) + 194));1;55;;;;;
 (min(((v0 + v1) + -1)/63, v2 + 1) == min(((v0 + v1) + -1)/63, v2 + 1));1;1447;;;;;
 (((v0*13) + (max(min(v1, 999), 0)*2)) == ((v0*13) + (max(min(v1, 999), 0)*2)));1;46;;;;;
 (((v0*16) + ((v1/8) + v2)) == ((v0*16) + ((v1/8) + v2)));1;30;;;;;
 ((max(v0*8, (((v1*4) + v0)*8) + 3) + (v2*12)) == (max(v0*8, (((v1*4) + v0)*8) + 3) + (v2*12)));1;56;;;;;
 ((max(min(v0, 990), -9) - ((v1*3) + v2)) == (max(min(v0, 990), -9) - ((v1*3) + v2)));1;47;;;;;
 (min((v0*32) + v1, v2 + 20) == min((v0*32) + v1, v2 + 20));1;62;;;;;
 ((((((v0 + v1) + 63)/8)*8) - ((((v2*17) + v3)*4) + v4)) == (((((v0 + v1) + 63)/8)*8) - ((((v2*17) + v3)*4) + v4)));1;70;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && ((((((v0*8) + v1) + v2) + -36) % 4) <= (((((v0*8) + v1) + v2) + -36) % 4))) && ((((((v0*8) + v1) + v2) + -36) % 4) >= (((((v0*8) + v1) + v2) + -36) % 4))) && (((((v3*25) + v4)*4) + 0) <= (((v3*25) + v4)*4))) && (((((v3*25) + v4)*4) + 3) >= ((((v3*25) + v4)*4) + 3)));1;197;;;;;
 ((((min((v0*8) + v1, (v2 + v1) + -8)*4)/4)*4) == (min((v0*8) + v1, (v2 + v1) + -8)*4));1;79;;;;;
 (((max(min(((v0/32) + v1)*32, 1994), -5) - (v2*1000)) - max(min((v0/32)*32, 2609), 610)) == ((max(min(((v0/32) + v1)*32, 1994), -5) - (v2*1000)) - max(min((v0/32)*32, 2609), 610)));1;99;;;;;
 (((v0*8) + -280) == ((((v0*8) + -280) + 481) - 1));0;41;;;;;
 ((((((v0 + v1) + 62)/63)*2) - (((v1/63)*2) + v2)) == (((((v0 + v1) + 62)/63)*2) - (((v1/63)*2) + v2)));1;33;;;;;
 ((((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/16) + 1) == (((max(min(((v0 + v1) + 3)/4, 499), 0) - max(min(v1/4, 499), 0))/16) + 1));1;237;;;;;
 (((v0*1000) + ((v1*504) + v2)) == ((v0*1000) + ((v1*504) + v2)));1;36;;;;;
 (0 == ((0 + (min(v0*4, -30) + 34)) - 1));0;56;;;;;
 (max(min(min(min(((min((v5*8) + 2, v1 + v2)/4) - ((((max(min(v3/8, 249), 0)/8)*2) + v4)*8)) + 7, ((v5 - ((((max(min(v3/8, 249), 0)/8)*2) + v4)*4))*2) + 7), (((v1 + v2) + 25)/4) - ((((max(min(v3/8, 249), 0)/8)*2) + v4)*8)), (0 + ((v6*2) + 9)) - 1) + 1, min(max(((v2/4) - ((((max(min(v3/8, 249), 0)/8)*2) + v4)*8)) + 8, 0), ((v6*2) + 9) + 0)) <= min(max(((v2/4) - ((((max(min(v3/8, 249), 0)/8)*2) + v4)*8)) + 8, 0), ((v6*2) + 9) + 0));0;4781;;;;;
 (((((((uint1)1 && (v0 <= v0)) && ((v0 + 3) >= (v0 + 3))) && ((0 + (((v1 + v2)*8) + 1)) <= (((v1 + v2)*8) + 1))) && ((3 + (((v1 + v2)*8) + 5)) >= (((v1 + v2)*8) + 8))) && (v3 <= v3)) && (v3 >= v3));1;135;;;;;
 ((v0 - ((v1*103) + v2)) == (v0 - ((v1*103) + v2)));1;45;;;;;
 (((v0*12) + ((v1*8) + (v2*33))) == ((v0*12) + ((v1*8) + (v2*33))));1;58;;;;;
 ((max(min(v0, 2100), 101) + (v1*2)) == (max(min(v0, 2100), 101) + (v1*2)));1;60;;;;;
 (0 == ((0 + ((min(v0, -10)*2) + 42)) - 1));0;72;;;;;
 ((min(min(v0 + v1, 2007) + v2, 1991) + 22) == (min(min(v0 + v1, 2007) + v2, 1991) + 22));1;64;;;;;
 ((max(v0*500, -17) + (v1*8)) == (max(v0*500, -17) + (v1*8)));1;26;;;;;
 (((((v0 + v1) + 1007)/8) - ((v2*4) + v3)) == ((((v0 + v1) + 1007)/8) - ((v2*4) + v3)));1;55;;;;;
 (min(max((518 - (v0/2))/512, 0), (v1 + 514)/512) == min(max((518 - (v0/2))/512, 0), (v1 + 514)/512));1;55;;;;;
 (max(min(21 - (v0*11), (0 + 11) - 1) + 1, min(max(0 - (v0*11), 0), 11 + 0)) <= min(max(0 - (v0*11), 0), 11 + 0));0;908;;;;;
 (((((max(min(((v0 + v1) + 71)/8, 249), 0)*8) - max(max(min(v1/8, 254), 5)*8, 52)) + 121)/63) == ((((max(min(((v0 + v1) + 71)/8, 249), 0)*8) - max(max(min(v1/8, 254), 5)*8, 52)) + 121)/63));1;122;;;;;
 (((v0*-354) + (v1 - v2)) == ((v0*-354) + (v1 - v2)));1;47;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*4)) == (max(min(v0/2, 1006), 7) + (v1*4)));1;103;;;;;
 (((max(min((v2*-1004) + (v1 - min(v1, 64)), 936), -68)/4)*4) == max(min((v2*-1004) + (v1 - min(v1, 64)), 936), -68));0;926;;;;;
 ((0 - v0) > (1999 - v0));0;25;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - (v2*32)) - (v3*12)) - min((v1/16)*8, 4)) == (((max((((v0 + v1) + 15)/16)*8, 995) - (v2*32)) - (v3*12)) - min((v1/16)*8, 4)));1;107;;;;;
 (((v0*504) + ((v1/2) + (v2*32))) == ((v0*504) + ((v1/2) + (v2*32))));1;37;;;;;
 (min(v0 + 121, v1) == min(v0 + 121, v1));1;69;;;;;
 (((((((uint1)1 && (((0 + (((v0*16) + (min(v1, 4) + v2)) + -5)) + -4) <= (((0 + ((v0*16) + (min(v1, 4) + v2))) + -5) + -4))) && (((15 + (((v0*16) + (min(v1, 4) + v2)) + 5)) + -4) >= (((((16 + 0) - 1) + ((v0*16) + (min(v1, 4) + v2))) + ((11 + -5) - 1)) + -4))) && (v3 <= v3)) && (v3 >= v3)) && (0 <= 0)) && (0 >= 0));1;162;;;;;
 (((v0*12) + ((v1*180) + v2)) == ((v0*12) + ((v1*180) + v2)));1;79;;;;;
 (min(v0*500, v1 + -500) == min(v0*500, v1 + -500));1;1246;;;;;
 (min(max(((v0 + 55)/4) - (((v1*4) + v2)*2), -1), (v3*2) + 8) == min(max(((v0 + 55)/4) - (((v1*4) + v2)*2), -1), (v3*2) + 8));1;82;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*32) + 73)/20) == (((((((v0 + v1) + 249)/250) - (v1/250))*32) + 73)/20));1;75;;;;;
 (((((((v0 + v1) + 71)/64) - (v1/64))/11) + 1) == ((((((v0 + v1) + 71)/64) - (v1/64))/11) + 1));1;68;;;;;
 (0 == ((0 + (((v0 - v1)*2) + 10)) - 1));0;60;;;;;
 (((((v0*4) + v1)*16) + (v2 + v3)) == ((((v0*4) + v1)*16) + (v2 + v3)));1;58;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (((v2 + 23)/16)*16)) + -8) == min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (((v2 + 23)/16)*16)) + -8));1;143;;;;;
 (((min(max(min(((v0 + v1) + -1)/8, 249), 0) - (v2*32), max(min(v1/8, 249), 0) + 31)*-2) + ((max(min(v1/8, 249), 0)*2) + v3)) == ((min(max(min(((v0 + v1) + -1)/8, 249), 0) - (v2*32), max(min(v1/8, 249), 0) + 31)*-2) + ((max(min(v1/8, 249), 0)*2) + v3)));1;1456;;;;;
 (((v0*9) + ((v1*8) + ((v2*16) + ((v3*3) + v4)))) == ((v0*9) + ((v1*8) + ((v2*16) + ((v3*3) + v4)))));1;51;;;;;
 (((((((v0 + v1) + -1)/62) - (v1/62))/11) + 1) == ((((((v0 + v1) + -1)/62) - (v1/62))/11) + 1));1;155;;;;;
 (((min(v0 + 3, v1)*-16) + ((v0*16) + v2)) == ((min(v0 + 3, v1)*-16) + ((v0*16) + v2)));1;49;;;;;
 (min(((v0*64) + v1) + 64, v2) == min(((v0*64) + v1) + 64, v2));1;54;;;;;
 (max(0, min(((max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) - max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0)) + 61)/64, (0 + ((v3 + 188)/64)) - 1) + 1) <= 0);0;7297;;;;;
 (((v0 + 9)/4) != 0);0;396;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2) == min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2));1;244;;;;;
 (0 == ((0 + (122 - (max(min(v0, 2), 1)*61))) - 1));0;60;;;;;
 (((((((uint1)1 && ((0 + (min(v0*252, 248) + v1)) <= (min(v0*252, 248) + v1))) && ((3 + ((min(v0*252, 248) + v1) + 248)) >= ((min(v0*252, 248) + v1) + 251))) && ((((v2*250) + v3)/32) <= (((v2*250) + v3)/32))) && (((((v2*250) + v3) + 281)/32) >= ((((v2*250) + v3) + 281)/32))) && (v4 <= v4)) && (v4 >= v4));1;197;;;;;
 (((((((uint1)1 && (((v0*8) + -4) <= (0 + ((v0*8) + -4)))) && (((v0*8) + 6) >= (((3 + 0) - 1) + ((9 + ((v0*8) + -4)) - 1)))) && (((v1 + v2) + 25) <= (((0 + v2) + v1) + -4))) && (((v1 + v2) + 25) >= (((((30 + 0) - 1) + v2) + v1) + -4))) && (((v3*4) + 0) <= ((v3*4) + 0))) && (((v3*4) + 3) >= ((v3*4) + ((4 + 0) - 1))));0;240;;;;;
 (((v0/2) + (((v1*2) + v2)*2)) == ((v0/2) + (((v1*2) + v2)*2)));1;35;;;;;
 (((min(v0 + 9, v1)*-2) + ((v1*2) + v2)) == ((min(v0 + 9, v1)*-2) + ((v1*2) + v2)));1;38;;;;;
 ((max(min(v0/16, 126)*8, 9) + (v1*2)) == (max(min(v0/16, 126)*8, 9) + (v1*2)));1;60;;;;;
 (max(((v0 - v1) + 2)/4, 0) >= ((max(((v0 - v1) + 2)/4, 0) + max((((v0 - v1) + 5)/4) - max(((v0 - v1) + 2)/4, 0), 0)) - 1));0;972;;;;;
 ((min(max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*63), max(min(v1/8, 256), 7) + 55) - (max(min(v1/8, 256), 7) + (v3*35))) == (min(max(min(((v0 + v1) + 7)/8, 249), 0) - (v2*63), max(min(v1/8, 256), 7) + 55) - (max(min(v1/8, 256), 7) + (v3*35))));1;142;;;;;
 (((v0*17) + ((v1*68) + v2)) == ((v0*17) + ((v1*68) + v2)));1;44;;;;;
 (min(max(min(v0, 999)*2, -1), (max(min(v1*2, 1997), -2) + (v2*4)) + 4) == min(max(min(v0, 999)*2, -1), (max(min(v1*2, 1997), -2) + (v2*4)) + 4));1;107;;;;;
 ((min(max(v0, -29)*2, 7) + -8) >= (((min(max(v0, -29)*2, 7) + -8) + (12 - min(max(v0, -29)*2, 7))) - 1));0;76;;;;;
 ((((((v0 + v1) + -1)/4) - (v2*8)) - (v1/4)) == (((((v0 + v1) + -1)/4) - (v2*8)) - (v1/4)));1;70;;;;;
 ((((v0 - v1) + 521)/510) != 0);0;459;;;;;
 (((v0*7) + (((v1*14) + v2)*2)) == ((v0*7) + (((v1*14) + v2)*2)));1;42;;;;;
 ((v0 - ((v1*65) + v2)) == (v0 - ((v1*65) + v2)));1;28;;;;;
 (((min(min(v0/8, (max(v1, 247) - (v2*4)) + 3), 4)*-2) + ((min(v0/8, 4)*2) + v3)) == ((min(min(v0/8, (max(v1, 247) - (v2*4)) + 3), 4)*-2) + ((min(v0/8, 4)*2) + v3)));1;124;;;;;
 (((v0 + 46)/44) != 0);0;379;;;;;
 ((((max(v0, 1) - v1) + 64)/65) != 0);0;512;;;;;
 (min(max(min(v0, 999), 0), max(min(v0, 996), -3) + 6) == min(max(min(v0, 999), 0), max(min(v0, 996), -3) + 6));1;52;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 169)/128) == (((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36)) + 169)/128));1;218;;;;;
 ((v0 + 4) == (((v0 + 4) + 2) - 1));0;32;;;;;
 (max(min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65), (min(min(-47 - (max((v2/16) + ((v3*8) - (((v1 + v2) + 15)/16)), -7)*16), 1943 - (v0*16)), (min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 17)/65) + 1) == max(min(max((72 - (v0*16))/65, 0), ((min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 82)/65), (min(min(-47 - (max((v2/16) + ((v3*8) - (((v1 + v2) + 15)/16)), -7)*16), 1943 - (v0*16)), (min(((((v1 + v2) + 15)/16) - (v3*8)) - (v2/16), 7)*16) + 17)/65) + 1));1;151;;;;;
 (((v0*24) + (min(v1*64, v2 + -64) + v3)) == ((v0*24) + (min(v1*64, v2 + -64) + v3)));1;109;;;;;
 ((max(min(((v0*16) + v1)*2, 467), -32) - (max(min(((v0*16) + v1)*2, 499), 0) + (v2*4))) == (max(min(((v0*16) + v1)*2, 467), -32) - (max(min(((v0*16) + v1)*2, 499), 0) + (v2*4))));1;95;;;;;
 ((((((v0/2)*8) - min(max(min(((v1 + v2) + -1)/65, 29), -2)*2, ((max(min(v2/65, 31), 0) + ((v0/2)*4))*2) + 3))*2) + ((max(min(v2/65, 31), 0)*4) + v3)) == (((((v0/2)*8) - min(max(min(((v1 + v2) + -1)/65, 29), -2)*2, ((max(min(v2/65, 31), 0) + ((v0/2)*4))*2) + 3))*2) + ((max(min(v2/65, 31), 0)*4) + v3)));1;155;;;;;
 ((((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 137)/125) == (((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 137)/125));1;256;;;;;
 ((v0 + -29) == (((v0 + -29) + (34 - max((((max(min((v1 + v2)/8, 249), 0)/8)*8) - v3)*8, 26))) - 1));0;172;;;;;
 (0 >= ((0 + ((((v0 + v1) % 8) + 220)/32)) - 1));0;56;;;;;
 (max(min(min((((v1 + v2) + 190)/4) - (v4*16), ((min((v3*2) + 42, v1 + v2) + 193)/4) - (v4*16)), (0 + (v5 + 60)) - 1) + 1, min(max((((v2 + 193)/4) - (v4*16)) + 1, 0), (v5 + 60) + 0)) <= min(max((((v2 + 193)/4) - (v4*16)) + 1, 0), (v5 + 60) + 0));0;2032;;;;;
 (((((v0 + v1) + 9)/2) + (v2*4)) == ((((v0 + v1) + 9)/2) + (v2*4)));1;42;;;;;
 ((min((v0 + 184)/63, (((v1 + v0) + -1)/63) - (v2*4)) - (((v0 + -68)/63) + (v3*4))) == (min((v0 + 184)/63, (((v1 + v0) + -1)/63) - (v2*4)) - (((v0 + -68)/63) + (v3*4))));1;121;;;;;
 (min(max(((v0 - ((v1*12) + v2)) + 66)/4, 0), (v3 + 15)/4) == min(max(((v0 - ((v1*12) + v2)) + 66)/4, 0), (v3 + 15)/4));1;78;;;;;
 (((((v0*2) + v1)*32) + v2) >= ((((((v0*2) + v1)*32) + v2) + 32) - 1));0;69;;;;;
 (max(min(max(max(max(9 - ((v0/63)*8), ((v0/63)*-8) + 11), 12 - ((v0/63)*8))/3, 0), (v1/3) + 3), min(min(((min(v2, 252) - ((v0/63)*8)) + 4)/3, 85 - (((v0/63)*8)/3)), (v1/3) + 2) + 1) == max(min(max(max(max(9 - ((v0/63)*8), ((v0/63)*-8) + 11), 12 - ((v0/63)*8))/3, 0), (v1/3) + 3), min(min(((min(v2, 252) - ((v0/63)*8)) + 4)/3, 85 - (((v0/63)*8)/3)), (v1/3) + 2) + 1));1;164;;;;;
 (min(max(v0, 0), ((v1*18) + v2) + 4) == min(max(v0, 0), ((v1*18) + v2) + 4));1;39;;;;;
 ((((max(((v0 + v1) + 23)/8, 249) - min(v1/8, 4)) + 133)/129) == (((max(((v0 + v1) + 23)/8, 249) - min(v1/8, 4)) + 133)/129));1;86;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*16) + 57)/36) == (((((((v0 + v1) + 124)/125) - (v1/125))*16) + 57)/36));1;70;;;;;
 (min((v0*32) + v1, v2 + 16) == min((v0*32) + v1, v2 + 16));1;46;;;;;
 (((((((uint1)1 && (((0 + ((min(v0, 8) + v1)/4)) + -2) <= (((((0*4) + ((min(v0, 8) + v1)/4)) + 0) + 0) + -2))) && (((3 + (((min(v0, 8) + v1)/4) + (((v2 + 18)/16)*16))) + -2) >= (((((3*4) + (((min(v0, 8) + v1)/4) + (((v2 + 2)/16)*16))) + 3) + 3) + -2))) && (max(v3/4, v4 + 3) <= (v4 + 0))) && ((v4 + 3) >= (v4 + 3))) && ((v5*2) <= (v5*2))) && (((v5*2) + 1) >= ((v5*2) + 1)));0;364;;;;;
 (((((((uint1)1 && (((v0 + 0) + -4) <= ((0 + v0) + -4))) && (((v0 + 3) + -4) >= ((((4 + 0) - 1) + v0) + -4))) && (((((v1 + v2) + v3) + -6) % 16) <= ((((v1 + v2) + v3) + -6) % 16))) && (((((v1 + v2) + v3) + -6) % 16) >= ((((v1 + v2) + v3) + -6) % 16))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)));1;181;;;;;
 ((((((v0 + v1) + 999)/4) - (v2*128)) - ((v0 + v1)/4)) == (((((v0 + v1) + 999)/4) - (v2*128)) - ((v0 + v1)/4)));1;65;;;;;
 ((((((((v0 + v1) + 7)/504) - (v1/504))*8) + 17)/9) == (((((((v0 + v1) + 7)/504) - (v1/504))*8) + 17)/9));1;88;;;;;
 (min(((v0 + v1) + -1)/2, (min((min((v2*128) + 127, v3)/4)*4, (v2*128) + 124) + (v1/2)) + 3) == min(((v0 + v1) + -1)/2, (min((min((v2*128) + 127, v3)/4)*4, (v2*128) + 124) + (v1/2)) + 3));1;57;;;;;
 (min(v0*8, 6) == ((min(v0*8, 6) + 8) - 1));0;56;;;;;
 (min(max(min(((v0 + v1) + 501)/2, 999), 0), v2 + 1) == min(max(min(((v0 + v1) + 501)/2, 999), 0), v2 + 1));1;66;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 64)/63) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 64)/63));1;295;;;;;
 ((max(min((v0/500)*8, 36), 5) + (v1*8)) == (max(min((v0/500)*8, 36), 5) + (v1*8)));1;81;;;;;
 (((v0*4) + ((v1*32) + (min(v2*96, v3 + -96) + v4))) == ((v0*4) + ((v1*32) + (min(v2*96, v3 + -96) + v4))));1;54;;;;;
 (min(((v0*2) + v1)*8, v2 + 5) == min(((v0*2) + v1)*8, v2 + 5));1;57;;;;;
 ((((-514 - (min(max(min((((v0 + v1) + 499)/4)*8, 3994), -5), (max(min(((v0 + v1)/4)*8, 4012), 13) + (v2*508)) + 489) % 2))/2) + (v3*4)) == (((-514 - (min(max(min((((v0 + v1) + 499)/4)*8, 3994), -5), (max(min(((v0 + v1)/4)*8, 4012), 13) + (v2*508)) + 489) % 2))/2) + (v3*4)));1;1700;;;;;
 (min(max(min(((v0/8) + (v1*125))*8, 2012), 13) + (v2*24), max(min(min(((v3 + v0) + -1)/8, ((v0/8) + (v1*125)) + 61)*8, 1994), -5) + 5) == min(max(min(((v0/8) + (v1*125))*8, 2012), 13) + (v2*24), max(min(min(((v3 + v0) + -1)/8, ((v0/8) + (v1*125)) + 61)*8, 1994), -5) + 5));1;144;;;;;
 (max(((max(((v0 + v1) + 7)/8, 0) - ((v2*8) + v3)) + -3)/4, ((max(((v0 + v1) + 7)/8, 0) - v3)/4) + (v2*-2)) == max(((max(((v0 + v1) + 7)/8, 0) - ((v2*8) + v3)) + -3)/4, ((max(((v0 + v1) + 7)/8, 0) - v3)/4) + (v2*-2)));1;117;;;;;
 ((v0 - (min(v1/8, 0)*8)) == (v0 - (min(v1/8, 0)*8)));1;43;;;;;
 (((((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32) - ((min((v1/65)*64, 4) + -6)/32))*32) + 67)/36) == ((((((max((((v0 + v1) + 64)/65)*64, 1975) + 40)/32) - ((min((v1/65)*64, 4) + -6)/32))*32) + 67)/36));1;111;;;;;
 ((((v0*9) + v1) + -1) < (((v0*9) + (v1 + 1)) + -9));0;52;;;;;
 (min(v0*8, v1 + 55) == min(v0*8, v1 + 55));1;40;;;;;
 ((v0 - max(min((min((min(v1*64, 188) + v2) + 64, (v3*-252) + (v4 + v2)) - (v1*64)) - v2, ((((min(min(v1*64, 188) + 64, (v3*-252) + v4) + -3)/4) + (v1*-16))*4) + 6), -1)) == (v0 - max(min((min((min(v1*64, 188) + v2) + 64, (v3*-252) + (v4 + v2)) - (v1*64)) - v2, ((((min(min(v1*64, 188) + 64, (v3*-252) + v4) + -3)/4) + (v1*-16))*4) + 6), -1)));1;194;;;;;
 ((max(min(v0/2, 999), 0) + v1) == (max(min(v0/2, 999), 0) + v1));1;76;;;;;
 (max(min(v0, 2), 0) <= (max(min(v0, 2), 0) - 1));0;64;;;;;
 ((max(min(v0, 1578), -421) - max(min(v1, 2609), 610)) == (max(min(v0, 1578), -421) - max(min(v1, 2609), 610)));1;113;;;;;
 (0 == ((0 + ((max(min(v0, -1), -2)*4) + 8)) - 1));0;80;;;;;
 (((v0*3) + ((v1*63) + ((v2*125) + (v3 + v4)))) == ((v0*3) + ((v1*63) + ((v2*125) + (v3 + v4)))));1;49;;;;;
 ((((((v0 + v1) + -1)/4) - (v2*32)) - (v1/4)) == (((((v0 + v1) + -1)/4) - (v2*32)) - (v1/4)));1;77;;;;;
 (((v0*2) - ((((v1*18) + v2)*2) + v3)) == ((v0*2) - ((((v1*18) + v2)*2) + v3)));1;51;;;;;
 ((max(min(((v0/63) + v1)*64, 2044), 45) + min(v2*4, v3 + 69)) == (max(min(((v0/63) + v1)*64, 2044), 45) + min(v2*4, v3 + 69)));1;78;;;;;
 (min(((v0 + v1) + 108)/8, v2) == min(((v0 + v1) + 108)/8, v2));1;51;;;;;
 (min(((v0 + v1) + 5)/2, v2 + 249) == min(((v0 + v1) + 5)/2, v2 + 249));1;62;;;;;
 (((((v0 + v1) + 23)/8) - ((v2*68) + v3)) == ((((v0 + v1) + 23)/8) - ((v2*68) + v3)));1;50;;;;;
 ((min(((min(v0, 190) + v1) + 62)/63, v2 - (v3*4)) - ((((min(v0, 190) + v1) + -190)/63) + (v4*4))) == (min(((min(v0, 190) + v1) + 62)/63, v2 - (v3*4)) - ((((min(v0, 190) + v1) + -190)/63) + (v4*4))));1;111;;;;;
 (((v0*8) + 549) == ((v0*8) + 549));1;27;;;;;
 (((((v0 % ((v1 + 19)/17))*-136)/68)*68) == ((v0 % ((v1 + 19)/17))*-136));1;64;;;;;
 (min(((v0*4) + ((v1*8) + v2)) + 3, v3) == min(((v0*4) + ((v1*8) + v2)) + 3, v3));1;38;;;;;
 (min((((((v0 + v1) + 55)/8) - (v1/8)) + 127)/128, v2) == min((((((v0 + v1) + 55)/8) - (v1/8)) + 127)/128, v2));1;78;;;;;
 (((((((v0 + v1) + 3)/4) - v2) + 1)/4) >= ((((((v0 + v1) + 7)/4) - v2) + -1)/4));0;1136;;;;;
 (min(max(max(min(v0/2, 1006), 7)*8, 115) + (v1*64), min(max(min(((v2 + v0) + 1)/2, 999), 0)*8, 7914) + 146) == min(max(max(min(v0/2, 1006), 7)*8, 115) + (v1*64), min(max(min(((v2 + v0) + 1)/2, 999), 0)*8, 7914) + 146));1;115;;;;;
 (min(v0*2, ((v1*1007) + ((v2/2)*2)) + 997) == min(v0*2, ((v1*1007) + ((v2/2)*2)) + 997));1;47;;;;;
 (((((v0 + v1) + -1)/8) - ((((v2*16) + ((v3*3) + v4))*4) + v5)) == ((((v0 + v1) + -1)/8) - ((((v2*16) + ((v3*3) + v4))*4) + v5)));1;76;;;;;
 (min((v0*4) + v1, ((v2*2) + v3) + 2) == min((v0*4) + v1, ((v2*2) + v3) + 2));1;61;;;;;
 (max(((max(min((min(v0*63, 62) + v1) + v2, 1936), -63) + 63)/16)*16, max(min((min(v0*63, 62) + v1) + v2, 1936), -63) + 54) == max(((max(min((min(v0*63, 62) + v1) + v2, 1936), -63) + 63)/16)*16, max(min((min(v0*63, 62) + v1) + v2, 1936), -63) + 54));1;120;;;;;
 (((v0/4) + 1) != 0);0;1255;;;;;
 ((((max(min((v1*-1000) + v2, 1000), 0) + (v1*1000))/4)*4) == (max(min((v1*-1000) + v2, 1000), 0) + (v1*1000)));0;954;;;;;
 (min(v0 - (((max(min(v1, 2002), 3) + -3)/16)*16), v2 + 1003) == min(v0 - (((max(min(v1, 2002), 3) + -3)/16)*16), v2 + 1003));1;63;;;;;
 (((v0*-64) + (((((v1 + v2) + 1)/2) - (v3*128)) - (v2/2))) == ((v0*-64) + (((((v1 + v2) + 1)/2) - (v3*128)) - (v2/2))));1;91;;;;;
 ((max((v0*16) + v1, 0) + (((v2 + 19)/4)*4)) == (max((v0*16) + v1, 0) + (((v2 + 19)/4)*4)));1;57;;;;;
 (max(-730 - (v0*8), (v0*8) + 58) >= 0);0;508;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 124) == min(((v0 + v1) + -1)/8, v2 + 124));1;78;;;;;
 (((min(min((v1*-1220) + (v2*8), (v3*8) + 1113) - (v3*8), 504)/4)*4) == min(min((v1*-1220) + (v2*8), (v3*8) + 1113) - (v3*8), 504));0;1080;;;;;
 (((v0*128) + ((v1/2) + (v2*4))) == ((v0*128) + ((v1/2) + (v2*4))));1;54;;;;;
 (min(((v0*2) + v1) + v2, v3 + 1) == min(((v0*2) + v1) + v2, v3 + 1));1;50;;;;;
 (max(min((((v0 + v1) + 9)/2) - (v1/2), v2), v3) == max(min((((v0 + v1) + 9)/2) - (v1/2), v2), v3));1;67;;;;;
 (((max(min((v1*-8) + (max(min(v2 + v3, 2000), 1) - max(min(v3, 1999), 0)), 8), 0)/4)*4) == max(min((v1*-8) + (max(min(v2 + v3, 2000), 1) - max(min(v3, 1999), 0)), 8), 0));0;1381;;;;;
 (min(1939 - ((v0*126) + v1), min(v2, 115) + 10) == min(1939 - ((v0*126) + v1), min(v2, 115) + 10));1;85;;;;;
 (((v0*129) + ((v1/63)*8)) == ((v0*129) + ((v1/63)*8)));1;112;;;;;
 ((((((((v0 + v1) + -1)/32) - (v1/32))*32) + 108)/33) == (((((((v0 + v1) + -1)/32) - (v1/32))*32) + 108)/33));1;74;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*252, 748) + (min(v1*64, 188) + (v2*4))) + v3)) <= ((min(v0*252, 748) + (min(v1*64, 188) + (v2*4))) + v3))) && ((3 + ((min(v0*252, 748) + (min(v1*64, 188) + (v2*4))) + v3)) >= ((min(v0*252, 748) + ((min(v1*64, 188) + (v2*4)) + 3)) + v3))) && ((v4 + v5) <= (v4 + v5))) && ((v4 + v5) >= (v4 + v5))) && (v6 <= v6)) && (v6 >= v6));1;250;;;;;
 (((((((uint1)1 && (0 <= ((0*4) + 0))) && (251 >= ((((63 + 0) - 1)*4) + ((4 + 0) - 1)))) && ((0 + ((v0*8) + v1)) <= (((v0*8) + 0) + v1))) && ((3 + (((v0*8) + v1) + 4)) >= (((v0*8) + ((8 + 0) - 1)) + v1))) && (0 <= 0)) && (0 >= 0));1;193;;;;;
 ((((min((((v0 + -2)/64) + (v1*2))*16, ((v2/8)*16) + 54)/4) - (v1*8)) - (((v0 + -2)/64)*4)) == (((min((((v0 + -2)/64) + (v1*2))*16, ((v2/8)*16) + 54)/4) - (v1*8)) - (((v0 + -2)/64)*4)));1;110;;;;;
 (max(-511 - max(min(min(v0*-127, -378) - (v1*68), -442), -509), max(v2, 442) + -511) == max(-511 - max(min(min(v0*-127, -378) - (v1*68), -442), -509), max(v2, 442) + -511));1;75;;;;;
 (min(((v0*64) + 327)/232, max(min(((v0*64) + 95)/232, ((v0*16) + 23)/58), ((v0*64) + 92)/232) + 1) == min(((v0*64) + 327)/232, max(min(((v0*64) + 95)/232, ((v0*16) + 23)/58), ((v0*64) + 92)/232) + 1));1;92;;;;;
 (min(max(min(min(min(v0*8, ((v1*33) + (v2*8)) + 23) + 1, v3)*8, 1946), -53) - max(min(v3*8, 2044), 45), (v4*4) + -95) == min(max(min(min(min(v0*8, ((v1*33) + (v2*8)) + 23) + 1, v3)*8, 1946), -53) - max(min(v3*8, 2044), 45), (v4*4) + -95));1;328;;;;;
 (((v0*2) + (v1*9)) == ((v0*2) + (v1*9)));1;44;;;;;
 (min(((v0 + v1) + 31)/4, v2 + 13) == min(((v0 + v1) + 31)/4, v2 + 13));1;47;;;;;
 ((min(((min(max(v0, 0), (min(v1*20, 19) + ((v2*39) + v3)) + 19) - (v1*20))*8) - (v4*41), (((v2*39) + v3)*8) + 29) - ((((v2*39) + v3)*8) + (v5*15))) == (min(((min(max(v0, 0), (min(v1*20, 19) + ((v2*39) + v3)) + 19) - (v1*20))*8) - (v4*41), (((v2*39) + v3)*8) + 29) - ((((v2*39) + v3)*8) + (v5*15))));1;164;;;;;
 (min(v0 - max(min((v1 + v2)/2, 999), 0), (((v3*2) + v4)*8) + 8) == min(v0 - max(min((v1 + v2)/2, 999), 0), (((v3*2) + v4)*8) + 8));1;90;;;;;
 (((v0 + 10)/1008) >= ((((v0 + 10)/1008) + ((((v0 + 10) % 1008) + 1007)/1008)) - 1));1;91;;;;;
 (min(min(v0 - v1, 6)*8, 0 - (max(((v2*19) - v3) + v1, -6)*8)) == min(min(v0 - v1, 6)*8, 0 - (max(((v2*19) - v3) + v1, -6)*8)));1;81;;;;;
 (((v0 + 52)/32) == ((v0 + 52)/32));1;25;;;;;
 (min(((v0 + v1) + 188)/63, ((v2*10) + v3) + 4) == min(((v0 + v1) + 188)/63, ((v2*10) + v3) + 4));1;766;;;;;
 ((max(min(v0, 548), 409) + -550) >= (((max(min(v0, 548), 409) + -550) + (552 - max(min(v0, 548), 409))) - 1));0;99;;;;;
 (min(((v0 + v1) + 61)/62, v2) == min(((v0 + v1) + 61)/62, v2));1;42;;;;;
 (((max(min(min(((v0 + v1) + 1)/2, ((v1/2) + (v2*504)) + 503), 999), 0) - max(min((v1/2) + (v2*504), 999), 0)) - (v3*126)) == ((max(min(min(((v0 + v1) + 1)/2, ((v1/2) + (v2*504)) + 503), 999), 0) - max(min((v1/2) + (v2*504), 999), 0)) - (v3*126)));1;304;;;;;
 (((((((uint1)1 && ((((v0*2) + 0) + 1) <= ((v0*2) + 1))) && (((((v0 + 94)*2) + 3) + 1) >= ((v0*2) + 192))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (4 >= 4));1;125;;;;;
 (((v0*16) + (((v1 + v2)/4) + (v3*8))) == ((v0*16) + (((v1 + v2)/4) + (v3*8))));1;56;;;;;
 (max(-15 - max(min((max(min(v0*8, 1994), -5) - (v1*67)) - max(min(((v2 + v3)/8)*8, 2002), 3), 53), -13), max(min(v4, 13), -53) + -15) == max(-15 - max(min((max(min(v0*8, 1994), -5) - (v1*67)) - max(min(((v2 + v3)/8)*8, 2002), 3), 53), -13), max(min(v4, 13), -53) + -15));1;86;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*256) + 1057)/624) == (((((((v0 + v1) + 249)/250) - (v1/250))*256) + 1057)/624));1;65;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 51)/24) >= 0);1;237;;;;;
 (min(((v0 + v1) + -1)/4, ((v2*12) + v3) + 10) == min(((v0 + v1) + -1)/4, ((v2*12) + v3) + 10));1;63;;;;;
 (((((v0*4) + v1)*2) + (v2*5)) == ((((v0*4) + v1)*2) + (v2*5)));1;46;;;;;
 (max((((v0 + v1) + 63)/16) - v2, ((((v0 + v1) + 31)/16) - ((v1/16) + (v3*8))) + 2) == max((((v0 + v1) + 63)/16) - v2, ((((v0 + v1) + 31)/16) - ((v1/16) + (v3*8))) + 2));1;93;;;;;
 (min(max((18 - ((v0/8) + (v1*16)))/6, 0), (min(((((v2 + v0) + 15)/8) - (v1*16)) - (v0/8), 11) + 22)/6) == min(max((18 - ((v0/8) + (v1*16)))/6, 0), (min(((((v2 + v0) + 15)/8) - (v1*16)) - (v0/8), 11) + 22)/6));1;131;;;;;
 ((max(min(((v0*2) + v1)*32, 1999), 0) + (v2*4)) == (max(min(((v0*2) + v1)*32, 1999), 0) + (v2*4)));1;55;;;;;
 (((v0*8) + -13) == ((((v0*8) + -13) + ((min(v1, 34)*8) + 21)) - 1));0;96;;;;;
 ((((max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2)) + 10)/8) == (((max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2)) + 10)/8));1;314;;;;;
 ((((v0*8) + 53)/34) != 0);0;451;;;;;
 ((((max(v0, 0) - v1) + 153)/140) == (((max(v0, 0) - v1) + 153)/140));1;35;;;;;
 (min((((min(max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125), (v3*36) + -89)/4)*4) + v4) + 92, v5) == min((((min(max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125), (v3*36) + -89)/4)*4) + v4) + 92, v5));1;213;;;;;
 (((v0/8) + (v1*16)) == ((v0/8) + (v1*16)));1;227;;;;;
 (((v0*36) + ((v1*128) + v2)) == ((v0*36) + ((v1*128) + v2)));1;66;;;;;
 (min(128 - (v0*65), (v1 - ((v0*65) + ((v2*129) + v3))) + 31) == min(128 - (v0*65), (v1 - ((v0*65) + ((v2*129) + v3))) + 31));1;66;;;;;
 ((((max(((v0 + v1) + -1)/8, 249) - min(v1/8, 0))/128) + 1) >= 0);1;112;;;;;
 (((((((uint1)1 && (((0 + (max(v0*64, -3) + v1)) + 2) <= (((v0*64) + v1) + -1))) && (((3 + ((((min(v0*64, -3) + 66)/4)*4) + (max(v0*64, -3) + v1))) + 2) >= (((v0*64) + v1) + 65))) && (0 <= 0)) && (62 >= ((63 + 0) - 1))) && (0 <= 0)) && (0 >= 0));0;310;;;;;
 (min(min(v0, 2070) + -71, v1) == min(min(v0, 2070) + -71, v1));1;54;;;;;
 (((min(v0, 0) + v1) - ((v2*4) + v3)) == ((min(v0, 0) + v1) - ((v2*4) + v3)));1;58;;;;;
 ((((v0/4) + v1) - (min((((v2 + v0) + 3)/4) - (v3*64), ((v0/4) + (v4*32)) + 31) + (v4*-32))) == (((v0/4) + v1) - (min((((v2 + v0) + 3)/4) - (v3*64), ((v0/4) + (v4*32)) + 31) + (v4*-32))));1;83;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*128)) == (max(min(v0 + v1, 1999), 0) + (v2*128)));1;53;;;;;
 ((max(v0, 0) - min(v1/8, 249)) == (max(v0, 0) - min(v1/8, 249)));1;58;;;;;
 (min(((v0 + v1) + 31)/32, ((v1/32) + ((v2/4)*4)) + 3) == min(((v0 + v1) + 31)/32, ((v1/32) + ((v2/4)*4)) + 3));1;1078;;;;;
 (max(-10 - max(v0*8, -7), min(v0*-8, 7) + -10) == max(-10 - max(v0*8, -7), min(v0*-8, 7) + -10));1;64;;;;;
 (0 >= ((0 + (((v3*-2) + (((min(((v0 + v1) + 64)/65, min((v2*2) + ((v1/65) + (v3*4)), ((v1/65) + (min(min((v3*4) + 3, v4)/4, v3)*4)) + 2) + 1) - (v1/65))/2) - v2)) + 1)) - 1));0;2252;;;;;
 ((((max(min(v0 + v1, 2000), 1) - (v2*126)) - (v3*32)) - max(min(v1, 1999), 0)) == (((max(min(v0 + v1, 2000), 1) - (v2*126)) - (v3*32)) - max(min(v1, 1999), 0)));1;85;;;;;
 (((min(max(min((v0/500)*8, 36), 5), (max(min(min(((v1 + v0) + 499)/500, 3)*8, 22), -7) - ((v2/5)*11)) + 4)*-2) + (((max(min((v0/500)*8, 36), 5) + v3)*2) + v4)) == ((min(max(min((v0/500)*8, 36), 5), (max(min(min(((v1 + v0) + 499)/500, 3)*8, 22), -7) - ((v2/5)*11)) + 4)*-2) + (((max(min((v0/500)*8, 36), 5) + v3)*2) + v4)));1;171;;;;;
 ((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0)) + 19)/17) == (((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0)) + 19)/17));1;274;;;;;
 ((((v0*4)/2)*2) == (v0*4));1;25;;;;;
 ((max((((max(v0*128, 880)/16)*-16) + ((v0*128) + v1)) - (min(v0*128, 880) + v1), -866) + 1010) <= 1024);0;1128;;;;;
 ((max(v0*20, 16) + -35) == (((max(v0*20, 16) + -35) + (38 - max(v0*20, 16))) - 1));0;84;;;;;
 (((max(min(v0, 2), -16)*8) + -21) == ((((max(min(v0, 2), -16)*8) + -21) + (26 - (max(min(v0, 2), -16)*8))) - 1));0;107;;;;;
 (max(min(310 - v0, (0 + 185) - 1) + 1, min(max(61 - v0, 0), 185 + 0)) <= min(max(61 - v0, 0), 185 + 0));0;790;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))/4) + 2) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0))/4) + 2));1;226;;;;;
 (min((v0/2) + (v1*2), v2 + 13) == min((v0/2) + (v1*2), v2 + 13));1;49;;;;;
 ((55 - (v0*14)) == (55 - (v0*14)));1;32;;;;;
 ((((((v0 + v1) + 7)/8) - (v2*63)) - (v1/8)) == (((((v0 + v1) + 7)/8) - (v2*63)) - (v1/8)));1;44;;;;;
 (min(max(max(min(min((((v0 + v1) + 38)/4) - (v2*8), ((v3 - v2)*8) + 19), ((min((v3*32) + 38, v0 + v1) + 41)/4) - (v2*8)), ((v1 + 41)/4) - (v2*8)), -1), (min(((((v4 + v5) + -1)/32) - (v6*4)) - (v5/32), 3)*8) + 20) == min(max(max(min(min((((v0 + v1) + 38)/4) - (v2*8), ((v3 - v2)*8) + 19), ((min((v3*32) + 38, v0 + v1) + 41)/4) - (v2*8)), ((v1 + 41)/4) - (v2*8)), -1), (min(((((v4 + v5) + -1)/32) - (v6*4)) - (v5/32), 3)*8) + 20));1;252;;;;;
 ((((((((v0 + v1) + 31)/32) - (v1/32))*32) + 190)/132) == (((((((v0 + v1) + 31)/32) - (v1/32))*32) + 190)/132));1;71;;;;;
 (((v0 + 1016)/1006) == ((v0 + 1016)/1006));1;31;;;;;
 (min(6 - (max((v0/4) + ((v1*8) - (((v2 + v0) + 3)/4)), -3)*4), (min(((((v2 + v0) + 3)/4) - (v1*8)) - (v0/4), 3)*4) + 23) == min(6 - (max((v0/4) + ((v1*8) - (((v2 + v0) + 3)/4)), -3)*4), (min(((((v2 + v0) + 3)/4) - (v1*8)) - (v0/4), 3)*4) + 23));1;102;;;;;
 (((((((uint1)1 && ((((0*2) + (v0 + -3)) + 0) <= (-3 + v0))) && ((((33*2) + (v0 + 960)) + 1) >= (0 + (v0 + 999)))) && ((v1 + v2) <= ((v1 + v2) + -3))) && ((v1 + v2) >= ((v1 + v2) + 0))) && (((0*4) + 0) <= ((0*4) + 0))) && (((2*4) + 3) >= ((2*4) + 3)));0;191;;;;;
 (((min(v0, 36)*8) + -44) == ((((min(v0, 36)*8) + -44) + ((v1*8) + 80)) - 1));0;112;;;;;
 (0 == ((0 + (125 - max(v0*16, 109))) - 1));0;63;;;;;
 ((v0 + 13) != 0);0;234;;;;;
 (min(max(((v0 + 22)/4) - v1, -1), min(((((v2 + v3) + 3)/4) - (v4*64)) - (v3/4), 58) + 7) == min(max(((v0 + 22)/4) - v1, -1), min(((((v2 + v3) + 3)/4) - (v4*64)) - (v3/4), 58) + 7));1;107;;;;;
 ((min((v0*36) + (((v1*4) + v2)*16), (min((v1*4) + v2, v3 + 1)*16) + 31) + (v4*4)) == (min((v0*36) + (((v1*4) + v2)*16), (min((v1*4) + v2, v3 + 1)*16) + 31) + (v4*4)));1;99;;;;;
 ((min(((min(v0, 377) + v1) + 631)/126, v2 - (v3*8)) - ((((min(v0, 377) + v1) + -377)/126) + (v4*4))) == (min(((min(v0, 377) + v1) + 631)/126, v2 - (v3*8)) - ((((min(v0, 377) + v1) + -377)/126) + (v4*4))));1;110;;;;;
 ((max(min(v0, 2000), 1) + (v1*125)) == (max(min(v0, 2000), 1) + (v1*125)));1;44;;;;;
 (((((((uint1)1 && ((((v0 + v1) + -4) + -5) <= (((v0 + v1) + -4) + -5))) && ((((v0 + v1) + ((6 + -4) - 1)) + -5) >= (((v0 + v1) + ((6 + -4) - 1)) + -5))) && (((((((((v2*16) + v3)*2) + 0)*4) + -4) + 0) + -5) <= ((-4 + (((v2*16) + v3)*8)) + -5))) && (((((((((v2*16) + v3)*2) + 31)*4) + ((6 + -4) - 1)) + 3) + -5) >= ((((6 + -4) - 1) + ((((v2*16) + v3)*8) + 127)) + -5))) && (((v4*9) + v5) <= ((v4*9) + v5))) && (((v4*9) + v5) >= ((v4*9) + v5)));1;328;;;;;
 (((v0 + 1028)/1012) == ((v0 + 1028)/1012));1;24;;;;;
 (((v0/2) + (v1*256)) == ((v0/2) + (v1*256)));1;50;;;;;
 (((min(max(min((v3*64) + ((v2/8) + 63), min(((v1 + v2) + 7)/8, 249)), 0) - max(min((v3*64) + (v2/8), 249), 0), 30)/3)*3) == min(max(min((v3*64) + ((v2/8) + 63), min(((v1 + v2) + 7)/8, 249)), 0) - max(min((v3*64) + (v2/8), 249), 0), 30));0;2309;;;;;
 (min((((v0 + v1) + -1)/250) - (v1/250), v2 + 3) == min((((v0 + v1) + -1)/250) - (v1/250), v2 + 3));1;53;;;;;
 (min(min(v0 + v1, 1997) + -8, v2) == min(min(v0 + v1, 1997) + -8, v2));1;40;;;;;
 (((max(v0, -135)*2) + 16) == ((((max(v0, -135)*2) + 16) + ((max(v0, -135)*-2) + -14)) - 1));0;89;;;;;
 (min(((min(v0*334, 333) + (v1 + v2)) + 365)/32, (((min(v0*334, 333) + (v1 + v2))/32) + (((((min(v0*334, 333) + (v1 + v2)) % 32) + 493)/128)*4)) + -1) == min(((min(v0*334, 333) + (v1 + v2)) + 365)/32, (((min(v0*334, 333) + (v1 + v2))/32) + (((((min(v0*334, 333) + (v1 + v2)) % 32) + 493)/128)*4)) + -1));1;104;;;;;
 (max(0, min(20 - ((v0 % 4)*6), (0 + 6) - 1) + 1) <= 0);0;75;;;;;
 (((v0*4) + ((v1*8) + (v2 + v3))) == ((v0*4) + ((v1*8) + (v2 + v3))));1;49;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 2) == min(max(min(((v0 + v1) + 7)/8, 249), 0), v2 + 2));1;58;;;;;
 ((((v0*-320)/4)*4) == (v0*-320));1;41;;;;;
 ((((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*8)) == (((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8) - (v3*8)));1;72;;;;;
 (min((((v0 + v1) + 62)/63)*8, ((v2*17) + ((v1/63)*8)) + 8) == min((((v0 + v1) + 62)/63)*8, ((v2*17) + ((v1/63)*8)) + 8));1;40;;;;;
 ((max(min(v0, 499), 0) + (v1*8)) == (max(min(v0, 499), 0) + (v1*8)));1;45;;;;;
 (v0 != 0);0;1956;;;;;
 (max(((max(v0, 0) - v1) + 1)/64, 0) >= ((max(((max(v0, 0) - v1) + 1)/64, 0) + ((max((max(v0, 0) - v1)/64, -1) - max(((max(v0, 0) - v1) + 1)/64, 0)) + 1)) - 1));0;1169;;;;;
 (min((((v0/500)*16) + v1)*4, ((((v2 + v0) + -1)/500)*64) + 85) == min((((v0/500)*16) + v1)*4, ((((v2 + v0) + -1)/500)*64) + 85));1;90;;;;;
 (((v0*1056) + ((v1/63)*64)) == ((v0*1056) + ((v1/63)*64)));1;38;;;;;
 (((v0/8) + 1) != 0);0;18549;;;;;
 ((max(min((v0*12) + (max(min(min(v1*64, 191) + v2, 1244), 245) - max(min(min(v1*64, 191) + v2, 1181), 182)), 65), 62) + min(max(min(min(v1*64, 191) + v2, 1181), 182) + 62, v3)) == (max(min((v0*12) + (max(min(min(v1*64, 191) + v2, 1244), 245) - max(min(min(v1*64, 191) + v2, 1181), 182)), 65), 62) + min(max(min(min(v1*64, 191) + v2, 1181), 182) + 62, v3)));1;1011;;;;;
 (((v0 + v1)/8) == ((((v0 + v1)/8) + 128) - 1));0;46;;;;;
 (min(max(v0, 1997) - min(v1, 0), v2) == min(max(v0, 1997) - min(v1, 0), v2));1;40;;;;;
 (((v0*-128) + (v1 - v2)) == ((v0*-128) + (v1 - v2)));1;62;;;;;
 (((((v0 + v1) + 63)/64) - ((v1 + -8)/64)) == ((((v0 + v1) + 63)/64) - ((v1 + -8)/64)));1;65;;;;;
 (((v0*58) + (v1 - v2)) == ((v0*58) + (v1 - v2)));1;43;;;;;
 ((min((((v0/125) + v1)*64) - (v2*124), ((v0/125)*64) + 52) + ((((v0/125)*32) + v3)*-2)) == (min((((v0/125) + v1)*64) - (v2*124), ((v0/125)*64) + 52) + ((((v0/125)*32) + v3)*-2)));1;112;;;;;
 (min(((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*16, (v2*16) + 55) == min(((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*16, (v2*16) + 55));1;113;;;;;
 (((v0*4) + (max(min(v1 + v2, 1999), 0) + (v3*4))) == ((v0*4) + (max(min(v1 + v2, 1999), 0) + (v3*4))));1;70;;;;;
 (min(((v0*2) + ((v1*4) + v2))*2, ((min(v1*4, 37) + v2)*2) + 3) == min(((v0*2) + ((v1*4) + v2))*2, ((min(v1*4, 37) + v2)*2) + 3));1;77;;;;;
 (min(1 - (max(v0 - v1, -3)*2), (min(v1 - v0, 3)*2) + 2) == min(1 - (max(v0 - v1, -3)*2), (min(v1 - v0, 3)*2) + 2));1;78;;;;;
 (min(max(v0*4, 30)/2, v0*2) == min(max(v0*4, 30)/2, v0*2));1;51;;;;;
 (((v0*65) + (min(((v1 + v2) + -121)/8, (v2/8) + (v3*16))*8)) == ((v0*65) + (min(((v1 + v2) + -121)/8, (v2/8) + (v3*16))*8)));1;56;;;;;
 (max(min(max(((v0 + 55)/4) - (v1*2), -1), (min(min((v2 - (v3*4)) + 8, v4) - min(v4, 0), 0)*2) + 8), min(min((v5 - v1)*2, (min(v5*8, (v6 + v0) + 20)/4) - (v1*2)), min(min((v2 - (v3*4)) + 8, v4) - min(v4, 0), 0)*2) + 8) == max(min(max(((v0 + 55)/4) - (v1*2), -1), (min(min((v2 - (v3*4)) + 8, v4) - min(v4, 0), 0)*2) + 8), min(min((v5 - v1)*2, (min(v5*8, (v6 + v0) + 20)/4) - (v1*2)), min(min((v2 - (v3*4)) + 8, v4) - min(v4, 0), 0)*2) + 8));1;431;;;;;
 ((max(min(v0*4, v1 + 13) + v2, 5) - (min((v0*4) + v2, min(v1 + v2, 1994) + 13) + (v3*4))) == (max(min(v0*4, v1 + 13) + v2, 5) - (min((v0*4) + v2, min(v1 + v2, 1994) + 13) + (v3*4))));1;87;;;;;
 (min(max(((v0 + v1) + 7)/8, 249), v2 + 125) == min(max(((v0 + v1) + 7)/8, 249), v2 + 125));1;66;;;;;
 (0 == ((0 + (7 - max(v0*4, 3))) - 1));0;70;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 170)/64) == (((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 170)/64));1;233;;;;;
 ((max(min(v0/2, 999), 0) + (v1*500)) == (max(min(v0/2, 999), 0) + (v1*500)));1;87;;;;;
 (max((v0 + 4)/48, 0) >= ((max((v0 + 4)/48, 0) + (((v0 + 51)/48) - max((v0 + 4)/48, 0))) - 1));1;92;;;;;
 ((((((v0 + v1) + 64)/65)*2) - ((((v1/65) + v2)*2) + v3)) == (((((v0 + v1) + 64)/65)*2) - ((((v1/65) + v2)*2) + v3)));1;71;;;;;
 ((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 32)/19) == (((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 32)/19));1;305;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((8*4) + v0) + 3) >= (((8*4) + ((4 + 0) - 1)) + v0))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (v3 <= v3)) && (v3 >= v3));1;151;;;;;
 ((((v0/5)*13) + ((v1/250)*4)) == (((v0/5)*13) + ((v1/250)*4)));1;45;;;;;
 ((min(max(((v0/16) + v1)*8, 1003), (min((v0/16)*8, 4) + (v2*253)) + 252) + (v3*64)) == (min(max(((v0/16) + v1)*8, 1003), (min((v0/16)*8, 4) + (v2*253)) + 252) + (v3*64)));1;89;;;;;
 (((v0 + v1) + -6) == ((((v0 + v1) + -6) + 135) - 1));0;55;;;;;
 ((v0 + -5) >= (((v0 - 1) + 5) + 1));0;61;;;;;
 ((((min(v0*4, 37) + v1)*8) + ((v2*4) + v3)) == (((min(v0*4, 37) + v1)*8) + ((v2*4) + v3)));1;64;;;;;
 (((v0*6) + ((v1*2) + v2)) == ((v0*6) + ((v1*2) + v2)));1;47;;;;;
 (min(v0 + v1, min(max(min(((v2 + v3) + -1)/4, 499), 0), v1 + 11) + 1) == min(v0 + v1, min(max(min(((v2 + v3) + -1)/4, 499), 0), v1 + 11) + 1));1;90;;;;;
 (((((v0 + v1)/4)*4) + -23) >= ((((((v0 + v1)/4)*4) + -23) + 157) - 1));0;74;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*4)/5) + 2) == (((((((v0 + v1) + 249)/250) - (v1/250))*4)/5) + 2));1;127;;;;;
 (((v0*8) + ((v1/2) + (v2*64))) == ((v0*8) + ((v1/2) + (v2*64))));1;52;;;;;
 ((v0 - (((v1*126) + v2)*4)) == (v0 - (((v1*126) + v2)*4)));1;44;;;;;
 (min(507 - (((v0*2) + v1)*4), (v2 - (max((v3*1008) - v4, -998) + ((((v0*2) + v1)*4) + ((v5*508) + v2)))) + 14) == min(507 - (((v0*2) + v1)*4), (v2 - (max((v3*1008) - v4, -998) + ((((v0*2) + v1)*4) + ((v5*508) + v2)))) + 14));1;1376;;;;;
 (min(max(((v0 - (v1*2)) + 77)/64, 0), ((v2 - v1) + 43)/32) == min(max(((v0 - (v1*2)) + 77)/64, 0), ((v2 - v1) + 43)/32));1;91;;;;;
 ((((v0 + -10)/4) + (v1*4)) == (((v0 + -10)/4) + (v1*4)));1;58;;;;;
 ((max(min(v0/16, 126), 2) + (v1*4)) == (max(min(v0/16, 126), 2) + (v1*4)));1;1062;;;;;
 ((max(min(v0, 999), 0) + (v1*63)) == (max(min(v0, 999), 0) + (v1*63)));1;45;;;;;
 ((max(max(min((v0*1000) + v1, min(v2 + v1, 2000) + -1000), -999) + 11, min(v0*1000, v2 + -1000) + v1) - min(min(max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + -11, (v0*1000) + v1), (v2 + v1) + -1000)) == (max(max(min((v0*1000) + v1, min(v2 + v1, 2000) + -1000), -999) + 11, min(v0*1000, v2 + -1000) + v1) - min(min(max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + -11, (v0*1000) + v1), (v2 + v1) + -1000)));1;159;;;;;
 ((((v0 - v1) + 1018)/1012) == (((v0 - v1) + 1018)/1012));1;58;;;;;
 (min(((((v0*10) + v1)*2) + v2)*4, (v3*8) + 25) == min(((((v0*10) + v1)*2) + v2)*4, (v3*8) + 25));1;72;;;;;
 (max(min(min(1999, min(v1 + v2, 2000) + -1), ((v3 + -3) + 507) - 1) + 1, min(max(max(0, max(v2, 0)), v3 + -3), 507 + (v3 + -3))) <= min(max(max(0, max(v2, 0)), v3 + -3), 507 + (v3 + -3)));0;1223;;;;;
 (((((v0 - v1)*8) + 1091)/1044) != 0);0;529;;;;;
 ((((min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*4))*16) + 39, v2)/4) - (v1*16)) - (((max(min(v0, 2002), 3) + -3)/16)*4)) == (((min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*4))*16) + 39, v2)/4) - (v1*16)) - (((max(min(v0, 2002), 3) + -3)/16)*4)));1;129;;;;;
 (0 == ((0 + (35 - max(v0*9, 26))) - 1));0;50;;;;;
 (max(min((((v0*2) + v1)*500) - v2, -1), -500) == ((max(min((((v0*2) + v1)*500) - v2, -1), -500) + (3 - max(min((((v0*2) + v1)*500) - v2, -1), -500))) - 1));0;131;;;;;
 ((min((((min(v0 - v1, (v2*4) + -8) + 15)/4)*4) + v1, min((v2*4) + v1, v0 + 8) + 4) - (v2*4)) == (min((((min(v0 - v1, (v2*4) + -8) + 15)/4)*4) + v1, min((v2*4) + v1, v0 + 8) + 4) - (v2*4)));1;102;;;;;
 (((v0/63) + (v1*8)) == ((v0/63) + (v1*8)));1;58;;;;;
 (((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))/2) + 2) == ((((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16))/2) + 2));1;91;;;;;
 (((v0/2) + (v1*512)) == ((v0/2) + (v1*512)));1;910;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((v1/8) + v2) + 0) + 7) <= ((0 + (v1/8)) + v2))) && (((((v1/8) + v2) + 3) + 7) >= ((((4 + 0) - 1) + ((v1/8) + 4)) + v2))) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)));0;198;;;;;
 ((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0)) + 14)/12) == (((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0)) + 14)/12));1;265;;;;;
 ((max(max(min((v0 + v1)/2, 1006), 7)*8, 115) + (v2*8)) == (max(max(min((v0 + v1)/2, 1006), 7)*8, 115) + (v2*8)));1;77;;;;;
 (min((v0*116) + (v1*8), (v2*8) + 196) == min((v0*116) + (v1*8), (v2*8) + 196));1;61;;;;;
 (max((v0 + 4)/502, 0) >= ((max((v0 + 4)/502, 0) + max(((v0 + 505)/502) - max((v0 + 4)/502, 0), 0)) - 1));0;680;;;;;
 ((((v0 - ((v1*16) + v2)) + 31)/4) == (((v0 - ((v1*16) + v2)) + 31)/4));1;52;;;;;
 (((max(min((v1*-32) + (max(v2, 1997) - min(v3, 21)), 8), -24)/4)*4) == max(min((v1*-32) + (max(v2, 1997) - min(v3, 21)), 8), -24));0;1152;;;;;
 (((((((v0 + v1) + 15)/8) - (v1/8)) + 36)/32) == ((((((v0 + v1) + 15)/8) - (v1/8)) + 36)/32));1;69;;;;;
 (min(min(v0, 990) + -18, v1) == min(min(v0, 990) + -18, v1));1;666;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 7) == min(((v0 + v1) + -1)/8, v2 + 7));1;39;;;;;
 (min(max(v0 + -12, v1), (min((max(min(v2 + v3, 2000), 1) - (v4*8)) - max(min(v3, 1999), 0), 3) + v0) + 7) == min(max(v0 + -12, v1), (min((max(min(v2 + v3, 2000), 1) - (v4*8)) - max(min(v3, 1999), 0), 3) + v0) + 7));1;98;;;;;
 (min((v0 + v1) + -7, v2) == min((v0 + v1) + -7, v2));1;48;;;;;
 (v0 == ((v0 + 64) - 1));0;28;;;;;
 ((v0 - (((v1/2)*47) + v2)) == (v0 - (((v1/2)*47) + v2)));1;44;;;;;
 ((min(min(v0*252, 752) + (max(min((v1/63)*8, 285), 36)*8), ((max(min((((v2 + v1) + -1)/63)*8, 244), -5)*8) - (v3*1004)) + 86) - (((v0*63) + ((max(min((v1/63)*8, 285), 36)*2) + v4))*4)) == (min(min(v0*252, 752) + (max(min((v1/63)*8, 285), 36)*8), ((max(min((((v2 + v1) + -1)/63)*8, 244), -5)*8) - (v3*1004)) + 86) - (((v0*63) + ((max(min((v1/63)*8, 285), 36)*2) + v4))*4)));1;219;;;;;
 ((max(min(((v0 + v1) + -1)/2, 999), 0) - max(min(v1/2, 999), 0)) == (max(min(((v0 + v1) + -1)/2, 999), 0) - max(min(v1/2, 999), 0)));1;233;;;;;
 (max(min(160 - (v0*41), (0 + 41) - 1) + 1, min(max(0 - (v0*41), 0), 41 + 0)) <= min(max(0 - (v0*41), 0), 41 + 0));0;828;;;;;
 (((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((0 + ((v0*16) + v1)) <= ((v0*16) + v1))) && ((3 + (((v0*16) + v1) + 12)) >= (((v0*16) + v1) + 15))) && (0 <= 0)) && (2 >= 2));1;123;;;;;
 ((v0 + -10) >= (((v0 + -10) + (min((((max(min((v1 + v2)/8, 250), 1) + v3)*8) + v4) - (max(min((v1 + v2)/8, 250), 1)*8), -40) + 41)) - 1));1;275;;;;;
 (min(((v0 + v1) + 62)/63, (v1/63) + (v2*2)) == min(((v0 + v1) + 62)/63, (v1/63) + (v2*2)));1;48;;;;;
 (((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*8) + 138)/129) == ((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*8) + 138)/129));1;313;;;;;
 (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - (v2*999)) - max(min((v1/8)*8, 2012), 13)) == ((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - (v2*999)) - max(min((v1/8)*8, 2012), 13)));1;96;;;;;
 (min(max(min((v0*255) + v1, 1245), 246) + 253, v2) == min(max(min((v0*255) + v1, 1245), 246) + 253, v2));1;55;;;;;
 (((min((((((min(((v5 % (((v6*8) + 46)/33))*33) + (((v3/65)*8) + 19), (((v4 + v3) + 64)/65)*8) + ((v5 % (((v6*8) + 46)/33))*-33)) + (22 - ((v3/65)*8)))/3)*3) + ((v5 % (((v6*8) + 46)/33))*33)) + ((v3/65)*8), min(((v5 % (((v6*8) + 46)/33))*33) + (((v3/65)*8) + 19), (((v4 + v3) + 64)/65)*8) + 20)/4)*4) == min((((((min(((v5 % (((v6*8) + 46)/33))*33) + (((v3/65)*8) + 19), (((v4 + v3) + 64)/65)*8) + ((v5 % (((v6*8) + 46)/33))*-33)) + (22 - ((v3/65)*8)))/3)*3) + ((v5 % (((v6*8) + 46)/33))*33)) + ((v3/65)*8), min(((v5 % (((v6*8) + 46)/33))*33) + (((v3/65)*8) + 19), (((v4 + v3) + 64)/65)*8) + 20));0;6301;;;;;
 ((((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 133)/64) == (((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61)) + 133)/64));1;247;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*4)) == (max(min(v0 + v1, 1999), 0) + (v2*4)));1;57;;;;;
 (((v0 + v1) + -5) >= ((((v0 - 1) + v1) + 4) + 1));0;128;;;;;
 (min(((min(v0*64, (v1*124) + 28)/4) + ((v2/63)*16))*4, v3) == min(((min(v0*64, (v1*124) + 28)/4) + ((v2/63)*16))*4, v3));1;80;;;;;
 ((((max(((v0 + v1) + -1)/8, 0) - min(v1/8, 249)) + 10)/8) == (((max(((v0 + v1) + -1)/8, 0) - min(v1/8, 249)) + 10)/8));1;88;;;;;
 (((max(min(v0, 38), -31)*8) + -307) >= ((((max(min(v0, 38), -31)*8) + -307) + (313 - (max(min(v0, 38), -31)*8))) - 1));0;95;;;;;
 ((((v0*4) + 15)/10) != 0);0;468;;;;;
 ((((v0*8) + 1653)/997) != 0);0;457;;;;;
 (min(((v0 + v1) + 5)/2, ((v2*64) + v3) + 1) == min(((v0 + v1) + 5)/2, ((v2*64) + v3) + 1));1;68;;;;;
 (((max(v0, 249) - (v1*16)) - min(v2, 0)) == ((max(v0, 249) - (v1*16)) - min(v2, 0)));1;607;;;;;
 (((((v0 % ((v1/32) + 1))*-32)/16)*16) == ((v0 % ((v1/32) + 1))*-32));1;60;;;;;
 (0 == ((0 + ((max(v0 - v1, -1)*2) + 2)) - 1));0;70;;;;;
 (min(236 - (v0*119), 472 - ((v0*119) + (v1*237))) == min(236 - (v0*119), 472 - ((v0*119) + (v1*237))));1;45;;;;;
 (((v0 + 10)/4) >= ((((v0 + 10)/4) + ((((v0 + 2) % 4) + 3)/4)) - 1));1;64;;;;;
 (min(max(max(max(min(v0, 281), 32)*-2, (v1/4) - (max(min(v0, 281), 32)*2)) + 66, 0), (v2*2) + 17) == min(max(max(max(min(v0, 281), 32)*-2, (v1/4) - (max(min(v0, 281), 32)*2)) + 66, 0), (v2*2) + 17));1;190;;;;;
 (min(((v0 + v1) + 7)/8, v2) == min(((v0 + v1) + 7)/8, v2));1;56;;;;;
 (min(125 - (v0*63), v1 - ((v0*63) + (v2*125))) == min(125 - (v0*63), v1 - ((v0*63) + (v2*125))));1;63;;;;;
 (min((((v0 + v1) + 62)/63)*64, v2 + 943) == min((((v0 + v1) + 62)/63)*64, v2 + 943));1;55;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 142)/132) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 142)/132));1;1817;;;;;
 (((v0 + 130)/128) != 0);0;337;;;;;
 (((v0*9) + ((v1*17) + v2)) == ((v0*9) + ((v1*17) + v2)));1;37;;;;;
 ((max(v0, 999) - min(v1/2, 2)) == (max(v0, 999) - min(v1/2, 2)));1;73;;;;;
 ((((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))/8) + 1) == (((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))/8) + 1));1;261;;;;;
 (((v0/32) + (v1*32)) == ((v0/32) + (v1*32)));1;60;;;;;
 (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 3) == min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 3));1;148;;;;;
 ((((((v0*125) + v1) + v2)*4) + ((v3*2) + v4)) == (((((v0*125) + v1) + v2)*4) + ((v3*2) + v4)));1;53;;;;;
 (min((((v0/65)*2) + v1)*4, ((((v2 + v0) + 64)/65)*8) + 4) == min((((v0/65)*2) + v1)*4, ((((v2 + v0) + 64)/65)*8) + 4));1;78;;;;;
 (((((v0 + v1) + 11)/4) - ((v2*16) + v3)) == ((((v0 + v1) + 11)/4) - ((v2*16) + v3)));1;65;;;;;
 (((v0*20) + ((v1*32) + (max(v2, 0) + (v3*4)))) == ((v0*20) + ((v1*32) + (max(v2, 0) + (v3*4)))));1;69;;;;;
 (min((((v0 + v1) + 1)/2) - ((v2*3) + v3), 250 - (v2*3)) == min((((v0 + v1) + 1)/2) - ((v2*3) + v3), 250 - (v2*3)));1;71;;;;;
 ((v0 - ((min(v1*252, 248) + (v2 + v3))/8)) == (v0 - ((min(v1*252, 248) + (v2 + v3))/8)));1;56;;;;;
 (((max(v0, 0)*8) - ((v1*4) + v2)) == ((max(v0, 0)*8) - ((v1*4) + v2)));1;40;;;;;
 (min((((v0 + v1) + 5)/2) - (v1/2), v2 + 47) == min((((v0 + v1) + 5)/2) - (v1/2), v2 + 47));1;61;;;;;
 (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 250) == min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 250));1;130;;;;;
 (((((((uint1)1 && (((((v0*8) + v1)*8) + -13) <= ((((v1 + (v0*8))*8) + -5) + -8))) && ((((min(v0*8, 117) + v1)*8) + 53) >= ((((v1 + (min(v0*8, 117) + 7))*8) + ((11 + -5) - 1)) + -8))) && (((((0*4) + (v2*8)) + 0) + -5) <= (((((max(-1, 0)*4) + v2) + 0)*8) + -5))) && (((((16*4) + ((v2*8) + 35)) + 3) + -5) >= (((((1*4) + v2) + ((4 + 0) - 1))*8) + ((11 + -5) - 1)))) && (((v3*8) + v4) <= ((v3*8) + v4))) && (((v3*8) + v4) >= ((v3*8) + v4)));1;377;;;;;
 ((((112 - max(min(max(min(v0, 263), 14) + (((v1 + 23)/4)*4), max(min(v0, 249), 0) + 20)*8, ((max(min(v0, 263), 14)*8) - v2) + 3))/4) + (v3*2)) == (((112 - max(min(max(min(v0, 263), 14) + (((v1 + 23)/4)*4), max(min(v0, 249), 0) + 20)*8, ((max(min(v0, 263), 14)*8) - v2) + 3))/4) + (v3*2)));1;104;;;;;
 ((max((v0*126) - v1, -123) + (v2*72)) == (max((v0*126) - v1, -123) + (v2*72)));1;49;;;;;
 (min(max(((v0 - (((v1*156) + v2)*8)) + 192)/180, 0), ((min(v3 - v2, 155)*8) + 190)/180) == min(max(((v0 - (((v1*156) + v2)*8)) + 192)/180, 0), ((min(v3 - v2, 155)*8) + 190)/180));1;105;;;;;
 (((min((max(v0, 0)*8) - (v1*155), (min(v2*16, 139) + (v3*8)) + 4) - (v2*16)) - (v3*8)) == ((min((max(v0, 0)*8) - (v1*155), (min(v2*16, 139) + (v3*8)) + 4) - (v2*16)) - (v3*8)));1;95;;;;;
 ((((max(((v0 + v1) + 7)/8, 249) - min(v1/8, 0))/126) + 1) >= 0);1;86;;;;;
 (min(max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9), v2) == min(max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9), v2));1;142;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), max(min(v1/2, 999), 0) + 499) == min(max(min(((v0 + v1) + -1)/2, 999), 0), max(min(v1/2, 999), 0) + 499));1;128;;;;;
 ((max(min((v0 + v1)/2, 1006), 7) + (v2*15)) == (max(min((v0 + v1)/2, 1006), 7) + (v2*15)));1;88;;;;;
 (((max(min((v1*-16) + ((max((v2 + 4)/16, 0)*-16) + (max(v3*4, -3) - min(((v4 + v5)/4)*4, 1999))), 12), -4)/4)*4) == max(min((v1*-16) + ((max((v2 + 4)/16, 0)*-16) + (max(v3*4, -3) - min(((v4 + v5)/4)*4, 1999))), 12), -4));0;1808;;;;;
 (min(max(v0*64, -10) + (v1*16), (v0*64) + 48) == min(max(v0*64, -10) + (v1*16), (v0*64) + 48));1;49;;;;;
 ((max(min((v0*132) + ((v1/8) - (((v2 + v1) + 55)/8)), 3), -128) + min(((v2 + v1) + 55)/8, ((v1/8) + (v0*132)) + 128)) == (max(min((v0*132) + ((v1/8) - (((v2 + v1) + 55)/8)), 3), -128) + min(((v2 + v1) + 55)/8, ((v1/8) + (v0*132)) + 128)));1;117;;;;;
 (min(((((v0 + v1) + -1)/65) - (v1/65)) + -3, v2) == min(((((v0 + v1) + -1)/65) - (v1/65)) + -3, v2));1;68;;;;;
 (min(max(min(v0 + v1, 2000), 1), v2 + 1000) == min(max(min(v0 + v1, 2000), 1), v2 + 1000));1;61;;;;;
 ((((v0 - v1) + 323)/316) != 0);0;489;;;;;
 (max(((v0 - v1) + 1)/128, 0) >= ((max(((v0 - v1) + 1)/128, 0) + ((max((v0 - v1)/128, -1) - max(((v0 - v1) + 1)/128, 0)) + 1)) - 1));0;1424;;;;;
 (((v0 + 261)/250) != 0);0;353;;;;;
 (min(max((((v0 + v1) + 507)/8)*8, (max(min((v0 + v1)*2, 3001), -998)/2) + 492) - min(max(min((v0 + v1)*2, 3999), 0)/2, (((v0 + v1)/8)*8) + 1), (v2*60) + 51) == min(max((((v0 + v1) + 507)/8)*8, (max(min((v0 + v1)*2, 3001), -998)/2) + 492) - min(max(min((v0 + v1)*2, 3999), 0)/2, (((v0 + v1)/8)*8) + 1), (v2*60) + 51));1;172;;;;;
 ((((((((v0 + v1) + 124)/125) - (v1/125))*8) + 24)/17) == (((((((v0 + v1) + 124)/125) - (v1/125))*8) + 24)/17));1;88;;;;;
 ((max(min(v0, 1999), 0) + (v1*1003)) == (max(min(v0, 1999), 0) + (v1*1003)));1;42;;;;;
 ((min(max(min(v0 + v1, 1999), 0), (max(min(v0 + v1, 1500), -499) - (v2*64)) + 437) - (max(min(v0 + v1, 1999), 0) + (v3*4))) == (min(max(min(v0 + v1, 1999), 0), (max(min(v0 + v1, 1500), -499) - (v2*64)) + 437) - (max(min(v0 + v1, 1999), 0) + (v3*4))));1;120;;;;;
 (((v0/2) + (((v1*8) + v2)*4)) == ((v0/2) + (((v1*8) + v2)*4)));1;52;;;;;
 ((max(min(((v0 + v1) + -1)/4, (min((min((v2*128) + 127, v3)/4)*4, (v2*128) + 124) + (v1/4)) + 3)*4, -3) - (min(((v1/4) + (v2*128))*4, 1999) + (v4*4))) == (max(min(((v0 + v1) + -1)/4, (min((min((v2*128) + 127, v3)/4)*4, (v2*128) + 124) + (v1/4)) + 3)*4, -3) - (min(((v1/4) + (v2*128))*4, 1999) + (v4*4))));1;151;;;;;
 ((max(min((v0 + v1)/16, 126), 2) + (v2*4)) == (max(min((v0 + v1)/16, 126), 2) + (v2*4)));1;56;;;;;
 (max(((v0*16) + v1)*8, ((v2*8) + v3) + 123) == max(((v0*16) + v1)*8, ((v2*8) + v3) + 123));1;68;;;;;
 ((max(min((v0*4) + v1, 307), 58) - (max(min((v0*4) + v1, 310), 61) + (v2*4))) == (max(min((v0*4) + v1, 307), 58) - (max(min((v0*4) + v1, 310), 61) + (v2*4))));1;82;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 15) == min(((v0 + v1) + -1)/8, v2 + 15));1;90;;;;;
 (max(min(max(max(max(9 - ((v0/63)*8), ((v0/63)*-8) + 11), 12 - ((v0/63)*8))/3, 0), (v1/3) + 3), min(min(((min(v2, 252) - ((v0/63)*8)) + 4)/3, 85 - (((v0/63)*8)/3)), (v1/3) + 2) + 1) == max(min(max(max(max(9 - ((v0/63)*8), ((v0/63)*-8) + 11), 12 - ((v0/63)*8))/3, 0), (v1/3) + 3), min(min(((min(v2, 252) - ((v0/63)*8)) + 4)/3, 85 - (((v0/63)*8)/3)), (v1/3) + 2) + 1));1;250;;;;;
 (max(min(max(((v0 - v1) + 3)/4, 0), v2 + 2), min(min(((min((v3*8) + 5, v4 + v0) - v1) + -1)/4, min(((v4 + v0) - v1)/4, ((v3*2) - (v1/4)) + 2) + -1), v2 + 1) + 1) == max(min(max(((v0 - v1) + 3)/4, 0), v2 + 2), min(min(((min((v3*8) + 5, v4 + v0) - v1) + -1)/4, min(((v4 + v0) - v1)/4, ((v3*2) - (v1/4)) + 2) + -1), v2 + 1) + 1));1;206;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 22)/8) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 22)/8));1;266;;;;;
 (((((v0 + v1) + 31)/32) - ((v2*2) + v3)) == ((((v0 + v1) + 31)/32) - ((v2*2) + v3)));1;66;;;;;
 (max((((v0/65) + (v1*4))*8) - min(((((v2 + v0) + 64)/65)*8) - (v3*131), ((v0/65)*8) + 117), ((v0/65)*8) + ((v1*32) - min(((((v2 + v0) + 64)/65)*8) - (v3*131), min(((v0/65) + (v1*4))*8, ((v0/65)*8) + 109) + 8))) == max((((v0/65) + (v1*4))*8) - min(((((v2 + v0) + 64)/65)*8) - (v3*131), ((v0/65)*8) + 117), ((v0/65)*8) + ((v1*32) - min(((((v2 + v0) + 64)/65)*8) - (v3*131), min(((v0/65) + (v1*4))*8, ((v0/65)*8) + 109) + 8))));1;186;;;;;
 ((((v0 + v1)/2) + (v2*63)) == (((v0 + v1)/2) + (v2*63)));1;28;;;;;
 (((((((uint1)1 && ((0 + ((((v0*8) + v1)*8) + v2)) <= (((v0*64) + (v1*8)) + v2))) && ((3 + (((((v0*8) + v1)*8) + v2) + 4)) >= (((v0*64) + ((v1*8) + 7)) + v2))) && (((min(v3*63, 187) + v4) + v5) <= ((min(v3*63, 187) + v4) + v5))) && (((min(v3*63, 187) + v4) + v5) >= ((min(v3*63, 187) + v4) + v5))) && (v6 <= v6)) && (v6 >= v6));1;256;;;;;
 (max(min(max((v0*252) + v1, 6), ((v0*252) + v1) + 257), min((v0*252) + v1, 1749) + 257) == max(min(max((v0*252) + v1, 6), ((v0*252) + v1) + 257), min((v0*252) + v1, 1749) + 257));1;78;;;;;
 (min((((v0 + v1) + 15)/16)*8, (v2*8) + 55) == min((((v0 + v1) + 15)/16)*8, (v2*8) + 55));1;50;;;;;
 (((max(min(v0*8, 125), 1) + (((min((v1*8) + -5, v2)/4)*4) + (min((v1*-8) + v2, -11) + (min(min((v1*-8) + v2, -5)/2, -5)*2)))) + 10) == ((max(min(v0*8, 125), 1) + (((min((v1*8) + -5, v2)/4)*4) + (min((v1*-8) + v2, -11) + (min(min((v1*-8) + v2, -5)/2, -5)*2)))) + 10));1;132;;;;;
 (((v0 + v1)/32) <= ((((v0 - 1) + v1)/32) - 1));0;72;;;;;
 ((((v0 + v1)/8) + (((v2 + 11)/9)*9)) == (((v0 + v1)/8) + (((v2 + 11)/9)*9)));1;45;;;;;
 (min(v0*252, v1 + -252) == min(v0*252, v1 + -252));1;687;;;;;
 ((((v0*2) + 25)/21) != 0);0;441;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*32), max(min(v1/2, 999), 0) + 31) == min(max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*32), max(min(v1/2, 999), 0) + 31));1;87;;;;;
 (((((min((((v0/8) + (v1*4))*8) + 29, v2) + 6)/4) - (v1*8)) - ((v0/8)*2)) == ((((min((((v0/8) + (v1*4))*8) + 29, v2) + 6)/4) - (v1*8)) - ((v0/8)*2)));1;99;;;;;
 (min(min(v0, 2007) + (v1*4), v2 + 1) == min(min(v0, 2007) + (v1*4), v2 + 1));1;47;;;;;
 (max(((((v0 + v1) + 62)/8)*8) + v2, (((v0 + v1)/8)*8) + 61) == max(((((v0 + v1) + 62)/8)*8) + v2, (((v0 + v1)/8)*8) + 61));1;85;;;;;
 (((max(min(((v0*19) + v1) - v2, 12), -6)*8) + -101) == ((((max(min(((v0*19) + v1) - v2, 12), -6)*8) + -101) + (107 - (max(min(((v0*19) + v1) - v2, 12), -6)*8))) - 1));0;181;;;;;
 (((v0*36) + (max(v1*64, -5) + (min(v2*252, v3 + -252) + v4))) == ((v0*36) + (max(v1*64, -5) + (min(v2*252, v3 + -252) + v4))));1;71;;;;;
 (((max(min((v0/8) + v1, 250), 1) - (v2*32)) - max(min(v0/8, 249), 0)) == ((max(min((v0/8) + v1, 250), 1) - (v2*32)) - max(min(v0/8, 249), 0)));1;90;;;;;
 ((((v0*-32)/16)*16) == (v0*-32));1;1029;;;;;
 (((v0*16) + ((v1*8) + (v2*124))) == ((v0*16) + ((v1*8) + (v2*124))));1;35;;;;;
 ((min(v0*64, ((min(v1*252, v2 + -252) + v3) % 2) + 63) - (((v0*16) + v4)*4)) == (min(v0*64, ((min(v1*252, v2 + -252) + v3) % 2) + 63) - (((v0*16) + v4)*4)));1;90;;;;;
 (min(((v0 + v1) + 63)/8, ((v2*8) + v3) + 6) == min(((v0 + v1) + 63)/8, ((v2*8) + v3) + 6));1;68;;;;;
 ((((min(((v2 % ((v3 + 102)/16))*128) + (max(min((v1/125)*16, 286), 37)*8), (max(min((((v4 + v1) + 124)/125)*16, 204), -45)*8) + 564)*-1)/4)*4) == (min(((v2 % ((v3 + 102)/16))*128) + (max(min((v1/125)*16, 286), 37)*8), (max(min((((v4 + v1) + 124)/125)*16, 204), -45)*8) + 564)*-1));0;2309;;;;;
 ((min(((v0 + v1)/126)*64, min((v0 + v1)/2, (((v0 + v1)/126)*63) + 6) + 24) + (v2*58)) == (min(((v0 + v1)/126)*64, min((v0 + v1)/2, (((v0 + v1)/126)*63) + 6) + 24) + (v2*58)));1;54;;;;;
 (((v0*63) + (max(min(v1, 999), 0)*2)) == ((v0*63) + (max(min(v1, 999), 0)*2)));1;73;;;;;
 (((max(min(v0, 249), 0) - (v1*9)) - max(min((v2 + v3)/8, 249), 0)) == ((max(min(v0, 249), 0) - (v1*9)) - max(min((v2 + v3)/8, 249), 0)));1;851;;;;;
 (((((((v0 + v1) + -1)/500) - (v1/500))/2) + 1) == ((((((v0 + v1) + -1)/500) - (v1/500))/2) + 1));1;96;;;;;
 (min(max(max(((v0 - v1) + 3)/4, min(min(((-14 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min(v2*8, (v3 + v0) + 13) - v1) + -14)/4) + 1), 0), v4) == min(max(max(((v0 - v1) + 3)/4, min(min(((-14 - v1)/4) + (v2*2), (((v3 + v0) - v1)/4) + -1), ((min(v2*8, (v3 + v0) + 13) - v1) + -14)/4) + 1), 0), v4));1;195;;;;;
 (min((v0*2) + v1, v2 + 58) == min((v0*2) + v1, v2 + 58));1;45;;;;;
 ((((((((v0*63) + v1)*8) + 502) + 4)/8) - (v0*63)) == (((((((v0*63) + v1)*8) + 502) + 4)/8) - (v0*63)));1;75;;;;;
 (((v0*116) + (v1*8)) == ((v0*116) + (v1*8)));1;35;;;;;
 ((max(v0, 0) + (v1*128)) == (max(v0, 0) + (v1*128)));1;33;;;;;
 (((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((((v2*3) + v3)*4) + v4) + 0) <= ((((v2*3) + v3)*4) + v4))) && ((((((v2*3) + v3)*4) + v4) + 3) >= (((((v2*3) + v3)*4) + 3) + v4))) && (v5 <= v5)) && (v5 >= v5));1;165;;;;;
 (((((((v0 + v1) + 87)/8) - (v1/8)) + 44)/34) == ((((((v0 + v1) + 87)/8) - (v1/8)) + 44)/34));1;58;;;;;
 (min((v0*4) + ((v1*36) + v2), v3 + 9) == min((v0*4) + ((v1*36) + v2), v3 + 9));1;68;;;;;
 ((((v0*32) + (v1 + v2)) + -1) == (((((v0*32) + (v1 + v2)) + -1) + 37) - 1));0;73;;;;;
 (min(max(((v0 + -1)/4) - min(v1/4, 0), -1), v2) == min(max(((v0 + -1)/4) - min(v1/4, 0), -1), v2));1;74;;;;;
 (((((v0 + v1)/250)*256) + -177) == ((((((v0 + v1)/250)*256) + -177) + ((v2*256) + 423)) - 1));0;117;;;;;
 (min((v0*4) + v1, v2 + 8) == min((v0*4) + v1, v2 + 8));1;61;;;;;
 ((((max(v0, 1997) - min(v1, 0)) + 38)/36) == (((max(v0, 1997) - min(v1, 0)) + 38)/36));1;51;;;;;
 (min(max(((v0 - ((v1*128) + v2)) + 7)/4, 0), (min(v3, 128) + 11)/4) == min(max(((v0 - ((v1*128) + v2)) + 7)/4, 0), (min(v3, 128) + 11)/4));1;87;;;;;
 (min((((v0 + v1) + -1)/8) - ((v2*4) + v3), 62 - (v2*4)) == min((((v0 + v1) + -1)/8) - ((v2*4) + v3), 62 - (v2*4)));1;70;;;;;
 (((((v0 % ((((max(v1, 0) - v2)*8) + 167)/156))*156)/4)*4) == ((v0 % ((((max(v1, 0) - v2)*8) + 167)/156))*156));1;70;;;;;
 (((v0*8) + (max(min(((v1 + v2)/2) + (v3*64), 999), 0) + (v4*16))) == ((v0*8) + (max(min(((v1 + v2)/2) + (v3*64), 999), 0) + (v4*16))));1;97;;;;;
 ((max(min(min(v0*12, 116) + v1, 1106), 107) - (max(min(min(v0*12, 116) + v1, 1117), 118) + (v2*4))) == (max(min(min(v0*12, 116) + v1, 1106), 107) - (max(min(min(v0*12, 116) + v1, 1117), 118) + (v2*4))));1;109;;;;;
 ((((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 78)/64) == (((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 78)/64));1;124;;;;;
 ((min(v0, 21) + (v1*32)) == (min(v0, 21) + (v1*32)));1;35;;;;;
 (min(125 - (v0*8), (v1 - ((v0*8) + (v2*126))) + 11) == min(125 - (v0*8), (v1 - ((v0*8) + (v2*126))) + 11));1;62;;;;;
 ((min(v0*12, 57) + (v1*4)) == (min(v0*12, 57) + (v1*4)));1;55;;;;;
 (((v0/32) + (v1*4)) == ((v0/32) + (v1*4)));1;628;;;;;
 (min(v0*4, min((((v1 + v2) + 127)/32)*4, 265) + 16) == min(v0*4, min((((v1 + v2) + 127)/32)*4, 265) + 16));1;62;;;;;
 (((v0*88) + (v1*32)) == ((v0*88) + (v1*32)));1;50;;;;;
 (((v0/8) + ((v1*16) - (((v2 + v0) + 55)/8))) == ((v0/8) + ((v1*16) - (((v2 + v0) + 55)/8))));1;651;;;;;
 ((v0 - ((((((max(min(v1, 2002), 3) + -3)/16) + v2)*4) + v3)*4)) == (v0 - ((((((max(min(v1, 2002), 3) + -3)/16) + v2)*4) + v3)*4)));1;85;;;;;
 (min((v0*2) + ((v1*64) + (max(min(v2/2, 999), 0) + (v3*126))), min(max(min(((v4 + v2) + 1)/2, 999), 0), ((v3*126) + (max(min(v2/2, 999), 0) + min(v1*64, 65))) + 60) + 4) == min((v0*2) + ((v1*64) + (max(min(v2/2, 999), 0) + (v3*126))), min(max(min(((v4 + v2) + 1)/2, 999), 0), ((v3*126) + (max(min(v2/2, 999), 0) + min(v1*64, 65))) + 60) + 4));1;139;;;;;
 (((v0*125) + ((v1*2) + v2)) == ((v0*125) + ((v1*2) + v2)));1;42;;;;;
 (max(min(v0/8, 249), (max(min(v0/8, 249), 0) + v1) + v2) == max(min(v0/8, 249), (max(min(v0/8, 249), 0) + v1) + v2));1;70;;;;;
 (min((((v0 + v1) + 31)/32)*4, (((v1/32) + v2)*4) + 3) == min((((v0 + v1) + 31)/32)*4, (((v1/32) + v2)*4) + 3));1;57;;;;;
 (((((v0 - v1)/4) + (v2*-8)) + 2) == ((((v0 - v1)/4) + (v2*-8)) + 2));1;47;;;;;
 (((((v0 + v1) + 999)/500) - (v1/500)) == ((((v0 + v1) + 999)/500) - (v1/500)));1;1220;;;;;
 (max(min(124, (v2 + (((v1 % 16) + 47)/16)) - 1) + 1, min(max(0, v2), (((v1 % 16) + 47)/16) + v2)) <= min(max(0, v2), (((v1 % 16) + 47)/16) + v2));0;1372;;;;;
 (((((v0 % (((v1*8) + 81)/68))*-544)/32)*32) == ((v0 % (((v1*8) + 81)/68))*-544));1;56;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 508)/504) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 508)/504));1;137;;;;;
 (min((v0*8) + -997, v1) == min((v0*8) + -997, v1));1;39;;;;;
 (((((((uint1)1 && (((((v0*508) + v1) + v2) + 505) <= (v2 + (((v0*508) + v1) + -8)))) && (((((v0*508) + v1) + v2) + 505) >= (v2 + ((514 + (((v0*508) + v1) + -8)) - 1)))) && ((0 + (min(((v3*126) + v4) + 139, v5) + -8)) <= (0 + (v5 + -8)))) && ((3 + (min((((142 - max(v6*72, 70))/4)*4) + v5, min(((v3*126) + v4) + 70, v5) + 69) + -8)) >= (((2 + 0) - 1) + (min((((max(v6, 1)*-72) - max(v6*72, 138)) + v5) + 140, (v3*126) + v4) + 133)))) && (0 <= 0)) && (2 >= ((3 + 0) - 1)));0;518;;;;;
 (max(min(max(max(max(((v0 - v1) + 9)/4, 1 - (v1/4)), 1 - (((max(min(v2/2, 999), 0)*2) + (v3*125))/4)), 0), (min(((max(min(((v4 + v2) + 1)/2, 999), 0)*2) - (v3*125)) - (max(min(v2/2, 999), 0)*2), 123) + 15)/4), (min(min(min(2000 - v1, min(min(v5 + v0, min(v6, 1995) + 3) - v1, min(v6 - v1, min(max(min(((v4 + v2) + 1)/2, 999), 0)*2, ((v3*125) + (max(min(v2/2, 999), 0)*2)) + 123) - ((max(min(v2/2, 999), 0)*2) + (v3*125))) + 3) + 5), 2000 - ((max(min(v2/2, 999), 0)*2) + (v3*125))), min(((max(min(((v4 + v2) + 1)/2, 999), 0)*2) - (v3*125)) - (max(min(v2/2, 999), 0)*2), 123) + 11)/4) + 1) == max(min(max(max(max(((v0 - v1) + 9)/4, 1 - (v1/4)), 1 - (((max(min(v2/2, 999), 0)*2) + (v3*125))/4)), 0), (min(((max(min(((v4 + v2) + 1)/2, 999), 0)*2) - (v3*125)) - (max(min(v2/2, 999), 0)*2), 123) + 15)/4), (min(min(min(2000 - v1, min(min(v5 + v0, min(v6, 1995) + 3) - v1, min(v6 - v1, min(max(min(((v4 + v2) + 1)/2, 999), 0)*2, ((v3*125) + (max(min(v2/2, 999), 0)*2)) + 123) - ((max(min(v2/2, 999), 0)*2) + (v3*125))) + 3) + 5), 2000 - ((max(min(v2/2, 999), 0)*2) + (v3*125))), min(((max(min(((v4 + v2) + 1)/2, 999), 0)*2) - (v3*125)) - (max(min(v2/2, 999), 0)*2), 123) + 11)/4) + 1));1;505;;;;;
 (((v0 + 499)/500) != 0);0;365;;;;;
 ((((v0*8) + 138)/129) != 0);0;412;;;;;
 (min(((v0 + v1) + 31)/4, (((v0 + v1)/4) + (((((v0 + v1) % 4) + 47)/16)*4)) + -1) == min(((v0 + v1) + 31)/4, (((v0 + v1)/4) + (((((v0 + v1) % 4) + 47)/16)*4)) + -1));1;103;;;;;
 (min(((v0 + v1) + 7)/8, v2 + 123) == min(((v0 + v1) + 7)/8, v2 + 123));1;43;;;;;
 (min((v0*4) + (max(v1*32, -7) + (v2 + v3)), ((v1*32) + (v2 + v3)) + 28) == min((v0*4) + (max(v1*32, -7) + (v2 + v3)), ((v1*32) + (v2 + v3)) + 28));1;108;;;;;
 (min(((v0 + v1) + -1)/16, v2 + -1) == min(((v0 + v1) + -1)/16, v2 + -1));1;48;;;;;
 (((((v0 + v1) + 124)/125) - (v2*3)) == ((((v0 + v1) + 124)/125) - (v2*3)));1;56;;;;;
 (min((v0*4) + v1, v2 + -10) == min((v0*4) + v1, v2 + -10));1;75;;;;;
 ((((v0 + -7)/8) + (v1*4)) == (((v0 + -7)/8) + (v1*4)));1;48;;;;;
 (((((v0 % (((max(v1, 0) - v2) + 33)/20))*-160)/32)*32) == ((v0 % (((max(v1, 0) - v2) + 33)/20))*-160));1;70;;;;;
 (min(max(((v0 - (v1*2)) + 95)/4, 0), ((v2 - v1) + 1)/2) == min(max(((v0 - (v1*2)) + 95)/4, 0), ((v2 - v1) + 1)/2));1;83;;;;;
 (min(((((v0 + v1) + 249)/250) - (v1/250))*32, (v2*32) + 159) == min(((((v0 + v1) + 249)/250) - (v1/250))*32, (v2*32) + 159));1;90;;;;;
 (min((v0*4) + ((v1*16) + v2), v3 + 106) == min((v0*4) + ((v1*16) + v2), v3 + 106));1;54;;;;;
 ((min((v0*4) - (v1*74), (v2*4) + 42) - ((v2*4) + (v3*15))) == (min((v0*4) - (v1*74), (v2*4) + 42) - ((v2*4) + (v3*15))));1;36;;;;;
 (((v0*4) + ((v1*250) + v2)) == ((v0*4) + ((v1*250) + v2)));1;30;;;;;
 ((((v0 + v1)/63) + (((min((v0 + v1) % 63, (min(v2*125, v3 + -125) + v0) % 63) + 502)/252)*4)) == (((v0 + v1)/63) + (((min((v0 + v1) % 63, (min(v2*125, v3 + -125) + v0) % 63) + 502)/252)*4)));1;107;;;;;
 (min(((v0 + v1) + 188)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 220)/32)*4)) + -1) == min(((v0 + v1) + 188)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 220)/32)*4)) + -1));1;1855;;;;;
 (((v0*500) + ((v1*32) + v2)) == ((v0*500) + ((v1*32) + v2)));1;41;;;;;
 ((max(v0 - v1, (v1 - v0) + 533) + -522) >= 0);0;473;;;;;
 (((max(v0*1000, -8) + v1) + 3) == ((((max(v0*1000, -8) + v1) + 3) + (min(v0*1000, -8) + 1008)) - 1));0;120;;;;;
 ((((v0/125)*16) + -37) == (((((v0/125)*16) + -37) + ((v1*16) + 83)) - 1));0;87;;;;;
 (((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*64) + 3544)/728) == ((((max(min((((v0 + v1) + 499)/500)*8, 26), -5) - max(min((v1/500)*8, 67), 36))*64) + 3544)/728));1;295;;;;;
 (((v0*8) - ((v1*1076) + (max(min(v2/63, 31), 0)*64))) == ((v0*8) - ((v1*1076) + (max(min(v2/63, 31), 0)*64))));1;73;;;;;
 ((min(((v0 + v1) + -977)/8, ((v1/8) + (v2*132)) + -5) + (v3*4)) == (min(((v0 + v1) + -977)/8, ((v1/8) + (v2*132)) + -5) + (v3*4)));1;54;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && ((((((v0*16) + v1) + v2)*4) + 0) <= ((((v0*16) + v1) + v2)*4))) && ((((((v0*16) + v1) + v2)*4) + 3) >= (((((v0*16) + v1) + v2)*4) + 3))) && (v3 <= v3)) && (v3 >= v3));1;150;;;;;
 ((max(min((v0*128) + v1, min(v2 + v1, 1999) + -128), max(min((v0*128) + v1, min(v2 + v1, 1998) + -128), -129) + 1) - (min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0), max(min((v0*128) + v1, min(v2 + v1, 2126) + -128), -1) + 1) + (v3*4))) == (max(min((v0*128) + v1, min(v2 + v1, 1999) + -128), max(min((v0*128) + v1, min(v2 + v1, 1998) + -128), -129) + 1) - (min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0), max(min((v0*128) + v1, min(v2 + v1, 2126) + -128), -1) + 1) + (v3*4))));1;181;;;;;
 (((((((uint1)1 && (((((v0*4) + v1) + 0) + -3) <= ((((v0*4) + v1) + 0) + -3))) && (((((v0*4) + v1) + 3) + -3) >= ((((v0*4) + v1) + ((4 + 0) - 1)) + -3))) && (((((v2*8) + v3) + v4) + -1) <= ((((v2*8) + v3) + v4) + -1))) && (((((v2*8) + v3) + v4) + -1) >= ((((v2*8) + v3) + v4) + -1))) && (v5 <= v5)) && (v5 >= v5));1;190;;;;;
 (min((((v0 + v1) + 124)/125)*64, v2 + 472) == min((((v0 + v1) + 124)/125)*64, v2 + 472));1;35;;;;;
 (((max((max(min(v0*8, 4004), 5) + -13)/2, 0)/63) + (v1*8)) == ((max((max(min(v0*8, 4004), 5) + -13)/2, 0)/63) + (v1*8)));1;74;;;;;
 ((((min(((v3 % (((v4*8) + 51)/36))*36) + (((v2/63)*8) + 20), (((v1 + v2) + 62)/63)*8)*-1)/8)*8) == (min(((v3 % (((v4*8) + 51)/36))*36) + (((v2/63)*8) + 20), (((v1 + v2) + 62)/63)*8)*-1));0;1850;;;;;
 ((((((v0 + v1) + 13)/2) - (v2*64)) - (v1/2)) == (((((v0 + v1) + 13)/2) - (v2*64)) - (v1/2)));1;1010;;;;;
 (min(max(v0*16, -4), (v0*16) + 16) == min(max(v0*16, -4), (v0*16) + 16));1;41;;;;;
 ((((v0/1000)*256) + (v1*25)) == (((v0/1000)*256) + (v1*25)));1;47;;;;;
 (((((((uint1)1 && ((((max(v0*4, -3) + v1) + 0) + 2) <= (((v0*4) + v1) + -1))) && ((((max(v0*4, -3) + v1) + 3) + 2) >= (((v0*4) + v1) + 5))) && ((v2*3) <= (v2*3))) && (((v2*3) + 2) >= ((v2*3) + 2))) && ((v3*3) <= (v3*3))) && (((v3*3) + 2) >= ((3 + (v3*3)) - 1)));0;256;;;;;
 (((max(min(v0, 22), -7)*2) - ((max(min(v0, 46), 15)*2) + v1)) == ((max(min(v0, 22), -7)*2) - ((max(min(v0, 46), 15)*2) + v1)));1;69;;;;;
 (0 == ((0 + (50 - (max(min(v0, 2), 1)*25))) - 1));0;69;;;;;
 (((((v0 + v1) + 251)/2) - ((v2*8) + v3)) == ((((v0 + v1) + 251)/2) - ((v2*8) + v3)));1;53;;;;;
 ((((v0/32)*4) + -32) == (((((v0/32)*4) + -32) + ((v1*4) + 36)) - 1));0;80;;;;;
 (min(((v0*2) + v1)*4, (max(min(((v2 + v3) + 7)/8, 249), 0)*8) + 14) == min(((v0*2) + v1)*4, (max(min(((v2 + v3) + 7)/8, 249), 0)*8) + 14));1;91;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 108)/92) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 108)/92));1;261;;;;;
 ((min(((((v0 + v1) + 3)/4) - (v2*32)) - (v1/4), 31) + -15) == (min(((((v0 + v1) + 3)/4) - (v2*32)) - (v1/4), 31) + -15));1;99;;;;;
 ((((((((v0 + v1) + 755)/63) - (v1/63))*8) + 179)/60) == (((((((v0 + v1) + 755)/63) - (v1/63))*8) + 179)/60));1;68;;;;;
 (((((((v0 + v1) + -1)/8) - (v1/8)) + 86)/84) == ((((((v0 + v1) + -1)/8) - (v1/8)) + 86)/84));1;94;;;;;
 (min((((v0 + v1) + 3)/4) - (v1/4), v2 + 31) == min((((v0 + v1) + 3)/4) - (v1/4), v2 + 31));1;74;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 51)/32) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 51)/32));1;199;;;;;
 (max((((v0 + v1) + 507)/8)*8, (max(min((v0 + v1)*2, 3001), -998)/2) + 492) == max((((v0 + v1) + 507)/8)*8, (max(min((v0 + v1)*2, 3001), -998)/2) + 492));1;117;;;;;
 (((v0*32) + ((v1*4) + (v2 + v3))) == ((v0*32) + ((v1*4) + (v2 + v3))));1;37;;;;;
 (((((((uint1)1 && ((v0 + -2021) <= ((0 + v0) + -2021))) && ((v0 + -1021) >= ((((1001 + 0) - 1) + v0) + -2021))) && (((((((v1/8)*2) + 0)*4) + 0) + -10) <= ((((((v1/8)*2) + 0)*4) + 0) + -10))) && (((((((v1/8)*2) + (((((v1 % 8) + 124)/8)*2) + 4))*4) + 3) + -10) >= ((((((v1/8)*2) + (((((((v1 % 8) + 124)/8)*2) + 5) + 0) - 1))*4) + ((4 + 0) - 1)) + -10))) && (v2 <= v2)) && (v2 >= v2));1;349;;;;;
 (max(0, min(112 - ((v0 % 2)*57), (0 + 57) - 1) + 1) <= 0);0;72;;;;;
 ((((((v0 + v1) + -1)/65) - (v2*16)) - (v1/65)) == (((((v0 + v1) + -1)/65) - (v2*16)) - (v1/65)));1;1355;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*64) + 133)/125) == (((((((v0 + v1) + -1)/63) - (v1/63))*64) + 133)/125));1;73;;;;;
 (((((v0 + v1) + -2)/16) + (v2*2)) == ((((v0 + v1) + -2)/16) + (v2*2)));1;71;;;;;
 ((((max(min(v0, 2005), 6) + -10)/4) + (v1*4)) == (((max(min(v0, 2005), 6) + -10)/4) + (v1*4)));1;54;;;;;
 ((min(v0*44, 84) + min((max(min(v1 + v2, 1999), 0)/16)*16, ((((max(min(v2, 2002), 3) + -3)/16) + (v3*8))*16) + 89)) == (min(v0*44, 84) + min((max(min(v1 + v2, 1999), 0)/16)*16, ((((max(min(v2, 2002), 3) + -3)/16) + (v3*8))*16) + 89)));1;111;;;;;
 (min((((v0/1000)*4) + v1)*64, (v2*256) + 464) == min((((v0/1000)*4) + v1)*64, (v2*256) + 464));1;51;;;;;
 (((v0*252) + ((v1*64) + v2)) == ((v0*252) + ((v1*64) + v2)));1;1137;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 71)/64) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 71)/64));1;153;;;;;
 ((((((((v0 + v1) + 1999)/2000) - (v1/2000))*4) + 10)/3) == (((((((v0 + v1) + 1999)/2000) - (v1/2000))*4) + 10)/3));1;45;;;;;
 (min((v0*8) + v1, v2 + 8) == min((v0*8) + v1, v2 + 8));1;43;;;;;
 ((max(v0, 8) + (v1*2)) == (max(v0, 8) + (v1*2)));1;33;;;;;
 (max(min(max((16 - (v0*9))/2, 7 - ((v0*9)/2)), max((66 - max(v0*36, 31))/4, 16 - max(v0*9, 8))/2), (66 - max(v0*36, 31))/8) == max(min(max((16 - (v0*9))/2, 7 - ((v0*9)/2)), max((66 - max(v0*36, 31))/4, 16 - max(v0*9, 8))/2), (66 - max(v0*36, 31))/8));1;153;;;;;
 ((((v0 - v1) + 87)/30) == (((v0 - v1) + 87)/30));1;53;;;;;
 (min(max((18 - ((v0/8) + (v1*16)))/6, 0), (min(((((v2 + v0) + 15)/8) - (v1*16)) - (v0/8), 11) + 22)/6) == min(max((18 - ((v0/8) + (v1*16)))/6, 0), (min(((((v2 + v0) + 15)/8) - (v1*16)) - (v0/8), 11) + 22)/6));1;858;;;;;
 (min(min(v0, 1966) + 37, (v1*4) + v0) == min(min(v0, 1966) + 37, (v1*4) + v0));1;52;;;;;
 ((min(((((v0 + v1) + -1)/63)*64) - (v2*1040), ((v1/63)*64) + 944) - ((v3*260) + (((v1/63)*64) + (v4*520)))) == (min(((((v0 + v1) + -1)/63)*64) - (v2*1040), ((v1/63)*64) + 944) - ((v3*260) + (((v1/63)*64) + (v4*520)))));1;98;;;;;
 (max(min(v0/4, ((min(((((v1 + v2) + 1)/2) - (v3*504)) - (v2/2), (((v4*16) + v5)*4) + 3)/4) + (v4*-16)) - v5), v6/4) == max(min(v0/4, ((min(((((v1 + v2) + 1)/2) - (v3*504)) - (v2/2), (((v4*16) + v5)*4) + 3)/4) + (v4*-16)) - v5), v6/4));1;140;;;;;
 (max(((v0*18) + ((v1*34) + v2))*2, (v3 + v4) + 8) == max(((v0*18) + ((v1*34) + v2))*2, (v3 + v4) + 8));1;60;;;;;
 ((min((v0/65)*64, 4) + (v1*4)) == (min((v0/65)*64, 4) + (v1*4)));1;63;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 50)/32) == (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 50)/32));1;268;;;;;
 ((((v0/2) + (v1*2)) - min(v0/2, ((min(((v2 + v0) + 1)/2, ((v0/2) + (v3*128)) + 127) + (v3*-128)) - (v4*12)) + 14)) == (((v0/2) + (v1*2)) - min(v0/2, ((min(((v2 + v0) + 1)/2, ((v0/2) + (v3*128)) + 127) + (v3*-128)) - (v4*12)) + 14)));1;117;;;;;
 (max(min(max(max(((v0 - ((v1/16)*16)) + 63)/64, 0 - (v1/64)), 0), (v2/4) + 1), min(min(((((v3 + v1) + -1)/16) - (v1/16)) + -3, v2)/4, ((min(v4 + v0, 2000) - ((v1/16)*16)) + -1)/64) + 1) == max(min(max(max(((v0 - ((v1/16)*16)) + 63)/64, 0 - (v1/64)), 0), (v2/4) + 1), min(min(((((v3 + v1) + -1)/16) - (v1/16)) + -3, v2)/4, ((min(v4 + v0, 2000) - ((v1/16)*16)) + -1)/64) + 1));1;168;;;;;
 (((v0*32) + (min(v1*64, 936) + (v2 + v3))) == ((v0*32) + (min(v1*64, 936) + (v2 + v3))));1;53;;;;;
 ((max((v0*250) - v1, -250) + (v2*63)) == (max((v0*250) - v1, -250) + (v2*63)));1;41;;;;;
 (((((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9))*8) + 796)/668) == ((((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9))*8) + 796)/668));1;243;;;;;
 (((((((v0 + v1) + 7)/8) - (v1/8))/32) + 1) == ((((((v0 + v1) + 7)/8) - (v1/8))/32) + 1));1;57;;;;;
 (min(((v0 + v1) + 63)/8, v2 + 30) == min(((v0 + v1) + 63)/8, v2 + 30));1;62;;;;;
 (min(6 - (max((v0/32) + ((v1*4) - (((v2 + v0) + -1)/32)), -3)*4), (min(((((v2 + v0) + -1)/32) - (v1*4)) - (v0/32), 3)*4) + 8) == min(6 - (max((v0/32) + ((v1*4) - (((v2 + v0) + -1)/32)), -3)*4), (min(((((v2 + v0) + -1)/32) - (v1*4)) - (v0/32), 3)*4) + 8));1;137;;;;;
 (((v0*8) + ((v1*127) + v2)) == ((v0*8) + ((v1*127) + v2)));1;89;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((62*4) + v0) + 3) >= (((((63 + 0) - 1)*4) + ((4 + 0) - 1)) + v0))) && (v1 <= (0 + v1))) && ((v1 + 124) >= (((125 + 0) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;166;;;;;
 ((max(max(min((v0*252) + v1, min(v2 + v1, 2000) + -252), -251) + 11, min(v0*252, v2 + -252) + v1) - (min(min(max(min((v0*252) + v1, min(v2 + v1, 2251) + -252), 0) + -11, (v0*252) + v1), (v2 + v1) + -252) + (v3*4))) == (max(max(min((v0*252) + v1, min(v2 + v1, 2000) + -252), -251) + 11, min(v0*252, v2 + -252) + v1) - (min(min(max(min((v0*252) + v1, min(v2 + v1, 2251) + -252), 0) + -11, (v0*252) + v1), (v2 + v1) + -252) + (v3*4))));1;175;;;;;
 (0 == ((0 + (32 - (max(min(v0, 8), 7)*4))) - 1));0;47;;;;;
 (max(min(v0, 263), min(max(min(v0, 263), 14) + (((v1 + 23)/4)*4), max(min(v0, 249), 0) + 20)) == max(min(v0, 263), min(max(min(v0, 263), 14) + (((v1 + 23)/4)*4), max(min(v0, 249), 0) + 20)));1;104;;;;;
 ((((((((v0 + v1) + -1)/500) - (v1/500))*512) + 744)/20) == (((((((v0 + v1) + -1)/500) - (v1/500))*512) + 744)/20));1;75;;;;;
 (max(min(min(min(min(((min(v2 + v3, max(min((v4*4) + v5, 1995), -4) + 5) - max(min((v4*4) + v5, 2000), 1)) + -3)/4, ((max(min((v4*4) + v5, 1995), -4) - max(min((v4*4) + v5, 2000), 1)) + 2)/4), ((max(min((v4*4) + v5, 1995), -4) - max(min((v4*4) + v5, 2000), 1)) + 2)/4), (min(v2 + v3, max(min((v4*4) + v5, 1995), -4) + 2) - max(min((v4*4) + v5, 2000), 1))/4), (0 + ((v6 + 9)/4)) - 1) + 1, min(max(max(max(max(((0 - max(min((v4*4) + v5, 2000), 1))/4) + 1, ((0 - max(min((v4*4) + v5, 2000), 1))/4) + 1), ((max(v3, 0) - max(min((v4*4) + v5, 2000), 1))/4) + 1), (1 - max(min((v4*4) + v5, 2000), 1))/4), 0), ((v6 + 9)/4) + 0)) <= min(max(max(max(max(((0 - max(min((v4*4) + v5, 2000), 1))/4) + 1, ((0 - max(min((v4*4) + v5, 2000), 1))/4) + 1), ((max(v3, 0) - max(min((v4*4) + v5, 2000), 1))/4) + 1), (1 - max(min((v4*4) + v5, 2000), 1))/4), 0), ((v6 + 9)/4) + 0));0;5597;;;;;
 (((((min(min((v1*92) + ((v2/65)*8), v3 + 14)*8, (v1*736) + (((v2/65)*64) + 7))*-1) + (min((v1*92) + ((((v2/65)*2)*4) + 78), v3)*8))/4)*4) == ((min(min((v1*92) + ((v2/65)*8), v3 + 14)*8, (v1*736) + (((v2/65)*64) + 7))*-1) + (min((v1*92) + ((((v2/65)*2)*4) + 78), v3)*8)));0;2305;;;;;
 (((((v0 - v1)/4) + (v2*-16)) + 15) == ((((v0 - v1)/4) + (v2*-16)) + 15));1;57;;;;;
 (((((((uint1)1 && ((-5 + v0) <= (-5 + v0))) && ((((6 + -5) - 1) + v0) >= (((6 + -5) - 1) + v0))) && ((0 + (((v1*500) + v2) + -5)) <= (-5 + ((v1*500) + v2)))) && ((3 + (((v1*500) + v2) + 496)) >= (((6 + -5) - 1) + (((v1*500) + v2) + 499)))) && (((v3*2) + v4) <= ((v3*2) + v4))) && (((v3*2) + v4) >= ((v3*2) + v4)));1;190;;;;;
 (((min(v0 - v1, min((min(v0 - v1, (v2*252) + 251)/4)*4, (v2*252) + 248) + 3)/4) + (v2*-63)) == ((min(v0 - v1, min((min(v0 - v1, (v2*252) + 251)/4)*4, (v2*252) + 248) + 3)/4) + (v2*-63)));1;100;;;;;
 (((((v0 + v1) + 7)/8) - ((((v2*2) + v3)*4) + v4)) == ((((v0 + v1) + 7)/8) - ((((v2*2) + v3)*4) + v4)));1;73;;;;;
 (min(((v0 + v1) + 747)/2, ((v0 + v2)/2) + (v3*128)) == min(((v0 + v1) + 747)/2, ((v0 + v2)/2) + (v3*128)));1;71;;;;;
 ((((max(min(((((((v0 + v1) + -1)/8)*8) + 5)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 13)/4) == (((max(min(((((((v0 + v1) + -1)/8)*8) + 5)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 13)/4));1;290;;;;;
 (min((v0*28) + v1, max(min(v2*8, 1994), -5) + 2) == min((v0*28) + v1, max(min(v2*8, 1994), -5) + 2));1;88;;;;;
 (max(min((((v0 + v1) + 13)/2) - (v1/2), v2 + 2) + 501, v3) == max(min((((v0 + v1) + 13)/2) - (v1/2), v2 + 2) + 501, v3));1;77;;;;;
 (((((v0*15) + v1)*8) + v2) < ((((v0*15) + v1)*8) + (v2 + 1)));1;77;;;;;
 (((((((uint1)1 && ((((0*4) + ((((min(v0, 4) + v1) + -4)/250) + (v2*4))) + 0) <= (0 + ((((min(v0, 4) + v1) + -4)/250) + (v2*4))))) && ((((0*4) + ((((min(v0, 4) + v1) + -4)/250) + (v2*4))) + 3) >= (((4 + 0) - 1) + ((((min(v0, 4) + v1) + -4)/250) + (v2*4))))) && (v3 <= v3)) && (v3 >= v3)) && (v4 <= v4)) && (v4 >= v4));1;159;;;;;
 ((min(max(v0, -26)*4, 27) + -30) >= (((min(max(v0, -26)*4, 27) + -30) + (33 - min(max(v0, -26)*4, 27))) - 1));0;95;;;;;
 (((min(v0 + 51, v1)*-2) + ((v0*2) + v2)) == ((min(v0 + 51, v1)*-2) + ((v0*2) + v2)));1;52;;;;;
 (0 == ((0 + (max(v0*4, -10) + 10)) - 1));0;89;;;;;
 (max(min(145, ((v1*37) + 37) - 1) + 1, min(max(0, v1*37), 37 + (v1*37))) <= min(max(0, v1*37), 37 + (v1*37)));0;984;;;;;
 ((max(min(v0, 1021), 22) + (v1*2)) == (max(min(v0, 1021), 22) + (v1*2)));1;46;;;;;
 (min(124 - (v0*63), (max(min(v1 + v2, 1997), -2) - ((v0*63) + v3)) + 5) == min(124 - (v0*63), (max(min(v1 + v2, 1997), -2) - ((v0*63) + v3)) + 5));1;80;;;;;
 ((max(max(min((v0*1000) + v1, min(v2 + v1, 2000) + -1000), -999) + 11, min(v0*1000, v2 + -1000) + v1) - min(min(max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + -11, (v0*1000) + v1), (v2 + v1) + -1000)) == (max(max(min((v0*1000) + v1, min(v2 + v1, 2000) + -1000), -999) + 11, min(v0*1000, v2 + -1000) + v1) - min(min(max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + -11, (v0*1000) + v1), (v2 + v1) + -1000)));1;164;;;;;
 (min(v0 - (v1*64), v2) == min(v0 - (v1*64), v2));1;40;;;;;
 (((v0 + 77)/64) != 0);0;396;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + v1) + 0))) && ((((v0*4) + v1) + 3) >= (((v0*4) + v1) + ((4 + 0) - 1)))) && (0 <= 0)) && (0 >= 0)) && (((v2*64) + 0) <= ((v2*64) + 0))) && (((v2*64) + ((64 + 0) - 1)) >= ((v2*64) + ((64 + 0) - 1))));1;178;;;;;
 ((((((max(((v0 + v1) + 7)/8, 255)/16) - (min(v1/8, 0)/16))*128) + 347)/35) >= 0);1;87;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*395) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*395) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*395) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*395) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*395) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*395) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*395) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*395) + ((v1*v2) + ((v3*v4) + v5))) - ((v6*v0) + ((v7*v2) + ((v8*v4) + v9)))]))));1;183;;;;;
 (min(min(v0 - v1, 218) + (v2*-8), min(min(v1 + 218, v0) - ((v2*8) + v1), -53) + 1) == min(min(v0 - v1, 218) + (v2*-8), min(min(v1 + 218, v0) - ((v2*8) + v1), -53) + 1));1;95;;;;;
 (min(v0 + v1, v2 + 224) == min(v0 + v1, v2 + 224));1;53;;;;;
 (min(((v0*33) + v1) + 29, v2) == min(((v0*33) + v1) + 29, v2));1;68;;;;;
 ((((((((v0 + v1) + 7)/8) - (v1/8))*2) + 77)/65) == (((((((v0 + v1) + 7)/8) - (v1/8))*2) + 77)/65));1;77;;;;;
 (min((((v0 + v1) + 189)/65)*8, (((v0 + v1)/65)*8) + -1) == min((((v0 + v1) + 189)/65)*8, (((v0 + v1)/65)*8) + -1));1;83;;;;;
 (max(v0/16, 0) >= ((max(v0/16, 0) + max(((v0 + 15)/16) - max(v0/16, 0), 0)) - 1));0;620;;;;;
 ((((v0*125) + v1) + 125) < ((((v0 + 1)*125) + v1) + -2));0;65;;;;;
 (((v0*3) + ((v1/8) - (((v2 + v1) + 23)/8))) == ((v0*3) + ((v1/8) - (((v2 + v1) + 23)/8))));1;50;;;;;
 ((max((((v0 + v1) + -1)/65)*8, 239) - (v2*2)) == (max((((v0 + v1) + -1)/65)*8, 239) - (v2*2)));1;62;;;;;
 (((((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37))*8) + 1155)/499) == ((((max(min((((v0 + v1) + 124)/125)*16, 204), -45) - max(min((v1/125)*16, 286), 37))*8) + 1155)/499));1;244;;;;;
 (((v0*-4) + (((((v1 + v2) + -1)/2) - (v3*16)) - (v2/2))) == ((v0*-4) + (((((v1 + v2) + -1)/2) - (v3*16)) - (v2/2))));1;80;;;;;
 ((((max(min((v1*-252) + v2, 252), 0) + (v1*252))/4)*4) == (max(min((v1*-252) + v2, 252), 0) + (v1*252)));0;878;;;;;
 (min(((v0 + v1) + 31)/32, ((v2*16) + ((v1/32) + (v3*32))) + 15) == min(((v0 + v1) + 31)/32, ((v2*16) + ((v1/32) + (v3*32))) + 15));1;75;;;;;
 (((((((uint1)1 && ((((((v0 + v1)*2) + 0)*4) + 0) <= ((v0 + v1)*8))) && ((((((v0 + v1)*2) + 1)*4) + 3) >= (((v0 + v1)*8) + 7))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (((3 + 0) - 1) >= ((3 + 0) - 1)));1;154;;;;;
 (min(max(min(v0, 2006), 7), max(min(v0, 2009), 10) + (v1*4)) == min(max(min(v0, 2006), 7), max(min(v0, 2009), 10) + (v1*4)));1;71;;;;;
 ((((((v0 + v1) + 314)/63) - ((v2/3)*8)) - (v1/63)) == (((((v0 + v1) + 314)/63) - ((v2/3)*8)) - (v1/63)));1;71;;;;;
 ((((v0 + 12)/96) + ((((v0 + 12) % 96) + 95)/96)) == (((v0 + 12)/96) + ((((v0 + 12) % 96) + 95)/96)));1;47;;;;;
 ((min((v0*63) + 62, v1) + (v2/8)) == (min((v0*63) + 62, v1) + (v2/8)));1;49;;;;;
 (min(v0*125, v1 + -125) == min(v0*125, v1 + -125));1;216;;;;;
 (min(v0*4, ((v1 + v2)*4) + -21) == min(v0*4, ((v1 + v2)*4) + -21));1;56;;;;;
 (min((min(v0, 1008) + 14)/16, ((1990 - v1)/16) + (v2*-63)) == min((min(v0, 1008) + 14)/16, ((1990 - v1)/16) + (v2*-63)));1;39;;;;;
 (((((((v0 + v1) + 440)/63) - (v1/63)) + 19)/12) == ((((((v0 + v1) + 440)/63) - (v1/63)) + 19)/12));1;119;;;;;
 (((v0*2) + (min(v1*16, v2 + -16) + v3)) == ((v0*2) + (min(v1*16, v2 + -16) + v3)));1;54;;;;;
 (((((max(min(max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0), min((min(v4*125, v5 + -125) + v3)/8, 249) + ((max(((max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0) - min((min(v4*125, v5 + -125) + v3)/8, 249)) + -7)/8, -1)*8) + 3))*8, ((min((min(v4*125, v5 + -125) + v3)/8, 249)*8) + (max(((max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0) - min((min(v4*125, v5 + -125) + v3)/8, 249)) + -7)/8, -1)*64)) + 14)*-1) + ((min(max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0), min((min(v4*125, v5 + -125) + v3)/8, 249) + 3)*2)*4))/4)*4) == ((max(min(max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0), min((min(v4*125, v5 + -125) + v3)/8, 249) + ((max(((max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0) - min((min(v4*125, v5 + -125) + v3)/8, 249)) + -7)/8, -1)*8) + 3))*8, ((min((min(v4*125, v5 + -125) + v3)/8, 249)*8) + (max(((max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0) - min((min(v4*125, v5 + -125) + v3)/8, 249)) + -7)/8, -1)*64)) + 14)*-1) + ((min(max((min(v4*125, v5 + -125) + (v3 + 124))/8, 0), min((min(v4*125, v5 + -125) + v3)/8, 249) + 3)*2)*4)));0;4321;;;;;
 (min(max(min((((v0 + v1) + 15)/16)*8, 990), -9), v2 + 42) == min(max(min((((v0 + v1) + 15)/16)*8, 990), -9), v2 + 42));1;85;;;;;
 ((v0 - ((v1/65)*8)) == (v0 - ((v1/65)*8)));1;30;;;;;
 (min(27 - (max(v0 - v1, -3)*2), (min(v1 - v0, 3)*2) + 27) == min(27 - (max(v0 - v1, -3)*2), (min(v1 - v0, 3)*2) + 27));1;82;;;;;
 ((max(min((((v0 + v1) + -1)/125)*8, 113), -11) - ((v2*4) + v3)) == (max(min((((v0 + v1) + -1)/125)*8, 113), -11) - ((v2*4) + v3)));1;75;;;;;
 (min(124 - (v0*3), max(((v1 + v2) + -1)/8, 249) - ((v0*3) + v3)) == min(124 - (v0*3), max(((v1 + v2) + -1)/8, 249) - ((v0*3) + v3)));1;85;;;;;
 ((((v0*-12)/3)*3) == (v0*-12));1;19;;;;;
 (((v0*-4) + (((((v1 + v2) + 1)/2) - (v3*8)) - (v2/2))) == ((v0*-4) + (((((v1 + v2) + 1)/2) - (v3*8)) - (v2/2))));1;62;;;;;
 (((max(((v0 + v1) + 23)/8, 249) - (v2*17)) - min(v1/8, 4)) == ((max(((v0 + v1) + 23)/8, 249) - (v2*17)) - min(v1/8, 4)));1;86;;;;;
 (((v0*127) + 106) == ((v0*127) + 106));1;31;;;;;
 (min((v0*4) + (v1 + v2), (v2 + v3) + -4) == min((v0*4) + (v1 + v2), (v2 + v3) + -4));1;47;;;;;
 (min(max(((v0 - (v1*2)) + 141)/128, 0), ((v2 - v1) + 63)/64) == min(max(((v0 - (v1*2)) + 141)/128, 0), ((v2 - v1) + 63)/64));1;63;;;;;
 (min(max(max((min(v0/8, 0)*8) + -4, v1), v2 + v1), ((min(v0/8, 0) + v3)*8) + 5) == min(max(max((min(v0/8, 0)*8) + -4, v1), v2 + v1), ((min(v0/8, 0) + v3)*8) + 5));1;100;;;;;
 (((((((uint1)1 && ((((v0*4) + ((v1*8) + v2)) + -6) <= (((v0*4) + ((v1*8) + v2)) + -6))) && ((((v0*4) + ((v1*8) + v2)) + -3) >= (((v0*4) + ((v1*8) + v2)) + -3))) && ((((((v3*2) + 0)*4) + 0) + -4047) <= ((v3*8) + -4047))) && ((((((v3*2) + 2013)*4) + 3) + -4047) >= ((v3*8) + 4008))) && (v4 <= v4)) && (v4 >= v4));1;197;;;;;
 ((((((v0 + v1) + -1)/63)*8) - ((((v2*3) + v3)*4) + v4)) == (((((v0 + v1) + -1)/63)*8) - ((((v2*3) + v3)*4) + v4)));1;80;;;;;
 (((((((uint1)1 && (((((0*4) + ((v0*8) + ((v1*12) + (v2*32)))) + 0) + -4) <= (((v0*8) + ((v2*32) + (v1*12))) + -4))) && ((((((7 - (max(v1*12, 20)/4))*4) + ((v0*8) + ((v1*12) + (v2*32)))) + 3) + -4) >= ((((v0*8) + (min(v1*12, 20) + (v2*32))) + 11) + -4))) && (((v3 + v4) + 58) <= (((0 + v4) + v3) + -4))) && (((v3 + v4) + 58) >= (((((63 + 0) - 1) + v4) + v3) + -4))) && (v5 <= v5)) && (v5 >= v5));0;373;;;;;
 ((((v0*8) + 139)/132) != 0);0;423;;;;;
 (((v0*8) + (((((max(min((v1*-20) + (max(v2, 0) - v0), 19)*-1, (v1*20) + (v0 - max(v2, 0)))*-8) + 10)/84)*84) + (v1*160))) == ((v0*8) + (((((max(min((v1*-20) + (max(v2, 0) - v0), 19)*-1, (v1*20) + (v0 - max(v2, 0)))*-8) + 10)/84)*84) + (v1*160))));1;131;;;;;
 (((((v0 + v1) + 125)/63) - (v2*4)) == ((((v0 + v1) + 125)/63) - (v2*4)));1;61;;;;;
 ((((-117 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*4)) == (((-117 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*4)));1;104;;;;;
 ((v0/8) <= (((v0 - 1)/8) - 1));0;62;;;;;
 (min(((v0*504) + v1) + 471, v2) == min(((v0*504) + v1) + 471, v2));1;60;;;;;
 ((v0 - ((v1 + v2)/8)) == (v0 - ((v1 + v2)/8)));1;49;;;;;
 ((min(v0*12, 52) + min((((v1 + v2) + 15)/16)*8, (((v2/16) + (v3*8))*8) + 45)) == (min(v0*12, 52) + min((((v1 + v2) + 15)/16)*8, (((v2/16) + (v3*8))*8) + 45)));1;118;;;;;
 (min(v0*8, ((max(min(v1, 249), 0) + min(max(min(min(((v2 + v3) + 7)/8, ((v3/8) + (v4*128)) + 127), 249), 0) - max(min((v3/8) + (v4*128), 249), 0), (v5*8) + 6))*8) + 3) == min(v0*8, ((max(min(v1, 249), 0) + min(max(min(min(((v2 + v3) + 7)/8, ((v3/8) + (v4*128)) + 127), 249), 0) - max(min((v3/8) + (v4*128), 249), 0), (v5*8) + 6))*8) + 3));1;399;;;;;
 (((((max((((v0 + v1) + -1)/65)*8, 239) - v2)*8) + 877)/708) == ((((max((((v0 + v1) + -1)/65)*8, 239) - v2)*8) + 877)/708));1;97;;;;;
 ((max(v0, 20) + (v1*10)) == (max(v0, 20) + (v1*10)));1;57;;;;;
 ((((v0 + v1)/8) + (v2*13)) == (((v0 + v1)/8) + (v2*13)));1;35;;;;;
 (min(((v0*4) + ((v1*24) + v2)) + 2, v3) == min(((v0*4) + ((v1*24) + v2)) + 2, v3));1;72;;;;;
 (0 == ((0 + (89 - max(v0*15, 74))) - 1));0;56;;;;;
 (min((max(min(v0 + v1, 1500), -499) - max(min(v0 + v1, 1999), 0)) + 5, v2) == min((max(min(v0 + v1, 1500), -499) - max(min(v0 + v1, 1999), 0)) + 5, v2));1;217;;;;;
 ((((v0*8) + 57)/18) != 0);0;502;;;;;
 ((max(min(v0, 1), -2) + -3) == (((max(min(v0, 1), -2) + -3) + (5 - max(min(v0, 1), -2))) - 1));0;86;;;;;
 ((((v0 + v1)*8) + 7) <= (((((v0 - 1) + v1)*8) + -5) - 1));0;79;;;;;
 (((v0*-108) + (v1 - v2)) == ((v0*-108) + (v1 - v2)));1;29;;;;;
 ((((max(min(v0*8, 3994), -5) + 19)/2) - ((max(min(v0*8, 4012), 13) + -19)/2)) == (((max(min(v0*8, 3994), -5) + 19)/2) - ((max(min(v0*8, 4012), 13) + -19)/2)));1;81;;;;;
 (((max(min(((v0 + v1) + 71)/8, 249), 0) - (v2*16)) - max(min(v1/8, 254), 5)) == ((max(min(((v0 + v1) + 71)/8, 249), 0) - (v2*16)) - max(min(v1/8, 254), 5)));1;192;;;;;
 (max(min(max(((v0 - (((v1*156) + v2)*8)) + 192)/180, 0), ((min(v3 - v2, 155)*8) + 190)/180), (min(min(v4 + v0, min(v5*8, (v4 + v0) + 181) + 14) - (((v1*156) + v2)*8), (min(v3 - v2, 155)*8) + 193) + -3)/180) == max(min(max(((v0 - (((v1*156) + v2)*8)) + 192)/180, 0), ((min(v3 - v2, 155)*8) + 190)/180), (min(min(v4 + v0, min(v5*8, (v4 + v0) + 181) + 14) - (((v1*156) + v2)*8), (min(v3 - v2, 155)*8) + 193) + -3)/180));1;241;;;;;
 (min((v0*4) + ((v1*8) + v2), v3 + 32) == min((v0*4) + ((v1*8) + v2), v3 + 32));1;68;;;;;
 (min(((((max(v0, 0) - v1) + 13)/4)*4) + v1, max(v0, 0) + 14) == min(((((max(v0, 0) - v1) + 13)/4)*4) + v1, max(v0, 0) + 14));1;82;;;;;
 ((((v0/63)*8) + -116) == (((((v0/63)*8) + -116) + ((v1*8) + 192)) - 1));0;94;;;;;
 ((min(v0, 1000) - (v1*252)) == (min(v0, 1000) - (v1*252)));1;51;;;;;
 (min(((v0 + v1) + -1)/2, ((v2*72) + v3) + -1) == min(((v0 + v1) + -1)/2, ((v2*72) + v3) + -1));1;63;;;;;
 (((min((((v0/250)*16) + v1)*4, ((((v2 + v0) + -1)/250)*64) + 85) + (v1*-4)) - ((v0/250)*64)) == ((min((((v0/250)*16) + v1)*4, ((((v2 + v0) + -1)/250)*64) + 85) + (v1*-4)) - ((v0/250)*64)));1;101;;;;;
 (max(min(max(max(max(((v0 - v1) + 7)/4, 1 - (v1/4)), 1 - (((max(min(v2/2, 999), 0)*2) + (v3*125))/4)), 0), (min(((max(min(((v4 + v2) + -1)/2, 999), 0)*2) - (v3*125)) - (max(min(v2/2, 999), 0)*2), 123) + 15)/4), (min(min(min(2000 - v1, min(min(v5 + v0, min(v6, 1995) + 5) - v1, min(v6 - v1, min(max(min(((v4 + v2) + -1)/2, 999), 0)*2, ((v3*125) + (max(min(v2/2, 999), 0)*2)) + 123) - ((max(min(v2/2, 999), 0)*2) + (v3*125))) + 5) + 3), 2000 - ((max(min(v2/2, 999), 0)*2) + (v3*125))), min(((max(min(((v4 + v2) + -1)/2, 999), 0)*2) - (v3*125)) - (max(min(v2/2, 999), 0)*2), 123) + 11)/4) + 1) == max(min(max(max(max(((v0 - v1) + 7)/4, 1 - (v1/4)), 1 - (((max(min(v2/2, 999), 0)*2) + (v3*125))/4)), 0), (min(((max(min(((v4 + v2) + -1)/2, 999), 0)*2) - (v3*125)) - (max(min(v2/2, 999), 0)*2), 123) + 15)/4), (min(min(min(2000 - v1, min(min(v5 + v0, min(v6, 1995) + 5) - v1, min(v6 - v1, min(max(min(((v4 + v2) + -1)/2, 999), 0)*2, ((v3*125) + (max(min(v2/2, 999), 0)*2)) + 123) - ((max(min(v2/2, 999), 0)*2) + (v3*125))) + 5) + 3), 2000 - ((max(min(v2/2, 999), 0)*2) + (v3*125))), min(((max(min(((v4 + v2) + -1)/2, 999), 0)*2) - (v3*125)) - (max(min(v2/2, 999), 0)*2), 123) + 11)/4) + 1));1;600;;;;;
 (min((((v0*19) + v1) + v2)*4, (v3*4) + 29) == min((((v0*19) + v1) + v2)*4, (v3*4) + 29));1;60;;;;;
 (min((v0*3) + (v1*8), (v2*8) + 82) == min((v0*3) + (v1*8), (v2*8) + 82));1;63;;;;;
 (min(((((v0 - v1) + 10)/4)*4) + v1, v0 + 11) == min(((((v0 - v1) + 10)/4)*4) + v1, v0 + 11));1;62;;;;;
 ((v0 + -37) >= (((v0 + -37) + (min((((v1/125) + v2)*16) + (v3 - ((v1/125)*16)), -77) + 78)) - 1));1;151;;;;;
 (((((((min((v4*125) + v3, (v5 + v3) + -125) + ((((min((v4*125) + v3, (v5 + v3) + -125) % 8) + 140)/72)*72))/8)*8) + min(((min(v4*125, v5 + -125) + (v3 + 124))/8)*8, ((((min(v4*125, v5 + -125) + ((((min((v4*125) + v3, (v5 + v3) + -125) % 8) + 140)/72)*72)) + v3)/8)*8) + 49))/4)*4) == ((((min((v4*125) + v3, (v5 + v3) + -125) + ((((min((v4*125) + v3, (v5 + v3) + -125) % 8) + 140)/72)*72))/8)*8) + min(((min(v4*125, v5 + -125) + (v3 + 124))/8)*8, ((((min(v4*125, v5 + -125) + ((((min((v4*125) + v3, (v5 + v3) + -125) % 8) + 140)/72)*72)) + v3)/8)*8) + 49)));0;5590;;;;;
 ((((max(v0, 0) - v1)/10) + 1) == (((max(v0, 0) - v1)/10) + 1));1;64;;;;;
 (((((((v0 + v1) + 62)/63) - (v2*12)) - (v3*4)) - (v1/63)) == ((((((v0 + v1) + 62)/63) - (v2*12)) - (v3*4)) - (v1/63)));1;67;;;;;
 (min(min(max(((v0 + v1) + 23)/8, 249) + 3, min(v1/8, 4) + (((v2*2) + v3)*2)), v4) == min(min(max(((v0 + v1) + 23)/8, 249) + 3, min(v1/8, 4) + (((v2*2) + v3)*2)), v4));1;124;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + -1)/63) - (v2*2)) - (v1/63), 1)*2) + 2)) - 1));0;243;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -3) <= ((((0*4) + v0) + 0) + -3))) && (((((17*4) + v0) + 3) + -3) >= ((((17*4) + v0) + ((4 + 0) - 1)) + -3))) && ((-5 + v1) <= (-5 + v1))) && ((((9 + -5) - 1) + v1) >= (((9 + -5) - 1) + v1))) && (v2 <= v2)) && (v2 >= v2));1;201;;;;;
 ((((v0*-128)/32)*32) == (v0*-128));1;50;;;;;
 (((v0*8) + -56) == ((((v0*8) + -56) + ((min(v1, 0)*8) + 20)) - 1));0;89;;;;;
 ((((v0*2) + v1) - min(v1 + 104, v2)) == (((v0*2) + v1) - min(v1 + 104, v2)));1;52;;;;;
 ((min(max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1), v2) + 63) == (min(max(min((((v0 + v1) + -1)/125)*8, 113), -11) - max(min((v1/125)*8, 125), 1), v2) + 63));1;221;;;;;
 ((v0 - max(min((v1*32) + v2, 1999), 0)) == (v0 - max(min((v1*32) + v2, 1999), 0)));1;52;;;;;
 (0 == ((0 + (125 - max(v0*16, 109))) - 1));0;308;;;;;
 (min((max(min((v0/8)*8, 2082), 83) + (v1*4)) + 1, v2) == min((max(min((v0/8)*8, 2082), 83) + (v1*4)) + 1, v2));1;88;;;;;
 ((max(min((v0/125)*8, 125), 1) + (v1*64)) == (max(min((v0/125)*8, 125), 1) + (v1*64)));1;57;;;;;
 (min(((v0*250) + (min(v1*64, 186) + ((v2*1000) + v3))) + 64, min((v2*1000) + 1000, v4) + v3) == min(((v0*250) + (min(v1*64, 186) + ((v2*1000) + v3))) + 64, min((v2*1000) + 1000, v4) + v3));1;694;;;;;
 (min(v0*8, (v1*12) + (v2*8)) == min(v0*8, (v1*12) + (v2*8)));1;47;;;;;
 (((((((uint1)1 && (((((((v0*2) + v1)*2) + -1) + 0) + -255) <= ((-1 + (((v0*2) + v1)*2)) + -255))) && (((((((v0*2) + v1)*2) + ((5 + -1) - 1)) + 3) + -255) >= ((((5 + -1) - 1) + ((((v0*2) + v1)*2) + 3)) + -255))) && (((v2 + v3) % 8) <= ((v2 + v3) % 8))) && (((v2 + v3) % 8) >= ((v2 + v3) % 8))) && (v4 <= v4)) && (v4 >= v4));1;231;;;;;
 ((((((v0 + v1) + 7)/8) - (v2*8)) - (v1/8)) == (((((v0 + v1) + 7)/8) - (v2*8)) - (v1/8)));1;37;;;;;
 (min(max(min(((v0 + v1) + 3)/4, 499), 0), v2 + 60) == min(max(min(((v0 + v1) + 3)/4, 499), 0), v2 + 60));1;47;;;;;
 ((max(min(v0 + v1, 2001), 2) + (v2*4)) == (max(min(v0 + v1, 2001), 2) + (v2*4)));1;52;;;;;
 (min(((v0 + v1) + 129)/2, v2 + 31) == min(((v0 + v1) + 129)/2, v2 + 31));1;45;;;;;
 (((min(((((v0 + v1) + -1)/63)*8) - (v2*132), (((v1 + -5)/63)*8) + 124)*-2) + ((((v1 + -5)/63)*16) + v3)) == ((min(((((v0 + v1) + -1)/63)*8) - (v2*132), (((v1 + -5)/63)*8) + 124)*-2) + ((((v1 + -5)/63)*16) + v3)));1;101;;;;;
 (((((min(((min(v0*125, v1 + -125) + v2)/500)*64, (min(((min(v0*125, v1 + -125) + v2)/500)*8, (((min(v0*125, v1 + -125) + (v2 + 124))/500)*8) + 10)*8) + 5)*-1) + (((min(v0*125, v1 + -125) + v2)/500)*64))/4)*4) == ((min(((min(v0*125, v1 + -125) + v2)/500)*64, (min(((min(v0*125, v1 + -125) + v2)/500)*8, (((min(v0*125, v1 + -125) + (v2 + 124))/500)*8) + 10)*8) + 5)*-1) + (((min(v0*125, v1 + -125) + v2)/500)*64)));1;259;;;;;
 ((max(v0 - v1, (v1 - v0) + 331) + -324) >= 0);0;488;;;;;
 (((((((uint1)1 && ((v4 + v5) <= (v4 + v5))) && ((v4 + v5) >= (v4 + v5))) && ((((0*4) + ((v1*32) + ((v2*64) + v3))) + 0) <= (((v2*64) + v3) + (v1*32)))) && ((((0*4) + (((v1*32) + ((v2*64) + v3)) + 28)) + 3) >= (((v2*64) + v3) + ((v1*32) + 31)))) && (v6 <= v6)) && (v6 >= v6));0;2110;;;;;
 ((min(((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) - (v3*8)) + 3, v4) - ((v5*4) + v4)) == (min(((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) - (v3*8)) + 3, v4) - ((v5*4) + v4)));1;110;;;;;
 (min((((v0 + v1) + 7)/8) - ((v2*32) + v3), 125 - (v2*32)) == min((((v0 + v1) + 7)/8) - ((v2*32) + v3), 125 - (v2*32)));1;70;;;;;
 (-508 == ((-508 + (516 - max(v0*3, 5))) - 1));0;57;;;;;
 (((min(min((v2*64) + ((((v3*156) + v4)*8) + 52), ((min((v2*64) + (((v4 + (v3*156))*8) + 52), v1*8)/4)*4) + 2), v1*8)/4)*4) == min(min((v2*64) + ((((v3*156) + v4)*8) + 52), ((min((v2*64) + (((v4 + (v3*156))*8) + 52), v1*8)/4)*4) + 2), v1*8));0;2165;;;;;
 ((((max((((v0 + v1) + -1)/2)*2, 1997) - min(v1, 0)) + 254)/252) >= 0);1;63;;;;;
 ((((v0*-128)/64)*64) == (v0*-128));1;47;;;;;
 (min(((v0*2) + v1)*16, (v1*16) + 294) == min(((v0*2) + v1)*16, (v1*16) + 294));1;59;;;;;
 ((((((v0 + v1) + -1)/8) - (v2*64)) - (v1/8)) == (((((v0 + v1) + -1)/8) - (v2*64)) - (v1/8)));1;93;;;;;
 ((max(min(v0/2, 1003)*2, 7) + (v1*126)) == (max(min(v0/2, 1003)*2, 7) + (v1*126)));1;55;;;;;
 (((((((uint1)1 && (((v0 + 0) + -14) <= (v0 + -14))) && (((v0 + 3) + -14) >= (v0 + -11))) && (((max(min(v1, 2000), 1) + -5)/4) <= ((max(min(v1, 2000), 1) + -5)/4))) && ((((max(min(v1, 2000), 1) + v2) + 43)/4) >= (((max(min(v1, 2000), 1) + v2) + 43)/4))) && (v3 <= v3)) && (v3 >= v3));1;198;;;;;
 (((v0*32) + ((v1*126) + v2)) == ((v0*32) + ((v1*126) + v2)));1;37;;;;;
 ((((53 - v0)/4) + ((((v1 + v2) + -1)/250)*8)) == (((53 - v0)/4) + ((((v1 + v2) + -1)/250)*8)));1;53;;;;;
 (((min((min((v1*50) + ((v2/1000)*256), ((((v3 + v2) + -1)/1000)*256) + 482)*8) + 370, (((((min((v1*-50) + (((((v3 + v2) + -1)/1000)*256) - ((v2/1000)*256)), -482)*8) + 4256)/31)*31) + (v1*400)) + (((v2/1000)*256)*8))/2)*2) == min((min((v1*50) + ((v2/1000)*256), ((((v3 + v2) + -1)/1000)*256) + 482)*8) + 370, (((((min((v1*-50) + (((((v3 + v2) + -1)/1000)*256) - ((v2/1000)*256)), -482)*8) + 4256)/31)*31) + (v1*400)) + (((v2/1000)*256)*8)));0;3211;;;;;
 ((max(min(((v0 + v1)/2) + (v2*8), 999), 0) + max(v3, 0)) == (max(min(((v0 + v1)/2) + (v2*8), 999), 0) + max(v3, 0)));1;63;;;;;
 ((min(v0, 21) + (v1*8)) == (min(v0, 21) + (v1*8)));1;28;;;;;
 (min(((v0*1008) + v1) + 1007, v2) == min(((v0*1008) + v1) + 1007, v2));1;50;;;;;
 (((v0/2) + (v1*3)) == ((v0/2) + (v1*3)));1;54;;;;;
 (max(min(max((v0/32)*4, 77), (((v0/32) + v1)*4) + 109), min(((v0/32) + v1)*4, 217) + 109) == max(min(max((v0/32)*4, 77), (((v0/32) + v1)*4) + 109), min(((v0/32) + v1)*4, 217) + 109));1;121;;;;;
 ((v0 - (v1*496)) == (v0 - (v1*496)));1;45;;;;;
 (((((((v0 + v1) + 249)/250) - (v1/250))/5) + 1) == ((((((v0 + v1) + 249)/250) - (v1/250))/5) + 1));1;79;;;;;
 (min(max(max(min(v0/4, 0)*4, v1), v2 + v1), ((min(v0/4, 0) + v3)*4) + 8) == min(max(max(min(v0/4, 0)*4, v1), v2 + v1), ((min(v0/4, 0) + v3)*4) + 8));1;55;;;;;
 (max((min(max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0), v2)*8) + 66, v3) == max((min(max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0), v2)*8) + 66, v3));1;252;;;;;
 (min(((v0/63) + (((v1 + 3)/2)*2))*8, ((((v2 + v0) + 62)/63)*8) + 9) == min(((v0/63) + (((v1 + 3)/2)*2))*8, ((((v2 + v0) + 62)/63)*8) + 9));1;1461;;;;;
 (((v0*4) + ((v1*64) + v2)) == ((v0*4) + ((v1*64) + v2)));1;31;;;;;
 (((v0*36) + ((v1*128) + (v2 + v3))) == ((v0*36) + ((v1*128) + (v2 + v3))));1;43;;;;;
 (0 == ((0 + ((((v0 + v1) % 16) + 188)/64)) - 1));0;80;;;;;
 ((v0 + 76) == (v0 + 76));1;12;;;;;
 (((((((v0 + v1) % 4) + 15)/16)*4) + (((v0 + v1)/4) + (v2*4))) == ((((((v0 + v1) % 4) + 15)/16)*4) + (((v0 + v1)/4) + (v2*4))));1;78;;;;;
 (((max((v0 + -2001)/2, 0)/63) + (v1*4)) == ((max((v0 + -2001)/2, 0)/63) + (v1*4)));1;56;;;;;
 ((v0 + 1) != 0);0;1211;;;;;
 (min(((v0 + v1)/32) + ((v2/4)*4), v3 + 1) == min(((v0 + v1)/32) + ((v2/4)*4), v3 + 1));1;61;;;;;
 (((v0 + v1) + -294) < (((v0 + 1) + v1) + -301));0;1100;;;;;
 (((v0*16) - v1) == ((v0*16) - v1));1;28;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (v2*16)) + 2) == min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (v2*16)) + 2));1;98;;;;;
 ((((v0*-21)/7)*7) == (v0*-21));1;32;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/128) + 1) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0))/128) + 1));1;255;;;;;
 (((v0*36) + ((v1*127) + (v2 + v3))) == ((v0*36) + ((v1*127) + (v2 + v3))));1;68;;;;;
 (min(((((v0*3) + ((v1*76) + v2))*2) + v3)*4, (min((v0*3) + ((v1*76) + v2), v4 + 10)*8) + 24) == min(((((v0*3) + ((v1*76) + v2))*2) + v3)*4, (min((v0*3) + ((v1*76) + v2), v4 + 10)*8) + 24));1;148;;;;;
 ((max(min((v0/32)*32, 2044), 45) + (v1*504)) == (max(min((v0/32)*32, 2044), 45) + (v1*504)));1;50;;;;;
 (max(min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), (min(v4, 250) - v0) + -8)/8) + 1) == max(min(0 - min(v0/8, 0), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)/8) + 1), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), (min(v4, 250) - v0) + -8)/8) + 1));1;427;;;;;
 (min(((v0 + v1) + 180)/8, v2 + -2) == min(((v0 + v1) + 180)/8, v2 + -2));1;63;;;;;
 (min(251 - (((v0*16) + v1)*4), v2 - ((((v0*16) + v1)*4) + ((v3*252) + v4))) == min(251 - (((v0*16) + v1)*4), v2 - ((((v0*16) + v1)*4) + ((v3*252) + v4))));1;81;;;;;
 (max(min(max(((v0 - (v1*8)) + 51)/32, 0), ((max((((v2 + v3) + -1)/65)*8, 239) - v1)/4) + 6), min(min((((v4 + v0) - (v1*8)) + -14)/32, ((max((((v2 + v3) + -1)/65)*8, 239) - v1) + 17)/4), ((max((((v2 + v3) + -1)/65)*8, 239) - v1)/4) + 5) + 1) == max(min(max(((v0 - (v1*8)) + 51)/32, 0), ((max((((v2 + v3) + -1)/65)*8, 239) - v1)/4) + 6), min(min((((v4 + v0) - (v1*8)) + -14)/32, ((max((((v2 + v3) + -1)/65)*8, 239) - v1) + 17)/4), ((max((((v2 + v3) + -1)/65)*8, 239) - v1)/4) + 5) + 1));1;247;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/128) + 1) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/128) + 1));1;293;;;;;
 ((max(min(v0, 999), 0) - ((v1*2) + v2)) == (max(min(v0, 999), 0) - ((v1*2) + v2)));1;369;;;;;
 (min(((v0*500) + ((v1*1000) + v2)) + 500, v3 + v2) == min(((v0*500) + ((v1*1000) + v2)) + 500, v3 + v2));1;55;;;;;
 (((v0 + 81)/66) != 0);0;365;;;;;
 ((min(v0*128, 382) + ((min((v1*252) + 248, v2) + (v3/2))*2)) == (min(v0*128, 382) + ((min((v1*252) + 248, v2) + (v3/2))*2)));1;58;;;;;
 (((min(((v0 + v1) + -1)/65, ((v1/65) + (min(min((v2*4) + 3, v3)/4, v2)*4)) + 3) - (v2*4)) - ((v1/65) + v4)) == ((min(((v0 + v1) + -1)/65, ((v1/65) + (min(min((v2*4) + 3, v3)/4, v2)*4)) + 3) - (v2*4)) - ((v1/65) + v4)));1;126;;;;;
 (max(min(max((219 - (v0*8))/137, 0), ((min(((((v1 + v2) + 87)/8) - ((v3/2)*34)) - (v2/8), 23)*8) + 225)/137), (min(1946 - (v0*8), (min(((((v1 + v2) + 87)/8) - ((v3/2)*34)) - (v2/8), 23)*8) + 88)/137) + 1) == max(min(max((219 - (v0*8))/137, 0), ((min(((((v1 + v2) + 87)/8) - ((v3/2)*34)) - (v2/8), 23)*8) + 225)/137), (min(1946 - (v0*8), (min(((((v1 + v2) + 87)/8) - ((v3/2)*34)) - (v2/8), 23)*8) + 88)/137) + 1));1;832;;;;;
 (((min((max(min((min(v3*125, v4 + -125) + v2)/2, 999), 0) - max(min((min(v3*125, v4 + -125) + v2)/2, 937), -62))*-1, max(min((min(v3*125, v4 + -125) + v2)/2, 937), -62) - max(min((min(v3*125, v4 + -125) + v2)/2, 999), 0))/2)*2) == min((max(min((min(v3*125, v4 + -125) + v2)/2, 999), 0) - max(min((min(v3*125, v4 + -125) + v2)/2, 937), -62))*-1, max(min((min(v3*125, v4 + -125) + v2)/2, 937), -62) - max(min((min(v3*125, v4 + -125) + v2)/2, 999), 0)));0;2059;;;;;
 (min(((min(max(min(((v0 + v1) + -1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*32)) + 31) + (v2*-32)) - max(min(v1/2, 999), 0)) + -5, v3) == min(((min(max(min(((v0 + v1) + -1)/2, 999), 0), (max(min(v1/2, 999), 0) + (v2*32)) + 31) + (v2*-32)) - max(min(v1/2, 999), 0)) + -5, v3));1;163;;;;;
 (min((v0*2) + 385, v1) == min((v0*2) + 385, v1));1;46;;;;;
 ((max(min(v0, 7), -6) + -9) >= (((max(min(v0, 7), -6) + -9) + (11 - max(min(v0, 7), -6))) - 1));0;88;;;;;
 (((v0*8) + -16) == ((((v0*8) + -16) + ((min(v1, 9)*8) + 64)) - 1));0;95;;;;;
 (((v0*8) + 4) < (min(max(v1*8, ((v0 + 1)*8) + 18), ((v0 + 1)*8) + 16) + -21));0;122;;;;;
 (((v0 + 403)/252) != 0);0;360;;;;;
 (max((((v0 + v1) + 15)/4) - ((v2*12) + v3), ((((v0 + v1) + 7)/4) - ((v4*36) + ((v1/4) + (v2*12)))) + 2) == max((((v0 + v1) + 15)/4) - ((v2*12) + v3), ((((v0 + v1) + 7)/4) - ((v4*36) + ((v1/4) + (v2*12)))) + 2));1;137;;;;;
 (((v0*8) + -5) == ((((v0*8) + -5) + ((min(v1, 1)*8) + 13)) - 1));0;80;;;;;
 ((max(v0*8, -9) + (v1/8)) == (max(v0*8, -9) + (v1/8)));1;63;;;;;
 (-4 == ((-4 + (254 - max(min(((v0*4) + v1)*8, 254), 244))) - 1));0;110;;;;;
 (((v0 + 14)/9) != 0);0;353;;;;;
 ((v0 + -115) >= (((v0 + -115) + (min(v1 - (max(max(min(v2/2, 1006), 7) + ((v3*64) - max(min(((v4 + v2) + 1)/2, 999), 0)), -39)*8), -195) + 196)) - 1));1;294;;;;;
 (((max(min(v0, 0), -62)*8) + -5) == ((((max(min(v0, 0), -62)*8) + -5) + (9 - (max(min(v0, 0), -62)*8))) - 1));0;110;;;;;
 (min(((v0 + v1) + -17)/8, ((v1/8) + (v2*12)) + -5) == min(((v0 + v1) + -17)/8, ((v1/8) + (v2*12)) + -5));1;64;;;;;
 (min(max(((v0 - (v1*2)) + 155)/64, 0), ((v2 - v1) + 31)/32) == min(max(((v0 - (v1*2)) + 155)/64, 0), ((v2 - v1) + 31)/32));1;92;;;;;
 (0 == ((0 + ((((v0 + v1) % 4) + 271)/16)) - 1));0;58;;;;;
 (min(((v0 + v1) + 64)/65, v2 + 3) == min(((v0 + v1) + 64)/65, v2 + 3));1;82;;;;;
 (((((((v0 + v1) + -1)/63) - (v1/63))*2) + 4) == ((((((v0 + v1) + -1)/63) - (v1/63))*2) + 4));1;54;;;;;
 (((v0*112) + ((v1*4) + v2)) == ((v0*112) + ((v1*4) + v2)));1;36;;;;;
 (min((v0*4) + v1, (v2*8) + 74) == min((v0*4) + v1, (v2*8) + 74));1;39;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + 15)/8) - (v2*4)) - (v1/8), -1)*2) + 10)) - 1));0;139;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (0 <= 0)) && (0 >= 0)) && ((0 + v1) <= (0 + v1))) && ((3 + v1) >= (((4 + 0) - 1) + v1)));1;81;;;;;
 ((((min(((min((v4*1000) + (v3*1000), v5 + -1000) + v2)/8)*8, (((min((v4*1000) + (v3*1000), v5 + -1000) + (v2 + 7))/8)*8) + 7)*-1)/8)*8) == (min(((min((v4*1000) + (v3*1000), v5 + -1000) + v2)/8)*8, (((min((v4*1000) + (v3*1000), v5 + -1000) + (v2 + 7))/8)*8) + 7)*-1));0;2005;;;;;
 (((v0 + 41)/36) != 0);0;350;;;;;
 (min((v0 + v1) + 121, v2) == min((v0 + v1) + 121, v2));1;29;;;;;
 (((((((v0 + v1) + 63)/32) - (v1/32)) + 29)/24) == ((((((v0 + v1) + 63)/32) - (v1/32)) + 29)/24));1;98;;;;;
 (((((max(v0, 0) - v1)*8) + 630)/620) == ((((max(v0, 0) - v1)*8) + 630)/620));1;86;;;;;
 (max(0, min(((v0 % 63) + 60)/252, (0 + (((v0 % 63) + 501)/252)) - 1) + 1) <= 0);0;80;;;;;
 (min(((v0 + v1) + 131)/4, ((v2*4) + ((v3*20) + (((v0 + v1)/4) + (min(v4, 1)*2)))) + 1) == min(((v0 + v1) + 131)/4, ((v2*4) + ((v3*20) + (((v0 + v1)/4) + (min(v4, 1)*2)))) + 1));1;100;;;;;
 ((max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (((max(min(min(v1/16, 124)*2, 1), -1)*2) + v2)*4)) == (max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (((max(min(min(v1/16, 124)*2, 1), -1)*2) + v2)*4)));1;130;;;;;
 (min((v0*32) + v1, min(v2, 2023) + -24) == min((v0*32) + v1, min(v2, 2023) + -24));1;50;;;;;
 (((((v0 + v1)/32)*16) + -37) == ((((((v0 + v1)/32)*16) + -37) + ((v2*16) + 83)) - 1));0;119;;;;;
 (((v0 + 255)/251) != 0);0;341;;;;;
 (((v0*36) + (((v1 + v2)/8)*8)) == ((v0*36) + (((v1 + v2)/8)*8)));1;74;;;;;
 (((((v0 - v1)*16) + 977)/60) == ((((v0 - v1)*16) + 977)/60));1;65;;;;;
 (min(252 - (((v0*16) + v1)*4), v2 - (((v3*63) + ((v0*16) + v1))*4)) == min(252 - (((v0*16) + v1)*4), v2 - (((v3*63) + ((v0*16) + v1))*4)));1;85;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + 63)/8) - (v2*17)) - (v1/8), 15)*2) + 16)) - 1));0;153;;;;;
 (((((((uint1)1 && (((0 + (min(v0, 4) + v1)) + -7) <= ((min(v0, 4) + v1) + -7))) && (((3 + ((((max(v0, 4) + 5)/4)*4) + (min(v0, 4) + v1))) + -7) >= ((v0 + v1) + 2))) && (((v2 + v3) + 3) <= ((v2 + v3) + 3))) && (((v2 + v3) + 3) >= ((v2 + v3) + 3))) && (0 <= 0)) && (9 >= 9));0;1056;;;;;
 ((max((((v0 + v1) + -1)/65)*8, 239) - ((v2*16) + v3)) == (max((((v0 + v1) + -1)/65)*8, 239) - ((v2*16) + v3)));1;38;;;;;
 (max(min(v0, 1999), min(max(min(v1 + v0, 2000), 1), max(min(v0, 1999), 0) + (((v2 + 3)/4)*4)) - max(v2, 1)) == max(min(v0, 1999), min(max(min(v1 + v0, 2000), 1), max(min(v0, 1999), 0) + (((v2 + 3)/4)*4)) - max(v2, 1)));1;118;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 259)/252) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 259)/252));1;139;;;;;
 (((max(min(v0, 13), -18)*8) + -107) == ((((max(min(v0, 13), -18)*8) + -107) + (113 - (max(min(v0, 13), -18)*8))) - 1));0;130;;;;;
 ((max(min(v0, 249), 0) - max(min(((v1 + v2) + 93)/8, 249), 0)) == (max(min(v0, 249), 0) - max(min(((v1 + v2) + 93)/8, 249), 0)));1;193;;;;;
 (((v0*117) + (v1*32)) == ((v0*117) + (v1*32)));1;45;;;;;
 (((((((v0 + v1) + 15)/8) - (v1/8))/4) + 2) == ((((((v0 + v1) + 15)/8) - (v1/8))/4) + 2));1;60;;;;;
 (min(((v0 + v1) + 140)/8, ((((v0 + v1) % 8) + 140)/8) + ((v0 + v1)/8)) == min(((v0 + v1) + 140)/8, ((((v0 + v1) % 8) + 140)/8) + ((v0 + v1)/8)));1;84;;;;;
 (((((v0 + v1) + 37)/2) - ((v2*2) + (((v0 + v1)/2) + (v3*10)))) == ((((v0 + v1) + 37)/2) - ((v2*2) + (((v0 + v1)/2) + (v3*10)))));1;78;;;;;
 (0 >= ((0 + ((((min((((((v0 + v1) + 7)/8) - (v2*128)) - (v3*32)) - (v1/8), (min((v4*3) + v5, 7)*4) + 3)/4) - v5) - (v4*3)) + 1)) - 1));0;1886;;;;;
 ((min((v0*13) + ((v1/2) + (v2*24)), (min(v2*24, 43) + (v1/2)) + 14) + (v3*63)) == (min((v0*13) + ((v1/2) + (v2*24)), (min(v2*24, 43) + (v1/2)) + 14) + (v3*63)));1;86;;;;;
 (((v0*76) + (max(min((v1 + v2)/8, 249), 0)*8)) == ((v0*76) + (max(min((v1 + v2)/8, 249), 0)*8)));1;61;;;;;
 ((max(min(v0 + v1, 1879), -120) + (v2*4)) == (max(min(v0 + v1, 1879), -120) + (v2*4)));1;42;;;;;
 ((((v0*2) + v1) - min(((v2*-6) + (v3 - (v4*18))) + 43, v1)) == (((v0*2) + v1) - min(((v2*-6) + (v3 - (v4*18))) + 43, v1)));1;61;;;;;
 (min(((v0 + v1) + -1)/4, ((v1/4) + (v2*63)) + 62) == min(((v0 + v1) + -1)/4, ((v1/4) + (v2*63)) + 62));1;61;;;;;
 (0 >= ((0 + ((max(min(v0, 249), 0) + 9)/4)) - 1));0;68;;;;;
 (((max(min(((v0/16) + v1)*32, 3986), -13) - (v2*1991)) - max(min((v0/16)*32, 4044), 45)) == ((max(min(((v0/16) + v1)*32, 3986), -13) - (v2*1991)) - max(min((v0/16)*32, 4044), 45)));1;82;;;;;
 (((max(min(v0, 250), 1)*8) + -10) == ((((max(min(v0, 250), 1)*8) + -10) + ((v1*8) + 48)) - 1));0;113;;;;;
 (((((((uint1)1 && (max(min(v0, 249), 0) <= max(min(v0, 249), 0))) && (max(min(v0, 249), 0) >= max(min(v0, 249), 0))) && (v1 <= v1)) && (v1 >= v1)) && (((((v2*2) + v3)*4) + 0) <= (((v2*2) + v3)*4))) && (((((v2*2) + v3)*4) + 3) >= ((((v2*2) + v3)*4) + 3)));1;138;;;;;
 (min(((((v0 + v1) - (v2*128)) - (v3*64)) - (v4*32)) - v1, min(((v0 + v1) - (v2*128)) - ((((v3*2) + v4)*32) + v1), 32) + 3) == min(((((v0 + v1) - (v2*128)) - (v3*64)) - (v4*32)) - v1, min(((v0 + v1) - (v2*128)) - ((((v3*2) + v4)*32) + v1), 32) + 3));1;133;;;;;
 (min(v0*8, (((max(min(v1 + v2, 1999), 0)/16) - ((max(min(v2, 2002), 3) + -3)/16))*8) + 3) == min(v0*8, (((max(min(v1 + v2, 1999), 0)/16) - ((max(min(v2, 2002), 3) + -3)/16))*8) + 3));1;112;;;;;
 ((min((v0 + v1) - (v2*252), v1 + 252) - ((v3*4) + v1)) == (min((v0 + v1) - (v2*252), v1 + 252) - ((v3*4) + v1)));1;54;;;;;
 (min((v0/8)*8, (((v0/8) + v1)*8) + 3) == min((v0/8)*8, (((v0/8) + v1)*8) + 3));1;43;;;;;
 (min(((v0 + v1) + 71)/8, v2 + 2) == min(((v0 + v1) + 71)/8, v2 + 2));1;71;;;;;
 ((min(max((((v0 + v1) + -1)/65)*8, 239) - (v2*16), v3 + 5) - ((v4*4) + v3)) == (min(max((((v0 + v1) + -1)/65)*8, 239) - (v2*16), v3 + 5) - ((v4*4) + v3)));1;105;;;;;
 (min((((v0 + v1) + -1)/8)*8, ((v2*1004) + ((v1/8)*8)) + 241) == min((((v0 + v1) + -1)/8)*8, ((v2*1004) + ((v1/8)*8)) + 241));1;69;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*2) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*2) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*2) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*2) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*2) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*2) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*2) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*2) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))]))));1;198;;;;;
 (min((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*64, (v2*64) + 1075) == min((max(min(((v0 + v1) + -1)/63, 31), 0) - max(min(v1/63, 31), 0))*64, (v2*64) + 1075));1;250;;;;;
 ((((v0*-504)/6)*6) == (v0*-504));1;31;;;;;
 (min(max(min(v0, 2100), 101) + (v1*4), max(min(v0, 2030), 31) + 67) == min(max(min(v0, 2100), 101) + (v1*4), max(min(v0, 2030), 31) + 67));1;89;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 42)/15) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 42)/15));1;282;;;;;
 ((((max(min(v0 + v1, 1999), 0) - max(min(v1, 2002), 3)) + 503)/500) == (((max(min(v0 + v1, 1999), 0) - max(min(v1, 2002), 3)) + 503)/500));1;159;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 268)/250) == (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2012), 13)) + 268)/250));1;230;;;;;
 (min((v0*500) + (v1 + v2), v3 + 253) == min((v0*500) + (v1 + v2), v3 + 253));1;63;;;;;
 (min(35 - (((v0*2) + v1)*4), (((((v2 + v3) + -1)/63)*8) - ((((v0*2) + v1)*4) + v4)) + 18) == min(35 - (((v0*2) + v1)*4), (((((v2 + v3) + -1)/63)*8) - ((((v0*2) + v1)*4) + v4)) + 18));1;111;;;;;
 ((min(v0*96, 571) + (v1*3)) == (min(v0*96, 571) + (v1*3)));1;32;;;;;
 (((v0/2) + 1) <= (((v0 - 1)/2) - 1));0;53;;;;;
 (min((v0*117) + (v1*32), (v2*32) + 127) == min((v0*117) + (v1*32), (v2*32) + 127));1;51;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2002), 3)) + 139)/126) == (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2002), 3)) + 139)/126));1;201;;;;;
 (((((v0 + v1) + 7)/8) - v2) == ((((v0 + v1) + 7)/8) - v2));1;82;;;;;
 (((((((v0 + v1) + -1)/63) - (v1/63))/4) + 1) == ((((((v0 + v1) + -1)/63) - (v1/63))/4) + 1));1;64;;;;;
 ((((v0 + v1) - (v2*8)) - ((v3*4) + v1)) == (((v0 + v1) - (v2*8)) - ((v3*4) + v1)));1;68;;;;;
 (max(-4 - (max(min(v0 - (v1/126), ((v2/4)*4) + 3), 0)*8), (max(v2, 0)*-8) + -4) == max(-4 - (max(min(v0 - (v1/126), ((v2/4)*4) + 3), 0)*8), (max(v2, 0)*-8) + -4));1;100;;;;;
 (((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126) - (max((max(min((v1/4)*8, 4004), 5) + -13)/2, 0)/63))*8) + 40)/33) == ((((((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 131)/126) - (max((max(min((v1/4)*8, 4004), 5) + -13)/2, 0)/63))*8) + 40)/33));1;188;;;;;
 ((min(min(max(v0, 0), ((v1*156) + v2) + 155)*8, (((v3*8) + ((v1*156) + v2))*8) + 52) - (((v3*16) + ((v1*312) + ((v2*2) + v4)))*4)) == (min(min(max(v0, 0), ((v1*156) + v2) + 155)*8, (((v3*8) + ((v1*156) + v2))*8) + 52) - (((v3*16) + ((v1*312) + ((v2*2) + v4)))*4)));1;128;;;;;
 (((((v0 + v1) + 7)/8) - (v2*4)) == ((((v0 + v1) + 7)/8) - (v2*4)));1;49;;;;;
 (min(max(min(v0, 249), 0), v1 + 14) == min(max(min(v0, 249), 0), v1 + 14));1;40;;;;;
 ((max(min((v0*12) + (max(min((v1*32) + v2, 1245), 246) - max(min((v1*32) + v2, 1214), 215)), 33), 30) + min(max(min((v1*32) + v2, 1214), 215) + 30, v3)) == (max(min((v0*12) + (max(min((v1*32) + v2, 1245), 246) - max(min((v1*32) + v2, 1214), 215)), 33), 30) + min(max(min((v1*32) + v2, 1214), 215) + 30, v3)));1;272;;;;;
 (min((v0*4) + v1, v2 + 3) == min((v0*4) + v1, v2 + 3));1;62;;;;;
 (min(max(min((((v0 + v1) + 127)/32)*4, 246), -3), max(min((v1/32)*4, 285), 36) + 84) == min(max(min((((v0 + v1) + 127)/32)*4, 246), -3), max(min((v1/32)*4, 285), 36) + 84));1;90;;;;;
 (min((v0*4) + v1, v2 + 1) == min((v0*4) + v1, v2 + 1));1;1095;;;;;
 (min((((v0 + v1) + 15)/16)*8, (((v1/16) + (v2*64))*8) + 493) == min((((v0 + v1) + 15)/16)*8, (((v1/16) + (v2*64))*8) + 493));1;67;;;;;
 (((v0*1120) + ((min(v1/8, 0)/16)*128)) == ((v0*1120) + ((min(v1/8, 0)/16)*128)));1;80;;;;;
 ((((v0*-504)/6)*6) == (v0*-504));1;46;;;;;
 ((((((((v0 + v1) + 1)/126) - (v1/126))*64) + 324)/260) == (((((((v0 + v1) + 1)/126) - (v1/126))*64) + 324)/260));1;97;;;;;
 (((v0*4) + (min(((v1 + v2) + 191)/2, ((v1 + v2)/2) + (v3*32)) + (min(v4*252, 748)/2))) == ((v0*4) + (min(((v1 + v2) + 191)/2, ((v1 + v2)/2) + (v3*32)) + (min(v4*252, 748)/2))));1;86;;;;;
 (min(((v0 + v1) + 43)/4, ((v2*4) + v3) + -5) == min(((v0 + v1) + 43)/4, ((v2*4) + v3) + -5));1;54;;;;;
 (min(((v0 + v1) + 7)/8, ((v2*128) + (min(v3*63, 65) + (v1/8))) + 62) == min(((v0 + v1) + 7)/8, ((v2*128) + (min(v3*63, 65) + (v1/8))) + 62));1;83;;;;;
 (min(max(min(v0, 2007), 13), (min(v0, 2007) + v1) + 22) == min(max(min(v0, 2007), 13), (min(v0, 2007) + v1) + 22));1;54;;;;;
 (v0 == ((v0 + (-9 + 10)) - 1));1;19;;;;;
 (((((v0 + v1) + 11)/16) - ((v2*4) + v3)) == ((((v0 + v1) + 11)/16) - ((v2*4) + v3)));1;44;;;;;
 ((((max(min(v0, 2246), 247) + -247)/4) + (v1*4)) == (((max(min(v0, 2246), 247) + -247)/4) + (v1*4)));1;48;;;;;
 ((max(min(min((v0*128) + 128, v1) + v2, 2000), 1) - max(min((v0*128) + v2, 1999), 0)) == (max(min(min((v0*128) + 128, v1) + v2, 2000), 1) - max(min((v0*128) + v2, 1999), 0)));1;188;;;;;
 ((v0 - (((v1 + v2) + 15)/16)) == (v0 - (((v1 + v2) + 15)/16)));1;38;;;;;
 (((v0 + 15)/13) != 0);0;357;;;;;
 ((((((((v0 + v1) + 64)/65) - (v1/65))*8) + 79)/66) == (((((((v0 + v1) + 64)/65) - (v1/65))*8) + 79)/66));1;86;;;;;
 (((((((uint1)1 && ((((v0*4) + v1) + 0) <= (((v0*4) + 0) + v1))) && ((((v0*4) + v1) + 3) >= (((v0*4) + ((4 + 0) - 1)) + v1))) && (v2 <= v2)) && (v2 >= v2)) && (0 <= 0)) && (((14 + 0) - 1) >= ((14 + 0) - 1)));1;143;;;;;
 (((((((v0 + v1) + -1)/1000)*256) - (v2*3)) - ((v1/1000)*256)) == ((((((v0 + v1) + -1)/1000)*256) - (v2*3)) - ((v1/1000)*256)));1;56;;;;;
 (((v0*8) + -101) >= ((((v0*8) + -101) + 139) - 1));0;47;;;;;
 (max(min((((v0*2) + v1) + v2) - v3, 32)*4, min((v1*4) + ((v0*8) + ((v2*4) - min((((v0*2) + v1) + v2)*4, (v3*4) + 125))), 3) + 125) == max(min((((v0*2) + v1) + v2) - v3, 32)*4, min((v1*4) + ((v0*8) + ((v2*4) - min((((v0*2) + v1) + v2)*4, (v3*4) + 125))), 3) + 125));1;145;;;;;
 (min(max(min(v0, 256), 7) + 10, v1) == min(max(min(v0, 256), 7) + 10, v1));1;44;;;;;
 ((max(max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) + 11, min(v0*500, v2 + -500) + v1) - (min(min(max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + -11, (v0*500) + v1), (v2 + v1) + -500) + (((v3*66) + v4)*4))) == (max(max(min((v0*500) + v1, min(v2 + v1, 2000) + -500), -499) + 11, min(v0*500, v2 + -500) + v1) - (min(min(max(min((v0*500) + v1, min(v2 + v1, 2499) + -500), 0) + -11, (v0*500) + v1), (v2 + v1) + -500) + (((v3*66) + v4)*4))));1;186;;;;;
 (((v0*32) + ((v1*2) + v2)) == ((v0*32) + ((v1*2) + v2)));1;47;;;;;
 ((max(min(min(((v0 + v1) + 3)/4, ((v1/4) + (v2*24)) + 23), 499), 0) - max(min((v1/4) + (v2*24), 499), 0)) == (max(min(min(((v0 + v1) + 3)/4, ((v1/4) + (v2*24)) + 23), 499), 0) - max(min((v1/4) + (v2*24), 499), 0)));1;316;;;;;
 (((min((min((v1*1000) + 1000, v2)*8) + (v3*8), (((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004) + (v1*8000)) + ((v3*8) + 4002))/8)*8) == min((min((v1*1000) + 1000, v2)*8) + (v3*8), (((((min((v1*-1000) + v2, 1000)*8) + 1)/4004)*4004) + (v1*8000)) + ((v3*8) + 4002)));0;1957;;;;;
 (min((v0*128) + 111, v1) == min((v0*128) + 111, v1));1;15;;;;;
 (max(min((v0*4) - min(((max(min(min(((v1 + v2) + 499)/500, 3)*8, 22), -7)*8) - (v3*90)) - v4, -134), 223), min(v4 - v5, 3) + 220) == max(min((v0*4) - min(((max(min(min(((v1 + v2) + 499)/500, 3)*8, 22), -7)*8) - (v3*90)) - v4, -134), 223), min(v4 - v5, 3) + 220));1;131;;;;;
 (min((v0*13) + ((v1*24) + ((v2/2) + (v3*63))), ((v3*63) + (min(v1*24, 43) + (v2/2))) + 14) == min((v0*13) + ((v1*24) + ((v2/2) + (v3*63))), ((v3*63) + (min(v1*24, 43) + (v2/2))) + 14));1;80;;;;;
 (min(v0*4, v1 + 22) == min(v0*4, v1 + 22));1;39;;;;;
 (min(667 - (((v0*56) + v1)*4), (max((((v2 + v3) + 64)/65)*64, 1975) - ((((v0*56) + v1)*4) + v4)) + 12) == min(667 - (((v0*56) + v1)*4), (max((((v2 + v3) + 64)/65)*64, 1975) - ((((v0*56) + v1)*4) + v4)) + 12));1;114;;;;;
 (((((((uint1)1 && ((0 + (min(v0*128, 872) + v1)) <= (min(v0*128, 872) + v1))) && ((3 + ((min(v0*128, 872) + v1) + 124)) >= ((min(v0*128, 872) + 127) + v1))) && (v2 <= (0 + v2))) && ((v2 + 7) >= (((8 + 0) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3));1;169;;;;;
 (min((((v0 + v1) + 31)/32) + (v2*-4), (v1/32) + 3) == min((((v0 + v1) + 31)/32) + (v2*-4), (v1/32) + 3));1;57;;;;;
 (((v0 + 43)/29) != 0);0;366;;;;;
 (((((v0 % ((v1 + 43)/8))*-8)/4)*4) == ((v0 % ((v1 + 43)/8))*-8));1;51;;;;;
 (min((v0*126) + 115, v1) == min((v0*126) + 115, v1));1;56;;;;;
 (min(((v0*4) + v1) + -1, v2) == min(((v0*4) + v1) + -1, v2));1;51;;;;;
 (((((v0 + v1) + 1)/2) - ((((v2*2) + v3)*4) + v4)) == ((((v0 + v1) + 1)/2) - ((((v2*2) + v3)*4) + v4)));1;67;;;;;
 (((v0*131) + (((v1 + v2)/2) + (v3*16))) == ((v0*131) + (((v1 + v2)/2) + (v3*16))));1;51;;;;;
 (((((((uint1)1 && ((0 + (min(v0/8, 0) + -1)) <= ((0 + min(v0/8, 0)) + -1))) && ((3 + ((min(v0/8, 0) + (((v1 + 3)/4)*4)) + 4)) >= ((((4 + 0) - 1) + (min(v0/8, 0) + (((v1 + 3)/4)*4))) + ((6 + -1) - 1)))) && ((-1 + v2) <= (-1 + v2))) && ((((6 + -1) - 1) + v2) >= (((6 + -1) - 1) + v2))) && (v3 <= v3)) && (v3 >= v3));1;253;;;;;
 (min(max(min(((v0 + v1) + 124)/8, 249), 0) + 1, v2) == min(max(min(((v0 + v1) + 124)/8, 249), 0) + 1, v2));1;72;;;;;
 (((v0*2) + -92) == ((((v0*2) + -92) + ((min(min(v1 + 17, v2) - ((v3*3) + v1), -58)*2) + 122)) - 1));0;198;;;;;
 (((((((uint1)1 && ((0 + (min(v0*252, 248) + v1)) <= (min(v0*252, 248) + v1))) && ((3 + ((min(v0*252, 248) + v1) + 248)) >= ((min(v0*252, 248) + 251) + v1))) && ((((v2*250) + (min(v3*63, 187) + v4)) + v5) <= (((v2*250) + (min(v3*63, 187) + v4)) + v5))) && ((((v2*250) + (min(v3*63, 187) + v4)) + v5) >= (((v2*250) + (min(v3*63, 187) + v4)) + v5))) && (v6 <= v6)) && (v6 >= v6));1;196;;;;;
 (min(max(min(v0 + v1, 1999), 0) + (((v2 + 131)/4)*4), max(min(v0 + v1, 1875), -124) + 128) == min(max(min(v0 + v1, 1999), 0) + (((v2 + 131)/4)*4), max(min(v0 + v1, 1875), -124) + 128));1;104;;;;;
 ((((max((((v0 + v1) + -1)/65)*8, 239) - v2)/4) + (v3*-9)) == (((max((((v0 + v1) + -1)/65)*8, 239) - v2)/4) + (v3*-9)));1;47;;;;;
 ((v0 - max(min((((v1*2) + v2)*2) + v3, 1117), 118)) == (v0 - max(min((((v1*2) + v2)*2) + v3, 1117), 118)));1;75;;;;;
 (((((((uint1)1 && ((((0*4) + ((v0*4) + ((v1*1000) + v2))) + 0) <= ((v0*4) + ((v1*1000) + v2)))) && ((((0*4) + ((v0*4) + ((v1*1000) + v2))) + 3) >= (((v0*4) + ((v1*1000) + v2)) + 3))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (((25 + 0) - 1) >= ((25 + 0) - 1)));1;164;;;;;
 (max(-4 - (max(min(max(((v0 + v1) + 7)/8, 0) - ((v2*8) + (min(v1/8, 249) + (v3*16))), 7), 0)*8), (max(min(v4, 0), -7)*8) + -4) == max(-4 - (max(min(max(((v0 + v1) + 7)/8, 0) - ((v2*8) + (min(v1/8, 249) + (v3*16))), 7), 0)*8), (max(min(v4, 0), -7)*8) + -4));1;146;;;;;
 (min(495 - (((v0*16) + v1)*4), (((v2*2) - ((((v3*62) + v4)*2) + ((v0*16) + v1)))*4) + 552) == min(495 - (((v0*16) + v1)*4), (((v2*2) - ((((v3*62) + v4)*2) + ((v0*16) + v1)))*4) + 552));1;106;;;;;
 (min((v0*16) + v1, v2 + -15) == min((v0*16) + v1, v2 + -15));1;44;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), (min(v2*32, 468) + v3) + 31) == min(max(min(((v0 + v1) + -1)/2, 999), 0), (min(v2*32, 468) + v3) + 31));1;101;;;;;
 ((min((v0/16)*8, 4) + ((v1/14)*505)) == (min((v0/16)*8, 4) + ((v1/14)*505)));1;51;;;;;
 (((((((uint1)1 && ((((0*4) + ((v0*4) + ((v1*8) + v2))) + 0) <= ((v0*4) + ((v1*8) + v2)))) && ((((0*4) + ((v0*4) + ((v1*8) + v2))) + 3) >= (((v0*4) + ((v1*8) + v2)) + 3))) && ((v3*8) <= (v3*8))) && ((v3*8) >= (v3*8))) && (v4 <= v4)) && (v4 >= v4));1;140;;;;;
 (((((((v0 + v1) + 71)/8) - (v1/8)) + 137)/132) == ((((((v0 + v1) + 71)/8) - (v1/8)) + 137)/132));1;63;;;;;
 ((((max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2)) + 34)/32) == (((max(min(((v0 + v1) + 47)/16, 124), 0) - max(min(v1/16, 126), 2)) + 34)/32));1;291;;;;;
 (((((((uint1)1 && (((((-1*4) + v0) + 0) + 2) <= ((((max(-1, 0)*4) + v0) + 0) + -2))) && (((((11*4) + v0) + 3) + 2) >= ((((11*4) + v0) + ((4 + 0) - 1)) + ((5 + -2) - 1)))) && ((-2 + v1) <= (-2 + v1))) && ((((5 + -2) - 1) + v1) >= (((5 + -2) - 1) + v1))) && ((((v2*2) + v3) + v4) <= (((v2*2) + v3) + v4))) && ((((v2*2) + v3) + v4) >= (((v2*2) + v3) + v4)));1;266;;;;;
 (min(503 - (((v0*32) + v1)*4), 10 - (((min((((v2 + v3) + -1)/8) - (v4*128), (v3/8) + 127)*-2) + ((((v3/8) + (v5*63))*2) + ((v0*32) + v1)))*4)) == min(503 - (((v0*32) + v1)*4), 10 - (((min((((v2 + v3) + -1)/8) - (v4*128), (v3/8) + 127)*-2) + ((((v3/8) + (v5*63))*2) + ((v0*32) + v1)))*4)));1;151;;;;;
 (max((min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2) + 19)/4, max(v3/4, -4) + 4) == max((min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2) + 19)/4, max(v3/4, -4) + 4));1;252;;;;;
 ((((v0 % 8)*56) + ((v1*4) + v2)) == (((v0 % 8)*56) + ((v1*4) + v2)));1;58;;;;;
 (max(min(v0, 0), -3) >= ((max(min(v0, 0), -3) + (2 - max(min(v0, 0), -3))) - 1));0;61;;;;;
 (((((((v0 + v1) + 5)/2) - (v1/2)) + 130)/126) == ((((((v0 + v1) + 5)/2) - (v1/2)) + 130)/126));1;81;;;;;
 ((((((v0 + v1) + 3)/4) - (v2*32)) - (v1/4)) == (((((v0 + v1) + 3)/4) - (v2*32)) - (v1/4)));1;750;;;;;
 ((max((v0/2) - (((v1 + v0) + 13)/2), ((((v1 + v0) + 13)/2) - (v0/2)) + 522) + -515) >= 0);0;1092;;;;;
 ((((v0 + -995)/4) + (v1*4)) == (((v0 + -995)/4) + (v1*4)));1;46;;;;;
 ((((v0 + v1)*2) + -240) >= (((((v0 + v1)*2) + -240) + 2) - 1));0;52;;;;;
 (((((((uint1)1 && ((((((((v0*63) + v1)*2) + 0)*4) + 0) + -5) <= ((((v0*63) + v1)*8) + -5))) && ((((((((v0*63) + v1)*2) + 125)*4) + 3) + -5) >= (((((v0*63) + v1)*8) + 503) + -5))) && (((((v2*2) + v3) + v4) + -10) <= ((((v2*2) + v3) + v4) + -10))) && (((((v2*2) + v3) + v4) + -10) >= ((((v2*2) + v3) + v4) + -10))) && (v5 <= v5)) && (v5 >= v5));1;239;;;;;
 (((max(min(v0, 12), -16)*8) + -101) >= ((((max(min(v0, 12), -16)*8) + -101) + (107 - (max(min(v0, 12), -16)*8))) - 1));0;100;;;;;
 (((((((uint1)1 && (((0 + ((v0*128) + v1)) + -2) <= ((((0*16) + ((v0*128) + v1)) + 0) + -2))) && (((15 + (((v0*128) + v1) + 128)) + -2) >= ((((0*16) + (((v0*128) + v1) + 112)) + 15) + 4))) && ((((v2/63) + (v3*3)) + 4) <= (-2 + ((v2/63) + (v3*3))))) && ((((v2/63) + (v3*3)) + 6) >= (4 + (((v2/63) + (v3*3)) + 2)))) && ((v4*237) <= (v4*237))) && ((min(v4*237, 236) + 236) >= (min(v4*237, 236) + 236)));0;269;;;;;
 (max(min(min(v0 + v1, ((min((((max(((v2 + v3) + 7)/8, 255)/16)*16) - (v4*18)) - ((min(v3/8, 0)/16)*16), -21) + v5)*8) + 230), 2000), min(max(max((v5*8) + -83, v1), 0), ((min((((max(((v2 + v3) + 7)/8, 255)/16)*16) - (v4*18)) - ((min(v3/8, 0)/16)*16), -21) + v5)*8) + 230)) == max(min(min(v0 + v1, ((min((((max(((v2 + v3) + 7)/8, 255)/16)*16) - (v4*18)) - ((min(v3/8, 0)/16)*16), -21) + v5)*8) + 230), 2000), min(max(max((v5*8) + -83, v1), 0), ((min((((max(((v2 + v3) + 7)/8, 255)/16)*16) - (v4*18)) - ((min(v3/8, 0)/16)*16), -21) + v5)*8) + 230)));1;282;;;;;
 (((v0 + 6)/4) != 0);0;813;;;;;
 ((min(v0/8, 0) + (v1*126)) == (min(v0/8, 0) + (v1*126)));1;752;;;;;
 (((min(v0, -11) + 26)/4) == ((min(v0, -11) + 26)/4));1;43;;;;;
 ((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7)) == (max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7)));1;272;;;;;
 ((min((((v0 % 3)*2) + v1)*60, 295) - ((((((v0 % 3)*2) + v1)*15) + v2)*4)) == (min((((v0 % 3)*2) + v1)*60, 295) - ((((((v0 % 3)*2) + v1)*15) + v2)*4)));1;81;;;;;
 ((((((v0 + v1) % 8) + 249)/8) + ((v0 + v1)/8)) == (((((v0 + v1) % 8) + 249)/8) + ((v0 + v1)/8)));1;69;;;;;
 ((v0*2) == (((v0*2) + ((v1 - v0)*2)) - 1));0;61;;;;;
 (min(((v0/4) + (v1*4)) + 1, v2) == min(((v0/4) + (v1*4)) + 1, v2));1;30;;;;;
 ((-1 - max(min(v0 - v1, 3), 0)) >= (((-1 - max(min(v0 - v1, 3), 0)) + (max(min(v0 - v1, 3), 0) + 5)) - 1));0;103;;;;;
 (min((v0*38) + v1, v2 + 5) == min((v0*38) + v1, v2 + 5));1;47;;;;;
 (((min(max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 999)), 0) - max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 1125)), 126), -128)/8)*8) == min(max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 999)), 0) - max(min(min(v3*127, 380) + (((v4/2) + (v5*501)) + 119), min(v2, 1125)), 126), -128));0;2225;;;;;
 ((((min((v2*128) + (max(min(v1, 373), 124)*8), (min((v2*64) + (max(min(v1, 373), 124)*4), (max(min(v1, 204), -45)*4) + 693)*2) + 2)*-1)/4)*4) == (min((v2*128) + (max(min(v1, 373), 124)*8), (min((v2*64) + (max(min(v1, 373), 124)*4), (max(min(v1, 204), -45)*4) + 693)*2) + 2)*-1));0;2164;;;;;
 (min(((v0*-64) + ((v1*252) + (((((min(min(v0*64, 188) + 64, (v1*-252) + v2) + -3)/4) + (v0*16))*4) + v3))) + 6, v4) == min(((v0*-64) + ((v1*252) + (((((min(min(v0*64, 188) + 64, (v1*-252) + v2) + -3)/4) + (v0*16))*4) + v3))) + 6, v4));1;106;;;;;
 (min(((v0 + v1) + 7)/8, ((v2*63) + v3) + 62) == min(((v0 + v1) + 7)/8, ((v2*63) + v3) + 62));1;68;;;;;
 ((((v0/2) + v1) - ((v2*4) + v3)) == (((v0/2) + v1) - ((v2*4) + v3)));1;40;;;;;
 ((((min((v0 + v1)/8, 233)*4) + v2)*2) == (((min((v0 + v1)/8, 233)*4) + v2)*2));1;73;;;;;
 (((((min((v2*12) + 19, max(min(v1, 1009), 10))*2) + (min(min((v2*12) + 7, max(min(v1, 1009), 10))*2, (v2*24) + 14)*-1))/4)*4) == ((min((v2*12) + 19, max(min(v1, 1009), 10))*2) + (min(min((v2*12) + 7, max(min(v1, 1009), 10))*2, (v2*24) + 14)*-1)));0;1661;;;;;
 ((v0 + -29) == (((v0 + -29) + (34 - max((((max(min((v1 + v2)/8, 249), 0)/8)*8) - v3)*8, 26))) - 1));0;197;;;;;
 (min((((v0 + v1) + 21)/2) - (v1/2), v2 + 3) == min((((v0 + v1) + 21)/2) - (v1/2), v2 + 3));1;63;;;;;
 ((max((v0*32) + (max(min((v1*64) + v2, min(v3 + v2, 2063) + -64), 0) - max(min((v1*64) + v2, min(v3 + v2, 2000) + -64), -63)), 32) + (((v4*5) + v5)*4)) == (max((v0*32) + (max(min((v1*64) + v2, min(v3 + v2, 2063) + -64), 0) - max(min((v1*64) + v2, min(v3 + v2, 2000) + -64), -63)), 32) + (((v4*5) + v5)*4)));1;1175;;;;;
 (((v0*4) + ((v1*8) + ((v2*32) + v3))) == ((v0*4) + ((v1*8) + ((v2*32) + v3))));1;56;;;;;
 (min(max(min(((v0 + v1) + 132)/8, 249), 0), (max(min((v0 + v1)/8, 249), 0) + (v2*9)) + 7) == min(max(min(((v0 + v1) + 132)/8, 249), 0), (max(min((v0 + v1)/8, 249), 0) + (v2*9)) + 7));1;101;;;;;
 ((((((((v0 + v1) + -1)/65) - (v1/65))*8) + 69)/62) == (((((((v0 + v1) + -1)/65) - (v1/65))*8) + 69)/62));1;65;;;;;
 (min((((v0 + v1) + 124)/32)*8, (((v0 + v1)/32)*8) + v2) == min((((v0 + v1) + 124)/32)*8, (((v0 + v1)/32)*8) + v2));1;85;;;;;
 ((((((min(v0*125, v1 + -125) + v2) % 8) + 188)/8) - (v3*4)) == (((((min(v0*125, v1 + -125) + v2) % 8) + 188)/8) - (v3*4)));1;90;;;;;
 ((max(min(v0*8, 113), -11) - (max(min(v0*8, 125), 1) + (((v1*4) + v2)*2))) == (max(min(v0*8, 113), -11) - (max(min(v0*8, 125), 1) + (((v1*4) + v2)*2))));1;76;;;;;
 (((((((uint1)1 && ((((0*4) + 0) + ((v0*4) + -5)) <= ((v0*4) + -5))) && ((((2*4) + 3) + ((v0*4) + 12)) >= ((v0*4) + 25))) && (v1 <= v1)) && (v1 >= v1)) && (max(min(v2*4, 16) + v3, 0) <= max((min(v2, 4)*4) + v3, 0))) && (max(min(v2*4, 16) + v3, 0) >= max((min(v2, 4)*4) + v3, 0)));0;246;;;;;
 (((v0*104) + (((v1 + -1)/8)*16)) == ((v0*104) + (((v1 + -1)/8)*16)));1;48;;;;;
 (max((v0*8) + v1, (max(min((v2 + v3)/2, 1006), 7)*8) + 5) == max((v0*8) + v1, (max(min((v2 + v3)/2, 1006), 7)*8) + 5));1;87;;;;;
 (((((((v0 + v1) + 249)/250)*32) - (v2*152)) - ((v1/250)*32)) == ((((((v0 + v1) + 249)/250)*32) - (v2*152)) - ((v1/250)*32)));1;77;;;;;
 ((((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61))/4) + 17) == (((max(min((((v0 + v1) + 440)/63)*8, 246), -3) - max(min((v1/63)*8, 310), 61))/4) + 17));1;255;;;;;
 ((((((((v0 + v1) + 31)/32) - (v1/32))*32) + 94)/36) == (((((((v0 + v1) + 31)/32) - (v1/32))*32) + 94)/36));1;77;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2) == min(max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7), v2));1;441;;;;;
 ((min((((v0 + v1) + -1)/2) - (v2*500), ((v1/2) + (v3*64)) + 63) - ((v3*64) + ((v1/2) + (v4*4)))) == (min((((v0 + v1) + -1)/2) - (v2*500), ((v1/2) + (v3*64)) + 63) - ((v3*64) + ((v1/2) + (v4*4)))));1;109;;;;;
 (((v0*2) + v1) == ((v0*2) + v1));1;52;;;;;
 (((v0*2) - ((((v1*63) + v2)*2) + v3)) == ((v0*2) - ((((v1*63) + v2)*2) + v3)));1;45;;;;;
 (min(((v0 + v1) + 252)/32, (((v0 + v1)/32) + (((((v0 + v1) % 32) + 636)/128)*4)) + -9) == min(((v0 + v1) + 252)/32, (((v0 + v1)/32) + (((((v0 + v1) % 32) + 636)/128)*4)) + -9));1;93;;;;;
 (((v0*-64) + ((v1 - (v2*128)) - (v3/2))) == ((v0*-64) + ((v1 - (v2*128)) - (v3/2))));1;57;;;;;
 (((v0*12) + (((v1*5) + v2)*8)) == ((v0*12) + (((v1*5) + v2)*8)));1;58;;;;;
 (((((((uint1)1 && ((0 + v0) <= (0 + v0))) && ((3 + (v0 + 248)) >= (3 + (v0 + 248)))) && ((v1 + v2) <= (v1 + v2))) && ((v1 + v2) >= (v1 + v2))) && (0 <= 0)) && (14 >= 14));1;112;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*4) + 15)/10) == (((((((v0 + v1) + 249)/250) - (v1/250))*4) + 15)/10));1;89;;;;;
 (max(-6 - max(min((max(v0*4, -3) - (v1*1000)) - min((v2/4)*4, 1999), 996), -3), max(min(v3, 3), -996) + -6) == max(-6 - max(min((max(v0*4, -3) - (v1*1000)) - min((v2/4)*4, 1999), 996), -3), max(min(v3, 3), -996) + -6));1;100;;;;;
 (max((((v0 + v1) + 1011)/4) - v2, ((((v0 + v1) + 1003)/4) - (((v0 + v1)/4) + (v3*128))) + 2) == max((((v0 + v1) + 1011)/4) - v2, ((((v0 + v1) + 1003)/4) - (((v0 + v1)/4) + (v3*128))) + 2));1;117;;;;;
 ((((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))*8) + 519)/508) == (((((((v0 + v1) + 4)/8) - ((v1 + -3)/8))*8) + 519)/508));1;92;;;;;
 (((v0*284) + ((max(min(v1/65, 34), 3) - max(min(((v2 + v1) + 64)/65, 27), -4))*16)) == ((v0*284) + ((max(min(v1/65, 34), 3) - max(min(((v2 + v1) + 64)/65, 27), -4))*16)));1;197;;;;;
 (((v0*284) + (max(min(v1/65, 34), 3)*16)) == ((v0*284) + (max(min(v1/65, 34), 3)*16)));1;59;;;;;
 (min(((v0*32) + 735)/620, max(min(((((((v1 + v2) + 251)/63) - (v2/63))*32) + 115)/620, ((((((v1 + v2) + 251)/63) - (v2/63))*8) + 28)/155), ((((((v1 + v2) + 251)/63) - (v2/63))*32) + 119)/620) + 1) == min(((v0*32) + 735)/620, max(min(((((((v1 + v2) + 251)/63) - (v2/63))*32) + 115)/620, ((((((v1 + v2) + 251)/63) - (v2/63))*8) + 28)/155), ((((((v1 + v2) + 251)/63) - (v2/63))*32) + 119)/620) + 1));1;150;;;;;
 (((v0 + 511)/500) != 0);0;346;;;;;
 (((v0*16) - ((((v1 + v2)/500)*16) + v3)) == ((v0*16) - ((((v1 + v2)/500)*16) + v3)));1;55;;;;;
 (((v0*36) + (v1*8)) == ((v0*36) + (v1*8)));1;94;;;;;
 (min(((((max(max(min((v0*1000) + v1, min(v2 + v1, 2000) + -1000), -999) + 11, min(v0*1000, v2 + -1000) + v1) - min(min(max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + -11, (v0*1000) + v1), (v2 + v1) + -1000)) + 1003)/4)*4) + v3, v4 + 1000) == min(((((max(max(min((v0*1000) + v1, min(v2 + v1, 2000) + -1000), -999) + 11, min(v0*1000, v2 + -1000) + v1) - min(min(max(min((v0*1000) + v1, min(v2 + v1, 2999) + -1000), 0) + -11, (v0*1000) + v1), (v2 + v1) + -1000)) + 1003)/4)*4) + v3, v4 + 1000));1;213;;;;;
 (min(453 - ((v0*29) + (v1*57)), 56 - (v0*29)) == min(453 - ((v0*29) + (v1*57)), 56 - (v0*29)));1;54;;;;;
 ((((v0*4) - min((min((min((v0*4) + 3, v1)/2)*2, (v0*4) + 2) + (v2/65)) + 1, v3)) + ((v2/65) + (v4*2))) == (((v0*4) - min((min((min((v0*4) + 3, v1)/2)*2, (v0*4) + 2) + (v2/65)) + 1, v3)) + ((v2/65) + (v4*2))));1;96;;;;;
 ((min(max(v0*8, 995), min(min((v1/16)*8, 4) + ((min(((((v2*2) + v3)*64) + (v4*508)) + 55, v5)/4)*4), ((((v2*2) + v3)*64) + (min((v1/16)*8, 4) + (v4*508))) + 52) + 3) - ((v3*64) + ((v2*128) + ((v4*508) + (min((v1/16)*8, 4) + (v6*4)))))) == (min(max(v0*8, 995), min(min((v1/16)*8, 4) + ((min(((((v2*2) + v3)*64) + (v4*508)) + 55, v5)/4)*4), ((((v2*2) + v3)*64) + (min((v1/16)*8, 4) + (v4*508))) + 52) + 3) - ((v3*64) + ((v2*128) + ((v4*508) + (min((v1/16)*8, 4) + (v6*4)))))));1;227;;;;;
 ((v0 + 19) != 0);0;224;;;;;
 ((v0 - (v1*1008)) == (v0 - (v1*1008)));1;177;;;;;
 ((min(((((v0 + v1) + 13)/2) - (v2*64)) - (v1/2), 55) + 5) == (min(((((v0 + v1) + 13)/2) - (v2*64)) - (v1/2), 55) + 5));1;118;;;;;
 (((max(min(v0 + v1, 5), -2)*8) + -45) == ((((max(min(v0 + v1, 5), -2)*8) + -45) + (49 - (max(min(v0 + v1, 5), -2)*8))) - 1));0;124;;;;;
 ((((v0*2048)/32)*32) == (v0*2048));1;33;;;;;
 ((((v0 + v1)/8) + (v2*8)) == (((v0 + v1)/8) + (v2*8)));1;28;;;;;
 (((v0 + v1) + -4) >= ((((v0 - 1) + v1) + 2) + 1));0;103;;;;;
 (((((((uint1)1 && ((((((min(v0, 8) + v1)/4)*4) + 0) + -8) <= ((((min(v0, 8) + v1)/4)*4) + -8))) && (((((((min(v0, 8) + v1)/4) + (((min((((v0 + v1) + -1)/4) - ((min(v0, 8) + v1)/4), (((v2 + 6)/4)*4) + -3) + 2)/4)*4))*4) + 15) + -8) >= ((min(((v0 + v1) + -1)/4, (((min(v0, 8) + v1)/4) + (((v2 + 6)/4)*4)) + -3)*4) + 3))) && ((((v3/4) + (v4*16))*4) <= (((v3/4) + (v4*16))*4))) && (((((v3/4) + (min(v4, 1)*16))*4) + 63) >= ((((v3/4) + (min(v4, 1)*16))*4) + 63))) && (0 <= 0)) && (19 >= 19));0;3149;;;;;
 (((((((uint1)1 && ((((((v0*3) + v1)*4) + v2) + 0) <= ((((v0*3) + v1)*4) + v2))) && ((((((v0*3) + v1)*4) + v2) + 3) >= (((((v0*3) + v1)*4) + 3) + v2))) && ((v3 + v4) <= (v3 + v4))) && ((v3 + v4) >= (v3 + v4))) && (v5 <= v5)) && (v5 >= v5));1;171;;;;;
 ((v0 - (v1*516)) == (v0 - (v1*516)));1;42;;;;;
 ((5 - v0) > (2004 - v0));0;26;;;;;
 (((min(v0 - (v1*4), (v2/65) + 3)*-2) + (((v2/65)*2) + v3)) == ((min(v0 - (v1*4), (v2/65) + 3)*-2) + (((v2/65)*2) + v3)));1;64;;;;;
 (min(((v0*-64) + ((v1*252) + (((((min(min(v0*64, 188) + 64, (v1*-252) + v2) + -3)/4) + (v0*16))*4) + v3))) + 6, v4) == min(((v0*-64) + ((v1*252) + (((((min(min(v0*64, 188) + 64, (v1*-252) + v2) + -3)/4) + (v0*16))*4) + v3))) + 6, v4));1;113;;;;;
 ((min(((((v0 + v1) + 5)/2)*2) - (v2*1005), (min(v3*63, 439) + ((v1/2)*2)) + 560) - ((((v1/2) + (v4*16))*2) + (v3*63))) == (min(((((v0 + v1) + 5)/2)*2) - (v2*1005), (min(v3*63, 439) + ((v1/2)*2)) + 560) - ((((v1/2) + (v4*16))*2) + (v3*63))));1;114;;;;;
 ((((max(v0, 249) - min(v1, 0)) + 71)/68) >= 0);1;58;;;;;
 (((v0*990) + (v1*8)) == ((v0*990) + (v1*8)));1;38;;;;;
 (min(max(min(v0*8, 2074), 75) + (v1*16), min(v2*8, 1962) + 106) == min(max(min(v0*8, 2074), 75) + (v1*16), min(v2*8, 1962) + 106));1;64;;;;;
 ((((v0*8)/8)*8) == (v0*8));1;8;;;;;
 (min((((v0 + v1) + 63)/16) - (v1/16), v2 + 3) == min((((v0 + v1) + 63)/16) - (v1/16), v2 + 3));1;55;;;;;
 (((v0 - (v1*508)) - (v2/2)) == ((v0 - (v1*508)) - (v2/2)));1;651;;;;;
 (((((((v0 + v1) + -1)/4) - (v1/4))/32) + 1) == ((((((v0 + v1) + -1)/4) - (v1/4))/32) + 1));1;76;;;;;
 (((min(((max(((max(min((v3*128) + v4, min(v5 + v4, 2000) + -128), -127) + (max(min((v3*128) + v4, min(v5 + v4, 2127) + -128), 0)*-1)) + 128)/63, 0)*-63) + max(min((v3*128) + v4, min(v5 + v4, 2000) + -128), -127)) - max(min((v3*128) + v4, min(v5 + v4, 2127) + -128), 0), -128)/4)*4) == min(((max(((max(min((v3*128) + v4, min(v5 + v4, 2000) + -128), -127) + (max(min((v3*128) + v4, min(v5 + v4, 2127) + -128), 0)*-1)) + 128)/63, 0)*-63) + max(min((v3*128) + v4, min(v5 + v4, 2000) + -128), -127)) - max(min((v3*128) + v4, min(v5 + v4, 2127) + -128), 0), -128));0;2751;;;;;
 (((((((uint1)1 && (((((((v0*32) + v1)*4) + v2) + -10) + 0) <= ((v2 + (((v0*32) + v1)*4)) + -10))) && (((((((v0*32) + v1)*4) + v2) + ((12 + -10) - 1)) + 3) >= ((v2 + ((min((v0*32) + v1, 62)*4) + 3)) + ((12 + -10) - 1)))) && (0 <= 0)) && (0 >= 0)) && (0 <= 0)) && (0 >= 0));1;260;;;;;
 (((((v0 + v1) + 15)/8) - min((v2*8) + v3, (v4*16) + ((v1/8) + (v2*8)))) == ((((v0 + v1) + 15)/8) - min((v2*8) + v3, (v4*16) + ((v1/8) + (v2*8)))));1;79;;;;;
 (((v0*500) + ((v1*64) + v2)) == ((v0*500) + ((v1*64) + v2)));1;48;;;;;
 (((min(((v0/500)*64) + ((v1*4) - min((((v0/500)*16) + v1)*4, ((((v2 + v0) + -1)/500)*64) + 85)), 3)*4) + -12) >= 2);0;95;;;;;
 ((max(v0, 0) + (v1*4)) == (max(v0, 0) + (v1*4)));1;44;;;;;
 (((v0 - (v1*127)) - (((max(min(v2, 2002), 3) + -3)/16)*16)) == ((v0 - (v1*127)) - (((max(min(v2, 2002), 3) + -3)/16)*16)));1;80;;;;;
 ((((v0*512)/2)*2) == (v0*512));1;29;;;;;
 ((max(min(v0, 31), 0) - max(min(v1, 31), 0)) == (max(min(v0, 31), 0) - max(min(v1, 31), 0)));1;126;;;;;
 (((v0 + 1005)/1002) == ((v0 + 1005)/1002));1;13;;;;;
 ((((max(min(v0 + v1, 1983), -16) - max(min(v1, 2006), 7)) + 45)/16) == (((max(min(v0 + v1, 1983), -16) - max(min(v1, 2006), 7)) + 45)/16));1;135;;;;;
 (((v0*36) + (max(min((v1/63)*8, 285), 36) + (v2*4))) == ((v0*36) + (max(min((v1/63)*8, 285), 36) + (v2*4))));1;65;;;;;
 (((((v0 % ((v1 + 29)/20))*-20)/4)*4) == ((v0 % ((v1 + 29)/20))*-20));1;51;;;;;
 (((83 - max(v0*23, 68)) - (v1*8)) == ((83 - max(v0*23, 68)) - (v1*8)));1;49;;;;;
 (max(min(max((16 - (v0/8))/12, 0), (v1/12) + 1), (min(((((v2 + v0) + 7)/8) - (v0/8)) + -11, v1)/12) + 1) == max(min(max((16 - (v0/8))/12, 0), (v1/12) + 1), (min(((((v2 + v0) + 7)/8) - (v0/8)) + -11, v1)/12) + 1));1;111;;;;;
 ((min(v0 + 218, v1) - ((v2*8) + v0)) == (min(v0 + 218, v1) - ((v2*8) + v0)));1;71;;;;;
 (((((((min(v0*252, 248) + (min((v1*500) + 500, v2) + v3)) + 7) % 8) + -259)/8) + (v4*4)) == ((((((min(v0*252, 248) + (min((v1*500) + 500, v2) + v3)) + 7) % 8) + -259)/8) + (v4*4)));1;84;;;;;
 (max(((v0 - v1) + 403)/354, v2) == max(((v0 - v1) + 403)/354, v2));1;53;;;;;
 (((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((0 + (v0/8)) <= ((0 + (v0/8)) + 0))) && ((3 + ((v0/8) + 24)) >= ((3 + ((v0/8) + 16)) + 7))) && (v1 <= v1)) && (v1 >= v1));1;111;;;;;
 ((((((v0*1004) + v1) + -5)/63) + (v2*4)) == (((((v0*1004) + v1) + -5)/63) + (v2*4)));1;53;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*64) + 615)/520) == (((((((v0 + v1) + -1)/63) - (v1/63))*64) + 615)/520));1;74;;;;;
 (((v0*252) + (v1*8)) == ((v0*252) + (v1*8)));1;36;;;;;
 (max(min(max(((v0 - v1) + 35)/4, 0), (min((v2*8) - ((v3*1044) + (v4*8)), 476)/4) + 13), (min(min(min(v5 + v0, v6 + 20), min(v6 + 17, v5 + v0) + 3) - v1, min((v2*8) - ((v3*1044) + (v4*8)), 476) + 20)/4) + 8) == max(min(max(((v0 - v1) + 35)/4, 0), (min((v2*8) - ((v3*1044) + (v4*8)), 476)/4) + 13), (min(min(min(v5 + v0, v6 + 20), min(v6 + 17, v5 + v0) + 3) - v1, min((v2*8) - ((v3*1044) + (v4*8)), 476) + 20)/4) + 8));1;224;;;;;
 (min(43 - (v0*3), (min(((((v1 + v2) + 3)/2) - (v3*504)) - (v4*127), (v2/2) + 118) - ((v0*3) + ((v2/2) + (v5*44)))) + 11) == min(43 - (v0*3), (min(((((v1 + v2) + 3)/2) - (v3*504)) - (v4*127), (v2/2) + 118) - ((v0*3) + ((v2/2) + (v5*44)))) + 11));1;133;;;;;
 ((max(v0*12, 3) + (v1*4)) == (max(v0*12, 3) + (v1*4)));1;35;;;;;
 (min(max(min(v0, 1996), -3), max(min(v0, 1999), 0) + (v1*4)) == min(max(min(v0, 1996), -3), max(min(v0, 1999), 0) + (v1*4)));1;107;;;;;
 ((((min((((v0 + v1) + -1)/65) - (v2*16), ((v1/65) + (v3*8)) + 7) + (v3*-8))*-2) + ((((v1/65) + (v4*2))*2) + ((v5*2) + v6))) == (((min((((v0 + v1) + -1)/65) - (v2*16), ((v1/65) + (v3*8)) + 7) + (v3*-8))*-2) + ((((v1/65) + (v4*2))*2) + ((v5*2) + v6))));1;139;;;;;
 (min(max(((max(v0, 0)*2) - (v1/4)) + 1, ((10 - v1)/4) + (max(v0, 0)*2)) + 1, v2) == min(max(((max(v0, 0)*2) - (v1/4)) + 1, ((10 - v1)/4) + (max(v0, 0)*2)) + 1, v2));1;112;;;;;
 (((v0*-32) + ((((v1 + v2) + 1)/2) - v3)) == ((v0*-32) + ((((v1 + v2) + 1)/2) - v3)));1;57;;;;;
 (((v0/2) + 2) != 0);0;265;;;;;
 (min((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*63)) - max(min(v1/2, 1006), 7), min(v3, 55) + 39) == min((max(min(((v0 + v1) + 1)/2, 999), 0) - (v2*63)) - max(min(v1/2, 1006), 7), min(v3, 55) + 39));1;1662;;;;;
 (min((v0 + v1)*2, (((v2*16) + ((v3*6) + v0))*2) + 11) == min((v0 + v1)*2, (((v2*16) + ((v3*6) + v0))*2) + 11));1;68;;;;;
 ((((((v0*93) + v1) + v2)*8) + ((v3*3) + v4)) == (((((v0*93) + v1) + v2)*8) + ((v3*3) + v4)));1;59;;;;;
 (max((min(max(max((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -35)/16), ((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 2), (max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -51)/16)), v2 + 2) + 3)/4, max(v3/4, -1) + 1) == max((min(max(max((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -35)/16), ((max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -3)/16)) + 2), (max(min(v0 + v1, 1999), 0)/16) - ((max(min(v1, 2002), 3) + -51)/16)), v2 + 2) + 3)/4, max(v3/4, -1) + 1));1;245;;;;;
 ((max(v0*8, (((v1*4) + v0)*8) + 3) + (v2*12)) == (max(v0*8, (((v1*4) + v0)*8) + 3) + (v2*12)));1;50;;;;;
 (min(min((v0/8) + v1, 279)*2, (v2*2) + 49) == min(min((v0/8) + v1, 279)*2, (v2*2) + 49));1;34;;;;;
 (((v0 + 358)/340) != 0);0;371;;;;;
 (((v0/2) + (v1*4)) == ((v0/2) + (v1*4)));1;1390;;;;;
 (((v0 + 999)/1000) != 0);0;372;;;;;
 ((((v0*2) + 13)/9) != 0);0;423;;;;;
 (((min((((v0 + v1) + 127)/32) - (v2*40), (v1/32) + 32) - v3) - (v1/32)) == ((min((((v0 + v1) + 127)/32) - (v2*40), (v1/32) + 32) - v3) - (v1/32)));1;85;;;;;
 ((((v0*2) + 269)/257) != 0);0;441;;;;;
 (((((v0 + v1) + 7)/8) - ((((v2*4) + v3)*2) + v4)) == ((((v0 + v1) + 7)/8) - ((((v2*4) + v3)*2) + v4)));1;66;;;;;
 (((((((uint1)1 && (((v0 + v1) + -34) <= (((v0 + v1) + 0) + -36))) && (((v0 + v1) + -34) >= (((v0 + v1) + ((3 + 0) - 1)) + -36))) && (((v2*8) + -36) <= ((((v2*8) + 0) + 0) + -36))) && (((v2*8) + 109) >= ((((v2*8) + ((144 + 0) - 1)) + ((3 + 0) - 1)) + -36))) && (((0*4) + 0) <= ((0*4) + 0))) && (((48*4) + 3) >= ((48*4) + 3)));0;230;;;;;
 (min((max(((v0 + v1) + 7)/8, 255)/16)*16, v2 + 17) == min((max(((v0 + v1) + 7)/8, 255)/16)*16, v2 + 17));1;98;;;;;
 (0 == ((0 + (167 - max(((v0*7) + v1)*8, 159))) - 1));0;77;;;;;
 (min(((v0 + v1) + 131)/4, ((v2*2) + (((v0 + v1)/4) + (v3*4))) + 1) == min(((v0 + v1) + 131)/4, ((v2*2) + (((v0 + v1)/4) + (v3*4))) + 1));1;71;;;;;
 (((v0/63) + (v1*4)) == ((v0/63) + (v1*4)));1;60;;;;;
 ((v0 + -194) == (((v0 + -194) + (199 - max(((((v1*4) + v2)*8) - v3)*8, 191))) - 1));0;140;;;;;
 (((((((v0 + v1) + 31)/32) - (v1/32))/24) + 1) == ((((((v0 + v1) + 31)/32) - (v1/32))/24) + 1));1;73;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;7893;;;;;
 (((((max(min(((v0 + v1) + -1)/4, 499), 0)/2) - ((max(max(min(v1/4, 499), 0)*4, 5) + -5)/8))/64) + 1) == ((((max(min(((v0 + v1) + -1)/4, 499), 0)/2) - ((max(max(min(v1/4, 499), 0)*4, 5) + -5)/8))/64) + 1));1;131;;;;;
 (((((((v0 + v1) + 63)/8) - (v1/8))/129) + 1) == ((((((v0 + v1) + 63)/8) - (v1/8))/129) + 1));1;67;;;;;
 ((max(min((v0/32)*4, 285), 36) + (v1*4)) == (max(min((v0/32)*4, 285), 36) + (v1*4)));1;101;;;;;
 (min((v0*128) + v1, v2 + 2) == min((v0*128) + v1, v2 + 2));1;57;;;;;
 (max(v0*8, (((v1*29) + v0)*8) + 33) == max(v0*8, (((v1*29) + v0)*8) + 33));1;82;;;;;
 (min((v0*61) + v1, (v2*64) + 11) == min((v0*61) + v1, (v2*64) + 11));1;53;;;;;
 (((((((uint1)1 && (((v0*8) + 1) <= ((v0*8) + 1))) && (((v0*8) + 8) >= ((v0*8) + 8))) && (((((0*4) + ((v1*4) + ((v2*250) + v3))) + 0) + 8) <= ((((v1*4) + ((v2*250) + v3)) + 0) + -4))) && (((((0*4) + ((v1*4) + ((v2*250) + v3))) + 3) + 8) >= ((((v1*4) + ((v2*250) + v3)) + 3) + 8))) && (0 <= 0)) && (21 >= 21));0;194;;;;;
 (((((v0 % (((v1 - v2) + 143)/132))*-264)/8)*8) == ((v0 % (((v1 - v2) + 143)/132))*-264));1;62;;;;;
 (min(((v0 + v1) + 3)/4, v2 + 60) == min(((v0 + v1) + 3)/4, v2 + 60));1;42;;;;;
 (min(((max(min((v0 + v1)/63, 31), 0)*2) + v2)*4, ((max(min((v0 + v1)/63, 31), 0) + v3)*8) + 24) == min(((max(min((v0 + v1)/63, 31), 0)*2) + v2)*4, ((max(min((v0 + v1)/63, 31), 0) + v3)*8) + 24));1;109;;;;;
 ((min((v0*16) + v1, min(((v2 + v3) + 499)/8, v1 + 31) + -15) + (v4*4)) == (min((v0*16) + v1, min(((v2 + v3) + 499)/8, v1 + 31) + -15) + (v4*4)));1;74;;;;;
 (min(max((v0/4) - ((max(min(v1/8, 249), 0)/8)*16), -8), (v2*2) + 27) == min(max((v0/4) - ((max(min(v1/8, 249), 0)/8)*16), -8), (v2*2) + 27));1;87;;;;;
 ((((v0*156)/4)*4) == (v0*156));1;20;;;;;
 (max(min(1952 - (min(max(min(((v4 + v5) + 7)/8, 249), 0), v3 + 2)*8), (((max(min(v2, 13), -2)*8) + -107) + (113 - (max(min(v2, 13), -2)*8))) - 1) + 1, min(max(max((max(v3 - max(min(((v4 + v5) + 7)/8, 249), 0), -2)*8) + -107, -32 - (min(max(min(((v4 + v5) + 7)/8, 249), 0), v3 + 2)*8)), (max(min(v2, 13), -2)*8) + -107), (113 - (max(min(v2, 13), -2)*8)) + ((max(min(v2, 13), -2)*8) + -107))) <= min(max(max((max(v3 - max(min(((v4 + v5) + 7)/8, 249), 0), -2)*8) + -107, -32 - (min(max(min(((v4 + v5) + 7)/8, 249), 0), v3 + 2)*8)), (max(min(v2, 13), -2)*8) + -107), (113 - (max(min(v2, 13), -2)*8)) + ((max(min(v2, 13), -2)*8) + -107)));0;3117;;;;;
 (max(min((((v0 + v1) + 103)/8) - (v1/8), v2 + 6), v3 + 3) == max(min((((v0 + v1) + 103)/8) - (v1/8), v2 + 6), v3 + 3));1;62;;;;;
 (min(((v0 + v1) + -1)/4, ((v1/4) + ((v2/252)*252)) + 251) == min(((v0 + v1) + -1)/4, ((v1/4) + ((v2/252)*252)) + 251));1;91;;;;;
 (max(v0 + v1, v2) == max(v0 + v1, v2));1;48;;;;;
 (((((((uint1)1 && ((((v0 + v1) + 0) + 497) <= (((((0*4) + 0) + v1) + v0) + -6))) && ((((v0 + v1) + 3) + 497) >= (((((((126 + 0) - 1)*4) + ((4 + 0) - 1)) + v1) + v0) + -6))) && ((((min(v2*63, 62) + v3)/2) + -7) <= (-3 + (((min(v2*63, 62) + v3)/2) + -4)))) && ((((min(v2*63, 62) + v3)/2) + 34) >= (((5 + -3) - 1) + ((38 + (((min(v2*63, 62) + v3)/2) + -4)) - 1)))) && (0 <= 0)) && (20 >= ((21 + 0) - 1)));0;366;;;;;
 (min((v0*8) + ((v1*128) + v2), v3 + 4) == min((v0*8) + ((v1*128) + v2), v3 + 4));1;53;;;;;
 (((v0*68) + ((v1*128) + v2)) == ((v0*68) + ((v1*128) + v2)));1;73;;;;;
 (min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) + 12, v2) == min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) + 12, v2));1;97;;;;;
 (max((v0 + v1) + 15, v2) == max((v0 + v1) + 15, v2));1;30;;;;;
 (((min(min(((min((v0*252) + 64, v1) + -3)/4)*4, (v0*252) + 250) + -186, v1) + v2) - max(min((v0*-252) + v1, 252), -1)) == ((min(min(((min((v0*252) + 64, v1) + -3)/4)*4, (v0*252) + 250) + -186, v1) + v2) - max(min((v0*-252) + v1, 252), -1)));1;110;;;;;
 ((((v0 + v1) + v2) + v3) >= (((((v0 - 1) + v1) + v2) + v3) + 1));1;111;;;;;
 (((v0/2) + ((v1*126) + ((((((min((min(v1*126, 125) + (v0/2)) + 125, (((v2 + v0) + 1)/2) + (v3*-251)) - (v1*126)) - (v0/2)) + 6)/12)*12) + (v3*251)))) == ((v0/2) + ((v1*126) + ((((((min((min(v1*126, 125) + (v0/2)) + 125, (((v2 + v0) + 1)/2) + (v3*-251)) - (v1*126)) - (v0/2)) + 6)/12)*12) + (v3*251)))));1;137;;;;;
 (((max(min((v2*-12) + (max(min(min(((v3 + v4) + -33)/32, (v4/32) + (v5*2))*32, 1964), -35) - max(min(min(((v3 + v4) + -33)/32, (v4/32) + (v5*2))*32, 1999), 0)), -24), -36)/4)*4) == max(min((v2*-12) + (max(min(min(((v3 + v4) + -33)/32, (v4/32) + (v5*2))*32, 1964), -35) - max(min(min(((v3 + v4) + -33)/32, (v4/32) + (v5*2))*32, 1999), 0)), -24), -36));0;2154;;;;;
 (min((v0*4) + ((v1 + v2) + v3), ((((v4*7) + v5)*6) + (v1 + v2)) + 2) == min((v0*4) + ((v1 + v2) + v3), ((((v4*7) + v5)*6) + (v1 + v2)) + 2));1;111;;;;;
 (((v0 + 40)/36) != 0);0;355;;;;;
 ((((((v0 + v1)*4) + v2)*8) + -194) == (((((((v0 + v1)*4) + v2)*8) + -194) + 8) - 1));0;70;;;;;
 (min((min(v0*32, 488) + (v1/2)) + 8, (v2*-508) + v3) == min((min(v0*32, 488) + (v1/2)) + 8, (v2*-508) + v3));1;102;;;;;
 (max(min(((v0 + -5)/2) - min((v0 + 999)/2, (v1/2) - (v2*500)), -3), max(min(v3, -7), -506) + 4) == max(min(((v0 + -5)/2) - min((v0 + 999)/2, (v1/2) - (v2*500)), -3), max(min(v3, -7), -506) + 4));1;105;;;;;
 (((((v0*4) - min((((max(min(v1/8, 249), 0)/8)*2) + v0)*4, ((max(min(((v2 + v1) + 7)/8, 249), 0)/8)*8) + 13))*2) + (((((max(min(v1/8, 249), 0)/8)*8) + v3)*2) + v4)) == ((((v0*4) - min((((max(min(v1/8, 249), 0)/8)*2) + v0)*4, ((max(min(((v2 + v1) + 7)/8, 249), 0)/8)*8) + 13))*2) + (((((max(min(v1/8, 249), 0)/8)*8) + v3)*2) + v4)));1;176;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 124) == min(((v0 + v1) + -1)/8, v2 + 124));1;203;;;;;
 ((max(v0*12, 33) + (v1*2)) == (max(v0*12, 33) + (v1*2)));1;22;;;;;
 ((((((v0 + v1) + 1999)/2000)*256) - (v2*56)) == (((((v0 + v1) + 1999)/2000)*256) - (v2*56)));1;58;;;;;
 (min((((v0 + v1)/4) + (v2*3))*4, (((v0 + v1)/4)*4) + 118) == min((((v0 + v1)/4) + (v2*3))*4, (((v0 + v1)/4)*4) + 118));1;106;;;;;
 ((max(min(v0, 22), -7) - v1) == (max(min(v0, 22), -7) - v1));1;53;;;;;
 (0 >= ((0 + (((((min(((v0*6) + v1)*4, min(v0*24, v2 + 476) + 20) + 3)/4) - v1) - (v0*6)) + 1)) - 1));0;2612;;;;;
 (max(min(min(min(min(((min(max(min(v7 + v5, 1997), -2), v6 + v4) - max(min(v5, 2004), 5))/4) + 1, ((min(max(min(v7 + v5, 1997), -2), v6 + v4) - max(min(v5, 2004), 5))/4) + 1), (((v6 + v4) - max(min(v5, 2004), 5)) + 1)/4), (((v6 + v4) - max(min(v5, 2004), 5)) + 1)/4), (0 + ((v3 + 11)/4)) - 1) + 1, min(max(((v4 - max(min(v5, 2004), 5))/4) + 2, 0), ((v3 + 11)/4) + 0)) <= min(max(((v4 - max(min(v5, 2004), 5))/4) + 2, 0), ((v3 + 11)/4) + 0));0;3109;;;;;
 (max(min(max(((v0 - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), (v2 + 13)/4), min(min((((v3 + v0) - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 4)/32, ((max(min(((((((v4 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 6)/4), (v2 + 9)/4) + 1) == max(min(max(((v0 - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 68)/32, 0), (v2 + 13)/4), min(min((((v3 + v0) - (max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)*8)) + 4)/32, ((max(min(((((((v4 + v1) + 7)/8)*8) + 68)/63)*8, 244), -5) - max(min(((((v1/8)*8) + -5)/63)*8, 253), 4)) + 6)/4), (v2 + 9)/4) + 1));1;496;;;;;
 (max(min(1999, (((v2*8) + -4) + ((min((max(min(((v3 + v4) + -1)/8, 249), 0) - (v5*16)) - max(min(v4/8, 249), 0), 13)*8) + 24)) - 1) + 1, min(max(0, (v2*8) + -4), ((min((max(min(((v3 + v4) + -1)/8, 249), 0) - (v5*16)) - max(min(v4/8, 249), 0), 13)*8) + 24) + ((v2*8) + -4))) <= min(max(0, (v2*8) + -4), ((min((max(min(((v3 + v4) + -1)/8, 249), 0) - (v5*16)) - max(min(v4/8, 249), 0), 13)*8) + 24) + ((v2*8) + -4)));0;2714;;;;;
 (min((v0*4) + v1, v2 + -34) == min((v0*4) + v1, v2 + -34));1;57;;;;;
 ((min((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8, (((v3*4) + v4)*8) + 7) - (((((v3*4) + v4)*2) + v5)*4)) == (min((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8, (((v3*4) + v4)*8) + 7) - (((((v3*4) + v4)*2) + v5)*4)));1;133;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1004)/1002) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1004)/1002));1;1135;;;;;
 ((((min(v0*16, 109) + (v1*8)) + v2) + 7) < ((min(v0*16, 109) + ((v1 + 1)*8)) + v2));1;118;;;;;
 ((min(((v0*67) + v1) + 17, v2) - ((v0*67) + ((v3*4) + v1))) == (min(((v0*67) + v1) + 17, v2) - ((v0*67) + ((v3*4) + v1))));1;71;;;;;
 ((max(min(v0, 249), 0) + (v1*65)) == (max(min(v0, 249), 0) + (v1*65)));1;43;;;;;
 (((((((v0 + v1) + -1)/65) - (v1/65))/8) + 1) == ((((((v0 + v1) + -1)/65) - (v1/65))/8) + 1));1;39;;;;;
 (((((((v0 + v1) + -1)/63) - (v2*8)) - (v3*4)) - (v1/63)) == ((((((v0 + v1) + -1)/63) - (v2*8)) - (v3*4)) - (v1/63)));1;67;;;;;
 (((v0/((v1 + 14)/12))/((v2 + 18)/16)) == ((v0/((v1 + 14)/12))/((v2 + 18)/16)));1;52;;;;;
 ((((max(min(min(v1*-32, -111) + (v2*-16), -130), -146) + (v1*32))/2)*2) == (max(min(min(v1*-32, -111) + (v2*-16), -130), -146) + (v1*32)));0;1107;;;;;
 ((min((((v0 + v1) + 37)/2) - (v2*10), ((v0 + v1)/2) + 9) - (((v0 + v1)/2) + (v3*2))) == (min((((v0 + v1) + 37)/2) - (v2*10), ((v0 + v1)/2) + 9) - (((v0 + v1)/2) + (v3*2))));1;93;;;;;
 ((v0 + -55) == (((v0 + -55) + 75) - 1));0;44;;;;;
 (min(((v0 + v1) + 1063)/8, v2 + 21) == min(((v0 + v1) + 1063)/8, v2 + 21));1;44;;;;;
 (((v0 + 70)/63) != 0);0;351;;;;;
 ((min(v0*44, 84) + min((max(min(v1 + v2, 1999), 0)/16)*16, ((((max(min(v2, 2002), 3) + -3)/16) + (v3*8))*16) + 89)) == (min(v0*44, 84) + min((max(min(v1 + v2, 1999), 0)/16)*16, ((((max(min(v2, 2002), 3) + -3)/16) + (v3*8))*16) + 89)));1;151;;;;;
 ((max(min(v0/8, 249), 0) + (v1*125)) == (max(min(v0/8, 249), 0) + (v1*125)));1;48;;;;;
 ((((v0 + v1)/4) + (v2*4)) == (((v0 + v1)/4) + (v2*4)));1;106;;;;;
 ((min((v0 - v1)*16, 72) + -72) >= 1);0;37;;;;;
 ((v0 - ((((v1 + v2)/4) + (v3*4)) + v4)) == (v0 - ((((v1 + v2)/4) + (v3*4)) + v4)));1;47;;;;;
 (((v0 + 30)/23) != 0);0;392;;;;;
 (((min(v0*16, 236)/4)*4) == min(v0*16, 236));1;57;;;;;
 (((v0*31) + (((v1/1000)*2048) + (v2*400))) == ((v0*31) + (((v1/1000)*2048) + (v2*400))));1;55;;;;;
 (((min(v0 - v1, 218) + 68)/8) == ((min(v0 - v1, 218) + 68)/8));1;66;;;;;
 ((min(max(min((((v0 + v1) + 127)/32)*4, 246), -3) - v2, -36) + 40) == (min(max(min((((v0 + v1) + 127)/32)*4, 246), -3) - v2, -36) + 40));1;139;;;;;
 (min((((v0*-63) - (v1*4)) + (min(((v2 + v3) + 3)/2, (min(v4*32, 31) + ((v0*63) + v5)) + 27) + (v4*-32))) + 8, v5) == min((((v0*-63) - (v1*4)) + (min(((v2 + v3) + 3)/2, (min(v4*32, 31) + ((v0*63) + v5)) + 27) + (v4*-32))) + 8, v5));1;136;;;;;
 ((min(((v0*2) + v1)*4, (min(v0*4, 23)*2) + 3) + (((min((v2*16) + v3, (v4*8) + -11)*2) + v5) + v6)) == (min(((v0*2) + v1)*4, (min(v0*4, 23)*2) + 3) + (((min((v2*16) + v3, (v4*8) + -11)*2) + v5) + v6)));1;137;;;;;
 (((v0*364) + (((v1 + v2)/500)*512)) == ((v0*364) + (((v1 + v2)/500)*512)));1;43;;;;;
 (v0 != 0);0;1462;;;;;
 ((((v0 + 2)/4) - (v1*2)) == (((v0 + 2)/4) - (v1*2)));1;39;;;;;
 (-24 == ((-24 + (33 - max(min(v0*5, 33), 4))) - 1));0;93;;;;;
 ((((v0*-320)/4)*4) == (v0*-320));1;20;;;;;
 ((v0 + -29) == (((v0 + -29) + (34 - max((((max(min((v1 + v2)/8, 249), 0)/8)*8) - v3)*8, 26))) - 1));0;207;;;;;
 ((((((((v0 + v1) + -1)/8) - (v1/8))*8) + 1016)/1004) == (((((((v0 + v1) + -1)/8) - (v1/8))*8) + 1016)/1004));1;495;;;;;
 ((max(v0, 0) - (v1*10)) == (max(v0, 0) - (v1*10)));1;47;;;;;
 ((v0 - (v1*1000)) == (v0 - (v1*1000)));1;77;;;;;
 (min(((v0*128) + v1) + 127, v2) == min(((v0*128) + v1) + 127, v2));1;57;;;;;
 ((((v0*260)/4)*4) == (v0*260));1;23;;;;;
 ((((((((v0 + v1) + -1)/63)*8) - ((v2/4)*65)) - (v3*34)) - ((v1/63)*8)) == (((((((v0 + v1) + -1)/63)*8) - ((v2/4)*65)) - (v3*34)) - ((v1/63)*8)));1;815;;;;;
 ((((((((v0 + v1) + -1)/1000) - (v1/1000))*256) + 723)/196) == (((((((v0 + v1) + -1)/1000) - (v1/1000))*256) + 723)/196));1;79;;;;;
 (((v0 + 67)/64) == ((v0 + 67)/64));1;1335;;;;;
 (min((((v0 + v1) + 62)/63)*8, v2 + 8) == min((((v0 + v1) + 62)/63)*8, v2 + 8));1;64;;;;;
 (((((v0 % ((v1/32) + 1))*-32)/4)*4) == ((v0 % ((v1/32) + 1))*-32));1;52;;;;;
 ((((v0*2) + v1) - min(v2 + 7, v1)) == (((v0*2) + v1) - min(v2 + 7, v1)));1;70;;;;;
 ((min(v0, 18) + -20) == (((min(v0, 18) + -20) + (25 - min(v0, 18))) - 1));0;82;;;;;
 (((v0*12) + v1) == ((v0*12) + v1));1;32;;;;;
 (min(((v0 + v1) + 499)/4, v2 + 31) == min(((v0 + v1) + 499)/4, v2 + 31));1;42;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + -1)/65) - (v2*4)) - (v1/65), 3)*2) + 2)) - 1));0;150;;;;;
 (min((((((v0/500)*16) + v1)*2) + v2)*16, (v3*8) + 29) == min((((((v0/500)*16) + v1)*2) + v2)*16, (v3*8) + 29));1;96;;;;;
 ((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - (v2*125)) == (max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - (v2*125)));1;71;;;;;
 (((((min(((((v0/63) + (v1*2))*2) + v2)*4, (min(((v3 + v0) + -1)/63, ((v0/63) + (v1*2)) + 1)*8) + 4)/4) - v2) - (v1*4)) - ((v0/63)*2)) == ((((min(((((v0/63) + (v1*2))*2) + v2)*4, (min(((v3 + v0) + -1)/63, ((v0/63) + (v1*2)) + 1)*8) + 4)/4) - v2) - (v1*4)) - ((v0/63)*2)));1;166;;;;;
 ((max((((max(v0*64, 436)/4)*-4) + ((v0*64) + v1)) - (min(v0*64, 436) + v1), -433) + 505) <= 1024);0;1146;;;;;
 (((min((v1*-68) + (((((v2 + v3) + -1)/63)*64) - ((v3/63)*64)), -28)/4)*4) == min((v1*-68) + (((((v2 + v3) + -1)/63)*64) - ((v3/63)*64)), -28));0;1263;;;;;
 (((((v0 % (((v1*16) + 460)/284))*-1136)/16)*16) == ((v0 % (((v1*16) + 460)/284))*-1136));1;76;;;;;
 ((((((v0 + v1) + -1)/250)*8) - (((v1/250)*8) + v2)) == (((((v0 + v1) + -1)/250)*8) - (((v1/250)*8) + v2)));1;36;;;;;
 (((((min((((v0/500)*16) + v1)*4, ((((v2 + v0) + -1)/500)*64) + 85) + 7)/2) - (v1*2)) - ((v0/500)*32)) == ((((min((((v0/500)*16) + v1)*4, ((((v2 + v0) + -1)/500)*64) + 85) + 7)/2) - (v1*2)) - ((v0/500)*32)));1;109;;;;;
 (((v0*284) + ((max(min(v1/65, 34), 3) - max(min(((v2 + v1) + 64)/65, 27), -4))*16)) == ((v0*284) + ((max(min(v1/65, 34), 3) - max(min(((v2 + v1) + 64)/65, 27), -4))*16)));1;207;;;;;
 (min(max(min((((v0 + v1)*2) + v2)*4, 2193), 194) + (v3*4), max(min((((v0 + v1)*2) + v2)*4, 2190), 191) + 6) == min(max(min((((v0 + v1)*2) + v2)*4, 2193), 194) + (v3*4), max(min((((v0 + v1)*2) + v2)*4, 2190), 191) + 6));1;121;;;;;
 (0 == ((0 + (38 - max(min(v0*8, 38), 30))) - 1));0;69;;;;;
 (max(((v0 - v1) + 89)/4, 0) >= ((max(((v0 - v1) + 89)/4, 0) + ((((v0 - v1)/4) - max(((v0 - v1) + 89)/4, 0)) + 23)) - 1));1;149;;;;;
 (min(((((v0 + v1) + 7)/8) - (v1/8)) + -3, v2) == min(((((v0 + v1) + 7)/8) - (v1/8)) + -3, v2));1;59;;;;;
 (((((((min(((v0 % ((v1 + 127)/128))*128) + v2, (v1 + v2) + -128) % 8) + 127)/8)*8)/68)*68) == ((((min(((v0 % ((v1 + 127)/128))*128) + v2, (v1 + v2) + -128) % 8) + 127)/8)*8));0;109;;;;;
 ((((-992 - ((min(v0*1000, v1 + -1000) + v2) % 8))/8) + (((v3*16) + ((v4*8) + v5))*4)) == (((-992 - ((min(v0*1000, v1 + -1000) + v2) % 8))/8) + (((v3*16) + ((v4*8) + v5))*4)));1;102;;;;;
 ((((((((v0 + v1) + -1)/65) - (v1/65))*2) + 37)/33) == (((((((v0 + v1) + -1)/65) - (v1/65))*2) + 37)/33));1;71;;;;;
 ((max(min(v0, 2001), 2) + (v1*4)) == (max(min(v0, 2001), 2) + (v1*4)));1;72;;;;;
 (((((v0 - v1)*4) + 762)/707) == ((((v0 - v1)*4) + 762)/707));1;801;;;;;
 (max(min(max(((v0 - (max(min(v1/8, 249), 0)*8)) + 44)/32, 0), (v2/4) + 2), min(min((((v3 + v0) - (max(min(v1/8, 249), 0)*8)) + -20)/32, ((max(min(((v4 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 1)/4), (v2/4) + 1) + 1) == max(min(max(((v0 - (max(min(v1/8, 249), 0)*8)) + 44)/32, 0), (v2/4) + 2), min(min((((v3 + v0) - (max(min(v1/8, 249), 0)*8)) + -20)/32, ((max(min(((v4 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 1)/4), (v2/4) + 1) + 1));1;398;;;;;
 (min(567 - (((v0*9) + v1)*4), (((((v2 + v3) + -1)/500)*512) - ((((v0*9) + v1)*4) + v4)) + 724) == min(567 - (((v0*9) + v1)*4), (((((v2 + v3) + -1)/500)*512) - ((((v0*9) + v1)*4) + v4)) + 724));1;103;;;;;
 ((max(v0*16, 250) + (v1*8)) == (max(v0*16, 250) + (v1*8)));1;318;;;;;
 (((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*16) + 460)/284) == ((((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*16) + 460)/284));1;238;;;;;
 (min((v0*8) + v1, min(v2, 256) + -7) == min((v0*8) + v1, min(v2, 256) + -7));1;1541;;;;;
 (((v0*244) + ((v1*4) + v2)) == ((v0*244) + ((v1*4) + v2)));1;50;;;;;
 ((max(min(v0, 2061), 62) + (v1*4)) == (max(min(v0, 2061), 62) + (v1*4)));1;43;;;;;
 (((max(min((v1*-64) + (max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) - (max(min((v2*500) + v3, min(v4 + v3, 2499) + -500), 0) + (v5*32))), -468), -500)/4)*4) == max(min((v1*-64) + (max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) - (max(min((v2*500) + v3, min(v4 + v3, 2499) + -500), 0) + (v5*32))), -468), -500));0;2138;;;;;
 ((928 - ((v0 + v1)*8)) == (2927 - ((v0 + v1)*8)));0;59;;;;;
 ((((v0 + v1)/16) + (v2*2)) == (((v0 + v1)/16) + (v2*2)));1;54;;;;;
 ((((v0/63)*8) + (v1*28)) == (((v0/63)*8) + (v1*28)));1;47;;;;;
 (min(v0*125, v1 + -125) == min(v0*125, v1 + -125));1;808;;;;;
 (max(((v0 % 4) + 75)/4, ((((min(v1*32, 968) + v0) + 63)/4) - min(((v0 + 35)/4) + (v1*8), ((min(v1*32, 968) + v0)/4) + -2)) + 1) <= 1024);0;1616;;;;;
 (((v0 - (v1*16)) - ((v2*2) + v3)) == ((v0 - (v1*16)) - ((v2*2) + v3)));1;77;;;;;
 (min((v0*4) + ((v1*126) + v2), v3 + 25) == min((v0*4) + ((v1*126) + v2), v3 + 25));1;87;;;;;
 ((((((((v0 + v1) + -1)/500) - (v1/500))*64) + 113)/34) == (((((((v0 + v1) + -1)/500) - (v1/500))*64) + 113)/34));1;183;;;;;
 (((v0*64) + ((((max(min(v1, 2002), 3) + -3)/16)*4) + v2)) == ((v0*64) + ((((max(min(v1, 2002), 3) + -3)/16)*4) + v2)));1;93;;;;;
 ((((v0*4) - min((((min(v1 - v2, (v0*4) + -8) + 15)/4)*4) + v2, min((v0*4) + v2, v1 + 8) + 4)) + ((v3*2) + v2)) == (((v0*4) - min((((min(v1 - v2, (v0*4) + -8) + 15)/4)*4) + v2, min((v0*4) + v2, v1 + 8) + 4)) + ((v3*2) + v2)));1;128;;;;;
 (min(v0 - ((v1*62) + v2), v3) == min(v0 - ((v1*62) + v2), v3));1;67;;;;;
 (((((v0 % ((v1/4) + 1))*-4)/2)*2) == ((v0 % ((v1/4) + 1))*-4));1;68;;;;;
 (((v0/504) + (v1*2)) == ((v0/504) + (v1*2)));1;32;;;;;
 (min(((v0 + v1) + 15)/16, ((v1/16) + ((v2/64)*64)) + 63) == min(((v0 + v1) + 15)/16, ((v1/16) + ((v2/64)*64)) + 63));1;69;;;;;
 ((min(max(v0, 0)*16, 61) + -65) >= (((min(max(v0, 0)*16, 61) + -65) + (70 - min(max(v0, 0)*16, 61))) - 1));0;87;;;;;
 ((((((v0*4) + v1)*4) + v2) - max(min(((v3 + v4) + -1)/8, 249), 0)) == (((((v0*4) + v1)*4) + v2) - max(min(((v3 + v4) + -1)/8, 249), 0)));1;94;;;;;
 (min((((v0 + v1) + 15)/16)*2, v2 + 25) == min((((v0 + v1) + 15)/16)*2, v2 + 25));1;66;;;;;
 ((((v0*8) + v1) + -2) >= (((((v0*8) + v1) + -2) + 4) - 1));0;69;;;;;
 ((((v0*35) - ((((v1 + v2) + 124)/125)*16)) + v3) == (((v0*35) - ((((v1 + v2) + 124)/125)*16)) + v3));1;66;;;;;
 (((v0 + 126)/125) != 0);0;352;;;;;
 ((min(v0, 0) + (v1*3)) == (min(v0, 0) + (v1*3)));1;53;;;;;
 (max(min(min(min((((v2 + v3) - v5)/4) + (v4*-6), ((v1 - ((v4*24) + v5)) + 25)/4), ((min(v1 + 22, v2 + v3) - ((v4*24) + v5)) + 3)/4), (0 + ((v6/4) + 8)) - 1) + 1, min(max(((v3 - ((v4*24) + v5)) + 7)/4, 0), ((v6/4) + 8) + 0)) <= min(max(((v3 - ((v4*24) + v5)) + 7)/4, 0), ((v6/4) + 8) + 0));0;2850;;;;;
 (min(max(min(((v0 + v1) + 124)/8, 249), 0), max(min((v0 + v1)/8, 249), 0) + -1) == min(max(min(((v0 + v1) + 124)/8, 249), 0), max(min((v0 + v1)/8, 249), 0) + -1));1;102;;;;;
 (((v0*29) + (((v1 + -2)/16)*2)) == ((v0*29) + (((v1 + -2)/16)*2)));1;60;;;;;
 (((((v0 % (((v1*32) + 2139)/1524))*1524)/4)*4) == ((v0 % (((v1*32) + 2139)/1524))*1524));1;55;;;;;
 (min(((v0 - v1) + 17)/16, 0 - min(v1/16, 0)) == min(((v0 - v1) + 17)/16, 0 - min(v1/16, 0)));1;53;;;;;
 ((min(((v0*64) + ((v1*126) + v2)) + 53, min((v1*126) + 115, v3) + v2) + (v4*8)) == (min(((v0*64) + ((v1*126) + v2)) + 53, min((v1*126) + 115, v3) + v2) + (v4*8)));1;90;;;;;
 ((v0 + 2) < (min(max(min(v1, 1999), (v0 + 1) + 6), v0 + 1) + -4));0;96;;;;;
 ((min(v0, 0) + min((v1*16) + 4, v2)) == (min(v0, 0) + min((v1*16) + 4, v2)));1;48;;;;;
 (((v0 + v1) + -45) < (((v0 + 1) + v1) + -48));0;67;;;;;
 ((((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 133)/128) == (((max(min(((v0 + v1) + -1)/8, 249), 0) - max(min(v1/8, 249), 0)) + 133)/128));1;258;;;;;
 (min(((v0 + v1) + 62)/63, ((v1/63) + ((v2/9)*9)) + 8) == min(((v0 + v1) + 62)/63, ((v1/63) + ((v2/9)*9)) + 8));1;75;;;;;
 (((v0*10) + (min(v1*10, 9) + v2)) == ((v0*10) + (min(v1*10, 9) + v2)));1;61;;;;;
 ((((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 512)/504) == (((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 512)/504));1;90;;;;;
 (((v0*-4) + (min(((v1*-125) + (v2 + v0))*4, (((v3*32) + v0)*4) + 131) + (v3*-128))) == ((v0*-4) + (min(((v1*-125) + (v2 + v0))*4, (((v3*32) + v0)*4) + 131) + (v3*-128))));1;83;;;;;
 (((((v0*2) + v1)*32) + ((v2*128) + v3)) == ((((v0*2) + v1)*32) + ((v2*128) + v3)));1;45;;;;;
 (0 >= ((0 + ((max(min(v0, 31), 29)*-2) + 64)) - 1));0;55;;;;;
 (max(min(max(((v0 - max(min(v1, 2009), 10)) + 13)/4, 0), (v2 + 7)/4), (min(min(max(min(v1, 2006), 7), (v3 + v0) + 6) - max(min(v1, 2009), 10), v2 + 3)/4) + 1) == max(min(max(((v0 - max(min(v1, 2009), 10)) + 13)/4, 0), (v2 + 7)/4), (min(min(max(min(v1, 2006), 7), (v3 + v0) + 6) - max(min(v1, 2009), 10), v2 + 3)/4) + 1));1;178;;;;;
 (((v0*60) + ((v1*116) + v2)) == ((v0*60) + ((v1*116) + v2)));1;45;;;;;
 ((max(min(((v0 + v1)/32)*16, 1036), 37) + (((v2 + 86)/4)*4)) == (max(min(((v0 + v1)/32)*16, 1036), 37) + (((v2 + 86)/4)*4)));1;69;;;;;
 ((((v0 - v1) + 47)/34) != 0);0;484;;;;;
 ((max(min((v0/32)*4, 281), 32) + (v1*12)) == (max(min((v0/32)*4, 281), 32) + (v1*12)));1;63;;;;;
 (min(max(min(v0 + v1, 1875), -124) + 124, v2) == min(max(min(v0 + v1, 1875), -124) + 124, v2));1;279;;;;;
 (max(min(max(v0*8, 75), ((min((max(min(((v1 + v2) + 7)/8, 249), 0) - (v3*128)) - max(min(v2/8, 256), 7), 114) + v0)*8) + 113), min((min((max(min(((v1 + v2) + 7)/8, 249), 0) - (v3*128)) - max(min(v2/8, 256), 7), 114) + v0)*8, 1962) + 113) == max(min(max(v0*8, 75), ((min((max(min(((v1 + v2) + 7)/8, 249), 0) - (v3*128)) - max(min(v2/8, 256), 7), 114) + v0)*8) + 113), min((min((max(min(((v1 + v2) + 7)/8, 249), 0) - (v3*128)) - max(min(v2/8, 256), 7), 114) + v0)*8, 1962) + 113));1;233;;;;;
 (((((v0 + v1) + 5)/2) - ((((v2*63) + ((v3*16) + v4))*2) + v5)) == ((((v0 + v1) + 5)/2) - ((((v2*63) + ((v3*16) + v4))*2) + v5)));1;78;;;;;
 (max(-107 - (max(min(max(min(((v0 + v1) + 7)/8, 249), 0), min((v2*16) + ((v3*16) + (max(min(v1/8, 256), 7) + (v4*128))), (max(min(v1/8, 256), 7) + (min((min((((v4*8) + v3)*16) + 8, v5) + 7)/16, (v4*8) + v3)*16)) + 6) + 2) - ((v2*16) + ((v3*16) + (max(min(v1/8, 256), 7) + (v4*128)))), -13)*8), (max(min(((v4*128) + ((v3*16) - min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (min((min((((v4*8) + v3)*16) + 8, v5) + 7)/16, (v4*8) + v3)*16)) + 8))) + (max(min(v1/8, 256), 7) + (v2*16)), 13), -2)*8) + -107) == max(-107 - (max(min(max(min(((v0 + v1) + 7)/8, 249), 0), min((v2*16) + ((v3*16) + (max(min(v1/8, 256), 7) + (v4*128))), (max(min(v1/8, 256), 7) + (min((min((((v4*8) + v3)*16) + 8, v5) + 7)/16, (v4*8) + v3)*16)) + 6) + 2) - ((v2*16) + ((v3*16) + (max(min(v1/8, 256), 7) + (v4*128)))), -13)*8), (max(min(((v4*128) + ((v3*16) - min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (min((min((((v4*8) + v3)*16) + 8, v5) + 7)/16, (v4*8) + v3)*16)) + 8))) + (max(min(v1/8, 256), 7) + (v2*16)), 13), -2)*8) + -107));1;421;;;;;
 ((v0/16) >= ((((v0 - 1)/16) + 1) + 1));0;71;;;;;
 (max(-1644 - (v0*64), (v0*64) + 959) >= 0);0;509;;;;;
 ((((v0 + -1)/4) - (((v1*4) + v2)*8)) == (((v0 + -1)/4) - (((v1*4) + v2)*8)));1;53;;;;;
 (((v0*15) + (((v1 + v2)/250)*64)) == ((v0*15) + (((v1 + v2)/250)*64)));1;48;;;;;
 (((((((uint1)1 && (0 <= 0)) && ((8 - 1) >= (8 - 1))) && (((((((v0/4) + v1)*4) + v2) + 0) + -20) <= (v2 + ((((v0/4) + v1)*4) + -20)))) && (((((((v0/4) + v1)*4) + v2) + 3) + -20) >= (v2 + ((min(v0/4, ((v0/4) + v1) - max(v1, 37))*4) + 131)))) && (0 <= 0)) && (0 >= 0));0;1323;;;;;
 (((max(min((min(v3*125, v4 + -125) + (v2 + 124))/8, 249) - max(min((min(v3*125, v4 + -125) + v2)/8, 249), 0), 0)/4)*4) == max(min((min(v3*125, v4 + -125) + (v2 + 124))/8, 249) - max(min((min(v3*125, v4 + -125) + v2)/8, 249), 0), 0));0;1753;;;;;
 (max(min((v1 + v2) + -1, ((v4 + v5) + (min(v3*8, -5) + 13)) - 1) + 1, min(max(v2, v4 + v5), (min(v3*8, -5) + 13) + (v4 + v5))) <= min(max(v2, v4 + v5), (min(v3*8, -5) + 13) + (v4 + v5)));0;1805;;;;;
 (((((v0 % (((v1*32) + 1019)/596))*596)/4)*4) == ((v0 % (((v1*32) + 1019)/596))*596));1;73;;;;;
 ((((v0*8) - (v1*62)) - ((v2/133)*8)) == (((v0*8) - (v1*62)) - ((v2/133)*8)));1;54;;;;;
 (((v0*36) + (((v1/500)*16) + v2)) == ((v0*36) + (((v1/500)*16) + v2)));1;61;;;;;
 (((((v0 % ((v1 + 66)/64))*-512)/32)*32) == ((v0 % ((v1 + 66)/64))*-512));1;77;;;;;
 (((v0/4) + 4) != 0);0;271;;;;;
 (((((((v0 + v1) + 755)/63) - (v1/63))*2) + 30) == ((((((v0 + v1) + 755)/63) - (v1/63))*2) + 30));1;64;;;;;
 (min(max(((v0/16) + v1)*8, 1003), (min((v0/16)*8, 4) + (v2*253)) + 252) == min(max(((v0/16) + v1)*8, 1003), (min((v0/16)*8, 4) + (v2*253)) + 252));1;2233;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 255)/251) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 255)/251));1;160;;;;;
 (((min(v0*24, 976)/8)*8) == min(v0*24, 976));1;76;;;;;
 ((((v0*8) + 76)/67) != 0);0;497;;;;;
 (max(min(min(min((((v2 + v3)/4) - (v4*2)) + 13, ((v1 + 57)/4) - (v4*2)), ((min(v1 + 2, v2 + v3) + 55)/4) - (v4*2)), (0 + ((min(v5, 5)*2) + 25)) - 1) + 1, min(max((((v3 + 55)/4) - (v4*2)) + 1, 0), ((min(v5, 5)*2) + 25) + 0)) <= min(max((((v3 + 55)/4) - (v4*2)) + 1, 0), ((min(v5, 5)*2) + 25) + 0));0;2943;;;;;
 ((max(min(min((((v0 + v1) + 124)/125)*128, ((v2*244) + ((v1/125)*128)) + 100), 1918), -81) - max(min((v2*244) + ((v1/125)*128), 2061), 62)) == (max(min(min((((v0 + v1) + 124)/125)*128, ((v2*244) + ((v1/125)*128)) + 100), 1918), -81) - max(min((v2*244) + ((v1/125)*128), 2061), 62)));1;309;;;;;
 (((((v0 + v1) + 5)/2) - ((((v2*32) + v3)*4) + v4)) == ((((v0 + v1) + 5)/2) - ((((v2*32) + v3)*4) + v4)));1;61;;;;;
 (min(v0*125, v1) == min(v0*125, v1));1;23;;;;;
 ((min(v0*12, 52) + (v1 + v2)) == (min(v0*12, 52) + (v1 + v2)));1;49;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 136)/125) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 136)/125));1;176;;;;;
 (min((((v0 + v1) + 63)/32)*4, (v2*4) + 35) == min((((v0 + v1) + 63)/32)*4, (v2*4) + 35));1;57;;;;;
 (((min((((v0 + v1) + 999)/4) - (v2*128), (min(v3*33, 101) + ((v0 + v1)/4)) + 26) - (v3*33)) - ((v0 + v1)/4)) == ((min((((v0 + v1) + 999)/4) - (v2*128), (min(v3*33, 101) + ((v0 + v1)/4)) + 26) - (v3*33)) - ((v0 + v1)/4)));1;116;;;;;
 ((min(v0*4, 135) + (v1 + v2)) == (min(v0*4, 135) + (v1 + v2)));1;47;;;;;
 ((max(min((v0*500) + v1, min(v2 + v1, 1997) + -500), -502) - (max(min((v0*500) + v1, min(v2 + v1, 2501) + -500), 2) + (v3*4))) == (max(min((v0*500) + v1, min(v2 + v1, 1997) + -500), -502) - (max(min((v0*500) + v1, min(v2 + v1, 2501) + -500), 2) + (v3*4))));1;116;;;;;
 ((v0 - (max(min(min(v1/16, 124)*2, 1), -1)*8)) == (v0 - (max(min(min(v1/16, 124)*2, 1), -1)*8)));1;59;;;;;
 (((((((v0 + v1) + 135)/128) - (v1/128))/4) + 1) == ((((((v0 + v1) + 135)/128) - (v1/128))/4) + 1));1;61;;;;;
 (((((((v0 + v1) + 1)/2) - (v1/2))/501) + 1) == ((((((v0 + v1) + 1)/2) - (v1/2))/501) + 1));1;60;;;;;
 (max((min((((v0 + v1) + -1)/250) - (v1/250), v2)*8) + 1, v3) == max((min((((v0 + v1) + -1)/250) - (v1/250), v2)*8) + 1, v3));1;80;;;;;
 (((v0*31) + (((v1/63)*16) + v2)) == ((v0*31) + (((v1/63)*16) + v2)));1;49;;;;;
 ((min((((v0 + v1) + 3)/4) - (v2*8), (v1/4) + 7) - (((v1/4) + (v3*4)) + v4)) == (min((((v0 + v1) + 3)/4) - (v2*8), (v1/4) + 7) - (((v1/4) + (v3*4)) + v4)));1;101;;;;;
 ((v0 + -5) == (((v0 + -5) + (11 - max((v1 - v2)*8, 3))) - 1));0;122;;;;;
 ((min(v0*63, 62) + (v1 + v2)) == (min(v0*63, 62) + (v1 + v2)));1;48;;;;;
 (max(min((((((v0 + v1) + 79)/16) - v2) + -1)/4, -1 - ((v2 - (((v0 + v1) + 79)/16))/4)), (((((v0 + v1) + 95)/16) - (((v1 + -2)/16) + (v3*16))) + -1)/4) == max(min((((((v0 + v1) + 79)/16) - v2) + -1)/4, -1 - ((v2 - (((v0 + v1) + 79)/16))/4)), (((((v0 + v1) + 95)/16) - (((v1 + -2)/16) + (v3*16))) + -1)/4));1;163;;;;;
 ((min(((((v0 + v1) + -1)/16) - (v2*32)) - (v3*64), (v1/16) + 31) - ((v1/16) + (v4*4))) == (min(((((v0 + v1) + -1)/16) - (v2*32)) - (v3*64), (v1/16) + 31) - ((v1/16) + (v4*4))));1;93;;;;;
 ((((v0 + v1)/2) + (v2*131)) == (((v0 + v1)/2) + (v2*131)));1;55;;;;;
 ((min(((v0*2) + v1)*4, min(v0*8, 53) + 4) + (v2 + v3)) == (min(((v0*2) + v1)*4, min(v0*8, 53) + 4) + (v2 + v3)));1;72;;;;;
 (((v0*8) - ((((v1*63) + v2)*4) + v3)) == ((v0*8) - ((((v1*63) + v2)*4) + v3)));1;84;;;;;
 (min(max(min(v0/8, 258), 9), max(min(((v1 + v0) + 7)/8, 249), 0) + 15) == min(max(min(v0/8, 258), 9), max(min(((v1 + v0) + 7)/8, 249), 0) + 15));1;93;;;;;
 (((v0 + 10)/504) == ((((v0 + 10)/504) + ((((v0 + 10) % 504) + 503)/504)) - 1));0;571;;;;;
 (min(max(min(((v0 + v1) + 1)/2, 999), 0)*2, (min((max(min(v1/2, 999), 0) + (v2*4))*2, (max(min(v1/2, 999), 0)*2) + 247) + (v3*251)) + -4) == min(max(min(((v0 + v1) + 1)/2, 999), 0)*2, (min((max(min(v1/2, 999), 0) + (v2*4))*2, (max(min(v1/2, 999), 0)*2) + 247) + (v3*251)) + -4));1;147;;;;;
 ((((v0*34) + v1) + 35) < ((((v0 + 1)*34) + v1) + -1));0;67;;;;;
 (min((v0*8) + 474, v1) == min((v0*8) + 474, v1));1;43;;;;;
 ((1 - (max(min(v0/63, 31), 0)*2)) > (((max(min(((v1 + v0) + -1)/63, 31), 0) - max(min(v0/63, 31), 0))*2) + 5));0;716;;;;;
 ((((v0 + v1)*2) + -2) >= (((((v0 + v1)*2) + -2) + 2) - 1));0;66;;;;;
 (((((v0 + v1) + 62)/63) - ((v2*3) + v3)) == ((((v0 + v1) + 62)/63) - ((v2*3) + v3)));1;50;;;;;
 ((((((v0 + v1) + 7)/8) + (v2*-16)) - (v1/8)) == (((((v0 + v1) + 7)/8) + (v2*-16)) - (v1/8)));1;51;;;;;
 ((((v0*64) + 2188)/1236) != 0);0;1117;;;;;
 (min(min(62 - (v0/2), (min((max(min(((v1 + v2) + 47)/16, 124), 0) - (v3*4)) - max(min(v2/16, 126), 2), 1) + 1)/2), (min((max(min(((v1 + v2) + 47)/16, 124), 0) - (v3*4)) - max(min(v2/16, 126), 2), 1)/2) + 1) == min(min(62 - (v0/2), (min((max(min(((v1 + v2) + 47)/16, 124), 0) - (v3*4)) - max(min(v2/16, 126), 2), 1) + 1)/2), (min((max(min(((v1 + v2) + 47)/16, 124), 0) - (v3*4)) - max(min(v2/16, 126), 2), 1)/2) + 1));1;186;;;;;
 (max(min(min(min(0, (((v1 + v2) - (((v3*39) + v4)*8)) + 12)/160), ((max(v5, 0) - ((v3*39) + v4)) + -19)/20), (0 + 2) - 1) + 1, min(max(((v2 - (((v3*39) + v4)*8)) + 172)/160, 0), 2 + 0)) <= min(max(((v2 - (((v3*39) + v4)*8)) + 172)/160, 0), 2 + 0));0;2601;;;;;
 ((((min(v0*32, 93) + (v1 + v2))/8) + (v3*4)) == (((min(v0*32, 93) + (v1 + v2))/8) + (v3*4)));1;70;;;;;
 (min(max((v0/4) - (max(min(v1/8, 249), 0)*2), -2), (v2*2) + 1) == min(max((v0/4) - (max(min(v1/8, 249), 0)*2), -2), (v2*2) + 1));1;84;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 509)/504) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 509)/504));1;148;;;;;
 ((((((v0/8)*8) + -5)/63) + (v1*4)) == (((((v0/8)*8) + -5)/63) + (v1*4)));1;42;;;;;
 (((((v0 % (((v1*64) + 433)/272))*272)/4)*4) == ((v0 % (((v1*64) + 433)/272))*272));1;54;;;;;
 (min((max(min((v0 + v1)/2, 999), 0) + (v2*34)) + 32, v3) == min((max(min((v0 + v1)/2, 999), 0) + (v2*34)) + 32, v3));1;90;;;;;
 (((((((uint1)1 && (((max(v0*2, -5) + v1) + 3) <= ((((v0*2) + 0) + v1) + -2))) && ((((v0*2) + v1) + 4) >= ((((v0*2) + ((2 + 0) - 1)) + v1) + ((6 + -2) - 1)))) && (((((((v2/125)*2) + 0)*4) + 0) + -1) <= (((((((v2/125)*2) + 0)*4) + 0) + -2) + 1))) && (((((((v2/125)*2) + ((v3*2) + 3))*4) + 3) + -1) >= (((((((v2/125)*2) + ((((v3*2) + 2) + 0) - 1))*4) + ((4 + 0) - 1)) + ((6 + -2) - 1)) + 1))) && ((v4*16) <= ((v4*16) + 0))) && (((v4*16) + 15) >= ((v4*16) + ((16 + 0) - 1))));0;474;;;;;
 (((min(v0, -437) + 509)/4) == ((min(v0, -437) + 509)/4));1;55;;;;;
 (((v0*8) + -45) == ((((v0*8) + -45) + 1043) - 1));0;44;;;;;
 (max(min(max(((v0 + 35)/4) - (min(((v1*2) + v2)*2, 253)*2), -1), (v3*2) + 7), min(min(((v4*2) - min(((v1*2) + v2)*2, 253))*2, (min(v4*16, (v5 + v0) + 4)/4) - (min(((v1*2) + v2)*2, 253)*2)), v3*2) + 7) == max(min(max(((v0 + 35)/4) - (min(((v1*2) + v2)*2, 253)*2), -1), (v3*2) + 7), min(min(((v4*2) - min(((v1*2) + v2)*2, 253))*2, (min(v4*16, (v5 + v0) + 4)/4) - (min(((v1*2) + v2)*2, 253)*2)), v3*2) + 7));1;210;;;;;
 (min(((v0*128) + ((v1*8) + v2)) + -3, min((v0*128) + 128, v3) + v2) == min(((v0*128) + ((v1*8) + v2)) + -3, min((v0*128) + 128, v3) + v2));1;54;;;;;
 (min((358 - max((((v0 % 2)*3) + v1)*60, 295))/4, max((354 - max((((v0 % 2)*3) + v1)*60, 295))/4, 87 - (max((((v0 % 2)*3) + v1)*60, 295)/4)) + 1) == min((358 - max((((v0 % 2)*3) + v1)*60, 295))/4, max((354 - max((((v0 % 2)*3) + v1)*60, 295))/4, 87 - (max((((v0 % 2)*3) + v1)*60, 295)/4)) + 1));1;152;;;;;
 (((v0*62) + (v1*8)) == ((v0*62) + (v1*8)));1;57;;;;;
 ((((((((v0 + v1) + 87)/8) - (v1/8))*8) + 156)/68) == (((((((v0 + v1) + 87)/8) - (v1/8))*8) + 156)/68));1;82;;;;;
 ((((v0 - v1) + 76)/65) != 0);0;455;;;;;
 (min(min(min(v0*64, 444) + v1, 1449) + -450, v2) == min(min(min(v0*64, 444) + v1, 1449) + -450, v2));1;54;;;;;
 ((min(v0*12, 119) + (min(((v1 + v2) + -65)/32, (v2/32) + (v3*4))*16)) == (min(v0*12, 119) + (min(((v1 + v2) + -65)/32, (v2/32) + (v3*4))*16)));1;59;;;;;
 ((min((v0 - v1)*16, 72) + -77) >= (((min((v0 - v1)*16, 72) + -77) + (83 - min((v0 - v1)*16, 72))) - 1));0;102;;;;;
 (min((v0*4) + (max(v1*16, -2) + (v2*4)), (((v1*4) + v2)*4) + 12) == min((v0*4) + (max(v1*16, -2) + (v2*4)), (((v1*4) + v2)*4) + 12));1;136;;;;;
 (min(v0*16, ((v1/8)*16) + 54) == min(v0*16, ((v1/8)*16) + 54));1;34;;;;;
 (min(((((v0 - v1) + 5)/4)*4) + v1, v0 + 2) == min(((((v0 - v1) + 5)/4)*4) + v1, v0 + 2));1;1425;;;;;
 (((min(v0*72, 428)/2)*2) == min(v0*72, 428));1;66;;;;;
 ((v0 - (v1*1001)) == (v0 - (v1*1001)));1;23;;;;;
 (min((v0*4) + (max(v1*500, -5) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 496) == min((v0*4) + (max(v1*500, -5) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 496));1;89;;;;;
 (((v0 + v1) + 63) < (((v0 + 1) + v1) + -10));0;47;;;;;
 ((v0 - (((v1*126) + ((v2*8) + v3))*4)) == (v0 - (((v1*126) + ((v2*8) + v3))*4)));1;47;;;;;
 ((((((((v0 + v1) + -1)/1000) - (v1/1000))*1024) + 3179)/1051) == (((((((v0 + v1) + -1)/1000) - (v1/1000))*1024) + 3179)/1051));1;69;;;;;
 (min(256 - (v0*65), (v1 - ((v0*65) + ((v2*257) + v3))) + 11) == min(256 - (v0*65), (v1 - ((v0*65) + ((v2*257) + v3))) + 11));1;56;;;;;
 (max((min(min(((v0*126) + v1) + 125, v2), v3 + 54) + v4) + 16, v3) == max((min(min(((v0*126) + v1) + 125, v2), v3 + 54) + v4) + 16, v3));1;71;;;;;
 ((min(((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) - (v3*8)) + 3, v4) - ((v5*3) + ((v6*9) + v4))) == (min(((max((((v0 + v1) + -1)/65)*8, 239) - (v2*16)) - (v3*8)) + 3, v4) - ((v5*3) + ((v6*9) + v4))));1;125;;;;;
 (min(max(((v0 - ((v1/2)*2)) + 3)/4, 0), (v2/2) + 1) == min(max(((v0 - ((v1/2)*2)) + 3)/4, 0), (v2/2) + 1));1;74;;;;;
 (((v0/2) + ((v1*34) + ((((((min((min(v1*34, 33) + (v0/2)) + 25, (((v2 + v0) + 3)/2) + (v3*-63)) - (v1*34)) - (v0/2)) + 11)/8)*8) + (v3*63)))) == ((v0/2) + ((v1*34) + ((((((min((min(v1*34, 33) + (v0/2)) + 25, (((v2 + v0) + 3)/2) + (v3*-63)) - (v1*34)) - (v0/2)) + 11)/8)*8) + (v3*63)))));1;134;;;;;
 (min(((v0 + v1) + 31)/8, ((v1/8) + (v2*4)) + 3) == min(((v0 + v1) + 31)/8, ((v1/8) + (v2*4)) + 3));1;66;;;;;
 ((max(min(min(((v0 + v1) + -1)/8, (min((min((((v0 + v1) + -1)/8) - v2, (v3*16) + 15)/2)*2, (v3*16) + 14) + v2) + 1), 249), 0) - (max(min(min((v3*16) + v2, min(((v0 + v1) + -1)/8, ((v3*16) + v2) + 15) + -1), 249), 0) + (v4*7))) == (max(min(min(((v0 + v1) + -1)/8, (min((min((((v0 + v1) + -1)/8) - v2, (v3*16) + 15)/2)*2, (v3*16) + 14) + v2) + 1), 249), 0) - (max(min(min((v3*16) + v2, min(((v0 + v1) + -1)/8, ((v3*16) + v2) + 15) + -1), 249), 0) + (v4*7))));1;227;;;;;
 ((max(v0*64, 433) + ((v1*8) + v2)) == (max(v0*64, 433) + ((v1*8) + v2)));1;53;;;;;
 (((v0*2004) + ((v1*8000) + ((v2*1004) + (v3*8)))) == ((v0*2004) + ((v1*8000) + ((v2*1004) + (v3*8)))));1;59;;;;;
 (((v0/11) + 1) != 0);0;454;;;;;
 (min(max((v0*4) + v1, 8), ((v0*4) + v1) + 4) == min(max((v0*4) + v1, 8), ((v0*4) + v1) + 4));1;55;;;;;
 ((256 - ((max(min(v0*4, 281), 32) + v1)*8)) >= (2255 - ((max(min(v0*4, 281), 32) + v1)*8)));0;98;;;;;
 ((((((v0 + v1) + 312)/63) - (v2*3)) - ((v0 + v1)/63)) == (((((v0 + v1) + 312)/63) - (v2*3)) - ((v0 + v1)/63)));1;71;;;;;
 (min(min(max(min(v0*8, 1017), 995), ((v1*508) + v2) + 119) + -18, v3) == min(min(max(min(v0*8, 1017), 995), ((v1*508) + v2) + 119) + -18, v3));1;94;;;;;
 (((v0 - (v1/8)) + -127) == ((v0 - (v1/8)) + -127));1;24;;;;;
 ((min(min(((v0*3) + v1)*8, 76) + ((v2/65)*8), (v3*-84) + ((((v4 + v2) + -1)/65)*8)) - (v1*8)) == (min(min(((v0*3) + v1)*8, 76) + ((v2/65)*8), (v3*-84) + ((((v4 + v2) + -1)/65)*8)) - (v1*8)));1;117;;;;;
 ((((v0 - (v1*8)) + 545)/503) == (((v0 - (v1*8)) + 545)/503));1;69;;;;;
 (min(500 - (((v0*3) + v1)*4), v2 - (((v3*125) + ((v0*3) + v1))*4)) == min(500 - (((v0*3) + v1)*4), v2 - (((v3*125) + ((v0*3) + v1))*4)));1;79;;;;;
 (min(((v0 + v1) + 15)/16, ((v1/16) + ((v2/32)*32)) + 31) == min(((v0 + v1) + 15)/16, ((v1/16) + ((v2/32)*32)) + 31));1;55;;;;;
 (min(max(min(v0 - (v1*16), 16), 1), max(min((v1*16) - v0, -1), -16)*-1) == min(max(min(v0 - (v1*16), 16), 1), max(min((v1*16) - v0, -1), -16)*-1));1;76;;;;;
 (min((v0*3) + v1, (v2*8) + -77) == min((v0*3) + v1, (v2*8) + -77));1;65;;;;;
 (min(((((v0 + v1) + 1999)/2000)*256) + 148, v2) == min(((((v0 + v1) + 1999)/2000)*256) + 148, v2));1;63;;;;;
 ((((max(min((((v0 + v1) + 127)/32)*4, 246), -3) - max(min((v1/32)*4, 281), 32)) + 67)/32) == (((max(min((((v0 + v1) + 127)/32)*4, 246), -3) - max(min((v1/32)*4, 281), 32)) + 67)/32));1;230;;;;;
 (((min(((v3 % ((v4 + 19)/17))*136) + (((max(min(v2/8, 249), 0)/8)*8) + 119), (max(min(((v1 + v2) + 7)/8, 249), 0)/8)*8)/8)*8) == min(((v3 % ((v4 + 19)/17))*136) + (((max(min(v2/8, 249), 0)/8)*8) + 119), (max(min(((v1 + v2) + 7)/8, 249), 0)/8)*8));0;2110;;;;;
 ((max(min((v0 + v1) + v2, 1999), 0) + -6) >= (((max(min((v0 + v1) + v2, 1999), 0) + -6) + 7) - 1));0;99;;;;;
 ((((v0*8000)/64)*64) == (v0*8000));1;48;;;;;
 (min(max(min(((min(v0*32, 93) + (v1 + v2)) + 39)/8, 249), 0), (max(min((min(v0*32, 93) + (v1 + v2))/8, 249), 0) + ((max(v3, 0)/4)*4)) + 3) == min(max(min(((min(v0*32, 93) + (v1 + v2)) + 39)/8, 249), 0), (max(min((min(v0*32, 93) + (v1 + v2))/8, 249), 0) + ((max(v3, 0)/4)*4)) + 3));1;139;;;;;
 ((((min(max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 378), 129)*8, (max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 379), 130)*8) + 1)*-1)/4)*4) == (min(max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 378), 129)*8, (max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 379), 130)*8) + 1)*-1));0;2465;;;;;
 ((v0 - (v1*17)) == (v0 - (v1*17)));1;36;;;;;
 (((v0*32) + (min(v1*63, 62) + (v2 + v3))) == ((v0*32) + (min(v1*63, 62) + (v2 + v3))));1;968;;;;;
 (((v0*8) + ((v1*268) + v2)) == ((v0*8) + ((v1*268) + v2)));1;43;;;;;
 (min(((v0 + v1) + 7)/8, v2 + -1) == min(((v0 + v1) + 7)/8, v2 + -1));1;40;;;;;
 (min((v0/8)*8, ((((v1 + v0) + -1)/8)*8) + 22) == min((v0/8)*8, ((((v1 + v0) + -1)/8)*8) + 22));1;67;;;;;
 (((v0*32) + ((max(min((v1/63)*8, 285), 36)*2) + v2)) == ((v0*32) + ((max(min((v1/63)*8, 285), 36)*2) + v2)));1;1477;;;;;
 (min((max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*63)) - max(min(v1/2, 999), 0), min(v3, 62) + 32) == min((max(min(((v0 + v1) + -1)/2, 999), 0) - (v2*63)) - max(min(v1/2, 999), 0), min(v3, 62) + 32));1;126;;;;;
 (((((((uint1)1 && (((0 + (max(v0*128, -3) + v1)) + 1) <= (((((v0*128) + v1) + -129) + 0) + 127))) && (((7 + ((((min(v0*128, -3) + 130)/8)*8) + (max(v0*128, -3) + v1))) + 1) >= (((((v0*128) + v1) + 1) + 3) + 127))) && (((0 + (min(v2*16, 109) + v3)) + -2) <= (-2 + (min(v2*16, 109) + v3)))) && (((1 + ((min(v2*16, 109) + v3) + 18)) + -2) >= (((4 + -2) - 1) + ((16 + (min(v2*16, 109) + v3)) - 1)))) && (v4 <= v4)) && (v4 >= v4));0;432;;;;;
 ((((v0*64)/16)*16) == (v0*64));1;19;;;;;
 ((v0/4) == (((v0/4) + (((v0 % 4) + 70)/4)) - 1));0;49;;;;;
 (((v0 + 511)/500) != 0);0;344;;;;;
 (((v0/65) + (v1*4)) == ((v0/65) + (v1*4)));1;82;;;;;
 ((((max(min(((v0 + v1) + 499)/500, 3)*8, -7) - max(min((v1/500)*8, 36), 5)) + 23)/9) == (((max(min(((v0 + v1) + 499)/500, 3)*8, -7) - max(min((v1/500)*8, 36), 5)) + 23)/9));1;202;;;;;
 (((v0*29) + (((((v1*500) + (v2 + v3))/32)*8) + v4)) == ((v0*29) + (((((v1*500) + (v2 + v3))/32)*8) + v4)));1;67;;;;;
 ((((v0*4) + v1) - min(v2, v3)) == (((v0*4) + v1) - min(v2, v3)));1;39;;;;;
 (min((((v0 + v1) + -1)/32)*4, v2 + 8) == min((((v0 + v1) + -1)/32)*4, v2 + 8));1;62;;;;;
 (min((v0*12) + v1, v2 + 22) == min((v0*12) + v1, v2 + 22));1;65;;;;;
 ((((min(min(v4*126, 439) + ((max(min(v3/2, 999), 0) + (v5*500)) + 60), max(min(((v2 + v3) + -1)/2, 999), 0)) + (min((v4*126) + ((max(min(v3/2, 999), 0) + (v5*500)) + 60), min(max(min(((v2 + v3) + -1)/2, 999), 0), (max(min(v3/2, 999), 0) + (v5*500)) + 499))*-1))/2)*2) == (min(min(v4*126, 439) + ((max(min(v3/2, 999), 0) + (v5*500)) + 60), max(min(((v2 + v3) + -1)/2, 999), 0)) + (min((v4*126) + ((max(min(v3/2, 999), 0) + (v5*500)) + 60), min(max(min(((v2 + v3) + -1)/2, 999), 0), (max(min(v3/2, 999), 0) + (v5*500)) + 499))*-1)));0;3115;;;;;
 (max(((v0 - v1) + 61)/2, 0) >= ((max(((v0 - v1) + 61)/2, 0) + ((max((v0 - v1)/2, -31) - max(((v0 - v1) + 61)/2, 0)) + 31)) - 1));0;1053;;;;;
 (((((((v0 + v1) + 7)/8) - ((v1 + -1)/8))/84) + 1) == ((((((v0 + v1) + 7)/8) - ((v1 + -1)/8))/84) + 1));1;74;;;;;
 (min((v0*16) + 16, v1) == min((v0*16) + 16, v1));1;17;;;;;
 ((min((((v0/500)*16) + v1)*4, ((((v2 + v0) + -1)/500)*64) + 76) - (((((v0/500)*16) + v3) + v1)*4)) == (min((((v0/500)*16) + v1)*4, ((((v2 + v0) + -1)/500)*64) + 76) - (((((v0/500)*16) + v3) + v1)*4)));1;96;;;;;
 (((v0*1096) + ((v1/125)*128)) == ((v0*1096) + ((v1/125)*128)));1;21;;;;;
 (((v0*12) + (((v1*4) + v2)*8)) == ((v0*12) + (((v1*4) + v2)*8)));1;36;;;;;
 (min(max(min((v0*6) + (v1 + v2), 1999), 0) + (((v3 + 10)/4)*4), max(min((v0*6) + (v1 + v2), 1994), -5) + 7) == min(max(min((v0*6) + (v1 + v2), 1999), 0) + (((v3 + 10)/4)*4), max(min((v0*6) + (v1 + v2), 1994), -5) + 7));1;146;;;;;
 (((v0*8) + ((v1*512) + ((v2*64) - max((max((v1*64) + (v0 - v3), -51) + (v2*8))*8, 106)))) == ((v0*8) + ((v1*512) + ((v2*64) - max((max((v1*64) + (v0 - v3), -51) + (v2*8))*8, 106)))));1;109;;;;;
 (min(max(min(v0, 2003), 4), max(min(v0, 2006), 7) + (v1*4)) == min(max(min(v0, 2003), 4), max(min(v0, 2006), 7) + (v1*4)));1;64;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9), v2 + 63) == min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9), v2 + 63));1;290;;;;;
 (((((v0*7) + v1) + v2) - min(v1 + 8, v3)) == ((((v0*7) + v1) + v2) - min(v1 + 8, v3)));1;48;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*64) + 291)/140) == (((((((v0 + v1) + 62)/63) - (v1/63))*64) + 291)/140));1;75;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 125)/64) == (((max(min((((v0 + v1) + 31)/32)*32, 1986), -13) - max(min((v1/32)*32, 2044), 45)) + 125)/64));1;235;;;;;
 (min(88 - (max(v0 - v1, 9)*8), (min(v1 - v0, -9)*8) + 107) == min(88 - (max(v0 - v1, 9)*8), (min(v1 - v0, -9)*8) + 107));1;96;;;;;
 (max((min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9), v2) + 18)/4, v3) == max((min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 258), 9), v2) + 18)/4, v3));1;289;;;;;
 ((((-181 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*15)) == (((-181 - ((min(v0*125, v1 + -125) + v2) % 8))/8) + (v3*15)));1;81;;;;;
 (((v0/4) + (v1*128)) == ((v0/4) + (v1*128)));1;62;;;;;
 (min(max(min((v0 + v1)/2, 999), 0) + (v2*18), max(min((v0 + v1)/2, 937), -62) + 50) == min(max(min((v0 + v1)/2, 999), 0) + (v2*18), max(min((v0 + v1)/2, 937), -62) + 50));1;83;;;;;
 (max(min(30, (((v1*3) + v2) + 3) - 1) + 1, min(max(1, (v1*3) + v2), 3 + ((v1*3) + v2))) <= min(max(1, (v1*3) + v2), 3 + ((v1*3) + v2)));0;1372;;;;;
 ((max(min((v0*1000) + 1000, v1) + v2, 1) - min((v0*1000) + v2, 1999)) == (max(min((v0*1000) + 1000, v1) + v2, 1) - min((v0*1000) + v2, 1999)));1;66;;;;;
 ((max(min(v0, 126), 2) + (v1*8)) == (max(min(v0, 126), 2) + (v1*8)));1;54;;;;;
 ((((((v0 + v1) + -1)/2) - (v2*64)) - (v1/2)) == (((((v0 + v1) + -1)/2) - (v2*64)) - (v1/2)));1;75;;;;;
 (min(((v0*250) + (min(v1*64, 186) + ((v2*1000) + v3))) + 64, min((v2*1000) + 1000, v4) + v3) == min(((v0*250) + (min(v1*64, 186) + ((v2*1000) + v3))) + 64, min((v2*1000) + 1000, v4) + v3));1;93;;;;;
 (min(max(min(v0, 999), 0), v1 + 3) == min(max(min(v0, 999), 0), v1 + 3));1;47;;;;;
 (v0 >= ((v0 + 2) - 1));0;12;;;;;
 (min(((v0 + v1) + 507)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 539)/32)*4)) + -1) == min(((v0 + v1) + 507)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 539)/32)*4)) + -1));1;48;;;;;
 (min(((v0*32) + v1) + -1, v2) == min(((v0*32) + v1) + -1, v2));1;52;;;;;
 (min((((v0 + v1) + 7)/8) - (v1/8), v2 + 1) == min((((v0 + v1) + 7)/8) - (v1/8), v2 + 1));1;51;;;;;
 ((((-125 - ((min(v0*125, v1 + -125) + v2) % 32))/32) + (v3*2)) == (((-125 - ((min(v0*125, v1 + -125) + v2) % 32))/32) + (v3*2)));1;70;;;;;
 (min((v0*4) + v1, (v2*8) + 37) == min((v0*4) + v1, (v2*8) + 37));1;71;;;;;
 (((v0 + 39)/36) != 0);0;355;;;;;
 ((((max(min(((v0 + v1) + 31)/8, 249), 0) - max(min(v1/8, 250), 1)) + 126)/125) == (((max(min(((v0 + v1) + 31)/8, 249), 0) - max(min(v1/8, 250), 1)) + 126)/125));1;303;;;;;
 (min(max((v0 + 11)/8, v1 + -7), (min(v2, 6) + v1) + 10) == min(max((v0 + 11)/8, v1 + -7), (min(v2, 6) + v1) + 10));1;64;;;;;
 ((((((v0/63)*2) + v1)*4) + (v2*3)) == (((((v0/63)*2) + v1)*4) + (v2*3)));1;47;;;;;
 (min(max(min((v0 + v1)/32, 63), 1), max(min((v0 + v1)/32, 64), 2)) == min(max(min((v0 + v1)/32, 63), 1), max(min((v0 + v1)/32, 64), 2)));1;106;;;;;
 (((((((uint1)1 && (0 <= 0)) && (0 >= 0)) && ((((0*4) + ((v0/8) + (v1*4))) + 0) <= (0 + ((v0/8) + (v1*4))))) && ((((0*4) + ((v0/8) + (v1*4))) + 3) >= (((4 + 0) - 1) + ((v0/8) + (v1*4))))) && (((v2*64) + 0) <= ((v2*64) + 0))) && (((v2*64) + ((64 + 0) - 1)) >= ((v2*64) + ((64 + 0) - 1))));1;219;;;;;
 (((min(((v0 + v1) + 63)/8, v2 + 15)*-8) + ((v2*8) + (v3*59))) == ((min(((v0 + v1) + 63)/8, v2 + 15)*-8) + ((v2*8) + (v3*59))));1;80;;;;;
 (((v0*8) + (v1*66)) == ((v0*8) + (v1*66)));1;33;;;;;
 (((((((uint1)1 && ((((v0 + v1) + -1) + -502) <= (((v0 + v1) + -1) + -502))) && ((((v0 + v1) + ((6 + -1) - 1)) + -502) >= (((v0 + v1) + ((6 + -1) - 1)) + -502))) && (((0 + (((v2*16) + v3) + -1)) + -10) <= ((-1 + ((v2*16) + v3)) + -10))) && (((3 + (((v2*16) + v3) + 16)) + -10) >= ((((6 + -1) - 1) + (((v2*16) + v3) + 15)) + -10))) && (v4 <= v4)) && (v4 >= v4));1;245;;;;;
 (0 == ((0 + ((max(min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - v2, -13), -15)*2) + 30)) - 1));0;163;;;;;
 (((v0/4) + (((v0 % 4) + 3)/4)) == ((v0/4) + (((v0 % 4) + 3)/4)));1;746;;;;;
 ((((((v0 + v1) + -1)/250)*4) - (((v1/250)*4) + v2)) == (((((v0 + v1) + -1)/250)*4) - (((v1/250)*4) + v2)));1;81;;;;;
 (max(v0*8, (v1*8) + 53) == max(v0*8, (v1*8) + 53));1;43;;;;;
 (((max(min(((v0*5) + v1) - v2, 6), 2)*8) + -53) >= ((((max(min(((v0*5) + v1) - v2, 6), 2)*8) + -53) + (58 - (max(min(((v0*5) + v1) - v2, 6), 2)*8))) - 1));0;134;;;;;
 (0 == ((0 + (34 - max(v0*9, 25))) - 1));0;64;;;;;
 ((((v0*8) + (v1 + v2)) + -1) >= (((((v0*8) + (v1 + v2)) + -1) + 13) - 1));0;508;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*252, 748) + (v1*4)) + v2)) <= ((min(v0*252, 748) + (v1*4)) + v2))) && ((3 + ((min(v0*252, 748) + (v1*4)) + v2)) >= (((min(v0*252, 748) + (v1*4)) + 3) + v2))) && (0 <= 0)) && (0 >= 0)) && (v3 <= v3)) && (((v4 + v3) + -1) >= ((v4 + v3) - 1)));1;171;;;;;
 ((((v0 - v1) + 37)/32) == (((v0 - v1) + 37)/32));1;56;;;;;
 (((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2/63)*65)) - max(min(v1/8, 249), 0)) == ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((v2/63)*65)) - max(min(v1/8, 249), 0)));1;97;;;;;
 (((((v0/(((v1*8) + 53)/35))*-36)/3)*3) == ((v0/(((v1*8) + 53)/35))*-36));1;66;;;;;
 (min((v0 + v1) + 7, v2) == min((v0 + v1) + 7, v2));1;28;;;;;
 ((((0 - max(v0*8, ((max(min((v1 + v2)/8, 249), 0)*8) - v3) + 3))/4) + (v0*2)) == (((0 - max(v0*8, ((max(min((v1 + v2)/8, 249), 0)*8) - v3) + 3))/4) + (v0*2)));1;118;;;;;
 (min(max(min(v0, 248), -1), v1 + 57) == min(max(min(v0, 248), -1), v1 + 57));1;37;;;;;
 ((((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 676)/672) == (((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 676)/672));1;137;;;;;
 (min(max(min(((v0 + v1) + -1)/8, 249), 0), ((v2*4) + ((v3*16) + v4)) + 1) == min(max(min(((v0 + v1) + -1)/8, 249), 0), ((v2*4) + ((v3*16) + v4)) + 1));1;79;;;;;
 (max(min((v0 + 25)/24, max((0 - v1)/24, -1) + 1), (v0 + 2)/24) == max(min((v0 + 25)/24, max((0 - v1)/24, -1) + 1), (v0 + 2)/24));1;95;;;;;
 ((v0 + 4) != 0);0;258;;;;;
 ((((v0 - (v1*508)) - (v2*64)) - (v3/2)) == (((v0 - (v1*508)) - (v2*64)) - (v3/2)));1;64;;;;;
 (((v0*2) + -494) == ((((v0*2) + -494) + ((min(v1 - (v2*12), -22)*2) + 68)) - 1));0;122;;;;;
 ((max(min(v0/2, 1006), 7) + (v1*256)) == (max(min(v0/2, 1006), 7) + (v1*256)));1;62;;;;;
 (min((v0 + v1)*4, (v2*4) + 29) == min((v0 + v1)*4, (v2*4) + 29));1;62;;;;;
 (min((((v0 + v1) + 62)/63)*8, ((v2*17) + ((v1/63)*8)) + 2) == min((((v0 + v1) + 62)/63)*8, ((v2*17) + ((v1/63)*8)) + 2));1;69;;;;;
 (v0 != 0);0;2099;;;;;
 (max(v0*8, (max(min((v1 + v2)/8, 249), 0)*8) + -13) == max(v0*8, (max(min((v1 + v2)/8, 249), 0)*8) + -13));1;70;;;;;
 (max((((v0 + v1) + 23)/8) - v2, ((((v0 + v1) + 7)/8) - ((v1/8) + (v3*128))) + 2) == max((((v0 + v1) + 23)/8) - v2, ((((v0 + v1) + 7)/8) - ((v1/8) + (v3*128))) + 2));1;97;;;;;
 ((v0 + 1) < (min(max(max(min(v1/65, 31), 0)*2, (v0 + 1) + 3), (v0 + 1) + 1) + -2));0;162;;;;;
 ((((v0/2) + (v1*2)) - min(v0/2, ((v2*-16) + (min((((v3 + v0) + 5)/2) - (v4*504), (min(v5*128, 380) + (v0/2)) + 119) + (v5*-128))) + 8)) == (((v0/2) + (v1*2)) - min(v0/2, ((v2*-16) + (min((((v3 + v0) + 5)/2) - (v4*504), (min(v5*128, 380) + (v0/2)) + 119) + (v5*-128))) + 8)));1;170;;;;;
 (((v0*-4) + (max(max((v1 + v2)/2, (((v1 + v2)/126)*63) + 62), (((v1 + v2)/126)*64) + 23) - min(((v1 + v2)/126)*64, min((v1 + v2)/2, (((v1 + v2)/126)*63) + 6) + 24))) == ((v0*-4) + (max(max((v1 + v2)/2, (((v1 + v2)/126)*63) + 62), (((v1 + v2)/126)*64) + 23) - min(((v1 + v2)/126)*64, min((v1 + v2)/2, (((v1 + v2)/126)*63) + 6) + 24))));1;156;;;;;
 (max(min((v0/12) + 1, v1), (v0 + 1)/12) == max(min((v0/12) + 1, v1), (v0 + 1)/12));1;60;;;;;
 (((((((v0*250) + ((v1 + v2)/2))/8)*-16)/2)*2) == ((((v0*250) + ((v1 + v2)/2))/8)*-16));1;52;;;;;
 (min((v0*4) + v1, v2 + 57) == min((v0*4) + v1, v2 + 57));1;74;;;;;
 (((((v0 % ((v1 + 67)/64))*-64)/4)*4) == ((v0 % ((v1 + 67)/64))*-64));1;47;;;;;
 (((((((v0 + v1) + 15)/16) - (v1/16))/63) + 1) == ((((((v0 + v1) + 15)/16) - (v1/16))/63) + 1));1;89;;;;;
 ((min(v0*84, 166) + (v1*3)) == (min(v0*84, 166) + (v1*3)));1;43;;;;;
 (((v0/16) + ((v1/2)*16)) == ((v0/16) + ((v1/2)*16)));1;28;;;;;
 ((max(min((v0/500)*8, 67), 36) + (v1*12)) == (max(min((v0/500)*8, 67), 36) + (v1*12)));1;48;;;;;
 (((((((v0 + v1) + 13)/2) - (v1/2)) + 134)/127) == ((((((v0 + v1) + 13)/2) - (v1/2)) + 134)/127));1;68;;;;;
 ((((v0*8) + 33)/20) != 0);0;457;;;;;
 (min(225 - (((v0*29) + ((v1*15) + v2))*4), 115 - (((v1*15) + v2)*4)) == min(225 - (((v0*29) + ((v1*15) + v2))*4), 115 - (((v1*15) + v2)*4)));1;102;;;;;
 ((((max(min((v3*-34) + (max(min(((v2 + min(v4*128, v5 + -128)) + 129)/2, 999), 0) - max(min((v2 + min(v4*128, v5 + -128))/2, 999), 0)), 30), -6)*2)/4)*4) == (max(min((v3*-34) + (max(min(((v2 + min(v4*128, v5 + -128)) + 129)/2, 999), 0) - max(min((v2 + min(v4*128, v5 + -128))/2, 999), 0)), 30), -6)*2));0;2415;;;;;
 (0 >= ((0 + ((min((((min(v0*4, 59) + 7)/4)*4) - min(v0*4, 59), 4) + 7)/4)) - 1));0;164;;;;;
 (0 == ((0 + (125 - max(min(v0*16, 125), 109))) - 1));0;84;;;;;
 ((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - ((((v2*4) + v3)*4) + v4)) == (max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - ((((v2*4) + v3)*4) + v4)));1;86;;;;;
 (((v0*71) + ((v1*126) + v2)) == ((v0*71) + ((v1*126) + v2)));1;45;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -1) <= ((((0*4) + 0) + v0) + -1))) && (((((8*4) + v0) + 3) + -1) >= ((((((9 + 0) - 1)*4) + ((4 + 0) - 1)) + v0) + -1))) && (v1 <= v1)) && (v1 >= v1)) && (0 <= 0)) && (0 >= 0));1;155;;;;;
 (((v0 + 15)/10) != 0);0;1828;;;;;
 (max(((max(v0, 0) - v1) + 1)/32, 0) >= ((max(((max(v0, 0) - v1) + 1)/32, 0) + ((max((max(v0, 0) - v1)/32, -1) - max(((max(v0, 0) - v1) + 1)/32, 0)) + 1)) - 1));0;1125;;;;;
 ((v0 - (((v1*168) + ((v2*24) + ((v3*8) + v4)))*4)) == (v0 - (((v1*168) + ((v2*24) + ((v3*8) + v4)))*4)));1;72;;;;;
 (min(v0*8, (max(v1, 0)*8) + 12) == min(v0*8, (max(v1, 0)*8) + 12));1;52;;;;;
 (min((((v0 + v1) + -1)/8) - (v1/8), v2) == min((((v0 + v1) + -1)/8) - (v1/8), v2));1;68;;;;;
 (min((v0*2) + v1, v2 + 3) == min((v0*2) + v1, v2 + 3));1;43;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 114)/73) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 114)/73));1;81;;;;;
 (((62 - max(v0*63, 62)) - (v1*36)) == ((62 - max(v0*63, 62)) - (v1*36)));1;58;;;;;
 (((v0 + 17)/253) == ((((v0 + 17)/253) + ((((v0 + 17) % 253) + 252)/253)) - 1));0;516;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/4) + 1) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0))/4) + 1));1;285;;;;;
 ((min((((min(v0 - v1, (v2*32) + 23) + 27)/4)*4) + v1, min(((v2*32) + v1) + 23, v0) + 24) - (v2*32)) == (min((((min(v0 - v1, (v2*32) + 23) + 27)/4)*4) + v1, min(((v2*32) + v1) + 23, v0) + 24) - (v2*32)));1;92;;;;;
 (((((((uint1)1 && ((((v0*126) + v1) + 1) <= (((v0*126) + v1) + 1))) && (((min(v0*126, 125) + v1) + 126) >= ((min(v0*126, 125) + v1) + 126))) && ((v2 + -4) <= (v2 + -4))) && ((v3 + 23) >= (v3 + 23))) && (((0*4) + 0) <= ((0*4) + 0))) && (((5*4) + 3) >= ((5*4) + 3)));1;201;;;;;
 ((v0 + 2) == (((v0 + 2) + 4) - 1));0;32;;;;;
 (((v0 + v1) + -2) >= ((((v0 - 1) + v1) + 2) + 1));0;64;;;;;
 ((min(v0*24, 40) + (min(v1*64, v2 + -64) + v3)) == (min(v0*24, 40) + (min(v1*64, v2 + -64) + v3)));1;46;;;;;
 ((v0 + 12) != 0);0;234;;;;;
 (min((v0*4) + ((v1*8) + v2), v3 + 20) == min((v0*4) + ((v1*8) + v2), v3 + 20));1;78;;;;;
 (((((v0*500) + (min((v1*1000) + 1000, v2) + v3))/8) + (v4*8)) == ((((v0*500) + (min((v1*1000) + 1000, v2) + v3))/8) + (v4*8)));1;60;;;;;
 ((v0 - ((v1/6)*251)) == (v0 - ((v1/6)*251)));1;39;;;;;
 (((((v0*4) + v1)*8) + -305) == ((((((v0*4) + v1)*8) + -305) + ((min(v2 - v1, -85)*8) + 730)) - 1));0;154;;;;;
 ((((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 49)/32) == (((max(min(v0 + v1, 1992), -7) - max(min(v1, 2009), 10)) + 49)/32));1;154;;;;;
 (((max(min((v1*-32) + (v3 + (v2*-64)), -468), -500)/4)*4) == max(min((v1*-32) + (v3 + (v2*-64)), -468), -500));0;1016;;;;;
 (((((((uint1)1 && (((((((v0*4) + v1)*8) + v2) + -2) + -87) <= ((((((v0*4) + v1)*8) + v2) + -2) + -87))) && (((((((v0*4) + v1)*8) + v2) + ((6 + -2) - 1)) + -87) >= ((((((v0*4) + v1)*8) + v2) + ((6 + -2) - 1)) + -87))) && ((((((0*4) + v3) + -2) + 0) + -303) <= (((((0*4) + 0) + v3) + -2) + -303))) && ((((((16*4) + v3) + ((6 + -2) - 1)) + 3) + -303) >= (((((16*4) + ((4 + 0) - 1)) + v3) + ((6 + -2) - 1)) + -303))) && (v4 <= v4)) && (v4 >= v4));1;334;;;;;
 ((((v0 + v1) - (v2*16)) - ((v3*4) + v1)) == (((v0 + v1) - (v2*16)) - ((v3*4) + v1)));1;44;;;;;
 (((v0*4) + ((v1*8) + ((v2*32) + ((v3/4) + v4)))) == ((v0*4) + ((v1*8) + ((v2*32) + ((v3/4) + v4)))));1;58;;;;;
 ((-1 - max(min(v0, 1), 0)) == (((-1 - max(min(v0, 1), 0)) + (max(min(v0, 1), 0) + 6)) - 1));0;96;;;;;
 ((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - ((v2*4) + v3)) == (max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - ((v2*4) + v3)));1;76;;;;;
 (min((((v0 + v1) + 1)/2) - ((((v2*16) + v3)*4) + v4), 503 - (((v2*16) + v3)*4)) == min((((v0 + v1) + 1)/2) - ((((v2*16) + v3)*4) + v4), 503 - (((v2*16) + v3)*4)));1;108;;;;;
 (((((((v0 + v1) + 15)/8) - (v1/8)) + 65)/64) == ((((((v0 + v1) + 15)/8) - (v1/8)) + 65)/64));1;1044;;;;;
 ((min(v0, 0)*4) == (((min(v0, 0)*4) + ((v1*4) + 4)) - 1));0;88;;;;;
 (((v0 + 14)/9) != 0);0;1473;;;;;
 (max(min(v0, 31), min(v1, 31)) == max(min(v0, 31), min(v1, 31)));1;49;;;;;
 (((((((v0 + v1) + 31)/32) - (v1/32)) + 11)/9) == ((((((v0 + v1) + 31)/32) - (v1/32)) + 11)/9));1;67;;;;;
 (min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*4))*16) + 50, v2) == min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*4))*16) + 50, v2));1;64;;;;;
 (((v0*16) + ((v1*8) + (v2*30))) == ((v0*16) + ((v1*8) + (v2*30))));1;37;;;;;
 ((max((v0*252) - v1, -244) + (v2*64)) == (max((v0*252) - v1, -244) + (v2*64)));1;49;;;;;
 ((((max(min((v1*125) + v2, min(v3 + v2, 2000) + -125), -124) + (max(min((v1*125) + v2, min(v3 + v2, 2124) + -125), 0)*-1))/4)*4) == (max(min((v1*125) + v2, min(v3 + v2, 2000) + -125), -124) + (max(min((v1*125) + v2, min(v3 + v2, 2124) + -125), 0)*-1)));0;2492;;;;;
 ((v0 - (((v1*2) + v2)*16)) == (v0 - (((v1*2) + v2)*16)));1;43;;;;;
 (min(max(min(((v0 + v1)/8)*8, 2002), 3), max(min(((v0 + v1)/8)*8, 2003), 4)) == min(max(min(((v0 + v1)/8)*8, 2002), 3), max(min(((v0 + v1)/8)*8, 2003), 4)));1;148;;;;;
 ((max(min((((v0 + v1) + -1)/125)*8, 113), -11) - ((v2*2) + v3)) == (max(min((((v0 + v1) + -1)/125)*8, 113), -11) - ((v2*2) + v3)));1;92;;;;;
 (min((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*16, (v2*16) + 283) == min((max(min(((v0 + v1) + 64)/65, 27), -4) - max(min(v1/65, 34), 3))*16, (v2*16) + 283));1;239;;;;;
 ((((((((v0 + v1) + 249)/250) - (v1/250))*4) + 24)/19) == (((((((v0 + v1) + 249)/250) - (v1/250))*4) + 24)/19));1;52;;;;;
 (((max(min(v0, 990), -9) - (v1*4)) - max(min(v0, 1117), 118)) == ((max(min(v0, 990), -9) - (v1*4)) - max(min(v0, 1117), 118)));1;81;;;;;
 (0 == ((0 + (250 - max(v0*63, 187))) - 1));0;52;;;;;
 ((max(min((v0/2) + (v1*128), 999), 0) - max(min(min(((v2 + v0) + 1)/2, ((v0/2) + (v1*128)) + 127), 999), 0)) == (max(min((v0/2) + (v1*128), 999), 0) - max(min(min(((v2 + v0) + 1)/2, ((v0/2) + (v1*128)) + 127), 999), 0)));1;304;;;;;
 ((v0 - (((((max(min(v1, 2002), 3) + -3)/16)*4) + v2)*4)) == (v0 - (((((max(min(v1, 2002), 3) + -3)/16)*4) + v2)*4)));1;64;;;;;
 (min((max(min(v0, 249), 0)/8)*8, (v1*8) + 15) == min((max(min(v0, 249), 0)/8)*8, (v1*8) + 15));1;81;;;;;
 ((min(v0*8, (((v1*4) + v2)*8) + 20) - (((v1*8) + ((v2*2) + v3))*4)) == (min(v0*8, (((v1*4) + v2)*8) + 20) - (((v1*8) + ((v2*2) + v3))*4)));1;106;;;;;
 (min(((v0*44) + v1) + 38, v2) == min(((v0*44) + v1) + 38, v2));1;206;;;;;
 (((((v0/(((v1 - v2) + 47)/36))*-40)/10)*10) == ((v0/(((v1 - v2) + 47)/36))*-40));1;55;;;;;
 ((min(((v0/32) + ((v1*4) - min(((v2 + v0) + 31)/32, (min((min((v1*4) + 3, v3)/2)*2, (v1*4) + 2) + (v0/32)) + 1)))*16, 72) + -72) >= 2);0;117;;;;;
 ((v0 - min(((v1 + v2) + 257)/8, (min((min((((v1 + v2) % 8) + 257)/8, (v3*8) + 7)/4)*4, (v3*8) + 4) + ((v1 + v2)/8)) + 3)) == (v0 - min(((v1 + v2) + 257)/8, (min((min((((v1 + v2) % 8) + 257)/8, (v3*8) + 7)/4)*4, (v3*8) + 4) + ((v1 + v2)/8)) + 3)));1;134;;;;;
 (((v0*5) + (((v1/63)*2) + v2)) == ((v0*5) + (((v1/63)*2) + v2)));1;42;;;;;
 (min(((v0/8) + (v1*128)) + 127, v2) == min(((v0/8) + (v1*128)) + 127, v2));1;1335;;;;;
 ((((((((v0 + v1) + 440)/63) - (v1/63))*8) + 70)/6) == (((((((v0 + v1) + 440)/63) - (v1/63))*8) + 70)/6));1;64;;;;;
 ((((v0*32) + (v1 + v2)) + -1) == (((((v0*32) + (v1 + v2)) + -1) + 37) - 1));0;1733;;;;;
 ((((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0)) + 5)/4) == (((max(min(((v0 + v1)*2)/129, 29), -1) - max(min(((v1*2) + 1)/129, 30), 0)) + 5)/4));1;218;;;;;
 ((min(v0*68, 61) + (min(((v1 + v2) + -121)/8, (v2/8) + (v3*16))*8)) == (min(v0*68, 61) + (min(((v1 + v2) + -121)/8, (v2/8) + (v3*16))*8)));1;1081;;;;;
 (((v0*84) + ((v1*4) + v2)) == ((v0*84) + ((v1*4) + v2)));1;54;;;;;
 (((v0*42) + (v1 + v2)) == ((v0*42) + (v1 + v2)));1;43;;;;;
 (min(((v0 + v1) + -113)/8, ((v1/8) + (v2*16)) + -5) == min(((v0 + v1) + -113)/8, ((v1/8) + (v2*16)) + -5));1;82;;;;;
 ((((((v0 + v1) + 999)/1000) - (v2/5)) - (v1/1000)) == (((((v0 + v1) + 999)/1000) - (v2/5)) - (v1/1000)));1;48;;;;;
 (min((((v0 + v1) + 7)/8)*8, min((v2*66) + v3, (((v1/8) + (v4*63))*8) + 427) + 66) == min((((v0 + v1) + 7)/8)*8, min((v2*66) + v3, (((v1/8) + (v4*63))*8) + 427) + 66));1;1305;;;;;
 ((((v0 - v1) + 524)/513) != 0);0;436;;;;;
 (min(((((v0 + v1) + -1)/2) - (v1/2)) + -503, v2) == min(((((v0 + v1) + -1)/2) - (v1/2)) + -503, v2));1;63;;;;;
 (min(((v0 + v1) + 7)/8, ((v2*63) + (min(v3*11, 53) + (v1/8))) + 9) == min(((v0 + v1) + 7)/8, ((v2*63) + (min(v3*11, 53) + (v1/8))) + 9));1;77;;;;;
 (((v0*132) + (((v1 + -2)/16)*16)) == ((v0*132) + (((v1 + -2)/16)*16)));1;46;;;;;
 (min(((v0 + v1) + 7)/8, v2 + 31) == min(((v0 + v1) + 7)/8, v2 + 31));1;41;;;;;
 (min(min((((((v0 + v1) + 64)/65)*8) - (v2*66)) - ((v1/65)*8), -20) + (((v1/65)*8) + ((((min((v2*-66) + (v3*8), 52) + 23)/4)*4) + (v2*66))), v4) == min(min((((((v0 + v1) + 64)/65)*8) - (v2*66)) - ((v1/65)*8), -20) + (((v1/65)*8) + ((((min((v2*-66) + (v3*8), 52) + 23)/4)*4) + (v2*66))), v4));1;144;;;;;
 ((((v0 - v1) + 193)/124) == (((v0 - v1) + 193)/124));1;58;;;;;
 (((v0 + 10)/8) != 0);0;363;;;;;
 (((v0 + 21)/14) == ((v0 + 21)/14));1;62;;;;;
 (min(max(max(min((((v0 + v1) + -1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8), min(((v0 + v1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8), ((((max((((v3 + v2) + 64)/65)*64, 1975) + 40)/32) - ((min((v2/65)*64, 4) + -6)/32))*8) + 8) + -1), ((v1 + -1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8)), -1), (v4*8) + 7) == min(max(max(min((((v0 + v1) + -1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8), min(((v0 + v1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8), ((((max((((v3 + v2) + 64)/65)*64, 1975) + 40)/32) - ((min((v2/65)*64, 4) + -6)/32))*8) + 8) + -1), ((v1 + -1)/4) - (((min((v2/65)*64, 4) + -6)/32)*8)), -1), (v4*8) + 7));1;307;;;;;
 (max(min(max(((v0 - max(min(v1, 1999), 0)) + 31)/32, 0), (v2 + 31)/32), min(min(max(min(v3 + v1, 2000), 1), v4 + v0) - max(min(v1, 1999), 0), v2 + 31)/32) == max(min(max(((v0 - max(min(v1, 1999), 0)) + 31)/32, 0), (v2 + 31)/32), min(min(max(min(v3 + v1, 2000), 1), v4 + v0) - max(min(v1, 1999), 0), v2 + 31)/32));1;155;;;;;
 (min(max(min(v0 + v1, 1999), 9) + (((v2 + 143)/4)*4), max(min(v0 + v1, 1869), -127) + 140) == min(max(min(v0 + v1, 1999), 9) + (((v2 + 143)/4)*4), max(min(v0 + v1, 1869), -127) + 140));1;88;;;;;
 ((min(max(((v0*14) + v1) - v2, 11)*8, 199) + -199) == (((min(max(((v0*14) + v1) - v2, 11)*8, 199) + -199) + (204 - min(max(((v0*14) + v1) - v2, 11)*8, 199))) - 1));0;194;;;;;
 (((((((uint1)1 && ((((max(-1*8, -3) + v0) + 0) + 1) <= (0 + (v0 + -2)))) && ((((max(124*8, -3) + v0) + 7) + 1) >= (3 + (v0 + 997)))) && (((v1 + v2) + 1) <= ((((0*2) + 0) + (v1 + v2)) + -2))) && (((v1 + v2) + 1) >= ((((1*2) + 1) + (v1 + v2)) + -2))) && (0 <= 0)) && (18 >= 18));0;208;;;;;
 (((((((uint1)1 && (((((0*4) + 0) + (max(v0*64, -6) + v1)) + 2) <= ((0 + ((v0*64) + v1)) + -4))) && (((((3*4) + 3) + ((((min(v0*64, -6) + 69)/16)*16) + (max(v0*64, -6) + v1))) + 2) >= ((3 + (((v0*64) + v1) + 60)) + 2))) && (((min(v2*63, 62) + v3) + v4) <= ((min(v2*63, 62) + v3) + v4))) && (((min(v2*63, 62) + v3) + v4) >= ((min(v2*63, 62) + v3) + v4))) && (v5 <= v5)) && (v5 >= v5));0;392;;;;;
 (((max(min(v0, 29), 0) - (v1*12)) - max(min(v2, 38), 7)) == ((max(min(v0, 29), 0) - (v1*12)) - max(min(v2, 38), 7)));1;61;;;;;
 ((((min(v0*1000, v1 + -1000) + v2)/8) + (v3*73)) == (((min(v0*1000, v1 + -1000) + v2)/8) + (v3*73)));1;57;;;;;
 ((max(min((v0/32)*4, 285), 36) + min((v1*4) + -36, v2)) == (max(min((v0/32)*4, 285), 36) + min((v1*4) + -36, v2)));1;73;;;;;
 (((v0*8) + ((v1*16) + (((v2/8)*2) + v3))) == ((v0*8) + ((v1*16) + (((v2/8)*2) + v3))));1;35;;;;;
 (((v0/63) + ((v1*4) - (((v2 + v0) + 62)/63))) == ((v0/63) + ((v1*4) - (((v2 + v0) + 62)/63))));1;35;;;;;
 ((v0 - ((v1*1012) + v2)) == (v0 - ((v1*1012) + v2)));1;37;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*64, 436) + v1) + -7)) <= ((0 + (min(v0*64, 436) + v1)) + -7))) && ((3 + ((min(v0*64, 436) + v1) + 64)) >= ((((4 + 0) - 1) + ((min(v0*64, 436) + v1) + 64)) + ((8 + -7) - 1)))) && (((((v2*18) + v3)*4) + ((v4*24) + ((v5*8) + v6))) <= ((((v2*18) + v3)*4) + ((v4*24) + ((v5*8) + v6))))) && (((((v2*18) + v3)*4) + ((v4*24) + ((v5*8) + v6))) >= ((((v2*18) + v3)*4) + ((v4*24) + ((v5*8) + v6))))) && (v7 <= v7)) && (v7 >= v7));1;255;;;;;
 ((max(min(((v0*4) + v1)*2, 491), -8) - (max(min(((v0*4) + v1)*2, 499), 0) + (v2*4))) == (max(min(((v0*4) + v1)*2, 491), -8) - (max(min(((v0*4) + v1)*2, 499), 0) + (v2*4))));1;126;;;;;
 (((v0/4) + (v1*64)) == ((v0/4) + (v1*64)));1;35;;;;;
 (min(max(min(v0, 2003), 4) + -4, v1) == min(max(min(v0, 2003), 4) + -4, v1));1;71;;;;;
 (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 15) == ((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 15));1;231;;;;;
 ((min(((((v0 + v1) + -1)/8)*8) - (v2*127), ((v1/8)*8) + 98) - ((((v1/8)*2) + v3)*4)) == (min(((((v0 + v1) + -1)/8)*8) - (v2*127), ((v1/8)*8) + 98) - ((((v1/8)*2) + v3)*4)));1;85;;;;;
 (((v0*14) + ((v1*2) + v2)) == ((v0*14) + ((v1*2) + v2)));1;44;;;;;
 (((v0*8) + ((v1/32) - (((v2 + v1) + 159)/32))) == ((v0*8) + ((v1/32) - (((v2 + v1) + 159)/32))));1;58;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 30)/16) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5)) + 30)/16));1;278;;;;;
 (min(min(((v0*4) + v1) + 3, v2), ((v0*4) + ((v3*32) + (((v4 + v5)/2) + ((min(max((((((v4 + 1) % 2) + v5) + -65)/2) + (v0*4), -3)*-1, (((66 - v5) - ((v4 + 1) % 2))/2) + (v0*-4))/4)*4)))) - max(v6, -3)) == min(min(((v0*4) + v1) + 3, v2), ((v0*4) + ((v3*32) + (((v4 + v5)/2) + ((min(max((((((v4 + 1) % 2) + v5) + -65)/2) + (v0*4), -3)*-1, (((66 - v5) - ((v4 + 1) % 2))/2) + (v0*-4))/4)*4)))) - max(v6, -3)));1;228;;;;;
 (((((((v0 + v1) + 39)/32) - ((v1 + -8)/32))/33) + 1) == ((((((v0 + v1) + 39)/32) - ((v1 + -8)/32))/33) + 1));1;79;;;;;
 (((max(min((min(v3*125, v4 + -125) + (v2 + 124))/8, 249) - max(min((min(v3*125, v4 + -125) + v2)/8, 249), 0), 0)/2)*2) == max(min((min(v3*125, v4 + -125) + (v2 + 124))/8, 249) - max(min((min(v3*125, v4 + -125) + v2)/8, 249), 0), 0));0;1717;;;;;
 (min((v0*8) + ((v1*32) + v2), v3 + -7) == min((v0*8) + ((v1*32) + v2), v3 + -7));1;52;;;;;
 (((((((v0 + v1)/250) - (v1/250))*64) + 43)/36) == ((((((v0 + v1)/250) - (v1/250))*64) + 43)/36));1;40;;;;;
 ((((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 137)/125) == (((max(min((((v0 + v1) + 7)/8)*2, 497), -2) - max(min((v1/8)*2, 509), 10)) + 137)/125));1;268;;;;;
 (min(((v0 + v1) + -1)/16, ((v2*2) + ((v1/16) + (v3*8))) + 1) == min(((v0 + v1) + -1)/16, ((v2*2) + ((v1/16) + (v3*8))) + 1));1;70;;;;;
 ((((v0 - v1) + 17)/8) != 0);0;485;;;;;
 (min(max(min(v0, 22), -7) - max(min(v0, 46), 15), v1) == min(max(min(v0, 22), -7) - max(min(v0, 46), 15), v1));1;145;;;;;
 (max(((max(v0, 0) - ((v1*12) + v2)) + -3)/4, ((max(v0, 0) - v2)/4) + (v1*-3)) == max(((max(v0, 0) - ((v1*12) + v2)) + -3)/4, ((max(v0, 0) - v2)/4) + (v1*-3)));1;99;;;;;
 ((v0 - (v1*10)) == (v0 - (v1*10)));1;64;;;;;
 ((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - ((v2*64) + v3)) == (max(min((((v0 + v1) + 15)/16)*8, 990), -9) - ((v2*64) + v3)));1;77;;;;;
 ((v3 + -12) >= (((v3 + -12) + ((max(v0, 0) - max(min(v1 + v2, 2007), max(v0, 1) + 13)) + 14)) - 1));0;1563;;;;;
 (max(min(min(min(min(min(((((v2 + v3) + 55)/8) - v4) + 5, (((v0 + v1) + 34)/8) - v4), (((v0 + v1) + 34)/8) - v4), (((v0 + v1) + 43)/8) - v4), (((v0 + v1) + 43)/8) - v4), (0 + 4) - 1) + 1, min(max((((v1 + 43)/8) - v4) + 1, 0), 4 + 0)) <= min(max((((v1 + 43)/8) - v4) + 1, 0), 4 + 0));0;2116;;;;;
 ((((v0*-66)/3)*3) == (v0*-66));1;42;;;;;
 ((v0 - ((v1/2)*47)) == (v0 - ((v1/2)*47)));1;1051;;;;;
 ((((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7)) + 280)/256) == (((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 1006), 7)) + 280)/256));1;266;;;;;
 (((v0/8) + (v1*66)) == ((v0/8) + (v1*66)));1;38;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 127)/126) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 127)/126));1;798;;;;;
 ((((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 21)/17) == (((max(min(((v0 + v1) + -1)/65, 29), -2) - max(min(v1/65, 31), 0)) + 21)/17));1;577;;;;;
 (min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128) == min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128));1;121;;;;;
 (min(((v0*64) + ((v1*126) + v2)) + 53, min((v1*126) + 115, v3) + v2) == min(((v0*64) + ((v1*126) + v2)) + 53, min((v1*126) + 115, v3) + v2));1;56;;;;;
 ((((((v0/2) + v1) - (v2*500)) - (v3*128)) - (v0/2)) == (((((v0/2) + v1) - (v2*500)) - (v3*128)) - (v0/2)));1;70;;;;;
 (((((v0 + v1) + 3)/4) - ((v2*4) + v3)) == ((((v0 + v1) + 3)/4) - ((v2*4) + v3)));1;36;;;;;
 (min(max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125), (v3*4) + -121) == min(max(max(min((v0*125) + v1, min(v2 + v1, 2000) + -125), -124) + 3, min(v0*125, v2 + -125) + v1) - min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125), (v3*4) + -121));1;185;;;;;
 (min((v0*128) + 128, v1) == min((v0*128) + 128, v1));1;1224;;;;;
 (max((v0*8) + 77, (v1*8) + v2) == max((v0*8) + 77, (v1*8) + v2));1;55;;;;;
 (((v0 + v1) + -9) >= ((((v0 + v1) + -9) + 141) - 1));0;51;;;;;
 (((v0/2) + (v1*92)) == ((v0/2) + (v1*92)));1;28;;;;;
 (((v0/2) + (v1*512)) == ((v0/2) + (v1*512)));1;44;;;;;
 (min((v0*4) + (max(v1*64, -7) + (v2 + v3)), ((v1*64) + (v2 + v3)) + 60) == min((v0*4) + (max(v1*64, -7) + (v2 + v3)), ((v1*64) + (v2 + v3)) + 60));1;77;;;;;
 (((((v0 + -3)/8) + v1)*8) == ((((v0 + -3)/8) + v1)*8));1;68;;;;;
 (min(min(min(min(min(min(min(max(min((v0 + v1)*8, 2006), 7), max(min((v0 + v1)*8, 2005), 6) + 1), max(min((v0 + v1)*8, 2004), 5) + 2), max(min((v0 + v1)*8, 2003), 4) + 3), max(min((v0 + v1)*8, 2002), 3) + 4), max(min((v0 + v1)*8, 2001), 2) + 5), max(min(v0 + v1, 250)*8, 1) + 6), max(min((v0 + v1)*8, 1999), 0) + 7) == min(min(min(min(min(min(min(max(min((v0 + v1)*8, 2006), 7), max(min((v0 + v1)*8, 2005), 6) + 1), max(min((v0 + v1)*8, 2004), 5) + 2), max(min((v0 + v1)*8, 2003), 4) + 3), max(min((v0 + v1)*8, 2002), 3) + 4), max(min((v0 + v1)*8, 2001), 2) + 5), max(min(v0 + v1, 250)*8, 1) + 6), max(min((v0 + v1)*8, 1999), 0) + 7));1;245;;;;;
 (((((v0 + v1) + 15)/8) - ((((v2*2) + v3)*8) + v4)) == ((((v0 + v1) + 15)/8) - ((((v2*2) + v3)*8) + v4)));1;70;;;;;
 ((((v0*16) + ((v1*63) + v2)) + 10) < ((((v0 + 1)*16) + ((v1*63) + v2)) + -12));0;105;;;;;
 (((((((v0 + v1) + 7)/8) - ((min(v0, 32) + v1)/8))*8) + 44) >= 0);0;728;;;;;
 ((((((((v0 + v1) + 251)/63) - (v1/63))*8) + 45)/20) == (((((((v0 + v1) + 251)/63) - (v1/63))*8) + 45)/20));1;67;;;;;
 ((max(min((v0*16) + v1, 1102), 103) - (max(min((v0*16) + v1, 1117), 118) + (v2*2))) == (max(min((v0*16) + v1, 1102), 103) - (max(min((v0*16) + v1, 1117), 118) + (v2*2))));1;108;;;;;
 (((v0*532) + (min(v1, 21) + (v2*4))) == ((v0*532) + (min(v1, 21) + (v2*4))));1;48;;;;;
 (max(min(max((16 - (v0/8))/12, 0), (v1/12) + 1), (min(((((v2 + v0) + 7)/8) - (v0/8)) + -11, v1)/12) + 1) == max(min(max((16 - (v0/8))/12, 0), (v1/12) + 1), (min(((((v2 + v0) + 7)/8) - (v0/8)) + -11, v1)/12) + 1));1;151;;;;;
 (((((((v0 + v1) + -1)/8) - (v2*4)) - (v1/8)) - (v3*12)) == ((((((v0 + v1) + -1)/8) - (v2*4)) - (v1/8)) - (v3*12)));1;689;;;;;
 (((v0*2) + -33) == ((((v0*2) + -33) + ((min(min(((((v1 + v2) + 5)/2) - (v3*32)) - (v4*18), (v2/2) + 9) - ((v2/2) + (v5*17)), -7)*2) + 54)) - 1));0;322;;;;;
 (min(((v0 + v1) + -1)/8, ((v1/8) + (v2*16)) + 15) == min(((v0 + v1) + -1)/8, ((v1/8) + (v2*16)) + 15));1;50;;;;;
 (((v0*68) + (max(min(((v1 + v2)/8)*8, 2002), 3) + (v3*4))) == ((v0*68) + (max(min(((v1 + v2)/8)*8, 2002), 3) + (v3*4))));1;83;;;;;
 (((v0*8) + 4) < (min(max(v1*8, ((v0 + 1)*8) + 18), ((v0 + 1)*8) + 16) + -21));0;124;;;;;
 ((max(min(v0*8, 254), 5) + ((v1/4)*4)) == (max(min(v0*8, 254), 5) + ((v1/4)*4)));1;59;;;;;
 (((v0*2) + (max(min(v1/2, 999), 0) + (v2*63))) == ((v0*2) + (max(min(v1/2, 999), 0) + (v2*63))));1;58;;;;;
 (min((v0*4) + v1, ((v2 + v3)*8) + 5) == min((v0*4) + v1, ((v2 + v3)*8) + 5));1;49;;;;;
 ((((((v0*18) + v1)*2) + v2) + -7) >= (((((((v0*18) + v1)*2) + v2) + -7) + 3) - 1));0;88;;;;;
 (((((v0 % ((v1 + 46)/32))*-256)/32)*32) == ((v0 % ((v1 + 46)/32))*-256));1;42;;;;;
 (min((v0*4) + ((v1*8) + v2), v2 + 12) == min((v0*4) + ((v1*8) + v2), v2 + 12));1;42;;;;;
 (min(v0*8, v1 + 1113) == min(v0*8, v1 + 1113));1;55;;;;;
 (max(min(((v0*128) + 1297)/1116, max(min(((((((v1 + v2) + 124)/125) - (v2/125))*128) + 181)/1116, ((((((v1 + v2) + 124)/125) - (v2/125))*32) + 45)/279), ((((((v1 + v2) + 124)/125) - (v2/125))*128) + 186)/1116) + 1), (v3 + 182)/1116) == max(min(((v0*128) + 1297)/1116, max(min(((((((v1 + v2) + 124)/125) - (v2/125))*128) + 181)/1116, ((((((v1 + v2) + 124)/125) - (v2/125))*32) + 45)/279), ((((((v1 + v2) + 124)/125) - (v2/125))*128) + 186)/1116) + 1), (v3 + 182)/1116));1;182;;;;;
 (((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))*8) + 403)/180) == ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))*8) + 403)/180));1;282;;;;;
 (min(max(min((v0 + v1)/2, 1006), 7), max(min((v0 + v1)/2, 936), -63) + 88) == min(max(min((v0 + v1)/2, 1006), 7), max(min((v0 + v1)/2, 936), -63) + 88));1;97;;;;;
 ((min(max(min(v0, 31), 0)*8, ((max(min(v1, 31), 0) + v2)*8) + 3) - (max(min(v1, 31), 0)*8)) == (min(max(min(v0, 31), 0)*8, ((max(min(v1, 31), 0) + v2)*8) + 3) - (max(min(v1, 31), 0)*8)));1;127;;;;;
 ((((max((v0*130) - v1, -125) - (v2/8))*8) + ((v3*60) + (((v2/8) + (v4*15))*8))) == (((max((v0*130) - v1, -125) - (v2/8))*8) + ((v3*60) + (((v2/8) + (v4*15))*8))));1;93;;;;;
 ((((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 1106)/1000) == (((max(min((((v0 + v1) + -1)/63)*64, 1938), -61) - max(min((v1/63)*64, 2044), 45)) + 1106)/1000));1;252;;;;;
 ((((((v0 + v1) + 15)/16)*8) - ((v2*4) + v3)) == (((((v0 + v1) + 15)/16)*8) - ((v2*4) + v3)));1;63;;;;;
 (((((min(v0*8, (((v1*124) + v2)*8) + 439) + 558)/4) - (v1*248)) - (v2*2)) == ((((min(v0*8, (((v1*124) + v2)*8) + 439) + 558)/4) - (v1*248)) - (v2*2)));1;100;;;;;
 (((v0 + 38)/32) != 0);0;377;;;;;
 (min(max(((v0 + -1)/4) - (v1*2), -1), ((v2 - v1)*2) + 1) == min(max(((v0 + -1)/4) - (v1*2), -1), ((v2 - v1)*2) + 1));1;89;;;;;
 (min((24 - (v0*7))/2, ((531 - ((v0*112) + v1))/32) + ((((v2 + v3) + 1999)/2000)*8)) == min((24 - (v0*7))/2, ((531 - ((v0*112) + v1))/32) + ((((v2 + v3) + 1999)/2000)*8)));1;116;;;;;
 ((max(min(v0*8, 67), 36) + (v1*4)) == (max(min(v0*8, 67), 36) + (v1*4)));1;55;;;;;
 (((((v0 % ((v1 + 82)/64))*-64)/4)*4) == ((v0 % ((v1 + 82)/64))*-64));1;43;;;;;
 (min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125) == min(min(max(min((v0*125) + v1, min(v2 + v1, 2124) + -125), 0) + -1, (v0*125) + v1), (v2 + v1) + -125));1;147;;;;;
 ((((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 19)/4) == (((max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9)) + 19)/4));1;229;;;;;
 (min(v0 - ((v1*501) + (v2*1001)), 1000 - (v1*501)) == min(v0 - ((v1*501) + (v2*1001)), 1000 - (v1*501)));1;45;;;;;
 ((((max(v0 + v1, -8) - min(v1, 2007)) + 689)/673) == (((max(v0 + v1, -8) - min(v1, 2007)) + 689)/673));1;58;;;;;
 (((v0*252) + ((v1*64) + v2)) == ((v0*252) + ((v1*64) + v2)));1;527;;;;;
 ((-7 - max(min(v0, 15), -2)) >= (((-7 - max(min(v0, 15), -2)) + (max(min(v0, 15), -2) + 9)) - 1));0;95;;;;;
 ((((v0*-18)/2)*2) == (v0*-18));1;30;;;;;
 (min(max(min((min(v0*252, 248)/2) + (((v1 + v2) + 253)/2), 999), 0) - max(min((min(v0*252, 248)/2) + ((v1 + v2)/2), 999), 0), (v3*2) + 1) == min(max(min((min(v0*252, 248)/2) + (((v1 + v2) + 253)/2), 999), 0) - max(min((min(v0*252, 248)/2) + ((v1 + v2)/2), 999), 0), (v3*2) + 1));1;526;;;;;
 ((v0 - ((v1 + -3)/8)) == (v0 - ((v1 + -3)/8)));1;36;;;;;
 (((max(min(((v0 + v1) + -1)/63, 31), 0) - (v2*8)) - max(min(v1/63, 31), 0)) == ((max(min(((v0 + v1) + -1)/63, 31), 0) - (v2*8)) - max(min(v1/63, 31), 0)));1;80;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (v2*128)) + 114) == min(max(min(((v0 + v1) + 7)/8, 249), 0), (max(min(v1/8, 256), 7) + (v2*128)) + 114));1;104;;;;;
 (((((v0 - ((max(v0*8, -7) + ((v1 + v2) + 7))/8))*8)/8)*8) == ((v0 - ((max(v0*8, -7) + ((v1 + v2) + 7))/8))*8));1;78;;;;;
 (min(max(min(v0*4, 282), 33), max(min((v1/32)*4, 285), 36) + 8) == min(max(min(v0*4, 282), 33), max(min((v1/32)*4, 285), 36) + 8));1;88;;;;;
 (((((((v0 + v1) + 31)/32) - (v1/32)) + 27)/23) == ((((((v0 + v1) + 31)/32) - (v1/32)) + 27)/23));1;244;;;;;
 (((((((v0 + v1) + 5)/2) - (v1/2)) + 508)/504) == ((((((v0 + v1) + 5)/2) - (v1/2)) + 508)/504));1;35;;;;;
 ((v0 - ((v1*-63) + (min((min(((v2 + v3) + 3)/2, ((v1*63) + v0) + 27) - (v4*4)) + 8, (v1*63) + v0) + (v5*-2)))) == (v0 - ((v1*-63) + (min((min(((v2 + v3) + 3)/2, ((v1*63) + v0) + 27) - (v4*4)) + 8, (v1*63) + v0) + (v5*-2)))));1;129;;;;;
 (((((v0 % (((v1*8) + 77)/68))*68)/4)*4) == ((v0 % (((v1*8) + 77)/68))*68));1;74;;;;;
 (max(min(max(max(10 - (max((v0*516) - v1, -493)/2), (min(v1 - (v0*516), 493)/2) + 11), (22 - max((v0*516) - v1, -493))/2), (min(v2, 493)/2) + 11), v3) == max(min(max(max(10 - (max((v0*516) - v1, -493)/2), (min(v1 - (v0*516), 493)/2) + 11), (22 - max((v0*516) - v1, -493))/2), (min(v2, 493)/2) + 11), v3));1;103;;;;;
 ((v0 - max(min(min(((v1 + v2) + 499)/500, 3)*8, 22), -7)) == (v0 - max(min(min(((v1 + v2) + 499)/500, 3)*8, 22), -7)));1;70;;;;;
 ((v0 - ((v1/2)*47)) == (v0 - ((v1/2)*47)));1;1091;;;;;
 (((v0*144) + (((v1/125)*128) + (v2*39))) == ((v0*144) + (((v1/125)*128) + (v2*39))));1;52;;;;;
 (((v0 + 73)/4) != 0);0;360;;;;;
 (min(v0*8, (v1*8) + 61) == min(v0*8, (v1*8) + 61));1;49;;;;;
 (((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 10)/9) == ((((max(min(((v0 + v1) + 7)/8, 249), 0)/8) - (max(min(v1/8, 249), 0)/8)) + 10)/9));1;98;;;;;
 ((max(v0, 0) - (((v1/14)*9) + v2)) == (max(v0, 0) - (((v1/14)*9) + v2)));1;48;;;;;
 (max(0, min(0, (0 + ((((((v0 % 8) + 124)/8)*8) + 109)/77)) - 1) + 1) <= 0);0;83;;;;;
 (((v0 + 157)/128) != 0);0;252;;;;;
 ((((-128 - ((min(v0*128, v1 + -128) + v2) % 2))/2) + (((v3*2) + v4)*4)) == (((-128 - ((min(v0*128, v1 + -128) + v2) % 2))/2) + (((v3*2) + v4)*4)));1;86;;;;;
 (((min(v0*2000, 29992) + v1) + 2021) == ((min(v0*2000, 29992) + v1) + 2021));1;61;;;;;
 (((((v0 + v1)/8)*8) + ((v2*64) + (((((((min((min(v2*8, 30) + ((v0 + v1)/8)) + 2, (((v0 + v1) + 531)/8) + (v3*-34)) - (v2*8)) - ((v0 + v1)/8))*8) + 87)/52)*52) + (v3*272)))) == ((((v0 + v1)/8)*8) + ((v2*64) + (((((((min((min(v2*8, 30) + ((v0 + v1)/8)) + 2, (((v0 + v1) + 531)/8) + (v3*-34)) - (v2*8)) - ((v0 + v1)/8))*8) + 87)/52)*52) + (v3*272)))));1;171;;;;;
 ((((((((v0 + v1) + -1)/8) - (v1/8))*8) + 1014)/1004) == (((((((v0 + v1) + -1)/8) - (v1/8))*8) + 1014)/1004));1;83;;;;;
 ((((min(v0 - (v1*1000), 1000) + v2) - (v3*250)) - (v4*125)) == (((min(v0 - (v1*1000), 1000) + v2) - (v3*250)) - (v4*125)));1;81;;;;;
 (min((((v0 + v1) + 15)/16)*8, (v2*8) + 493) == min((((v0 + v1) + 15)/16)*8, (v2*8) + 493));1;56;;;;;
 ((max(min((v0*32) + v1, 1245), 246) + (v2*4)) == (max(min((v0*32) + v1, 1245), 246) + (v2*4)));1;66;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + v6))) - ((v7*v1) + ((v8*v3) + ((v9*v5) + v10)))]))));1;121;;;;;
 (((min((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8, (((v3*2) + v4)*8) + 7)*-2) + ((((v3*2) + v4)*16) + v5)) == ((min((((min(v0*500, v1 + -500) + v2) % 8) + 507)/8, (((v3*2) + v4)*8) + 7)*-2) + ((((v3*2) + v4)*16) + v5)));1;116;;;;;
 (min(max(((v0 - ((v1/8)*8)) + 75)/32, 0), (v2 + 9)/4) == min(max(((v0 - ((v1/8)*8)) + 75)/32, 0), (v2 + 9)/4));1;86;;;;;
 (max(min(min(min(((max(min(min(v1*224, 446) + v2, 1777), -222) - max(min((v1*224) + v2, 2000), 1))/4) + 55, (((v3 + v4) - max(min((v1*224) + v2, 2000), 1)) + -3)/4), (min(max(min(min(v1*224, 446) + v2, 1777), -222) + 220, v3 + v4) - max(min((v1*224) + v2, 2000), 1))/4), (0 + ((v5 + 227)/4)) - 1) + 1, min(max(((v4 - max(min((v1*224) + v2, 2000), 1))/4) + 1, 0), ((v5 + 227)/4) + 0)) <= min(max(((v4 - max(min((v1*224) + v2, 2000), 1))/4) + 1, 0), ((v5 + 227)/4) + 0));0;4166;;;;;
 ((min(v0/8, 0) + ((v1*3) - max(((v2 + v0) + -1)/8, 249))) == (min(v0/8, 0) + ((v1*3) - max(((v2 + v0) + -1)/8, 249))));1;87;;;;;
 (((v0*251) + (((v1/8)*2) + v2)) == ((v0*251) + (((v1/8)*2) + v2)));1;48;;;;;
 (max((((v0 - v1)*8) + 88)/1220, 0) >= ((max((((v0 - v1)*8) + 88)/1220, 0) + max(((((v0 - v1)*8) + 1327)/1220) - max((((v0 - v1)*8) + 88)/1220, 0), 0)) - 1));0;1088;;;;;
 ((((max(min(min(min((v3*16) + ((v2/8) + 15), ((v1 + v2) + -1)/8)*8, (((((min((v3*-16) + ((((v1 + v2) + -1)/8) - (v2/8)), 15)*8) + 8)/65)*65) + (v3*128)) + (((v2/8)*8) + 56)), 1994), -5) + (max(min(min((v3*16) + ((v2/8) + 7), ((v1 + v2) + -1)/8)*8, 2058), 59)*-1))/4)*4) == (max(min(min(min((v3*16) + ((v2/8) + 15), ((v1 + v2) + -1)/8)*8, (((((min((v3*-16) + ((((v1 + v2) + -1)/8) - (v2/8)), 15)*8) + 8)/65)*65) + (v3*128)) + (((v2/8)*8) + 56)), 1994), -5) + (max(min(min((v3*16) + ((v2/8) + 7), ((v1 + v2) + -1)/8)*8, 2058), 59)*-1)));0;4116;;;;;
 (v0 >= ((v0 + (min(v1 - (max(((v2*3) - (((v3 + v4) + 55)/8)) + v5, 3)*8), -44) + 45)) - 1));1;152;;;;;
 ((((min(v0*36, 214) + (((v1*3) + v2)*4)) + v3) + 4) < (((min(v0*36, 214) + min(((v1*3) + (v2 + 1))*4, (max((v2 + 1)*4, -3) + (v1*12)) + 3)) + v3) + -2));0;294;;;;;
 (((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && (0 <= 0)) && (0 >= 0)) && ((((((v2 % 4)*12) + 0)*4) + 0) <= ((v2 % 4)*48))) && ((((((v2 % 4)*12) + 11)*4) + 3) >= (((v2 % 4)*48) + 47)));1;159;;;;;
 (((((((uint1)1 && (((((0*4) + 0) + min((((min(v0, 500) + v1) + -500)/16)*8, 4)) + -4) <= (min((((min(v0, 500) + v1) + -500)/16)*8, 4) + -4))) && (((((126*4) + 3) + (min((((min(v0, 500) + v1) + -500)/16)*8, 4) + (((v2 + 8)/508)*508))) + -4) >= ((min((((min(v0, 500) + v1) + -500)/16)*8, 4) + v2) + 4))) && ((((v3*4) + v4) + -4) <= (((v3*4) + v4) + -4))) && ((((v3*4) + v4) + -1) >= (((v3*4) + v4) + -1))) && (0 <= 0)) && (86 >= 86));1;343;;;;;
 (((v0*3) + ((v1*63) + ((v2*125) + (v3 + v4)))) == ((v0*3) + ((v1*63) + ((v2*125) + (v3 + v4)))));1;71;;;;;
 (((((((uint1)1 && ((((v0 + v1) + 0) + -36) <= (((v0 + v1) + 0) + -36))) && ((((v0 + v1) + ((3 + 0) - 1)) + -36) >= (((v0 + v1) + ((3 + 0) - 1)) + -36))) && (0 <= 0)) && ((4 - 1) >= (4 - 1))) && (((((v2*25) + v3)*4) + 0) <= (((v2*25) + v3)*4))) && (((((v2*25) + v3)*4) + 3) >= ((((v2*25) + v3)*4) + 3)));1;206;;;;;
 (((((((uint1)1 && ((v0 + v1) <= (v0 + v1))) && ((v0 + v1) >= (v0 + v1))) && ((((0*4) + v2) + 0) <= v2)) && ((((3*4) + v2) + 3) >= (v2 + 15))) && (0 <= 0)) && (2 >= 2));1;127;;;;;
 (((((v0*128) + 114) + 3) + (v0*-128)) == ((((v0*128) + 114) + 3) + (v0*-128)));1;58;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 66)/64) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 66)/64));1;240;;;;;
 ((min(v0*128, 872) + (v1 + v2)) == (min(v0*128, 872) + (v1 + v2)));1;32;;;;;
 (((v0*-4) + ((max(min(min(((v1 + v2) + 1)/2, ((v2/2) + (v3*128)) + 127), 999), 0) - max(min((v2/2) + (v3*128), 999), 0)) - (v4*64))) == ((v0*-4) + ((max(min(min(((v1 + v2) + 1)/2, ((v2/2) + (v3*128)) + 127), 999), 0) - max(min((v2/2) + (v3*128), 999), 0)) - (v4*64))));1;336;;;;;
 (min(max((65 - (v0/16))/64, 0), (v1/64) + 1) == min(max((65 - (v0/16))/64, 0), (v1/64) + 1));1;1524;;;;;
 (((max(((v0 + v1) + 23)/8, 249) - (v2*4)) - min(v1/8, 4)) == ((max(((v0 + v1) + 23)/8, 249) - (v2*4)) - min(v1/8, 4)));1;105;;;;;
 (min(130 - (v0*15), (((((v1 + v2) + 64)/65)*8) - ((v0*15) + v3)) + 13) == min(130 - (v0*15), (((((v1 + v2) + 64)/65)*8) - ((v0*15) + v3)) + 13));1;77;;;;;
 (((v0*309) + ((v1*2) + v2)) == ((v0*309) + ((v1*2) + v2)));1;45;;;;;
 (((((v0 % ((v1 + 19)/17))*-136)/68)*68) == ((v0 % ((v1 + 19)/17))*-136));1;52;;;;;
 ((((((((v0 + v1) + -1)/8) - (v1/8))*8) + 1016)/1004) == (((((((v0 + v1) + -1)/8) - (v1/8))*8) + 1016)/1004));1;76;;;;;
 ((max(min(v0, 1003)*2, 7) + (v1*260)) == (max(min(v0, 1003)*2, 7) + (v1*260)));1;55;;;;;
 ((v0 + v1) == (((v0 + v1) + 125) - 1));0;55;;;;;
 (max(min(min(min(min((min(v4 + v3, 2000) - (v2*8)) + -529, (min(v4 + v3, 2000) - (v2*8)) + -505), 1471 - (v2*8)), 1471 - (v2*8)), (-3 + 8) - 1) + 1, min(max(max(max(max((max(v3, 0) - (v2*8)) + -504, -528 - (v2*8)), -504 - (v2*8)), -504 - (v2*8)), -3), 8 + -3)) <= min(max(max(max(max((max(v3, 0) - (v2*8)) + -504, -528 - (v2*8)), -504 - (v2*8)), -504 - (v2*8)), -3), 8 + -3));0;2213;;;;;
 (0 >= ((0 + (((33 - max((v0*16) - v1, (v2*16) + 29))/4) + (v2*4))) - 1));0;979;;;;;
 (((v0*24) + ((v1*40) + (v2 + v3))) == ((v0*24) + ((v1*40) + (v2 + v3))));1;54;;;;;
 (((v0/63) + (v1*16)) == ((v0/63) + (v1*16)));1;53;;;;;
 (((max(min(v0, 5), -10)*8) + -44) >= ((((max(min(v0, 5), -10)*8) + -44) + (50 - (max(min(v0, 5), -10)*8))) - 1));0;52;;;;;
 ((v0 + -248) >= (((v0 + -248) + 262) - 1));0;32;;;;;
 ((((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 521)/504) == (((max(min(v0 + v1, 1995), -4) - max(min(v1, 2002), 3)) + 521)/504));1;147;;;;;
 (min((v0/2) + (v1*2), v2 + 9) == min((v0/2) + (v1*2), v2 + 9));1;46;;;;;
 (min(max(((v0 - v1) + 11)/4, 0), ((v2 - v1)/4) + 5) == min(max(((v0 - v1) + 11)/4, 0), ((v2 - v1)/4) + 5));1;69;;;;;
 (min(1938 - (v0*8), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)*8) + 8) == min(1938 - (v0*8), (min(((((v1 + v2) + -1)/8) - (v3*16)) - (v2/8), 15)*8) + 8));1;112;;;;;
 (min(((((max(min(v0*2, 1961), -38) - v1) + 45)/4)*4) + v1, max(min(v0*2, 1961), -38) + 42) == min(((((max(min(v0*2, 1961), -38) - v1) + 45)/4)*4) + v1, max(min(v0*2, 1961), -38) + 42));1;128;;;;;
 (((109 - max(v0*63, 62)) - (v1*16)) == ((109 - max(v0*63, 62)) - (v1*16)));1;38;;;;;
 (min(((v0*64) + 1272)/1108, max(min(((((((v1 + v2) + 62)/63) - (v2/63))*64) + 164)/1108, ((((((v1 + v2) + 62)/63) - (v2/63))*16) + 41)/277), ((((((v1 + v2) + 62)/63) - (v2/63))*64) + 169)/1108) + 1) == min(((v0*64) + 1272)/1108, max(min(((((((v1 + v2) + 62)/63) - (v2/63))*64) + 164)/1108, ((((((v1 + v2) + 62)/63) - (v2/63))*16) + 41)/277), ((((((v1 + v2) + 62)/63) - (v2/63))*64) + 169)/1108) + 1));1;1731;;;;;
 (min((((v0*2) + v1)*2) + 1, v2) == min((((v0*2) + v1)*2) + 1, v2));1;816;;;;;
 (min(((((v0 + v1) + -1)/8) - (v1/8)) + -15, v2) == min(((((v0 + v1) + -1)/8) - (v1/8)) + -15, v2));1;48;;;;;
 (((v0*8) + (max(min((v1*64) + v2, min(v3 + v2, 2063) + -64), 0) - max(min((v1*64) + v2, min(v3 + v2, 2000) + -64), -63))) == ((v0*8) + (max(min((v1*64) + v2, min(v3 + v2, 2063) + -64), 0) - max(min((v1*64) + v2, min(v3 + v2, 2000) + -64), -63))));1;1011;;;;;
 (((v0*18) + ((v1/63)*8)) == ((v0*18) + ((v1/63)*8)));1;44;;;;;
 (((((v0*31) - min(max(v1, 0), (min(v0*31, 123) + ((v2*154) + v3)) + 30))*2) + ((((v4*8) + ((v2*154) + v3))*2) + v5)) == ((((v0*31) - min(max(v1, 0), (min(v0*31, 123) + ((v2*154) + v3)) + 30))*2) + ((((v4*8) + ((v2*154) + v3))*2) + v5)));1;117;;;;;
 (max(min(max(((v0*8) + v1)*8, 75), ((((v0*8) + v1) + v2)*8) + 65), min((((v0*8) + v1) + v2)*8, 2010) + 65) == max(min(max(((v0*8) + v1)*8, 75), ((((v0*8) + v1) + v2)*8) + 65), min((((v0*8) + v1) + v2)*8, 2010) + 65));1;124;;;;;
 (min(v0*8, (v1*8) + 467) == min(v0*8, (v1*8) + 467));1;54;;;;;
 ((((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 3)/2) == (((max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0)) + 3)/2));1;260;;;;;
 ((max(min(v0, 813), -186) + (v1*2)) == (max(min(v0, 813), -186) + (v1*2)));1;36;;;;;
 ((((v0*1008)/4)*4) == (v0*1008));1;20;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*4)) == (max(min(v0 + v1, 1999), 0) + (v2*4)));1;34;;;;;
 ((min(((((v0 + v1) + -1)/17) - (v2*24)) - (v3*12), (v1/17) + 11) - ((v1/17) + (v4*4))) == (min(((((v0 + v1) + -1)/17) - (v2*24)) - (v3*12), (v1/17) + 11) - ((v1/17) + (v4*4))));1;92;;;;;
 ((((((((v0 + v1) + 3)/2) - (v2*252)) - (v3*64)) - (v4*32)) - (v1/2)) == (((((((v0 + v1) + 3)/2) - (v2*252)) - (v3*64)) - (v4*32)) - (v1/2)));1;77;;;;;
 (min(max(min((v0 + v1)/2, 968), -31) + 21, v2) == min(max(min((v0 + v1)/2, 968), -31) + 21, v2));1;69;;;;;
 ((((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 31)/20) == (((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 63), 1)) + 31)/20));1;256;;;;;
 (min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2) == min(max(min((((v0 + v1) + 62)/63)*8, 243), -6) - max(min((v1/63)*8, 258), 9), v2));1;229;;;;;
 (((v0*12) + ((v1/8) + (v2*64))) == ((v0*12) + ((v1/8) + (v2*64))));1;47;;;;;
 (min(v0 - (v1*64), v2) == min(v0 - (v1*64), v2));1;16;;;;;
 ((max(min(v0, 2007), 8) + (((v1 + 17)/4)*4)) == (max(min(v0, 2007), 8) + (((v1 + 17)/4)*4)));1;62;;;;;
 (min((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 62), 0)) + -3, v2) == min((max(min(((v0 + v1) + 31)/32, 62), 0) - max(min(v1/32, 62), 0)) + -3, v2));1;237;;;;;
 (((((v0*8) + v1)*4) + -4) == ((((((v0*8) + v1)*4) + -4) + ((min(v2, 4)*4) + 16)) - 1));0;127;;;;;
 (min(((v0 + v1) + -1)/4, ((v2*32) + ((v1/4) + (v3*19))) + 12) == min(((v0 + v1) + -1)/4, ((v2*32) + ((v1/4) + (v3*19))) + 12));1;69;;;;;
 ((min(v0*1000, v1 + -1000) + ((v2*500) + v3)) == (min(v0*1000, v1 + -1000) + ((v2*500) + v3)));1;82;;;;;
 (((v0 + 41)/33) != 0);0;384;;;;;
 (min((v0*126) + 117, v1) == min((v0*126) + 117, v1));1;24;;;;;
 (min((((v0*47) + v1) + v2)*8, (v3*8) + 1) == min((((v0*47) + v1) + v2)*8, (v3*8) + 1));1;51;;;;;
 ((((v0*64) + 2852)/36) != 0);0;417;;;;;
 ((((min(min(v0*4, 15) + v1, (v2 - (v3*19)) + 9) + (v0*-4))*-8) + ((v4*4) + ((v1*8) + (v5*20)))) == (((min(min(v0*4, 15) + v1, (v2 - (v3*19)) + 9) + (v0*-4))*-8) + ((v4*4) + ((v1*8) + (v5*20)))));1;106;;;;;
 (max((((v0*8) + 58) + v1) + 495, v2) == max((((v0*8) + 58) + v1) + 495, v2));1;58;;;;;
 (((v0*64) + -29) == ((((v0*64) + -29) + ((v1*8) + 34)) - 1));0;79;;;;;
 ((max(min(min(min(((min(v0*64, (v1*124) + 52)/2) + ((v2/125)*32))*2, ((v1*124) + ((v2/125)*64)) + 52), ((v2/125) + v0)*64), 959)*2, -81) - (max(min((v1*248) + ((v2/125)*128), 2061), 62) + (v3*4))) == (max(min(min(min(((min(v0*64, (v1*124) + 52)/2) + ((v2/125)*32))*2, ((v1*124) + ((v2/125)*64)) + 52), ((v2/125) + v0)*64), 959)*2, -81) - (max(min((v1*248) + ((v2/125)*128), 2061), 62) + (v3*4))));1;171;;;;;
 (((v0 + v1)/8) >= ((((v0 + v1)/8) + ((((v0 + v1) % 8) + 31)/8)) - 1));0;75;;;;;
 (min(((v0/2) + (v1*32)) + 23, v2) == min(((v0/2) + (v1*32)) + 23, v2));1;41;;;;;
 ((min(v0*84, ((min(v1*1000, v2 + -1000) + v3) % 2) + 417) - ((v4*8) + ((v0*84) + (v5*32)))) == (min(v0*84, ((min(v1*1000, v2 + -1000) + v3) % 2) + 417) - ((v4*8) + ((v0*84) + (v5*32)))));1;101;;;;;
 (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 503) == min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 503));1;126;;;;;
 (min((v0*252) + 252, v1) == min((v0*252) + 252, v1));1;50;;;;;
 ((max(min(v0, 1999), 0) + (v1*8)) == (max(min(v0, 1999), 0) + (v1*8)));1;37;;;;;
 (((((((v0 + v1) + 499)/500) - (v1/500))/4) + 1) == ((((((v0 + v1) + 499)/500) - (v1/500))/4) + 1));1;64;;;;;
 ((((min((v0*6) + (((v1/500)*64) + -34), ((((v2 + v1) + -1)/500)*64) + 45)*-4)/4)*4) == (min((v0*6) + (((v1/500)*64) + -34), ((((v2 + v1) + -1)/500)*64) + 45)*-4));1;166;;;;;
 (((v0*33) + (((v1/63)*2) + v2)) == ((v0*33) + (((v1/63)*2) + v2)));1;47;;;;;
 ((-68 - (((v0 - ((v1/32) + (v2*33)))*4)*8)) == (-68 - (((v0 - ((v1/32) + (v2*33)))*4)*8)));1;74;;;;;
 (((min(max(min((v0/2) + v1, 1000), 1), max(min(v0/2, 999), 0) + min(((min((v2*128) + 128, v3) + 1)/2)*2, (v2*128) + 128)) - (v2*128)) - max(min(v0/2, 999), 0)) == ((min(max(min((v0/2) + v1, 1000), 1), max(min(v0/2, 999), 0) + min(((min((v2*128) + 128, v3) + 1)/2)*2, (v2*128) + 128)) - (v2*128)) - max(min(v0/2, 999), 0)));1;159;;;;;
 (((max(min((v1*-16) + (v3 + (v2*-48)), 12), -4)/2)*2) == max(min((v1*-16) + (v3 + (v2*-48)), 12), -4));0;1010;;;;;
 ((((v0*252) + ((v1*64) + v2)) + 54) == (((v0*252) + ((v1*64) + v2)) + 54));1;46;;;;;
 ((min(v0*4, 15) + ((v1 % 4)*19)) == (min(v0*4, 15) + ((v1 % 4)*19)));1;51;;;;;
 (min((v0*668) + 665, v1) == min((v0*668) + 665, v1));1;42;;;;;
 (min(((((v0*4) + 25)/17)*17) + ((v1/32)*4), ((((v2 + v1) + 31)/32)*4) + 9) == min(((((v0*4) + 25)/17)*17) + ((v1/32)*4), ((((v2 + v1) + 31)/32)*4) + 9));1;102;;;;;
 (min((((v0*8) - v1) + 345)/116, 0 - min(v1/116, 0)) == min((((v0*8) - v1) + 345)/116, 0 - min(v1/116, 0)));1;69;;;;;
 (-24 == ((-24 + (33 - max(v0*5, 4))) - 1));0;71;;;;;
 (((((((uint1)1 && ((-4 + v0) <= (-4 + v0))) && ((((7 + -4) - 1) + v0) >= (((7 + -4) - 1) + v0))) && ((((((0*4) + v1) + -4) + 0) + -8) <= (((((0*4) + v1) + 0) + -4) + -8))) && ((((((33*4) + v1) + ((7 + -4) - 1)) + 3) + -8) >= (((((33*4) + v1) + ((4 + 0) - 1)) + ((7 + -4) - 1)) + -8))) && (v2 <= v2)) && (v2 >= v2));1;247;;;;;
 ((max(v0 - v1, (v1 - v0) + 336) + -327) >= 0);0;810;;;;;
 (0 == ((0 + ((v0*2) + 16)) - 1));0;69;;;;;
 ((max(min(v0, 990), -9) - ((v1*4) + v2)) == (max(min(v0, 990), -9) - ((v1*4) + v2)));1;57;;;;;
 (((max(min((v1*-502) + (max(min(((v2 + v3) + -1)/2, 999), 0) - max(min(v3/2, 999), 0)), 498), -4)/2)*2) == max(min((v1*-502) + (max(min(((v2 + v3) + -1)/2, 999), 0) - max(min(v3/2, 999), 0)), 498), -4));0;3199;;;;;
 (((v0*32) + (min(v1*128, v2 + -128) + v3)) == ((v0*32) + (min(v1*128, v2 + -128) + v3)));1;57;;;;;
 (((((max(min(((v0 + v1) + 135)/64, 31), 0) - max(min(v1/64, 36), 5))*8) + 165)/125) == ((((max(min(((v0 + v1) + 135)/64, 31), 0) - max(min(v1/64, 36), 5))*8) + 165)/125));1;263;;;;;
 (max(min(min(min(((v4 - v5) + -3)/4, ((((v2 + v3) + -13)/4) - v5)/4), (min(((v2 + v3) + -1)/4, v4 + -3) - v5)/4), (0 + ((min(((((v6 + v7) + 3)/4) - (v8*8)) - (v7/4), 7)/4) + 1)) - 1) + 1, min(max(((((v3 + 3)/4) - v5) + 3)/4, 0), ((min(((((v6 + v7) + 3)/4) - (v8*8)) - (v7/4), 7)/4) + 1) + 0)) <= min(max(((((v3 + 3)/4) - v5) + 3)/4, 0), ((min(((((v6 + v7) + 3)/4) - (v8*8)) - (v7/4), 7)/4) + 1) + 0));0;3435;;;;;
 (min((v0*32) + v1, v2 + 2) == min((v0*32) + v1, v2 + 2));1;48;;;;;
 ((min((v0*60) + (v1*32), (min(((v2 + v3) + -1)/32, v1 + 3)*32) + 204) + (v4*3)) == (min((v0*60) + (v1*32), (min(((v2 + v3) + -1)/32, v1 + 3)*32) + 204) + (v4*3)));1;95;;;;;
 (((max((v0 + -2001)/2, 0)/63) + (v1*4)) == ((max((v0 + -2001)/2, 0)/63) + (v1*4)));1;50;;;;;
 (min((v0*4) + v1, v2 + 1) == min((v0*4) + v1, v2 + 1));1;81;;;;;
 (min(((v0 + v1) + 3)/4, v2 + 121) == min(((v0 + v1) + 3)/4, v2 + 121));1;51;;;;;
 (min((min(v0/8, 0) + v1)*8, v2 + 995) == min((min(v0/8, 0) + v1)*8, v2 + 995));1;49;;;;;
 (((v0 + 526)/508) == ((v0 + 526)/508));1;29;;;;;
 (max(min(max((v0 + 10)/8, (max(min((v1/500)*8, 36), 5)*8) + -68), ((max(min((v1/500)*8, 36), 5) + v2)*8) + 156), min(((v3 + v0) + -5)/8, ((max(min((v1/500)*8, 36), 5) + v2)*8) + 155) + 1) == max(min(max((v0 + 10)/8, (max(min((v1/500)*8, 36), 5)*8) + -68), ((max(min((v1/500)*8, 36), 5) + v2)*8) + 156), min(((v3 + v0) + -5)/8, ((max(min((v1/500)*8, 36), 5) + v2)*8) + 155) + 1));1;197;;;;;
 ((min(v0, 0) + (v1*2)) == (min(v0, 0) + (v1*2)));1;40;;;;;
 (min(v0/2, v1 + 4) == min(v0/2, v1 + 4));1;25;;;;;
 (((min((max(min(v0 + v1, 2000), 1) - (v2*500)) - max(min(v1, 1999), 0), min(v3*128, 377) + 123)/4) + (v3*-32)) == ((min((max(min(v0 + v1, 2000), 1) - (v2*500)) - max(min(v1, 1999), 0), min(v3*128, 377) + 123)/4) + (v3*-32)));1;115;;;;;
 ((((((((v0 + v1) + 127)/124) - ((v1 + -4)/124))*8) + 27)/20) == (((((((v0 + v1) + 127)/124) - ((v1 + -4)/124))*8) + 27)/20));1;76;;;;;
 (max(min((57 - v0)/20, 2), 13 - max(v0/20, 12)) == max(min((57 - v0)/20, 2), 13 - max(v0/20, 12)));1;65;;;;;
 (((((v0 + v1) + v2)*2) + -4) >= ((((((v0 - 1) + v1) + v2)*2) + 1) + 1));0;93;;;;;
 ((min((v0/65)*64, 4) + (v1*500)) == (min((v0/65)*64, 4) + (v1*500)));1;48;;;;;
 (((((v0*4) - min(((v1 + v2) + -1)/65, ((v2/65) + (min(min((v0*4) + 3, v3)/4, v0)*4)) + 3))*2) + ((((v2/65) + (v4*2))*2) + v5)) == ((((v0*4) - min(((v1 + v2) + -1)/65, ((v2/65) + (min(min((v0*4) + 3, v3)/4, v0)*4)) + 3))*2) + ((((v2/65) + (v4*2))*2) + v5)));1;107;;;;;
 (((v0*6) + ((v1*16) + (max(min((v2 + v3)/2, 999), 0) + (v4*2)))) == ((v0*6) + ((v1*16) + (max(min((v2 + v3)/2, 999), 0) + (v4*2)))));1;74;;;;;
 (min(((v0 + v1) + 3)/4, v2 + 7) == min(((v0 + v1) + 3)/4, v2 + 7));1;51;;;;;
 (min(max(max(min(min((((v0 + v1) + 19)/4) - (v2/4), v3 + 5), ((min(((v2/4) + v3)*4, (v0 + v1) + 1) + 21)/4) - (v2/4)), ((v1 + 22)/4) - (v2/4)), -1), v3 + 6) == min(max(max(min(min((((v0 + v1) + 19)/4) - (v2/4), v3 + 5), ((min(((v2/4) + v3)*4, (v0 + v1) + 1) + 21)/4) - (v2/4)), ((v1 + 22)/4) - (v2/4)), -1), v3 + 6));1;186;;;;;
 (min(v0*8, (((v1 + v2)/8)*8) + 1) == min(v0*8, (((v1 + v2)/8)*8) + 1));1;61;;;;;
 (max((min((((v0 + v1) + 129)/65) - (v1/65), v2 + 1) + 11)/12, max(v3/12, -1) + 1) == max((min((((v0 + v1) + 129)/65) - (v1/65), v2 + 1) + 11)/12, max(v3/12, -1) + 1));1;95;;;;;
 (min(((v0 + v1) + -1)/8, (min((v1/8) + 49, v2) + (v3*64)) + 14) == min(((v0 + v1) + -1)/8, (min((v1/8) + 49, v2) + (v3*64)) + 14));1;60;;;;;
 (min((v0*128) + ((v1*8) + v2), min((v2 + (v0*128)) + 16, v3 + v4) + -8) == min((v0*128) + ((v1*8) + v2), min((v2 + (v0*128)) + 16, v3 + v4) + -8));1;105;;;;;
 (min(v0*4, v1 + 17) == min(v0*4, v1 + 17));1;30;;;;;
 (min(max((((v0 + v1) + 127)/124) - ((v1 + 368)/124), max((((v0 + v1) + 251)/124) - ((v1 + -4)/124), (((v0 + v1) + 127)/124) - ((v1 + -252)/124)) + -1), v2) == min(max((((v0 + v1) + 127)/124) - ((v1 + 368)/124), max((((v0 + v1) + 251)/124) - ((v1 + -4)/124), (((v0 + v1) + 127)/124) - ((v1 + -252)/124)) + -1), v2));1;145;;;;;
 ((v0 + -3) >= ((v0 - 1) + 1));0;50;;;;;
 ((((max(((v0 + v1) + 7)/8, 255) - min(v1/8, 0))/4) + 1) >= 0);1;70;;;;;
 ((max(min(v0*4, 285), 36) + (v1*4)) == (max(min(v0*4, 285), 36) + (v1*4)));1;56;;;;;
 (0 == ((0 + ((min(v0, 7)*32) + 54)) - 1));0;68;;;;;
 (((v0 + 3)/4) == ((v0 + 3)/4));1;23;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 271)/252) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 271)/252));1;160;;;;;
 (max(-4 - max(v0, 1), min(((v1*34) + v2) - min(((((((min((((v3 + v4) + 62)/63)*8, (min(v1*34, 99) + v2) + 25) - (v1*34)) - v2) + 14)/4)*4) + (v1*34)) + v2, v5 + 11), -1) + -4) == max(-4 - max(v0, 1), min(((v1*34) + v2) - min(((((((min((((v3 + v4) + 62)/63)*8, (min(v1*34, 99) + v2) + 25) - (v1*34)) - v2) + 14)/4)*4) + (v1*34)) + v2, v5 + 11), -1) + -4));1;177;;;;;
 (min(((v0 + v1) + 29)/2, v2) == min(((v0 + v1) + 29)/2, v2));1;44;;;;;
 ((v0 - ((v1*4) + ((v2*252) + v3))) == (v0 - ((v1*4) + ((v2*252) + v3))));1;54;;;;;
 (max(((v0 - ((v1*256) + v2)) + 3)/4, ((v0 - v2)/4) + (v1*-64)) == max(((v0 - ((v1*256) + v2)) + 3)/4, ((v0 - v2)/4) + (v1*-64)));1;64;;;;;
 (((((((((v0/2000)*128) + v1)*2) + v2)*8) + v3) + -1883) < ((((((((v0/2000)*128) + v1)*2) + v2)*8) + (v3 + 1)) + -1883));1;123;;;;;
 ((((v0*12) + v1)*4) == (((((v0*12) + v1)*4) + ((min(v2 - v1, 11)*4) + 4)) - 1));0;124;;;;;
 ((v0 - (v1*96)) == (v0 - (v1*96)));1;29;;;;;
 (min((v0*504) + v1, ((((v2 + v3) + -1)/8)*8) + 16) == min((v0*504) + v1, ((((v2 + v3) + -1)/8)*8) + 16));1;67;;;;;
 (max(((min((v0*4) + 4, v1) + v2) + v3) + 2, (v0*4) + v2) == max(((min((v0*4) + 4, v1) + v2) + v3) + 2, (v0*4) + v2));1;62;;;;;
 (((max(((v0 + v1) + 23)/8, 249)*2) - ((min(v1/8, 4)*2) + v2)) == ((max(((v0 + v1) + 23)/8, 249)*2) - ((min(v1/8, 4)*2) + v2)));1;81;;;;;
 ((((min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2, 1999) - max((max(min((v1/4)*8, 4012), 13) + -19)/2, 0))/668) + 1) == (((min((max(min((((v0 + v1) + -1)/4)*8, 3994), -5) + 27)/2, 1999) - max((max(min((v1/4)*8, 4012), 13) + -19)/2, 0))/668) + 1));1;169;;;;;
 (((((v0/((v1/4) + 1))*-84)/28)*28) == ((v0/((v1/4) + 1))*-84));1;42;;;;;
 (((((((v0 + v1) + 7)/504) - (v1/504))*4) + 7) == ((((((v0 + v1) + 7)/504) - (v1/504))*4) + 7));1;67;;;;;
 (min(((v0*8) + v1)*8, (v2*8) + 44) == min(((v0*8) + v1)*8, (v2*8) + 44));1;41;;;;;
 (min(max(min(v0, 999)*2, -1), (max(min(v1*2, 1997), -2) + (v2*4)) + 4) == min(max(min(v0, 999)*2, -1), (max(min(v1*2, 1997), -2) + (v2*4)) + 4));1;140;;;;;
 (min((v0*2) + v1, v2 + 14) == min((v0*2) + v1, v2 + 14));1;76;;;;;
 (((v0 + 999)/1000) == ((v0 + 999)/1000));1;80;;;;;
 (min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128) == min(min(max(min((v0*128) + v1, min(v2 + v1, 2127) + -128), 0) + -11, (v0*128) + v1), (v2 + v1) + -128));1;135;;;;;
 ((v0/((v1 + 11)/8)) == (v0/((v1 + 11)/8)));1;42;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 332)/250) == (((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 332)/250));1;229;;;;;
 ((max(min(min(((v0 + v1) + 62)/8, (((v0 + v1)/8) + (v2*4)) + 3), 249), 0) - max(min(((v0 + v1)/8) + (v2*4), 249), 0)) == (max(min(min(((v0 + v1) + 62)/8, (((v0 + v1)/8) + (v2*4)) + 3), 249), 0) - max(min(((v0 + v1)/8) + (v2*4), 249), 0)));1;316;;;;;
 ((((((((v0 + v1) + -1)/63) - (v1/63))*8) + 141)/130) == (((((((v0 + v1) + -1)/63) - (v1/63))*8) + 141)/130));1;252;;;;;
 (max(((v0*4) + v1)*8, ((min((v0*4) + v1, (v2*8) + 104)*8) + v3) + 27) == max(((v0*4) + v1)*8, ((min((v0*4) + v1, (v2*8) + 104)*8) + v3) + 27));1;126;;;;;
 (((((v0 + v1) + 31)/32) - ((v2*8) + v3)) == ((((v0 + v1) + 31)/32) - ((v2*8) + v3)));1;56;;;;;
 (((v0/8) + (v1*2)) == ((v0/8) + (v1*2)));1;37;;;;;
 (min((v0*32) + (max(v1*500, -5) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 468) == min((v0*32) + (max(v1*500, -5) + (v2 + v3)), ((v1*500) + (v2 + v3)) + 468));1;75;;;;;
 ((min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2) + 3) == (min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2) + 3));1;260;;;;;
 ((max(min(v0 + v1, 2000), 1) - ((v2*16) + v3)) == (max(min(v0 + v1, 2000), 1) - ((v2*16) + v3)));1;78;;;;;
 (((v0*1008) + ((v1*116) + v2)) == ((v0*1008) + ((v1*116) + v2)));1;45;;;;;
 (max(min(min(min(min(min(min(((((v7 + v4)*4) - max(max(min(v5/2, 1006), 7)*8, 115)) + -7755)/4008, ((((v7 + v4)*4) - max(max(min(v5/2, 1006), 7)*8, 115)) + -7755)/4008), ((((v7 + v4)*4) - max(max(min(v5/2, 1006), 7)*8, 115)) + -3891)/4008), ((min(max(min(v6*8, 8114), 115), ((v7 + v4)*4) + 4125) - max(max(min(v5/2, 1006), 7)*8, 115)) + -3998)/4008), ((min(max(min(v6*8, 8114), 115), ((v7 + v4)*4) + 4125) - max(max(min(v5/2, 1006), 7)*8, 115)) + -3998)/4008), ((min(max(min(v6*8, 8114), 115), ((v7 + v4)*4) + 4125) - max(max(min(v5/2, 1006), 7)*8, 115)) + -3998)/4008), (0 + ((v3 + 4017)/4008)) - 1) + 1, min(max((((v4*4) - max(max(min(v5/2, 1006), 7)*8, 115)) + 4135)/4008, 0), ((v3 + 4017)/4008) + 0)) <= min(max((((v4*4) - max(max(min(v5/2, 1006), 7)*8, 115)) + 4135)/4008, 0), ((v3 + 4017)/4008) + 0));0;4481;;;;;
 ((max(min((v0*64) + v1, 1117), 118) + (v2*4)) == (max(min((v0*64) + v1, 1117), 118) + (v2*4)));1;62;;;;;
 ((max(min((v0/8)*8, 2082), 83) + (v1*128)) == (max(min((v0/8)*8, 2082), 83) + (v1*128)));1;67;;;;;
 (min((((v0 + v1) + 507)/2) - (v2*131), ((v0 + v1)/2) + 123) == min((((v0 + v1) + 507)/2) - (v2*131), ((v0 + v1)/2) + 123));1;81;;;;;
 (((((((uint1)1 && (((((0*4) + v0) + 0) + -2) <= ((((0*4) + v0) + 0) + -2))) && ((((((17 - (max(v1, 1)*8))*4) + v0) + 3) + -2) >= (((((17 - (max(v1, 1)*8))*4) + v0) + 3) + -2))) && (v2 <= v2)) && (v2 >= v2)) && (v3 <= v3)) && (v3 >= v3));1;192;;;;;
 ((((v0*2)/9) + 2) != 0);0;372;;;;;
 (((((v0 + v1) + 55)/8) - ((v1/8) + (v2*16))) == ((((v0 + v1) + 55)/8) - ((v1/8) + (v2*16))));1;60;;;;;
 (min(v0*64, v1 + -64) == min(v0*64, v1 + -64));1;85;;;;;
 ((((max(v0, 0) - v1) + 31)/18) != 0);0;522;;;;;
 (((((((uint1)1 && ((((0*4) + v0) + 0) <= (((0*4) + 0) + v0))) && ((((1*4) + v0) + 3) >= (((1*4) + ((4 + 0) - 1)) + v0))) && ((((v1*8) + v2) + v3) <= (((v1*8) + v2) + v3))) && ((((v1*8) + v2) + v3) >= (((v1*8) + v2) + v3))) && (v4 <= v4)) && (v4 >= v4));1;166;;;;;
 (min((v0*16) + v1, v2 + 32) == min((v0*16) + v1, v2 + 32));1;66;;;;;
 (min(((v0 + v1) + -1)/125, ((v1/125) + ((v2/4)*4)) + 3) == min(((v0 + v1) + -1)/125, ((v1/125) + ((v2/4)*4)) + 3));1;63;;;;;
 (0 == ((0 + (1002 - max(((v0*16) + v1)*4, 998))) - 1));0;70;;;;;
 ((max(min(v0, 999), 0) + ((v1/4)*4)) == (max(min(v0, 999), 0) + ((v1/4)*4)));1;45;;;;;
 (((((((v0 + v1) + 255)/32) - (v1/32))/9) + 1) == ((((((v0 + v1) + 255)/32) - (v1/32))/9) + 1));1;63;;;;;
 (((min(v0*64, 188)/2)*2) == min(v0*64, 188));1;58;;;;;
 (min((v0*4) + v1, v2 + 7) == min((v0*4) + v1, v2 + 7));1;34;;;;;
 (((v0 + 505)/503) != 0);0;343;;;;;
 (((min((((v0 + v1) + 127)/32) - (v2*4), (v1/32) + -4) - v3) - (v1/32)) == ((min((((v0 + v1) + 127)/32) - (v2*4), (v1/32) + -4) - v3) - (v1/32)));1;83;;;;;
 (min(((((v0 + v1) + -1)/500) - (v1/500))*16, (v2*16) + 1) == min(((((v0 + v1) + -1)/500) - (v1/500))*16, (v2*16) + 1));1;350;;;;;
 (((min(((v0*8) + v1)*8, (v2*8) + 44) - (v0*64)) - (v1*8)) == ((min(((v0*8) + v1)*8, (v2*8) + 44) - (v0*64)) - (v1*8)));1;72;;;;;
 (((((((v0 + v1) + 440)/63) - (v1/63)) + 19)/12) == ((((((v0 + v1) + 440)/63) - (v1/63)) + 19)/12));1;1462;;;;;
 (min(max(((v0 + 18)/4) - ((v1/8)*2), -1), (v2*2) + 9) == min(max(((v0 + 18)/4) - ((v1/8)*2), -1), (v2*2) + 9));1;81;;;;;
 ((((v0/63)*64) + -45) == (((((v0/63)*64) + -45) + ((v1*64) + 107)) - 1));0;1449;;;;;
 (((((((v0 + v1)/250) - (v1/250))*64) + 40)/33) == ((((((v0 + v1)/250) - (v1/250))*64) + 40)/33));1;60;;;;;
 ((((((((v0 + v1) + 1999)/2000) - (v1/2000))*256) + 630)/99) == (((((((v0 + v1) + 1999)/2000) - (v1/2000))*256) + 630)/99));1;80;;;;;
 (((((v0 + v1) + 7)/2) - ((v2*32) + v3)) == ((((v0 + v1) + 7)/2) - ((v2*32) + v3)));1;57;;;;;
 (min(v0 + 18, v1) == min(v0 + 18, v1));1;52;;;;;
 (min(max(min(v0/2, 999), 0) + (v1*126), v2 + 4) == min(max(min(v0/2, 999), 0) + (v1*126), v2 + 4));1;71;;;;;
 (((((((v0 + v1) + 31)/8) - (v1/8)) + 132)/129) == ((((((v0 + v1) + 31)/8) - (v1/8)) + 132)/129));1;67;;;;;
 (((v0*2) + 1) == ((((v0*2) + 1) + ((min(v1, 15)*2) + 2)) - 1));0;85;;;;;
 ((max(min(v0/8, 249), 0) + (v1*2)) == (max(min(v0/8, 249), 0) + (v1*2)));1;65;;;;;
 ((v0 - ((v1*531) + v2)) == (v0 - ((v1*531) + v2)));1;34;;;;;
 (((((min((v0*-128) + (v1 - v2), 127) + 5)/68)*68) + (v0*128)) == ((((min((v0*-128) + (v1 - v2), 127) + 5)/68)*68) + (v0*128)));1;70;;;;;
 ((((max((((v0 + v1) + -1)/65)*8, 242) + 15)/8) - min(v1/65, 0)) >= 0);1;68;;;;;
 ((((((v0 + v1) + -1)/250)*8) - (((((v1/250)*4) + v2)*2) + v3)) == (((((v0 + v1) + -1)/250)*8) - (((((v1/250)*4) + v2)*2) + v3)));1;76;;;;;
 (v0 >= ((v0 + (min(v1 - (max((v2/8) + ((v3*68) - (((v4 + v2) + 87)/8)), -57)*8), -83) + 84)) - 1));1;169;;;;;
 ((((max(v0, 2)*-112)/4)*4) == (max(v0, 2)*-112));1;54;;;;;
 (max(min(0 - min(v0/512, 0), (v1/64) + 1), (min(((((v2 + v0) + 7)/8) - (v0/8)) + -63, v1)/64) + 1) == max(min(0 - min(v0/512, 0), (v1/64) + 1), (min(((((v2 + v0) + 7)/8) - (v0/8)) + -63, v1)/64) + 1));1;129;;;;;
 (((v0*8) + ((v1*64) + ((v2/4) + v3))) == ((v0*8) + ((v1*64) + ((v2/4) + v3))));1;47;;;;;
 (0 == ((0 + (55 - max(v0*8, 47))) - 1));0;65;;;;;
 (((((v0/8) + v1)*8) + ((v2*4) + v3)) == ((((v0/8) + v1)*8) + ((v2*4) + v3)));1;57;;;;;
 ((max(min(v0 + v1, 1999), 0) + (v2*256)) == (max(min(v0 + v1, 1999), 0) + (v2*256)));1;46;;;;;
 ((min((((v0 + v1) + -1)/8) - (v2*125), (v1/8) + 124) - ((v1/8) + (v3*16))) == (min((((v0 + v1) + -1)/8) - (v2*125), (v1/8) + 124) - ((v1/8) + (v3*16))));1;71;;;;;
 (((v0*33) + ((v1*128) + (((v2 + v3)/4) + v4))) == ((v0*33) + ((v1*128) + (((v2 + v3)/4) + v4))));1;50;;;;;
 (min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*125)) + 124)*4, ((v3*250) + (((v1/4) + (v2*125))*4)) + 246) == min(min(((v0 + v1) + -1)/4, ((v1/4) + (v2*125)) + 124)*4, ((v3*250) + (((v1/4) + (v2*125))*4)) + 246));1;122;;;;;
 (((v0 - (v1*8)) - (v2/65)) == ((v0 - (v1*8)) - (v2/65)));1;69;;;;;
 (((((v0 + v1)/8)*8) + -5) == ((((((v0 + v1)/8)*8) + -5) + ((v2*8) + 13)) - 1));0;127;;;;;
 (min((v0*32) + -31, v1) == min((v0*32) + -31, v1));1;51;;;;;
 (min(1130 - (v0*227), ((v1*8) - ((v0*227) + v2)) + 12) == min(1130 - (v0*227), ((v1*8) - ((v0*227) + v2)) + 12));1;53;;;;;
 (min((((v0 + v1) + 64)/65)*8, (min(((v1/65) + (v2*4))*8, ((v1/65)*8) + 109) + (v3*131)) + 8) == min((((v0 + v1) + 64)/65)*8, (min(((v1/65) + (v2*4))*8, ((v1/65)*8) + 109) + (v3*131)) + 8));1;109;;;;;
 ((((v0/63) + v1)*32) == (((v0/63) + v1)*32));1;34;;;;;
 (min(((((v0 + v1) + 7)/4) - (v1/4)) + -31, v2) == min(((((v0 + v1) + 7)/4) - (v1/4)) + -31, v2));1;50;;;;;
 (((max(min(v0, 20), -42)*2) + -40) >= ((((max(min(v0, 20), -42)*2) + -40) + ((max(min(v0, 20), -42)*-2) + 42)) - 1));0;87;;;;;
 ((((v0 - v1) + 262)/256) != 0);0;459;;;;;
 (min(((v0 + v1) + 5)/2, ((v1/2) + (((v2 + 6)/4)*4)) + -3) == min(((v0 + v1) + 5)/2, ((v1/2) + (((v2 + 6)/4)*4)) + -3));1;1551;;;;;
 (min((((v0*32) + v1) + v2) + 1, v3) == min((((v0*32) + v1) + v2) + 1, v3));1;58;;;;;
 (min((v0*4) + v1, (((v2*4) + v3)*8) + 29) == min((v0*4) + v1, (((v2*4) + v3)*8) + 29));1;66;;;;;
 (((v0*103) + (((v1 + v2)/4)*8)) == ((v0*103) + (((v1 + v2)/4)*8)));1;35;;;;;
 (min(max((84 - (v0*4))/8, 0), ((v1 - v0)/2) + 17) == min(max((84 - (v0*4))/8, 0), ((v1 - v0)/2) + 17));1;97;;;;;
 (min(((v0 + v1) + 7)/8, v2 + 15) == min(((v0 + v1) + 7)/8, v2 + 15));1;42;;;;;
 (((v0 + 30)/23) != 0);0;396;;;;;
 (((((((v0 + v1) + 31)/8) - (v2*128)) - (v3*4)) - (v1/8)) == ((((((v0 + v1) + 31)/8) - (v2*128)) - (v3*4)) - (v1/8)));1;87;;;;;
 (((((v0 + v1) + -1)/63) - (v2*9)) == ((((v0 + v1) + -1)/63) - (v2*9)));1;56;;;;;
 ((((v0/5)*22) + ((max(min((v1/500)*8, 36), 5)*2) + v2)) == (((v0/5)*22) + ((max(min((v1/500)*8, 36), 5)*2) + v2)));1;75;;;;;
 (min(((v0*12) + v1) + 6, v2) == min(((v0*12) + v1) + 6, v2));1;87;;;;;
 (min(v0*4, min(min(((((v1 + v2) + -1)/32) - (v3*32)) - (v2/32), 31)*4, 59) + (((v2/32) + ((((min((v3*-32) + ((((v1 + v2) + -1)/32) - (v2/32)), 31) + 2)/17)*17) + (v3*32)))*4)) == min(v0*4, min(min(((((v1 + v2) + -1)/32) - (v3*32)) - (v2/32), 31)*4, 59) + (((v2/32) + ((((min((v3*-32) + ((((v1 + v2) + -1)/32) - (v2/32)), 31) + 2)/17)*17) + (v3*32)))*4)));1;176;;;;;
 (((((v0 % ((v1/64) + 1))*-512)/32)*32) == ((v0 % ((v1/64) + 1))*-512));1;52;;;;;
 (min((v0*8) + ((v1*528) + v2), v2 + 1042) == min((v0*8) + ((v1*528) + v2), v2 + 1042));1;54;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0), max(min(v1/8, 254), 5) + -6) == min(max(min(((v0 + v1) + 7)/8, 249), 0), max(min(v1/8, 254), 5) + -6));1;84;;;;;
 ((max(v0*12, 9) + -22) == (((max(v0*12, 9) + -22) + (26 - max(v0*12, 9))) - 1));0;76;;;;;
 (((v0*8) + -13) == ((((v0*8) + -13) + ((min(v1, 7)*8) + 21)) - 1));0;81;;;;;
 (0 == ((0 + (122 - (max(min(v0, 61), 59)*2))) - 1));0;85;;;;;
 (((((v0 + v1) + 5)/2) - ((v2*2) + v3)) == ((((v0 + v1) + 5)/2) - ((v2*2) + v3)));1;355;;;;;
 ((((min(((min(v3*125, v4 + -125) + (v2 + 140))/8)*8, (((min(v3*125, v4 + -125) + v2)/4)*4) + 124)*-1)/4)*4) == (min(((min(v3*125, v4 + -125) + (v2 + 140))/8)*8, (((min(v3*125, v4 + -125) + v2)/4)*4) + 124)*-1));0;1928;;;;;
 (max(((v0*3) + v1)*2, ((min((v0*3) + v1, max(min(min(v2*32, 223) + v3, 1213), 214) + 31)*2) + v4) + 4) == max(((v0*3) + v1)*2, ((min((v0*3) + v1, max(min(min(v2*32, 223) + v3, 1213), 214) + 31)*2) + v4) + 4));1;134;;;;;
 ((((v0/250)*256) + -60) == (((((v0/250)*256) + -60) + ((v1*8) + 437)) - 1));0;94;;;;;
 (((((((v0 + v1) + 7)/8) - (v1/8))/63) + 1) == ((((((v0 + v1) + 7)/8) - (v1/8))/63) + 1));1;106;;;;;
 (((v0 + 255)/256) == ((v0 + 255)/256));1;19;;;;;
 ((((v0*512) + 1478)/754) != 0);0;433;;;;;
 (min(((v0*2) + v1)*4, (v2*8) + 12) == min(((v0*2) + v1)*4, (v2*8) + 12));1;47;;;;;
 (((v0 + 144)/128) != 0);0;361;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 34)/16) >= 0);1;86;;;;;
 (min(((v0*12) + v1) + 8, v2) == min(((v0*12) + v1) + 8, v2));1;33;;;;;
 (max(min(max(max(max(max(max(max(max(max(32 - ((v0/4)*4), ((v0/4)*-4) + 4), 8 - ((v0/4)*4)), 12 - ((v0/4)*4)), 16 - ((v0/4)*4)), 20 - ((v0/4)*4)), 24 - ((v0/4)*4)), 28 - ((v0/4)*4))/32, 0), (v1 + 9)/8), min(min(min(min(min(min(min(min(min(((v2 - (v0/4)) + -7)/8, (1969 - ((v0/4)*4))/32), (1973 - ((v0/4)*4))/32), (1977 - ((v0/4)*4))/32), (1981 - ((v0/4)*4))/32), (1985 - ((v0/4)*4))/32), (1989 - ((v0/4)*4))/32), (1993 - ((v0/4)*4))/32), (1997 - ((v0/4)*4))/32), (v1 + 1)/8) + 1) == max(min(max(max(max(max(max(max(max(max(32 - ((v0/4)*4), ((v0/4)*-4) + 4), 8 - ((v0/4)*4)), 12 - ((v0/4)*4)), 16 - ((v0/4)*4)), 20 - ((v0/4)*4)), 24 - ((v0/4)*4)), 28 - ((v0/4)*4))/32, 0), (v1 + 9)/8), min(min(min(min(min(min(min(min(min(((v2 - (v0/4)) + -7)/8, (1969 - ((v0/4)*4))/32), (1973 - ((v0/4)*4))/32), (1977 - ((v0/4)*4))/32), (1981 - ((v0/4)*4))/32), (1985 - ((v0/4)*4))/32), (1989 - ((v0/4)*4))/32), (1993 - ((v0/4)*4))/32), (1997 - ((v0/4)*4))/32), (v1 + 1)/8) + 1));1;398;;;;;
 (((((((v0 + v1) + 127)/32) - (v1/32)) + 33)/25) == ((((((v0 + v1) + 127)/32) - (v1/32)) + 33)/25));1;54;;;;;
 (((v0 + 253)/252) != 0);0;346;;;;;
 ((((((((v0 + v1) + 265)/133) - (v1/133))*8) + 59)/12) == (((((((v0 + v1) + 265)/133) - (v1/133))*8) + 59)/12));1;97;;;;;
 (((((((uint1)1 && (((((v0 + v1)*4) + -5) + -4) <= ((((v0 + v1)*4) + -5) + -4))) && (((((v0 + v1)*4) + ((11 + -5) - 1)) + -4) >= ((((v0 + v1)*4) + ((11 + -5) - 1)) + -4))) && (0 <= 0)) && ((16 - 1) >= (16 - 1))) && ((0 + v2) <= (0 + v2))) && ((3 + v2) >= (((4 + 0) - 1) + v2)));1;200;;;;;
 ((((v0*8) + 257)/250) != 0);0;464;;;;;
 (((((min((v2*12) + 19, max(min(v1, 1009), 10))*2) + (min(min((v2*12) + 7, max(min(v1, 1009), 10))*2, (v2*24) + 14)*-1))/4)*4) == ((min((v2*12) + 19, max(min(v1, 1009), 10))*2) + (min(min((v2*12) + 7, max(min(v1, 1009), 10))*2, (v2*24) + 14)*-1)));0;1779;;;;;
 (min((v0*32) + v1, v2 + 21) == min((v0*32) + v1, v2 + 21));1;55;;;;;
 ((min((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1, v2) + 1002) == (min((max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0)) + 1, v2) + 1002));1;138;;;;;
 (((((v0 % (((v1*32) + 951)/752))*752)/4)*4) == ((v0 % (((v1*32) + 951)/752))*752));1;46;;;;;
 ((((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 15)/4) == (((max(min(((v0 + v1) + 255)/32, 62), 0) - max(min(v1/32, 63), 1)) + 15)/4));1;282;;;;;
 (((v0/8) + (v1*64)) == ((v0/8) + (v1*64)));1;864;;;;;
 ((((v0/8)*8) + (v1*7)) == (((v0/8)*8) + (v1*7)));1;40;;;;;
 (((min(v0*252, 748)/4)*4) == min(v0*252, 748));1;86;;;;;
 (min((v0*4) + v1, v2 + 9) == min((v0*4) + v1, v2 + 9));1;77;;;;;
 (min((v0*253) + 236, v1) == min((v0*253) + 236, v1));1;34;;;;;
 (min((((v0 + v1) + -1)/64) - ((v2*4) + v3), 6 - (v2*4)) == min((((v0 + v1) + -1)/64) - ((v2*4) + v3), 6 - (v2*4)));1;68;;;;;
 (((min(v0 + 6, v1)*-8) + ((v0*8) + (v2*78))) == ((min(v0 + 6, v1)*-8) + ((v0*8) + (v2*78))));1;53;;;;;
 (0 >= ((0 + ((((v0 + v1) % 16) + 563)/64)) - 1));0;43;;;;;
 (min(((((((v0*2) + v1)*4) + v2)*2) + v3)*4, (v4*8) + 28) == min(((((((v0*2) + v1)*4) + v2)*2) + v3)*4, (v4*8) + 28));1;99;;;;;
 (min(min((((((v0 + v1) + -1)/8) - (v2*128)) - (v3*32)) - (v1/8), 31) + -3, v4) == min(min((((((v0 + v1) + -1)/8) - (v2*128)) - (v3*32)) - (v1/8), 31) + -3, v4));1;96;;;;;
 (((min(v0*16, 984)/2)*2) == min(v0*16, 984));1;48;;;;;
 (((((((uint1)1 && (((v0 + v1) % 8) <= ((v0 + v1) % 8))) && (((v0 + v1) % 8) >= ((v0 + v1) % 8))) && ((((((v2*32) + v3) + v4)*4) + 0) <= ((((v2*32) + v3) + v4)*4))) && ((((((v2*32) + v3) + v4)*4) + 3) >= (((((v2*32) + v3) + v4)*4) + 3))) && (v5 <= v5)) && (v5 >= v5));1;163;;;;;
 (min(((v0*2) + v1)*8, (v1*8) + 126) == min(((v0*2) + v1)*8, (v1*8) + 126));1;56;;;;;
 (min((v0*126) + 115, v1) == min((v0*126) + 115, v1));1;50;;;;;
 ((((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 209)/126) == (((max(min((((v0 + v1) + 31)/32)*16, 954), -45) - max(min((v1/32)*16, 1036), 37)) + 209)/126));1;241;;;;;
 (((v0 + v1)/8) >= ((((v0 + v1)/8) + ((((v0 + v1) % 8) + 143)/8)) - 1));0;73;;;;;
 (((((((uint1)1 && (v0 <= v0)) && (v0 >= v0)) && (((((v1*4) + v2) + 0) + -125) <= ((((v1*4) + 0) + v2) + -125))) && (((((v1*4) + v2) + 3) + -125) >= ((((v1*4) + ((4 + 0) - 1)) + v2) + -125))) && (v3 <= v3)) && (v3 >= v3));1;146;;;;;
 ((min((v0 + v1) - (v2*1008), (min(v3*128, 880) + v1) + 128) - (v3*128)) == (min((v0 + v1) - (v2*1008), (min(v3*128, 880) + v1) + 128) - (v3*128)));1;74;;;;;
 ((max(min(((((((min(v0, 241) + v1) + -1)/8)*8) + -245)/63)*8, 253), 4) + (v2*4)) == (max(min(((((((min(v0, 241) + v1) + -1)/8)*8) + -245)/63)*8, 253), 4) + (v2*4)));1;83;;;;;
 (min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 15) == min(max(min(v0 + v1, 2000), 1) - max(min(v1, 1999), 0), v2 + 15));1;142;;;;;
 (max(((v0 - v1) + 13)/152, 0) >= ((max(((v0 - v1) + 13)/152, 0) + ((((v0 - v1) + 164)/152) - max(((v0 - v1) + 13)/152, 0))) - 1));1;116;;;;;
 (min((v0*4) + v1, max(min(v2*8, 244), -5) + 6) == min((v0*4) + v1, max(min(v2*8, 244), -5) + 6));1;83;;;;;
 (max(min((v0 + 43)/4, min(((max(min((((v1 + v2) + 127)/32)*4, 246), -3) - max(min((v2/32)*4, 285), 36)) + 39)/4, (max(2287 - (max(min((v2/32)*4, 285), 36)*8), (max(min((v2/32)*4, 285), 36)*-8) + 2287) + 5)/32) + 1), v3) == max(min((v0 + 43)/4, min(((max(min((((v1 + v2) + 127)/32)*4, 246), -3) - max(min((v2/32)*4, 285), 36)) + 39)/4, (max(2287 - (max(min((v2/32)*4, 285), 36)*8), (max(min((v2/32)*4, 285), 36)*-8) + 2287) + 5)/32) + 1), v3));1;362;;;;;
 (min(v0*8, (v1*8) + 20) == min(v0*8, (v1*8) + 20));1;61;;;;;
 (min(49 - ((v0*6) + (v1*17)), 16 - (v0*6)) == min(49 - ((v0*6) + (v1*17)), 16 - (v0*6)));1;49;;;;;
 (min(v0 - ((v1/8)*8), v2) == min(v0 - ((v1/8)*8), v2));1;43;;;;;
 ((v0/((v1 + 19)/16)) == (v0/((v1 + 19)/16)));1;31;;;;;
 ((min(((v0 + v1) + -121)/8, v2) + (v3*4)) == (min(((v0 + v1) + -121)/8, v2) + (v3*4)));1;1411;;;;;
 ((((min(v0*63, 62) + (min(v1*125, v2 + -125) + v3))/2) + (v4*4)) == (((min(v0*63, 62) + (min(v1*125, v2 + -125) + v3))/2) + (v4*4)));1;85;;;;;
 (v0 != 0);0;1556;;;;;
 (-5 == ((-5 + (2005 - max(v0*8, 1994))) - 1));0;53;;;;;
 ((max(v0*8, 995) - ((v1*4) + v2)) == (max(v0*8, 995) - ((v1*4) + v2)));1;55;;;;;
 (min(max(min(min((v0/16)*8, 4) + v1, 990), -9), (v2*32) + 20) == min(max(min(min((v0/16)*8, 4) + v1, 990), -9), (v2*32) + 20));1;82;;;;;
 (((((v0*17) + v1)*8) + -32) == ((((((v0*17) + v1)*8) + -32) + ((min(v2 - v1, 11)*8) + 52)) - 1));0;152;;;;;
 (min(max(min((((((v0 + v1) + -14)/4) - v2) + 69)/4, (((85 - v2)/4) + (((v3*3) + (v4*2))*2)) + -16), max((((v1 + 6)/4) - v2)/4, -18) + 17) + 17, v5) == min(max(min((((((v0 + v1) + -14)/4) - v2) + 69)/4, (((85 - v2)/4) + (((v3*3) + (v4*2))*2)) + -16), max((((v1 + 6)/4) - v2)/4, -18) + 17) + 17, v5));1;183;;;;;
 ((max(v0, -1) + 1) >= (((max(v0, -1) + 1) + (min(v0, -1) + 2)) - 1));1;65;;;;;
 (min(((v0 + v1) + 3)/4, v2 + 11) == min(((v0 + v1) + 3)/4, v2 + 11));1;39;;;;;
 (min(max(((v0 - v1) + 35)/4, 0), v2 + 10) == min(max(((v0 - v1) + 35)/4, 0), v2 + 10));1;73;;;;;
 ((((max(v0*8, -2)*-1)/2)*2) == (max(v0*8, -2)*-1));0;720;;;;;
 (((v0*60) + (v1*128)) == ((v0*60) + (v1*128)));1;39;;;;;
 ((((v0*64) + 124)/36) != 0);0;447;;;;;
 (((v0 + 260)/252) != 0);0;367;;;;;
 ((min(v0*8, (((v1*18) + ((v2*36) + v3))*8) + 31) + (v4*4)) == (min(v0*8, (((v1*18) + ((v2*36) + v3))*8) + 31) + (v4*4)));1;77;;;;;
 ((max(min(v0, 2044), 45) + (v1*2)) == (max(min(v0, 2044), 45) + (v1*2)));1;46;;;;;
 ((((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 999), 0))/125) + 1) == (((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 999), 0))/125) + 1));1;270;;;;;
 ((((v0*8) + 73)/66) != 0);0;490;;;;;
 (((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36))*8) + 597)/252) == ((((max(min((((v0 + v1) + -1)/63)*8, 244), -5) - max(min((v1/63)*8, 285), 36))*8) + 597)/252));1;248;;;;;
 ((max(v0, 0) - (v1*3)) == (max(v0, 0) - (v1*3)));1;67;;;;;
 (min(max(v0, 0), ((v1*32) + v2) + 31) == min(max(v0, 0), ((v1*32) + v2) + 31));1;77;;;;;
 ((((((((v0 + v1) + 39)/8) - (v1/8))*8) + 1101)/1045) == (((((((v0 + v1) + 39)/8) - (v1/8))*8) + 1101)/1045));1;63;;;;;
 (min((v0*4) + v1, max(min(v2*8, 3986), -13) + 58) == min((v0*4) + v1, max(min(v2*8, 3986), -13) + 58));1;57;;;;;
 (max(min(249, (((v1/8) + v2) + (((v1 % 8) + 15)/8)) - 1) + 1, min(max(0, (v1/8) + v2), (((v1 % 8) + 15)/8) + ((v1/8) + v2))) <= min(max(0, (v1/8) + v2), (((v1 % 8) + 15)/8) + ((v1/8) + v2)));0;1760;;;;;
 (max(min(max((v0 + 10)/8, (max(min((v1/500)*8, 36), 5)*8) + -68), ((max(min((v1/500)*8, 36), 5) + v2)*8) + 156), min(((v3 + v0) + -5)/8, ((max(min((v1/500)*8, 36), 5) + v2)*8) + 155) + 1) == max(min(max((v0 + 10)/8, (max(min((v1/500)*8, 36), 5)*8) + -68), ((max(min((v1/500)*8, 36), 5) + v2)*8) + 156), min(((v3 + v0) + -5)/8, ((max(min((v1/500)*8, 36), 5) + v2)*8) + 155) + 1));1;207;;;;;
 (min(max(v0*250, -12), (v0*250) + 246) == min(max(v0*250, -12), (v0*250) + 246));1;61;;;;;
 (((v0*4) + ((v1*8) + v2)) == ((v0*4) + ((v1*8) + v2)));1;19;;;;;
 (((min(((v0/4)*4) + 3, v1) + (v2*-4)) - (v3*8)) == ((min(((v0/4)*4) + 3, v1) + (v2*-4)) - (v3*8)));1;1316;;;;;
 (((max(min((v1*-24) + (max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) - ((v5*12) + max(min((v2*500) + v3, min(v4 + v3, 2499) + -500), 0))), -488), -500)/4)*4) == max(min((v1*-24) + (max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) - ((v5*12) + max(min((v2*500) + v3, min(v4 + v3, 2499) + -500), 0))), -488), -500));0;2207;;;;;
 ((((v0*8) + ((v1*3) + v2)) + -5) < (((v0*8) + ((v1*3) + (v2 + 1))) + -5));1;74;;;;;
 (((v0*4) + ((v1*8) + ((v2*32) + v3))) == ((v0*4) + ((v1*8) + ((v2*32) + v3))));1;50;;;;;
 ((((v0*48)/2)*2) == (v0*48));1;32;;;;;
 (((((((uint1)1 && ((((((v0*4) + v1)*4) + v2) + 0) <= ((((v0*4) + v1)*4) + v2))) && ((((((v0*4) + v1)*4) + v2) + 3) >= (((((v0*4) + v1)*4) + 3) + v2))) && (((min(v3*4, 246) + v4) + v5) <= ((min(v3*4, 246) + v4) + v5))) && (((min(v3*4, 246) + v4) + v5) >= ((min(v3*4, 246) + v4) + v5))) && ((min(v6*53, 53) + v7) <= (min(v6*53, 53) + v7))) && ((min(v6*53, 53) + v7) >= (min(v6*53, 53) + v7)));1;275;;;;;
 ((((max(v0, 2000) - min(v1, 0)) + 131)/132) >= 0);1;56;;;;;
 (min(max((264 - max(max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32)*8, (v3*8) + 259))/4, 0), (270 - max((max(min(v4, 281), 32) - v3)*8, 259))/4) == min(max((264 - max(max(min((v0*19) + ((v1/32)*4), (min(((v2 + v1) + 127)/32, 66)*4) + 17), 32)*8, (v3*8) + 259))/4, 0), (270 - max((max(min(v4, 281), 32) - v3)*8, 259))/4));1;232;;;;;
 (((v0 + 23)/10) != 0);0;378;;;;;
 (((v0*8) + -5) == ((((v0*8) + -5) + ((min(v1, 11)*8) + 13)) - 1));0;83;;;;;
 (min((((v0 + v1) + 447)/32)*4, (v2*4) + -65) == min((((v0 + v1) + 447)/32)*4, (v2*4) + -65));1;63;;;;;
 ((((v0 + v1)*8) + 5) <= (((((v0 - 1) + v1)*8) + -3) - 1));0;77;;;;;
 (min(((v0 + v1) + -1)/16, ((v2*16) + ((v3*32) + ((v1/16) + (v4*64)))) + 15) == min(((v0 + v1) + -1)/16, ((v2*16) + ((v3*32) + ((v1/16) + (v4*64)))) + 15));1;80;;;;;
 ((((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2002), 3)) + 77)/64) == (((max(min((((v0 + v1) + -1)/8)*8, 1994), -5) - max(min((v1/8)*8, 2002), 3)) + 77)/64));1;222;;;;;
 (min((v0*16) + (max(v1*64, -10) + v2), ((v1*64) + v2) + 48) == min((v0*16) + (max(v1*64, -10) + v2), ((v1*64) + v2) + 48));1;56;;;;;
 (min((v0/63)*64, (v1*64) + 9) == min((v0/63)*64, (v1*64) + 9));1;59;;;;;
 ((((v0*8) + 31)/17) != 0);0;439;;;;;
 ((min(((v0*8) - (v1*63)) - ((v2/8)*8), -9) + (((v2/8)*8) + ((((min((v1*-63) + (v3*8), 55) + 12)/36)*36) + (v1*63)))) == (min(((v0*8) - (v1*63)) - ((v2/8)*8), -9) + (((v2/8)*8) + ((((min((v1*-63) + (v3*8), 55) + 12)/36)*36) + (v1*63)))));1;118;;;;;
 (((((((uint1)1 && ((0 + ((min(v0*128, 872) + (v1*4)) + v2)) <= ((min(v0*128, 872) + (v1*4)) + v2))) && ((3 + ((min(v0*128, 872) + (v1*4)) + v2)) >= (((min(v0*128, 872) + (v1*4)) + 3) + v2))) && (v3 <= (0 + v3))) && ((v3 + 7) >= (((8 + 0) - 1) + v3))) && (0 <= 0)) && (0 >= 0));1;173;;;;;
 (min((((v0 + v1) + 95)/32) - (v1/32), v2 + 1) == min((((v0 + v1) + 95)/32) - (v1/32), v2 + 1));1;64;;;;;
 (min((v0*4) + 6, v1) == min((v0*4) + 6, v1));1;35;;;;;
 (min(((v0*354) + v1) + 304, v2) == min(((v0*354) + v1) + 304, v2));1;44;;;;;
 (min(((v0 + v1) + 15)/16, ((v1/16) + (v2*64)) + 63) == min(((v0 + v1) + 15)/16, ((v1/16) + (v2*64)) + 63));1;66;;;;;
 (min(max(min(v0, 1992), -7) - max(min(v0, 1999), 0), (v1*4) + -4) == min(max(min(v0, 1992), -7) - max(min(v0, 1999), 0), (v1*4) + -4));1;154;;;;;
 (((v0*8) + -45) == ((((v0*8) + -45) + 27) - 1));0;42;;;;;
 (max(min(min(((min(v3 - ((v1*4) + v2), -1)*16) + 47)/36, (1001 - (((v1*4) + v2)*16))/36), (0 + (((min(v4 - v2, -1)*16) + 118)/36)) - 1) + 1, min(max(((0 - (((v1*4) + v2)*16))/36) + 2, 0), (((min(v4 - v2, -1)*16) + 118)/36) + 0)) <= min(max(((0 - (((v1*4) + v2)*16))/36) + 2, 0), (((min(v4 - v2, -1)*16) + 118)/36) + 0));0;3088;;;;;
 ((max(min(v0/63, 31), 0) + (v1*4)) == (max(min(v0/63, 31), 0) + (v1*4)));1;55;;;;;
 ((((min((v0 + v1)*8, (((v2*63) + v1)*8) + 502) + 4)/8) - (v2*63)) == (((min((v0 + v1)*8, (((v2*63) + v1)*8) + 502) + 4)/8) - (v2*63)));1;92;;;;;
 (min(((v0*1028) + v1) + 996, v2) == min(((v0*1028) + v1) + 996, v2));1;37;;;;;
 (((v0*3) + ((v1/63)*8)) == ((v0*3) + ((v1/63)*8)));1;57;;;;;
 (max(min(3999, (((v1*8) + -45) + 27) - 1) + 1, min(max(0, (v1*8) + -45), 27 + ((v1*8) + -45))) <= min(max(0, (v1*8) + -45), 27 + ((v1*8) + -45)));0;1102;;;;;
 (((v0*2) + ((v1*125) + (v2 + v3))) == ((v0*2) + ((v1*125) + (v2 + v3))));1;36;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 520)/507) == (((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 520)/507));1;750;;;;;
 (min((v0/2) + ((v1*128) + ((v2*504) + (min(min((v2*-504) + ((((v3 + v0) + 5)/2) - (v0/2)), 499) + (v1*-128), -5) + (min((min((v2*-504) + v4, 499)/4) + (v1*-32), 29)*4)))), v5 + 116) == min((v0/2) + ((v1*128) + ((v2*504) + (min(min((v2*-504) + ((((v3 + v0) + 5)/2) - (v0/2)), 499) + (v1*-128), -5) + (min((min((v2*-504) + v4, 499)/4) + (v1*-32), 29)*4)))), v5 + 116));1;180;;;;;
 (((((v0/((v1 + 132)/128))*-8)/4)*4) == ((v0/((v1 + 132)/128))*-8));1;62;;;;;
 (max(min(min((((v0 + v1) + 1)/4) - (max(min(v2/8, 249), 0)*2), min((max(min(((v3 + v2) + -1)/8, 249), 0) - max(min(v2/8, 249), 0))*2, ((v0 + v1)/4) - (max(min(v2/8, 249), 0)*2)) + 1), (v4*2) + 2), min(max((v1/4) - (max(min(v2/8, 249), 0)*2), -2), (v4*2) + 1) + 1) == max(min(min((((v0 + v1) + 1)/4) - (max(min(v2/8, 249), 0)*2), min((max(min(((v3 + v2) + -1)/8, 249), 0) - max(min(v2/8, 249), 0))*2, ((v0 + v1)/4) - (max(min(v2/8, 249), 0)*2)) + 1), (v4*2) + 2), min(max((v1/4) - (max(min(v2/8, 249), 0)*2), -2), (v4*2) + 1) + 1));1;484;;;;;
 (min(((v0 + v1) + 187)/63, v2 + 1) == min(((v0 + v1) + 187)/63, v2 + 1));1;62;;;;;
 ((((min(max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 378), 129)*8, (max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 379), 130)*8) + 1)*-1)/4)*4) == (min(max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 378), 129)*8, (max(min(min((v4*17) + ((v3/63) + 15), ((v2 + v3) + 62)/63)*8, 379), 130)*8) + 1)*-1));0;2342;;;;;
 (((((((uint1)1 && ((((((v0 + v1) + v2)*4) + 0) + 1) <= (((((v0 + v1) + v2)*4) + 0) + 1))) && ((((((v0 + v1) + v2)*4) + 3) + 1) >= (((((v0 + v1) + v2)*4) + ((4 + 0) - 1)) + 1))) && (v3 <= v3)) && (v3 >= v3)) && (v4 <= v4)) && (v4 >= v4));1;150;;;;;
 (((((v0 + v1) + -1)/16) - (v2*4)) == ((((v0 + v1) + -1)/16) - (v2*4)));1;39;;;;;
 (min(((v0*132) + v1) + 123, v2) == min(((v0*132) + v1) + 123, v2));1;82;;;;;
 ((((v0*32) + 551)/520) != 0);0;434;;;;;
 (((v0*504) + ((v1*1004) + v2)) == ((v0*504) + ((v1*1004) + v2)));1;42;;;;;
 (((((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*9) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*9) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))]))) && ((uint64(uint8((uint1)0))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*9) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])) == uint64((uint8((uint1)0)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*9) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*9) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*9) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])))) && ((uint64(uint8((uint1)1))*uint64((uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*9) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))])) == uint64((uint8((uint1)1)*(uint8)uint8_weights[((v0*v1) + ((v2*v3) + ((v4*v5) + ((v6*9) + v7)))) - ((v8*v1) + ((v9*v3) + ((v10*v5) + v11)))]))));1;194;;;;;
 (((((((uint1)1 && (((0 + (max(v0*8, -5) + v1)) + 2) <= (((v0*8) + v1) + -3))) && (((3 + ((max(v0*8, -5) + v1) + 4)) + 2) >= (((v0*8) + v1) + 9))) && ((((min(v2*63, 62) + v3) + v4)*2) <= (((min(v2*63, 62) + v3) + v4)*2))) && ((((min(v2*63, 62) + v3) + v4)*2) >= (((min(v2*63, 62) + v3) + v4)*2))) && (0 <= 0)) && (10 >= 10));0;356;;;;;
 ((v0 < (v1 + 8)) == (v0 < (v1 + 8)));1;48;;;;;
 (min((v0*7) + ((v1*34) + (v2 + v3)), (min(v1*34, 101) + (v2 + v3)) + 35) == min((v0*7) + ((v1*34) + (v2 + v3)), (min(v1*34, 101) + (v2 + v3)) + 35));1;83;;;;;
 (((v0 + v1)*64) >= ((((v0 + v1)*64) + 9) - 1));0;41;;;;;
 ((min((v0*24) + v1, min(max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) + 250, v1) + 238) + (v5*8)) == (min((v0*24) + v1, min(max(min((v2*500) + v3, min(v4 + v3, 2000) + -500), -499) + 250, v1) + 238) + (v5*8)));1;117;;;;;
 (min((((v0 + v1)/4) + (v2*19))*4, (((v0 + v1)/4)*4) + 75) == min((((v0 + v1)/4) + (v2*19))*4, (((v0 + v1)/4)*4) + 75));1;103;;;;;
 ((-1 - max(min(v0, 1), 0)) == (((-1 - max(min(v0, 1), 0)) + (max(min(v0, 1), 0) + 6)) - 1));0;118;;;;;
 (min(((v0 + v1) + 5)/2, (min((v1/2) + 380, v2) + (v3*504)) + 119) == min(((v0 + v1) + 5)/2, (min((v1/2) + 380, v2) + (v3*504)) + 119));1;83;;;;;
 ((min(v0 - (v1*64), v2 + 53) - ((v3*4) + v2)) == (min(v0 - (v1*64), v2 + 53) - ((v3*4) + v2)));1;55;;;;;
 ((((max(v0, 0) - v1) + 17)/4) == (((max(v0, 0) - v1) + 17)/4));1;80;;;;;
 ((((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 528)/510) == (((max((((v0 + v1) + 15)/16)*8, 995) - min((v1/16)*8, 4)) + 528)/510));1;189;;;;;
 ((((v0*8) + (v1*33)) - min((v2*8) - (v3*65), (min(v1*33, 32) + (v0*8)) + 23)) == (((v0*8) + (v1*33)) - min((v2*8) - (v3*65), (min(v1*33, 32) + (v0*8)) + 23)));1;64;;;;;
 ((max(v0 - v1, -69) + 69) >= (((max(v0 - v1, -69) + 69) + (min(v0 - v1, -69) + 70)) - 1));1;121;;;;;
 ((max(v0, 20) + (v1*10)) == (max(v0, 20) + (v1*10)));1;34;;;;;
 (((v0*252) + (max(min(v1/2, 1003)*2, 7) + (v2*4))) == ((v0*252) + (max(min(v1/2, 1003)*2, 7) + (v2*4))));1;75;;;;;
 (min((v0 + v1)/8, v2) == min((v0 + v1)/8, v2));1;39;;;;;
 (min((v0*4) + ((v1*12) + v2), v3 + 12) == min((v0*4) + ((v1*12) + v2), v3 + 12));1;58;;;;;
 ((((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 263)/252) == (((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 263)/252));1;152;;;;;
 (((v0*12) + (v1*16)) == ((v0*12) + (v1*16)));1;39;;;;;
 (min(max(min(v0 + v1, 1500), -499) + 488, v2) == min(max(min(v0 + v1, 1500), -499) + 488, v2));1;62;;;;;
 (min(((v0 + v1) + 7)/4, ((v1/4) + ((v2/168)*168)) + 167) == min(((v0 + v1) + 7)/4, ((v1/4) + ((v2/168)*168)) + 167));1;106;;;;;
 (((v0 + 22)/20) != 0);0;359;;;;;
 ((min(((((v0 + v1) + -1)/2) - (v2*128)) - (v1/2), 127) + 3) == (min(((((v0 + v1) + -1)/2) - (v2*128)) - (v1/2), 127) + 3));1;72;;;;;
 ((((v0/4) + v1) - min((((v2 + v0) + 3)/4) - (v3*252), (v0/4) + 251)) == (((v0/4) + v1) - min((((v2 + v0) + 3)/4) - (v3*252), (v0/4) + 251)));1;66;;;;;
 (min(max(min(((v0 + v1) + -1)/2, 999), 0), v2 + 499) == min(max(min(((v0 + v1) + -1)/2, 999), 0), v2 + 499));1;109;;;;;
 (((v0*36) + (v1*8)) == ((v0*36) + (v1*8)));1;67;;;;;
 ((v0 - ((v1/2)*129)) == (v0 - ((v1/2)*129)));1;38;;;;;
 ((((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 215)/16) == (((max(min((((v0 + v1) + 63)/32)*32, 1994), -5) - max(min((v1/32)*32, 2193), 194)) + 215)/16));1;209;;;;;
 ((min(v0*4, 1005) + (min(v1*1000, v2 + -1000) + v3)) == (min(v0*4, 1005) + (min(v1*1000, v2 + -1000) + v3)));1;43;;;;;
 (min((((v0 + v1) + -1)/8) - (v1/8), v2 + 126) == min((((v0 + v1) + -1)/8) - (v1/8), v2 + 126));1;55;;;;;
 ((((-125 - ((min(v0*125, v1 + -125) + v2) % 32))/32) + (v3*4)) == (((-125 - ((min(v0*125, v1 + -125) + v2) % 32))/32) + (v3*4)));1;101;;;;;
 (((v0 + 14)/4) == ((v0 + 14)/4));1;33;;;;;
 (((v0*90) + ((v1*30) + v2)) == ((v0*90) + ((v1*30) + v2)));1;33;;;;;
 (min(max(min(v0/2, 999), 0) + (v1*2), v2 + 4) == min(max(min(v0/2, 999), 0) + (v1*2), v2 + 4));1;62;;;;;
 (((v0*152) + ((max(min(v1, 250), 1)*8) + ((v2*8) + v3))) == ((v0*152) + ((max(min(v1, 250), 1)*8) + ((v2*8) + v3))));1;55;;;;;
 (min(max((((((v0 + v1) + -65)/32) - (v1/32)) + 14)/15, 0), (v2 + 23)/15) == min(max((((((v0 + v1) + -65)/32) - (v1/32)) + 14)/15, 0), (v2 + 23)/15));1;94;;;;;
 (((v0*4) + 8) != 0);0;287;;;;;
 (((v0 + 513)/504) != 0);0;357;;;;;
 ((((((v0 + v1) + 1999)/2000)*256) - ((((v2*7) + ((v3*2) + v4))*16) + v5)) == (((((v0 + v1) + 1999)/2000)*256) - ((((v2*7) + ((v3*2) + v4))*16) + v5)));1;100;;;;;
 (min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2 + 16) == min(max(min(((v0 + v1) + 7)/8, 249), 0) - max(min(v1/8, 249), 0), v2 + 16));1;244;;;;;
 (min(max(min(v0 + v1, 2000), 1), (max(min(v1, 1999), 0) + (v2*64)) + 64) == min(max(min(v0 + v1, 2000), 1), (max(min(v1, 1999), 0) + (v2*64)) + 64));1;75;;;;;
 (0 >= ((0 + ((((-8 - max(((v0/8)*8) - v1, (v2*8) + 8))/4) + (v2*2)) + 5)) - 1));0;1053;;;;;
 ((((v0*2) + v1) - (max(min(min(((v2 + v3) + 499)/500, 3)*8, 22), -7)*2)) == (((v0*2) + v1) - (max(min(min(((v2 + v3) + 499)/500, 3)*8, 22), -7)*2)));1;99;;;;;
 (min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*63))*16) + 994, v2) == min(((((max(min(v0, 2002), 3) + -3)/16) + (v1*63))*16) + 994, v2));1;70;;;;;
 ((((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 77)/63) == (((max(min(v0 + v1, 1997), 1) - max(min(v1, 1999), 9)) + 77)/63));1;145;;;;;
 (((min(max(v0, 0), ((v1*39) + v2) + 19)*4) - ((min(((v1*39) + v2)*8, (min(max(v0, 0), ((v1*39) + v2) + -1)*8) + 11) + -5)/2)) == ((min(max(v0, 0), ((v1*39) + v2) + 19)*4) - ((min(((v1*39) + v2)*8, (min(max(v0, 0), ((v1*39) + v2) + -1)*8) + 11) + -5)/2)));1;140;;;;;
 (0 == ((0 + (31 - max(min(v0*16, 31), 15))) - 1));0;74;;;;;
 (((((((v0 + v1) + 15)/8) - (v1/8)) + 131)/128) == ((((((v0 + v1) + 15)/8) - (v1/8)) + 131)/128));1;33;;;;;
 ((((min(min((v1*140) + ((v2/63)*8), ((((v3 + v2) + 62)/63)*8) + 19)*8, (v1*1120) + (((v2/63)*64) + 7))*-1)/4)*4) == (min(min((v1*140) + ((v2/63)*8), ((((v3 + v2) + 62)/63)*8) + 19)*8, (v1*1120) + (((v2/63)*64) + 7))*-1));0;2098;;;;;
 ((min(v0*36, 100) + ((v1*125) + ((v2*500) + v3))) == (min(v0*36, 100) + ((v1*125) + ((v2*500) + v3))));1;49;;;;;
 ((max(min(v0/8, 249), 0) + (((v1/63)*65) - max(min(((v2 + v0) + 7)/8, 249), 0))) == (max(min(v0/8, 249), 0) + (((v1/63)*65) - max(min(((v2 + v0) + 7)/8, 249), 0))));1;87;;;;;
 ((v0 - ((min(v1*32, 93) + (v2 + v3))/8)) == (v0 - ((min(v1*32, 93) + (v2 + v3))/8)));1;61;;;;;
 (((v0*2) + (((v1*4) + ((v2/65) + (v3*2))) - min(((v4 + v2) + 64)/65, min((v0*2) + ((v2/65) + (v1*4)), ((v2/65) + (min(min((v1*4) + 3, v5)/4, v1)*4)) + 2) + 1))) == ((v0*2) + (((v1*4) + ((v2/65) + (v3*2))) - min(((v4 + v2) + 64)/65, min((v0*2) + ((v2/65) + (v1*4)), ((v2/65) + (min(min((v1*4) + 3, v5)/4, v1)*4)) + 2) + 1))));1;152;;;;;
 (((v0*7) + (v1*4)) == ((v0*7) + (v1*4)));1;73;;;;;
 ((max(min(v0*32, 1994), -5) - ((v1*4) + v2)) == (max(min(v0*32, 1994), -5) - ((v1*4) + v2)));1;66;;;;;
 ((v0 - ((((v1 + v2) + 1999)/2000)*256)) == (v0 - ((((v1 + v2) + 1999)/2000)*256)));1;50;;;;;
 ((max(min(((v0 + v1) + 3)/4, 499), 0) - ((v2*4) + v3)) == (max(min(((v0 + v1) + 3)/4, 499), 0) - ((v2*4) + v3)));1;61;;;;;
 ((((v0 % 4)*31) + ((v1*8) + v2)) == (((v0 % 4)*31) + ((v1*8) + v2)));1;35;;;;;
 ((((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 146)/128) == (((max(min((((v0 + v1) + 15)/16)*8, 990), -9) - max(min(v1/16, 126)*8, 9)) + 146)/128));1;205;;;;;
 ((max(min((v0/32)*4, 285), 36) + (v1*128)) == (max(min((v0/32)*4, 285), 36) + (v1*128)));1;77;;;;;
 ((((((v0 + v1) + 3)/4) - (v2*251)) - (v1/4)) == (((((v0 + v1) + 3)/4) - (v2*251)) - (v1/4)));1;59;;;;;
 ((((((((v0 + v1) + 127)/32) - (v1/32))*4) + 185)/150) == (((((((v0 + v1) + 127)/32) - (v1/32))*4) + 185)/150));1;83;;;;;
 ((((((((v0 + v1) + 62)/63) - (v1/63))*32) + 630)/552) == (((((((v0 + v1) + 62)/63) - (v1/63))*32) + 630)/552));1;100;;;;;
 ((max(min(v0/8, 249), 0) + ((v1/4)*4)) == (max(min(v0/8, 249), 0) + ((v1/4)*4)));1;64;;;;;
 (min(max(v0 + -750, v1), v0 + -746) == min(max(v0 + -750, v1), v0 + -746));1;42;;;;;
 (min(((v0 + v1) + 135)/8, v2 - max(((-128 - ((min(v3*128, v4 + -128) + v0) % 8))/8) + (v5*4), -3)) == min(((v0 + v1) + 135)/8, v2 - max(((-128 - ((min(v3*128, v4 + -128) + v0) % 8))/8) + (v5*4), -3)));1;111;;;;;
 (((((((v0 + v1) + 7)/64) - (v1/64))/8) + 1) == ((((((v0 + v1) + 7)/64) - (v1/64))/8) + 1));1;126;;;;;
 (min(((max(min(v0, 31), 0)*2) + v1)*4, (max(min(v0, 29), 0)*8) + 20) == min(((max(min(v0, 31), 0)*2) + v1)*4, (max(min(v0, 29), 0)*8) + 20));1;73;;;;;
 (((((((min((v0*125) + v1, (v2 + v1) + -125) % 8) + 124)/8)*8)/29)*29) == ((((min((v0*125) + v1, (v2 + v1) + -125) % 8) + 124)/8)*8));0;91;;;;;
 (min(min(((v0 + v1)*8) + 5, (v2*4) + v3) + 172, (((v0*2) + (((180 - v4)/4) + (v1*2)))*4) + v4) == min(min(((v0 + v1)*8) + 5, (v2*4) + v3) + 172, (((v0*2) + (((180 - v4)/4) + (v1*2)))*4) + v4));1;109;;;;;
 (min((v0*4) + v1, v2 + 106) == min((v0*4) + v1, v2 + 106));1;36;;;;;
 (((v0 - (v1*152)) - (v2*24)) == ((v0 - (v1*152)) - (v2*24)));1;48;;;;;
 (((36 - v0) - (v1/8)) == ((36 - v0) - (v1/8)));1;39;;;;;
 ((max(min(min(v0*64, 191) + v1, 1244), 245) + (v2*12)) == (max(min(min(v0*64, 191) + v1, 1244), 245) + (v2*12)));1;75;;;;;
 (min(((v0*4) + v1) + 3, v2) == min(((v0*4) + v1) + 3, v2));1;98;;;;;
 (min(max(min(v0*8, 2098), 99) + (v1*4), max(min(v2*8, 1947), -52) + 148) == min(max(min(v0*8, 2098), 99) + (v1*4), max(min(v2*8, 1947), -52) + 148));1;99;;;;;
 (max((min((((v0 + v1) + 188)/63) - (v1/63), v2 + 1) + 3)/4, max(v3/4, -1) + 1) == max((min((((v0 + v1) + 188)/63) - (v1/63), v2 + 1) + 3)/4, max(v3/4, -1) + 1));1;85;;;;;
 (((min(max(max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499) + 11, min(v1*500, v3 + -500) + v2) - min(min(max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) + -11, (v1*500) + v2), (v3 + v2) + -500), -236)/4)*4) == min(max(max(min((v1*500) + v2, min(v3 + v2, 2000) + -500), -499) + 11, min(v1*500, v3 + -500) + v2) - min(min(max(min((v1*500) + v2, min(v3 + v2, 2499) + -500), 0) + -11, (v1*500) + v2), (v3 + v2) + -500), -236));0;2543;;;;;
 (((max(v0*16, -4) + v1) + -15) == ((((max(v0*16, -4) + v1) + -15) + (min(v0*16, -4) + 20)) - 1));0;125;;;;;
 (max(-1266 - (v0*256), (v0*256) + 436) >= 0);0;524;;;;;
 (min((v0*16) + v1, max(min(((v2 + v3) + 1)/2, 999), 0) + 9) == min((v0*16) + v1, max(min(((v2 + v3) + 1)/2, 999), 0) + 9));1;74;;;;;
 (max(-3 - max(min((max(min(v0 + v1, 1998), -1) - (v2*125)) - max(min(v1, 1999), 0), 123), -1), max(min(v3, 1), -123) + -3) == max(-3 - max(min((max(min(v0 + v1, 1998), -1) - (v2*125)) - max(min(v1, 1999), 0), 123), -1), max(min(v3, 1), -123) + -3));1;131;;;;;
 (((v0 + v1) + -3) == ((((v0 + v1) + -3) + 67) - 1));0;48;;;;;
 ((min(v0*2, 27) + (v1*29)) == (min(v0*2, 27) + (v1*29)));1;37;;;;;
 (max(min(min((((v0 + v1) + 25)/4) - (v2*2), min((v3 - v2)*2, (min((v3*8) + 2, v0 + v1)/4) - (v2*2)) + 7), (min((v4 - ((v5/2)*33)) - ((max(min(v6/8, 249), 0)/8)*8), 29)*2) + 8), min(max((v1/4) - (v2*2), -8), (min((v4 - ((v5/2)*33)) - ((max(min(v6/8, 249), 0)/8)*8), 29)*2) + 1) + 7) == max(min(min((((v0 + v1) + 25)/4) - (v2*2), min((v3 - v2)*2, (min((v3*8) + 2, v0 + v1)/4) - (v2*2)) + 7), (min((v4 - ((v5/2)*33)) - ((max(min(v6/8, 249), 0)/8)*8), 29)*2) + 8), min(max((v1/4) - (v2*2), -8), (min((v4 - ((v5/2)*33)) - ((max(min(v6/8, 249), 0)/8)*8), 29)*2) + 1) + 7));1;301;;;;;
 (min(((v0*2) + v1)*4, (max(min(((v2 + v3) + 7)/8, 249), 0)*8) + 14) == min(((v0*2) + v1)*4, (max(min(((v2 + v3) + 7)/8, 249), 0)*8) + 14));1;94;;;;;
 (0 >= ((0 + ((max(min(v0, 249), 0) + 11)/4)) - 1));0;59;;;;;
 ((((min(v0 - (v1*152), ((v2*24) + v3) + 11) + (v2*-24))*-2) + ((v3*2) + v4)) == (((min(v0 - (v1*152), ((v2*24) + v3) + 11) + (v2*-24))*-2) + ((v3*2) + v4)));1;80;;;;;
 (((v0*-8) + ((((v1 + v2) + 15)/8) - v3)) == ((v0*-8) + ((((v1 + v2) + 15)/8) - v3)));1;53;;;;;
 ((((v0*4) + v1) - max(min((((v2 + v3) + 5)/2)*2, 1995), -4)) == (((v0*4) + v1) - max(min((((v2 + v3) + 5)/2)*2, 1995), -4)));1;79;;;;;
 (((min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128)/8)*8) == min(max(min(min(((min(((min((v2*-501) + (v3 - (v1/2)), 499) + 7)/127)*127, 380) + (v2*501)) + (v1/2)) + 119, v3), 999), 0) - max(min((v2*501) + ((v1/2) + 119), min(v3, 1125)), 126), -128));0;5622;;;;;
 (((((v0*66) + v1)*2) + ((v2*4) + v3)) == ((((v0*66) + v1)*2) + ((v2*4) + v3)));1;57;;;;;
 (((v0*6) + ((v1*504) + ((v2*2) + v3))) == ((v0*6) + ((v1*504) + ((v2*2) + v3))));1;51;;;;;
 (min(max(16 - max((v0*504) - v1, -492), min(v1 - (v0*504), 492) + 13), min(v2, 492) + 16) == min(max(16 - max((v0*504) - v1, -492), min(v1 - (v0*504), 492) + 13), min(v2, 492) + 16));1;80;;;;;
 (((v0 - (v1*152)) - ((v2*8) + v3)) == ((v0 - (v1*152)) - ((v2*8) + v3)));1;55;;;;;
 (0 == ((0 + ((v0*32) + 4)) - 1));0;49;;;;;
 ((((max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (max(min(min(v1/16, 124)*2, 1), -1)*8)) + 80)/32) == (((max(max(min((((v0 + v1) + -1)/16)*2, 247), -2)*8, 1959) - (max(min(min(v1/16, 124)*2, 1), -1)*8)) + 80)/32));1;119;;;;;
 ((((v0 + v1)*8) + -2) >= (((((v0 - 1) + v1)*8) + 10) + 1));0;105;;;;;
 ((((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 523)/504) == (((max(min((((v0 + v1) + 5)/2)*2, 1995), -4) - max(min(v1/2, 1003)*2, 7)) + 523)/504));1;159;;;;;
 ((((min(v0, -1)*8) + 34)/9) == (((min(v0, -1)*8) + 34)/9));1;59;;;;;
 ((((-125 - ((min(v0*125, v1 + -125) + v2) % 16))/16) + (v3*5)) == (((-125 - ((min(v0*125, v1 + -125) + v2) % 16))/16) + (v3*5)));1;64;;;;;
 (max(((v0*17) - ((((v1 + v2) + -1)/250)*64)) + (((v2/250)*64) + (v3*34)), v4) == max(((v0*17) - ((((v1 + v2) + -1)/250)*64)) + (((v2/250)*64) + (v3*34)), v4));1;82;;;;;
 (((((((v0 + v1) + -1)/32) - (v1/32))/32) + 1) == ((((((v0 + v1) + -1)/32) - (v1/32))/32) + 1));1;57;;;;;
 ((max(min(v0*8, 1994), -5) - max(min(v1*8, 2082), 83)) == (max(min(v0*8, 1994), -5) - max(min(v1*8, 2082), 83)));1;141;;;;;
 (((v0 + v1) + -2) == ((((v0 + v1) + -2) + 130) - 1));0;47;;;;;
 (min(((v0 + v1) + 7)/8, v2 + 11) == min(((v0 + v1) + 7)/8, v2 + 11));1;41;;;;;
 ((((((((((v0 + v1) + 7)/8)*8) + 68)/63) - ((((v1/8)*8) + -5)/63))/4) + 1) == (((((((((v0 + v1) + 7)/8)*8) + 68)/63) - ((((v1/8)*8) + -5)/63))/4) + 1));1;105;;;;;
 (min(max(((v0 - max(max(min(v1/8, 256), 7)*8, 75)) + 87)/4, 0), (v2 + 139)/4) == min(max(((v0 - max(max(min(v1/8, 256), 7)*8, 75)) + 87)/4, 0), (v2 + 139)/4));1;96;;;;;
 (min(max(min(min(((v0 + v1) + -1)/8, ((v1/8) + (v2*16)) + 15), 249), 0), (max(min(v3, 249), 0) + (v4*4)) + 3) == min(max(min(min(((v0 + v1) + -1)/8, ((v1/8) + (v2*16)) + 15), 249), 0), (max(min(v3, 249), 0) + (v4*4)) + 3));1;98;;;;;
 (((max(min((v0*-1000) + v1, 504), 0)/8)*8) == max(min((v0*-1000) + v1, 504), 0));0;591;;;;;
 (((((min(v0*8, 117) + v1) + v2)/32) + 1) < (((min(v0*8, 117) + (v1 + 1)) + v2)/32));0;114;;;;;
 (((min((((v0 + v1) + -1)/63) - (v2*16), (v1/63) + 15)*-8) + ((v3*4) + (((v1/63)*8) + (v4*68)))) == ((min((((v0 + v1) + -1)/63) - (v2*16), (v1/63) + 15)*-8) + ((v3*4) + (((v1/63)*8) + (v4*68)))));1;124;;;;;
 ((min(max(min(v0, 999), 0), (max(min(v0, 872), -127) - (v1*32)) + 113) - (max(min(v0, 999), 0) + (v2*16))) == (min(max(min(v0, 999), 0), (max(min(v0, 872), -127) - (v1*32)) + 113) - (max(min(v0, 999), 0) + (v2*16))));1;116;;;;;
 (((((((uint1)1 && (((0 + (min(v0*128, 872) + v1)) + -4) <= ((0 + (min(v0*128, 872) + v1)) + -4))) && (((3 + ((min(v0*128, 872) + v1) + 132)) + -4) >= ((3 + ((min(v0*128, 872) + v1) + 124)) + 2))) && ((v2 + v3) <= (v2 + v3))) && ((v2 + v3) >= (v2 + v3))) && (0 <= 0)) && (0 >= 0));1;205;;;;;
 (max(min(max((max(min(v0, 31), 29)*2) + v1, 63)*32, 2040), (min((min(v0, 31)*8) + ((v1*4) - min(((min(v0, 31)*2) + v1)*4, (min(v0, 29)*8) + 20)), 3)*8) + 2016) == max(min(max((max(min(v0, 31), 29)*2) + v1, 63)*32, 2040), (min((min(v0, 31)*8) + ((v1*4) - min(((min(v0, 31)*2) + v1)*4, (min(v0, 29)*8) + 20)), 3)*8) + 2016));1;184;;;;;
 (min(max(((v0 - (v1*2)) + 141)/128, 0), ((v2 - v1) + 63)/64) == min(max(((v0 - (v1*2)) + 141)/128, 0), ((v2 - v1) + 63)/64));1;102;;;;;
 (((((v0*17) + v1)*8) + -32) == ((((((v0*17) + v1)*8) + -32) + ((min(v2 - v1, 13)*8) + 52)) - 1));0;155;;;;;
 (min(((v0 + v1) + -1)/8, v2 + 15) == min(((v0 + v1) + -1)/8, v2 + 15));1;321;;;;;
 (min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) + 4, v2) == min(max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) + 4, v2));1;94;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + -1)/63) - (v2*4)) - (v1/63), 3)*32) + 5)) - 1));0;139;;;;;
 (0 == ((0 + (44 - (max(min(v0, 11), 10)*4))) - 1));0;68;;;;;
 (min(((v0 + v1) + 1039)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 31)/32)*4)) + 129) == min(((v0 + v1) + 1039)/8, (((v0 + v1)/8) + (((((v0 + v1) % 8) + 31)/32)*4)) + 129));1;102;;;;;
 ((((v0*8) + 274)/252) != 0);0;531;;;;;
 ((((v0*16) + v1) + ((v2*8) + v3)) < (((v0*16) + v1) + ((v2*8) + (v3 + 1))));1;72;;;;;
 (min(((v0 + v1) + -1009)/8, (v1/8) + (v2*128)) == min(((v0 + v1) + -1009)/8, (v1/8) + (v2*128)));1;58;;;;;
 ((((((((v0 + v1) + 499)/500) - (v1/500))*8) + 27)/15) == (((((((v0 + v1) + 499)/500) - (v1/500))*8) + 27)/15));1;74;;;;;
 ((((max(min((((v0 + v1) + 755)/63)*64, 1973), -26) - max(min((v1/63)*64, 2928), 929)) + 1207)/252) == (((max(min((((v0 + v1) + 755)/63)*64, 1973), -26) - max(min((v1/63)*64, 2928), 929)) + 1207)/252));1;218;;;;;
 ((((-1028 - ((min(v0*1000, v1 + -1000) + v2) % 4))/4) + (((v3*17) + v4)*4)) == (((-1028 - ((min(v0*1000, v1 + -1000) + v2) % 4))/4) + (((v3*17) + v4)*4)));1;74;;;;;
 (min(72 - (v0*4), (min((((v1 + v2) + 7)/8) - (v3*126), (v2/8) + 125) - ((v0*4) + ((v2/8) + (v4*73)))) + 20) == min(72 - (v0*4), (min((((v1 + v2) + 7)/8) - (v3*126), (v2/8) + 125) - ((v0*4) + ((v2/8) + (v4*73)))) + 20));1;197;;;;;
 ((((v0*256) + 919)/392) != 0);0;468;;;;;
 (min(max(min(v0, 249), 0) + 1, v1) == min(max(min(v0, 249), 0) + 1, v1));1;49;;;;;
 (((v0*236) + ((v1/8)*8)) == ((v0*236) + ((v1/8)*8)));1;38;;;;;
 (((v0*8) + (min(v1*16, v2 + -16) + v3)) == ((v0*8) + (min(v1*16, v2 + -16) + v3)));1;40;;;;;
 ((((v0*8) + 75)/68) != 0);0;460;;;;;
 (min(((v0*2) + ((v1*4) + v2))*8, (((v1*4) + v2)*8) + 49) == min(((v0*2) + ((v1*4) + v2))*8, (((v1*4) + v2)*8) + 49));1;101;;;;;
 (((((((uint1)1 && ((((max(-2*4, -6) + v0) + 0) + -9) <= (((((max(-2, 0)*4) + v0) + 0) + -2) + -13))) && ((((max(1*4, -6) + v0) + 3) + -9) >= (((((1*4) + v0) + 3) + 4) + -13))) && ((max((max(min((v1/4)*8, 4012), 13) + -13)/2, v2 + 6) + -2) <= (v2 + -2))) && ((v2 + 4) >= (v2 + 4))) && (v3 <= v3)) && (v3 >= v3));0;278;;;;;
 (max(min((v1 + v2) + -1, ((((v3*252) + v4) + -5) + (1012 - max(v3*252, 753))) - 1) + 1, min(max(v2, ((v3*252) + v4) + -5), (1012 - max(v3*252, 753)) + (((v3*252) + v4) + -5))) <= min(max(v2, ((v3*252) + v4) + -5), (1012 - max(v3*252, 753)) + (((v3*252) + v4) + -5)));0;2102;;;;;
 (((v0 + 818)/667) != 0);0;376;;;;;
 ((((v0 + v1)/8) + (v2*7)) == (((v0 + v1)/8) + (v2*7)));1;57;;;;;
 ((v0 + -9) >= (((v0 + -9) + (min(min(v1 - (v2*8), -126) + v3, -138) + 139)) - 1));1;117;;;;;
 ((((v0/8)*8) - ((v1*4) + ((v2*264) + v3))) == (((v0/8)*8) - ((v1*4) + ((v2*264) + v3))));1;54;;;;;
 (((((((uint1)1 && ((0 + (min(max(v0*12, -2), (v0*12) + 8) + v1)) <= ((0 + ((v0*12) + v1)) + -2))) && ((3 + min((((min(v0*12, -2) + 13)/4)*4) + (max(v0*12, -2) + v1), ((v0*12) + v1) + 8)) >= ((3 + (((v0*12) + v1) + 8)) + 0))) && ((v2 + -5) <= (-2 + (v2 + -3)))) && ((v2 + 131) >= (0 + (v2 + 131)))) && (v3 <= v3)) && (v3 >= v3));0;370;;;;;
 (((v0*4) + ((v1 + v2) + v3)) == ((v0*4) + ((v1 + v2) + v3)));1;49;;;;;
 (max(min((v0 + 127)/128, 0 - min(v1/128, 0)), v0/128) == max(min((v0 + 127)/128, 0 - min(v1/128, 0)), v0/128));1;59;;;;;
 (min(max(min((((v0 + v1)*2) + v2)*4, 2193), 194) + (((v3 + 7)/4)*4), max(min((((v0 + v1)*2) + v2)*4, 2190), 191) + 4) == min(max(min((((v0 + v1)*2) + v2)*4, 2193), 194) + (((v3 + 7)/4)*4), max(min((((v0 + v1)*2) + v2)*4, 2190), 191) + 4));1;146;;;;;
 (0 == ((0 + ((min(((v0*-2) + v1) - v2, -5)*2) + 14)) - 1));0;90;;;;;
 (max(-2 - (max(min(((v0 + v1) + 124)/125, ((v1/125) + (min(min((v2*4) + 3, v3)/4, v2)*4)) + 3) - ((v1/125) + (v2*4)), 0)*8), (max(min((v1/125) + ((v2*4) - (((v0 + v1) + 124)/125)), 0), -3)*8) + -2) == max(-2 - (max(min(((v0 + v1) + 124)/125, ((v1/125) + (min(min((v2*4) + 3, v3)/4, v2)*4)) + 3) - ((v1/125) + (v2*4)), 0)*8), (max(min((v1/125) + ((v2*4) - (((v0 + v1) + 124)/125)), 0), -3)*8) + -2));1;226;;;;;
 (((v0*508) + ((((min(v1, 985) + v2) + 7)/8)*8)) == ((v0*508) + ((((min(v1, 985) + v2) + 7)/8)*8)));1;72;;;;;
 (((v0*508) + (((max(min(v1, 2002), 3) + -3)/16)*16)) == ((v0*508) + (((max(min(v1, 2002), 3) + -3)/16)*16)));1;43;;;;;
 (max(-792 - (v0*64), (v0*64) + 95) >= 0);0;1525;;;;;
 ((max(min(v0/8, 256), 7) + (v1*16)) == (max(min(v0/8, 256), 7) + (v1*16)));1;75;;;;;
 (((v0 + 47)/32) != 0);0;355;;;;;
 ((max(min(v0*8, 125), 1) + (v1*7)) == (max(min(v0*8, 125), 1) + (v1*7)));1;49;;;;;
 (min(((v0 + v1) + 15)/16, v2 + 63) == min(((v0 + v1) + 15)/16, v2 + 63));1;53;;;;;
 ((min(v0*8, v1 + 28) + (v2*4)) == (min(v0*8, v1 + 28) + (v2*4)));1;66;;;;;
 ((((v0 + v1)/4) + ((((v0 + v1) % 4) + 19)/4)) == (((v0 + v1)/4) + ((((v0 + v1) % 4) + 19)/4)));1;811;;;;;
 (0 == ((0 + ((((v0 + v1) % 16) + 563)/64)) - 1));0;46;;;;;
 (min((v0*125) + v1, min(v2 + v1, 1999) + -125) == min((v0*125) + v1, min(v2 + v1, 1999) + -125));1;42;;;;;
 (((v0/4) - (v1/4)) == ((v0/4) - (v1/4)));1;35;;;;;
 (min(((((((v0 + v1) + 1999)/2000)*8) - v2)*4) + 62, v3) == min(((((((v0 + v1) + 1999)/2000)*8) - v2)*4) + 62, v3));1;77;;;;;
 (min(min(v0/8, 4) + (v1*3), max(((v2 + v0) + 23)/8, 249) + 5) == min(min(v0/8, 4) + (v1*3), max(((v2 + v0) + 23)/8, 249) + 5));1;80;;;;;
 (min(v0*4, min((v1*-20) + (min(((v2*-4) + v3) - v4, -9)*8), -88) + 106) == min(v0*4, min((v1*-20) + (min(((v2*-4) + v3) - v4, -9)*8), -88) + 106));1;109;;;;;
 (((((v0 % ((v1/84) + 1))*-84)/4)*4) == ((v0 % ((v1/84) + 1))*-84));1;53;;;;;
 (((((v0 % ((v1 + 52)/32))*-64)/4)*4) == ((v0 % ((v1 + 52)/32))*-64));1;60;;;;;
 ((max(min(((v0 + v1) + 7)/8, 249), 0) - ((((v2*4) + ((v3*2) + v4))*16) + v5)) == (max(min(((v0 + v1) + 7)/8, 249), 0) - ((((v2*4) + ((v3*2) + v4))*16) + v5)));1;86;;;;;
 (max(max(min((((v0 - v1)/4)*4) + v1, 246), (((max(v0, 0) - v2)/4)*4) + v2) + 3, v0) == max(max(min((((v0 - v1)/4)*4) + v1, 246), (((max(v0, 0) - v2)/4)*4) + v2) + 3, v0));1;123;;;;;
 (min((v0*4) + (max(v1*252, -6) + (v2*8)), ((v1*252) + (v2*8)) + 254) == min((v0*4) + (max(v1*252, -6) + (v2*8)), ((v1*252) + (v2*8)) + 254));1;77;;;;;
 (min((v0*16) + v1, min(max((((v2 + v3) + -1)/65)*8, 239), ((v0*16) + v1) + 5) + 15) == min((v0*16) + v1, min(max((((v2 + v3) + -1)/65)*8, 239), ((v0*16) + v1) + 5) + 15));1;101;;;;;
 (((min(max(v0, 0) - (v1*31), ((v2*154) + v3) + 30)*-2) + ((((v4*8) + ((v2*154) + v3))*2) + v5)) == ((min(max(v0, 0) - (v1*31), ((v2*154) + v3) + 30)*-2) + ((((v4*8) + ((v2*154) + v3))*2) + v5)));1;104;;;;;
 (min((v0/2) + ((((min(((((v1 + v0) + 5)/2) - (v2*128)) - (v0/2), (v3*504) + 119) + 95)/72)*72) + (v2*128)), min(((v1 + v0) + 5)/2, (v4 + (v3*504)) + 119) + 24) == min((v0/2) + ((((min(((((v1 + v0) + 5)/2) - (v2*128)) - (v0/2), (v3*504) + 119) + 95)/72)*72) + (v2*128)), min(((v1 + v0) + 5)/2, (v4 + (v3*504)) + 119) + 24));1;200;;;;;
 ((v0 - ((v1 + v2)/8)) == (v0 - ((v1 + v2)/8)));1;71;;;;;
 (((v0*665) + ((v1/63)*64)) == ((v0*665) + ((v1/63)*64)));1;25;;;;;
 (min((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 999), 0)) + 3, v2) == min((max(min(((v0 + v1) + 1)/2, 999), 0) - max(min(v1/2, 999), 0)) + 3, v2));1;266;;;;;
 (min(((v0*64) + ((v1*500) + v2)) + 60, v3 + v2) == min(((v0*64) + ((v1*500) + v2)) + 60, v3 + v2));1;66;;;;;
 ((-553 - (max(min(v0, -65), -69)*8)) >= (((-553 - (max(min(v0, -65), -69)*8)) + ((max(min(v0, -65), -69)*8) + 555)) - 1));0;105;;;;;
 (((min((v0 - (v1*19)) + 3, v2)*-8) + ((v2*8) + (v3*21))) == ((min((v0 - (v1*19)) + 3, v2)*-8) + ((v2*8) + (v3*21))));1;67;;;;;
 (((((v0/(((max(v1, 0) - v2) + 49)/36))*-140)/28)*28) == ((v0/(((max(v1, 0) - v2) + 49)/36))*-140));1;68;;;;;
 (0 == ((0 + (24 - max(min(v0*15, 24), 9))) - 1));0;73;;;;;
 ((min(v0*4, 30) + (min(v1*32, v2 + -32) + v3)) == (min(v0*4, 30) + (min(v1*32, v2 + -32) + v3)));1;345;;;;;
 (((((v0 + v1) + 62)/63) - ((v2*16) + v3)) == ((((v0 + v1) + 62)/63) - ((v2*16) + v3)));1;69;;;;;
 ((((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))/2) + 8) == (((max(min(min(((v0 + v1) + 499)/500, 3)*8, 22), -7) - max(min((v1/500)*8, 36), 5))/2) + 8));1;188;;;;;
 ((max(min((v0*12) + ((v1 - v2)*8), 552), 541) + min((v2*8) + 541, v3)) == (max(min((v0*12) + ((v1 - v2)*8), 552), 541) + min((v2*8) + 541, v3)));1;65;;;;;
 ((max(min(v0 + v1, 1997), -2) - ((v2*4) + v3)) == (max(min(v0 + v1, 1997), -2) - ((v2*4) + v3)));1;55;;;;;
 ((((min(v0*2, 251)*2) + v1)*4) == (((min(v0*2, 251)*2) + v1)*4));1;59;;;;;
 ((((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 72)/64) == (((v0 - (((max(min(v1, 2002), 3) + -3)/16)*16)) + 72)/64));1;1937;;;;;
 (((min((((v0 + v1) + 5)/2) - (v2*504), (min(v3*128, 380) + (v1/2)) + 119) - (v3*128)) - ((v1/2) + (v4*16))) == ((min((((v0 + v1) + 5)/2) - (v2*504), (min(v3*128, 380) + (v1/2)) + 119) - (v3*128)) - ((v1/2) + (v4*16))));1;114;;;;;
 ((((max(v0*12, 20)*-1)/4)*4) == (max(v0*12, 20)*-1));0;788;;;;;
 (((((73 - max(v0*34, 35))/20)*20) + (v0*34)) == ((((73 - max(v0*34, 35))/20)*20) + (v0*34)));1;72;;;;;
 (((v0*4) + -5) == ((v0*4) + -5));1;21;;;;;
 (((v0*228) + (max(min(v1*8, 285), 36)*8)) == ((v0*228) + (max(min(v1*8, 285), 36)*8)));1;53;;;;;
 (max(min(max((v0 - max(min(v1, 1996), -3))/4, 0), (v2 + 35)/4), (min(min(min(v3 + v0, max(min(v1, 1965), -34) + 35), min(max(min(v1, 1965), -34) + 32, v3 + v0) + 3) - max(min(v1, 1996), -3), v2 + 38) + -3)/4) == max(min(max((v0 - max(min(v1, 1996), -3))/4, 0), (v2 + 35)/4), (min(min(min(v3 + v0, max(min(v1, 1965), -34) + 35), min(max(min(v1, 1965), -34) + 32, v3 + v0) + 3) - max(min(v1, 1996), -3), v2 + 38) + -3)/4));1;235;;;;;
 ((min((v0/16)*8, 4) + (v1*8)) == (min((v0/16)*8, 4) + (v1*8)));1;61;;;;;
 ((max(min(((v0 + v1)/2) + (v2*8), 999), 0) + max(v3, 0)) == (max(min(((v0 + v1)/2) + (v2*8), 999), 0) + max(v3, 0)));1;102;;;;;
 ((max(min((v0 + v1)/8, 249), 0) + ((max(v2, 0)/4)*4)) == (max(min((v0 + v1)/8, 249), 0) + ((max(v2, 0)/4)*4)));1;81;;;;;
 (min(max(max(v0 + -17, v1), v2 + v1), (min(v3, 111) + v0) + 5) == min(max(max(v0 + -17, v1), v2 + v1), (min(v3, 111) + v0) + 5));1;60;;;;;
 (min((v0*16) + v1, v2 + -14) == min((v0*16) + v1, v2 + -14));1;132;;;;;
 (((((((v0 + v1) + 3)/4) - (v2*64)) - (v3*32)) - (v1/4)) == ((((((v0 + v1) + 3)/4) - (v2*64)) - (v3*32)) - (v1/4)));1;84;;;;;
 (min(max(((v0 - v1) + 9)/4, 0), (min((max((((v2 + v3) + 64)/65)*64, 1975) - (v4*32)) - min((v3/65)*64, 4), 19) + 18)/4) == min(max(((v0 - v1) + 9)/4, 0), (min((max((((v2 + v3) + 64)/65)*64, 1975) - (v4*32)) - min((v3/65)*64, 4), 19) + 18)/4));1;144;;;;;
 ((min(((v0 + v1)/4)*4, 1999) + -5) >= (((min(((v0 + v1)/4)*4, 1999) + -5) + (max(v2, 0) + 135)) - 1));0;132;;;;;
 (0 == ((0 + ((min(((((v0 + v1) + -1)/32) - (v2*32)) - (v1/32), 31)*4) + 11)) - 1));0;152;;;;;
 (max(min(max(((v0 - ((v1*32) + v2)) + 43)/4, 0), v3 + 8), min(((min((v4 + v0) + 8, v5) - v2)/4) + (v1*-8), v3) + 8) == max(min(max(((v0 - ((v1*32) + v2)) + 43)/4, 0), v3 + 8), min(((min((v4 + v0) + 8, v5) - v2)/4) + (v1*-8), v3) + 8));1;142;;;;;
 (min(max(min(v0, 1992), -7), max(min(v0, 1995), -4) + (v1*4)) == min(max(min(v0, 1992), -7), max(min(v0, 1995), -4) + (v1*4)));1;58;;;;;
 ((((v0*-1060)/4)*4) == (v0*-1060));1;30;;;;;
 ((1 - ((v0*502) + v1)) > (2000 - ((v0*502) + v1)));0;58;;;;;
 (min(max(min(v0, 1000), 1), max(min((v1 + v2)/2, 999), 0) + (((v3 + 1)/2)*2)) == min(max(min(v0, 1000), 1), max(min((v1 + v2)/2, 999), 0) + (((v3 + 1)/2)*2)));1;82;;;;;
 (((((((v0 + v1) + 7)/8) - (v1/8))/32) + 1) == ((((((v0 + v1) + 7)/8) - (v1/8))/32) + 1));1;964;;;;;
 ((((v0 + 7)/4) - ((max(min(v1/8, 249), 0)/8)*2)) == (((v0 + 7)/4) - ((max(min(v1/8, 249), 0)/8)*2)));1;80;;;;;
